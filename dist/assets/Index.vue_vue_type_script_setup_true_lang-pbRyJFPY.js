import{_ as k}from"./Index.vue_vue_type_script_setup_true_lang-BKnCIuZK.js";import{c as d,a as n,s as l}from"./index-BuVmIl8K.js";import{d as N}from"./pinia-BjOS2_Ao.js";import{D,C}from"./CrackNoClass-0DSU7BAn.js";import{c as g,d as E,p as u}from"./urls-CPQ2HRXU.js";import{u as f}from"./useAttachmentStore-DqM3autD.js";import{D as h}from"./urls-CvqtYZA-.js";import{C as y}from"./CrackYesClass-COntz77m.js";import{u as S}from"./useCameraStore-BwXVJhPe.js";import{u as c}from"./authentication-handler-Pueb_EI7.js";import{D as O}from"./DefectNoClass-BqGKOkzR.js";import{u as b}from"./useDefectsStore-7BpSnT1n.js";import{a as A}from"./helpers-wUOLw-dU.js";import{k as B,c as v,L as H,p as w,aa as R,aB as F,B as _,C as p,u as m,s as P}from"./@vue-BypzYtbH.js";const J=N({id:"MaintenanceDefectList",state:()=>({stateList:[],stateSelectedForm:{}}),getters:{selectedForm:t=>t.stateSelectedForm},actions:{setSelectedForm(t){this.stateSelectedForm=t}}}),V=N({id:"MaintenanceDefectListOnForm",state:()=>({stateData:new D,stateLoading:!1,stateHeaderId:"",stateDefectFormData:new h,stateDefectNoFormData:new O,stateCrackFormData:new y,stateCrackSimpleFormData:new C,stateHeaderStatus:"",stateDetailId:"",stateIsError:!1}),getters:{ApprovalData:t=>t.stateData,ImagesDefect:()=>S().ImageObjects.find(s=>s.Id==="defect"),ImagesCrack:()=>S().ImageObjects.find(s=>s.Id==="crack"),DefectFormData:t=>t.stateDefectFormData,CrackFormData:t=>t.stateCrackFormData,HeaderStatus:t=>t.stateHeaderStatus},actions:{createRequestBody(t){return{workorder:t}},async getDefectsDataHeader(t){const s=this.createRequestBody(t),e=await d.post(`${g}`,s);this.stateData.setHeaders(e.data.result.content)},async getDefectsDataDetail(t){const s=this.createRequestBody(t),e=await d.post(`${E}`,s);this.stateData.setDetails(e.data.result.content)},async getDefectsData(t){this.stateLoading=!0;try{await this.getDefectsDataHeader(t),await this.getDefectsDataDetail(t)}catch(s){c(s),console.error(s)}this.stateLoading=!1},setDefectData(t){const s=f(),e=this.ApprovalData.DefectHeaders.find(r=>r.id===t),a=this.ApprovalData.DefectDetails.find(r=>r.defectHeaderId==t);if(a){this.setHeaderId(t),this.setDetailId(a.id),this.stateHeaderStatus=e==null?void 0:e.status,a.detail.type!="NO"?(this.stateDefectFormData.setAssetNumber(a.detail.assetNumber),this.stateDefectFormData.setDescription(a.detail.description),this.stateDefectFormData.setRaisedBy(a.detail.raisedBy),this.stateDefectFormData.setDate(a.detail.date),this.stateDefectFormData.setPlannedDuration(a.detail.plannedDuration),this.stateDefectFormData.setInstruction(a.detail.instruction),this.stateDefectFormData.setPriority(a.detail.priority),this.stateDefectFormData.importParts(...JSON.parse(a.detail.parts)),this.stateDefectFormData.importLabours(...JSON.parse(a.detail.labours)),this.stateDefectFormData.importResources(...JSON.parse(a.detail.resources)),this.stateDefectFormData.importSymptoms(...JSON.parse(a.detail.symptoms)),this.stateDefectFormData.importCauses(...JSON.parse(a.detail.causes)),this.ImagesDefect.ImageInfos.push(...JSON.parse(a.detail.images))):(this.stateDefectNoFormData.setAssetNumber(a.detail.assetNumber),this.stateDefectNoFormData.setDescription(a.detail.description),this.stateDefectNoFormData.setRaisedBy(a.detail.raisedBy),this.stateDefectNoFormData.setDate(a.detail.date),this.stateDefectNoFormData.setTitle(a.detail.title),this.stateDefectNoFormData.importActions(...JSON.parse(a.detail.actions)));const r=[];return this.ImagesDefect.ImageInfos.forEach(o=>{let i="";typeof o=="string"?i=o:i=o.filename,r.push(s.downloadAttachment(i))}),Promise.all(r).then(o=>{o.forEach(i=>{const I=new Blob([i],{type:"image/png"});this.ImagesDefect.ImageBlobs.push(I)})}),a.detail.type}},setHeaderId(t){this.stateHeaderId=t},setDetailId(t){this.stateDetailId=t},async updateRepairedStatus(t){const s=n(),e=this.ApprovalData.DefectHeaders.find(r=>r.id===t),a={id:e.id,updateParams:[{keyValue:e.key,propertyParams:[{propertyName:"repairedStatus",propertyValue:"Repaired"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:s.user.EmployeeId,name:s.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:s.user.EmployeeId,name:s.user.Name}};try{this.stateIsError=!1,await d.post(`${u}`,a),e.repairedStatus="Repaired"}catch(r){c(r),console.log(r),this.stateIsError=!0,l("IRONS",r)}},async updateDefectMO(t,s){const e=n(),a=this.ApprovalData.DefectHeaders.find(o=>o.id===t),r={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"defectWorkorder",propertyValue:s},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:e.user.EmployeeId,name:e.user.Name}};try{this.stateIsError=!1,await d.post(`${u}`,r),a.defectWorkorder=s}catch(o){c(o),console.log(o),this.stateIsError=!0,l("IRONS",o)}},async updateCrackRepairedStatus(t){const s=n(),e=this.ApprovalData.CrackHeaders.find(r=>r.id===t),a={id:e.id,updateParams:[{keyValue:e.key,propertyParams:[{propertyName:"repairedStatus",propertyValue:"Repaired"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:s.user.EmployeeId,name:s.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:s.user.EmployeeId,name:s.user.Name}};try{this.stateIsError=!1,await d.post(`${u}`,a),e.repairedStatus="Repaired"}catch(r){c(r),console.log(r),this.stateIsError=!0,l("IRONS",r)}},setCrackData(t){const s=f(),e=this.ApprovalData.CrackDetails.find(a=>a.defectHeaderId==t);if(e){this.setHeaderId(t),this.setDetailId(e.id),e.detail.type!="NO"?(this.stateCrackFormData.setAssetNumber(e.detail.assetNumber),this.stateCrackFormData.setDescription(e.detail.description),this.stateCrackFormData.setRaisedBy(e.detail.raisedBy),this.stateCrackFormData.setDate(e.detail.date),this.stateCrackFormData.setPlannedDuration(e.detail.plannedDuration),this.stateCrackFormData.setInstruction(e.detail.instruction),this.stateCrackFormData.setPriority(e.detail.priority),this.stateCrackFormData.importParts(...JSON.parse(e.detail.parts)),this.stateCrackFormData.importLabours(...JSON.parse(e.detail.labours)),this.stateCrackFormData.importResources(...JSON.parse(e.detail.resources)),this.stateCrackFormData.importSymptoms(...JSON.parse(e.detail.symptoms)),this.stateCrackFormData.importCauses(...JSON.parse(e.detail.causes)),this.stateCrackFormData.importPreviousCrack(...JSON.parse(e.detail.previousCracks))):(this.stateCrackSimpleFormData.setAssetNumber(e.detail.assetNumber),this.stateCrackSimpleFormData.setDescription(e.detail.description),this.stateCrackSimpleFormData.setRaisedBy(e.detail.raisedBy),this.stateCrackSimpleFormData.setDate(e.detail.date),this.stateCrackSimpleFormData.setInstruction(e.detail.instruction),this.stateCrackSimpleFormData.setTitle(e.detail.title),this.stateCrackSimpleFormData.setTitle(e.detail.title),this.stateCrackSimpleFormData.importPreviousCrack(...JSON.parse(e.detail.previousCracks))),this.ImagesCrack.ImageInfos.push(...JSON.parse(e.detail.images));const a=[];return this.ImagesCrack.ImageInfos.forEach(r=>{let o="";typeof r=="string"?o=r:o=r.filename,a.push(s.downloadAttachment(o))}),Promise.all(a).then(r=>{r.forEach(o=>{const i=new Blob([o],{type:"image/png"});this.ImagesCrack.ImageBlobs.push(i)})}),e.detail.type}},async updateCrackMO(t,s){const e=n(),a=this.ApprovalData.CrackHeaders.find(o=>o.id===t),r={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"defectWorkorder",propertyValue:s},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:e.user.EmployeeId,name:e.user.Name}};try{this.stateIsError=!1,await d.post(`${u}`,r),a.defectWorkorder=s}catch(o){c(o),console.log(o),this.stateIsError=!0,l("IRONS",o)}},reset(){this.stateLoading=!1,this.stateData=new D,this.stateDefectFormData=new h,this.stateCrackFormData=new y,this.stateIsError=!1,this.stateHeaderId="",this.stateDetailId=""}}}),T={class:"w-100 px-1 mx-0"},L=F("span",{class:"me-3"},null,-1),ee=B({__name:"Index",setup(t){const s=V(),e=J(),a=b(),r=v(()=>A(e.selectedForm.equipmentModel)?"Dozer":"Dump Truck");return H(()=>{s.reset()}),(o,i)=>(w(),R("div",T,[F("h1",null,[L,_(p(m(e).selectedForm.equipmentModel)+" "+p(r.value)+" "+p(m(e).selectedForm.psType)+" Hr Service "+p(m(e).selectedForm.unitNumber)+" "+p(m(e).selectedForm.workOrder),1)]),P(k,{data:m(a).ApprovalData},null,8,["data"])]))}});export{ee as _,J as u};

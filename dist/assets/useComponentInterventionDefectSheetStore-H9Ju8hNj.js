import{d as f}from"./pinia-BjOS2_Ao.js";import{a as S,c as p,s as u}from"./index-BuVmIl8K.js";import{a as h}from"./urls-RITu66bD.js";import{u as y}from"./useComponentInterventionEformStore-CMy33xkJ.js";import{u as c}from"./authentication-handler-Pueb_EI7.js";import{e as E}from"./lodash-DrHMlsdo.js";import{m}from"./helpers-wUOLw-dU.js";const l="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention_defect_header/get_intervention_defect",P=f({id:"useComponentInterventionDefectSheetStore",state:()=>({stateDefectSheets:[],stateSelectedDefectSheet:{},stateSelectedWorkOrder:"",stateIsError:!1,stateError:{},stateErrorMessage:"",stateOption:[],stateDefectTitle:""}),getters:{DefectSheets:e=>e.stateDefectSheets,SelectedDefectSheet:e=>e.stateSelectedDefectSheet,SelectedWorkOrder:e=>e.stateSelectedWorkOrder,DefectOptions:e=>e.stateOption,IsError:e=>e.stateIsError,Error:e=>e.stateErrorMessage,authStore:()=>S(),DefectTitle:e=>e.stateDefectTitle},actions:{async getDefectLists(e){const s={ver:"v1",supervisor:e,userGroup:"supervisor"};try{this.stateIsError=!1;const t=await p.get(`${l}?${new URLSearchParams(s).toString()}`);this.stateDefectSheets=t.data.result.content,this.stateOption=this.stateDefectSheets.map(r=>{var o,i;return{labelPlain:`${r.equipment} - ${r.equipmentDesc} - ${r.sampleStatus} Intervention - ${r.componentDescription} - ${r.sapWorkOrder}`,value:r.sapWorkOrder,label:`${r.equipment} - ${r.equipmentDesc} - <span class="${((o=r.sampleStatus)==null?void 0:o.toLowerCase())=="caution"?"yellow":((i=r.sampleStatus)==null?void 0:i.toLowerCase())=="normal"?"green":"red"}">${r.sampleStatus} Intervention</span> - ${r.componentSystem} - ${r.sapWorkOrder}`}})}catch(t){c(t),u("IRONS",t),this.stateIsError=!0,this.stateError=t}},async getDefectListsPlanner(){const e={ver:"v1",supervisor:this.authStore.user.EmployeeId,userGroup:"planner"};try{this.stateIsError=!1;const s=await p.get(`${l}?${new URLSearchParams(e).toString()}`);this.stateDefectSheets=s.data.result.content,this.stateOption=this.stateDefectSheets.map(t=>{var r,o;return{value:`${t.equipment} - ${t.equipmentDesc} - ${t.sampleStatus} Intervention - ${t.componentDescription} - ${t.sapWorkOrder}`,label:`${t.equipment} - ${t.equipmentDesc} - <span class="${((r=t.sampleStatus)==null?void 0:r.toLowerCase())=="caution"?"yellow":((o=t.sampleStatus)==null?void 0:o.toLowerCase())=="normal"?"green":"red"}">${t.sampleStatus} Intervention</span> - ${t.componentSystem} - ${t.sapWorkOrder}`}})}catch(s){c(s),console.log(s),u("IRONS",s),this.stateIsError=!0,this.stateError=s}},setDefectTitle(e){this.stateDefectTitle=e},setSelectedDefect(e){const s=this.DefectSheets.find(t=>t.interventionId===e);s&&(this.stateSelectedDefectSheet=s)},async approveDefectSheetBySupervisor(){var i,a,d;const e=S(),s=y(),t=s.generalForm.statusHistory?E.cloneDeep(s.generalForm.statusHistory):[];t.push({status:"Close",updatedBy:{id:e.user.EmployeeId,name:e.user.Name},updatedDate:"<<ServerDateTime>>",tsUpdatedDate:"<<ServerTimeStamp>>"});const r={id:this.stateSelectedDefectSheet.interventionId,localInterventionStatus:"Submited",updateParams:[{keyValue:this.stateSelectedDefectSheet.interventionKey,propertyParams:[{propertyName:"interventionExecution",propertyValue:"Close"},{propertyName:"defectStatus",propertyValue:"Approved (SPV)"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"statusHistory",propertyValue:JSON.stringify(t)}]}],employee:{id:e.user.EmployeeId,name:e.user.Name}},o={ver:"v1"};try{this.stateIsError=!1,this.stateError={};const n=await p.post(`${h}?${new URLSearchParams(o).toString()}`,r);n.data.result.isError&&(this.stateIsError=!0,this.stateErrorMessage=m(n.data.result.message))}catch(n){c(n),this.stateIsError=!0,this.stateErrorMessage=m(((d=(a=(i=n==null?void 0:n.response)==null?void 0:i.data)==null?void 0:a.result)==null?void 0:d.message)??`${n}`),u("IRONS",n)}},async approveDefectSheetByPlanner(){var r,o,i;const e=S(),s={id:this.stateSelectedDefectSheet.interventionId,localInterventionStatus:"Close",updateParams:[{keyValue:this.stateSelectedDefectSheet.interventionKey,propertyParams:[{propertyName:"defectStatus",propertyValue:"Completed"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:e.user.EmployeeId,name:e.user.Name}},t={ver:"v1"};try{this.stateIsError=!1,this.stateError={};const a=await p.post(`${h}?${new URLSearchParams(t).toString()}`,s);a.data.result.isError&&(this.stateIsError=!0,this.stateErrorMessage=m(a.data.result.message))}catch(a){c(a),this.stateIsError=!0,this.stateErrorMessage=m(((i=(o=(r=a==null?void 0:a.response)==null?void 0:r.data)==null?void 0:o.result)==null?void 0:i.message)??`${a}`),u("IRONS",a)}},reset(){this.stateIsError=!1,this.stateError={},this.stateErrorMessage=""}}});export{P as u};

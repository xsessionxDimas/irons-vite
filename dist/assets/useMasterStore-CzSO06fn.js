import{d as c}from"./pinia-BjOS2_Ao.js";import{c as i,a as m,f as a}from"./index-BuVmIl8K.js";const h="https://digital-bumaau-dev-apm-001.azure-api.net/amadm/api/master_data/symptom?ver=v1",u="https://digital-bumaau-dev-apm-001.azure-api.net/amadm/api/master_data/causes?ver=v1",d="https://digital-bumaau-dev-apm-001.azure-api.net/amadm/api/master_data/action?ver=v1",g="https://digital-bumaau-dev-apm-001.azure-api.net/amadm/api/master_data/na_condition?ver=v1",l="https://digital-bumaau-dev-apm-001.azure-api.net/amadm/api/master_data/parameter_ehms/rating/get_all/?ver=v1",w="https://digital-bumaau-dev-apm-001.azure-api.net/utility/api/master_employee/direct_member",A="https://digital-bumaau-dev-apm-001.azure-api.net/utility/api/master_position/lookup_dma",y="https://digital-bumaau-dev-apm-001.azure-api.net/amadm/api/master_data/equipment_number",P=c({id:"master",state:()=>({stateSymptoms:[],stateCauses:[],stateActions:[],stateNAConditions:[],stateCBMMappings:[],stateFitters:[],statePositions:[],stateMasterIsSet:!1,stateMasterFitterIsSet:!1,stateOwnershipList:[],stateMasterPhase:""}),getters:{Symptoms:t=>t.stateSymptoms,Causes:t=>t.stateCauses,Actions:t=>t.stateActions,NAConditions:t=>t.stateNAConditions,CBMMappings:t=>t.stateCBMMappings,Fitters:t=>t.stateFitters,Positions:t=>t.statePositions,Ownership:t=>t.stateOwnershipList},actions:{getSymptomData(){return i.get(`${h}`)},getActionData(){return i.get(`${d}`)},getCausesData(){return i.get(`${u}`)},getNAConditionData(){return i.get(`${g}`)},getCBMMappingData(){return i.get(`${l}`)},getOwnershipData(){const t={ver:"v1",Page:"1",PageSize:"100000"};return i.get(`${y}`,"",new URLSearchParams(t).toString())},getFittersData(){const e={directid:m().user.EmployeeId,ver:"v1"};return i.get(w,"",new URLSearchParams(e).toString())},getPositionsData(){const t={Position:"",PositionDescription:""};return i.post(`${A}?ver=v1`,t)},async getSymptoms(){const t=[{id:0,symptom:"Other"}];this.stateSymptoms=[...await a.symptom.toArray(),...t]},async getActions(){const t=[{id:0,action:"Other"}];this.stateActions=[...await a.action.toArray(),...t]},async getCauses(){const t=[{id:0,causes:"Other"}];this.stateCauses=[...await a.causes.toArray(),...t]},async getNAConditions(){const t=[{id:0,naCondition:"Other",reviseNaCondition:"Other"}];this.stateNAConditions=[...await a.naCondition.toArray(),...t]},async getCBMMappings(){this.stateCBMMappings=await a.cbmMapping.toArray()},async getFitters(){this.stateFitters=await a.fitter.toArray()},async getPositions(){this.statePositions=await a.position.toArray()},async getOwnership(){this.stateOwnershipList=await a.ownership.toArray()},async storeSymptomToLocalDB(t){await a.symptom.clear(),await a.symptom.bulkAdd(t)},async storeActionToLocalDB(t){await a.action.clear(),await a.action.bulkAdd(t)},async storeCausesToLocalDB(t){await a.causes.clear(),await a.causes.bulkAdd(t)},async storeNAConditionToLocalDB(t){await a.naCondition.clear(),await a.naCondition.bulkAdd(t)},async storeCBMMappingsToLocalDB(t){await a.cbmMapping.clear(),await a.cbmMapping.bulkAdd(t)},async storeFittersToLocalDB(t){const e=[];t.forEach(s=>{const r={label:s.EmployeeName,value:s.EmployeeId};e.find(o=>o.value==s.EmployeeId)||e.push(r)}),await a.fitter.clear(),await a.fitter.bulkAdd(e)},async storePositionsToLocalDB(t){const e=t.position.map(s=>({label:s,value:s}));await a.position.clear(),await a.position.bulkAdd(e)},async storeOwnershipToLocalDB(t){const e=t.map(s=>({equipmentNumber:s.equipmentNumber,ownership:s.ownership,serialNumber:s.serialNumber}));await a.ownership.clear(),await a.ownership.bulkAdd(e)},async getCBMMappingDataFromServer(){try{const t=await this.getCBMMappingData();this.stateMasterPhase="cbmmappings start",await this.storeCBMMappingsToLocalDB(t.data.result.content),this.getCBMMappings()}catch{console.log("error get CBM mapping")}},async getMasterDataFromServer(){this.stateMasterIsSet?(await this.getSymptoms(),await this.getActions(),await this.getCauses(),await this.getNAConditions(),await this.getPositions(),await this.getOwnership(),await this.getOwnership()):await Promise.all([this.getSymptomData(),this.getActionData(),this.getCausesData(),this.getNAConditionData(),this.getPositionsData(),this.getOwnershipData()]).then(async([t,e,s,r,n,o])=>{try{this.stateMasterPhase="symptom start",await this.storeSymptomToLocalDB(t.data.result.content),this.stateMasterPhase="action start",await this.storeActionToLocalDB(e.data.result.content),this.stateMasterPhase="causes start",await this.storeCausesToLocalDB(s.data.result.content),this.stateMasterPhase="na condition start",await this.storeNAConditionToLocalDB(r.data.result.content),this.stateMasterPhase="positions start",await this.storePositionsToLocalDB(n.data.result.content),this.stateMasterPhase="ownership start",await this.storeOwnershipToLocalDB(o.data.result.content),await this.getSymptoms(),await this.getActions(),await this.getCauses(),await this.getNAConditions(),await this.getPositions(),await this.getOwnership(),await this.getOwnership()}catch(p){console.log("error master data api",p),console.log("phase",this.stateMasterPhase)}this.stateMasterIsSet=!0})},async getMasterDataFitterFromServer(){return await this.getFittersData().then(async t=>{await this.storeFittersToLocalDB(t.data.result.content),await this.getFitters()})},resetMasterIsSet(){this.stateMasterIsSet=!1,this.stateMasterFitterIsSet=!1}}});export{P as u};

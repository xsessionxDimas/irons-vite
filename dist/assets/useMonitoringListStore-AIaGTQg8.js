import{u as v}from"./authentication-handler-Pueb_EI7.js";import{f as h,a as c,c as m,s as S}from"./index-BuVmIl8K.js";import{e as p}from"./lodash-DrHMlsdo.js";import{d as f}from"./pinia-BjOS2_Ao.js";import{a as L}from"./urls-RITu66bD.js";import{G as I}from"./urls-COjrEEs1.js";import{G as D}from"./urls-CvqtYZA-.js";import{s as l,b as d,f as g}from"./date-format-8-IvfSl3.js";const O="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/service_sheet_header/get_service_sheet_history",y="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention/get_open_intervention",H=f({id:"DmaMonitoringList",state:()=>({stateHeader:[{label:"Yet To Start",total:"0",value:"Open"},{label:"In Progress",total:"0",value:"On Progress"},{label:"Under Review",total:"0",value:"Submited"},{label:"Final Review",total:"0",value:"Final Review"},{label:"Closed",total:"0",value:"Close"}],stateSelectedHeader:"Open",stateList:[],stateInterventionList:[],stateInterimList:[],stateInitList:[],stateStatusList:[],stateListLoading:!0,stateOptions:[],stateInitOptions:[],stateInitOptionsIntervention:[],stateInitOptionsInterim:[],stateOptionsQuery:"",stateSelectedServiceSheet:"",stateDefaultRange:[l(3,"months","YYYY-MM-DD"),d(1,"months","YYYY-MM-DD")],stateDefaultFormTypeOpenFromApprovalPlanner:""}),getters:{headerList:e=>e.stateHeader,selectedHeader:e=>e.stateSelectedHeader,list:e=>e.stateList,interventionList:e=>e.stateInterventionList,interimnList:e=>e.stateInterimList,listLoading:e=>e.stateListLoading,serviceSheetOptions:e=>e.stateInitOptions,serviceSheetInterventionOptions:e=>e.stateInitOptionsIntervention,serviceSheetInterimOptions:e=>e.stateInitOptionsInterim,serviceSheetOptionQuery:e=>e.stateOptionsQuery,selectedServiceSheet:e=>e.stateSelectedServiceSheet,defaultRange:e=>e.stateDefaultRange,defaultFormTypeOpenFromApprovalPlanner:e=>e.stateDefaultFormTypeOpenFromApprovalPlanner},actions:{setDefaultFormTypeOpenFromApprovalPlanner(e){this.stateDefaultFormTypeOpenFromApprovalPlanner=e},setInitialRange(e,a){const s=["",""];e=="Yet To Start"||e=="Open"?(s[0]=l(3,"months","YYYY-MM-DD"),s[1]=d(1,"months","YYYY-MM-DD")):(s[0]=l(3,"months","YYYY-MM-DD"),s[1]=g("YYYY-MM-DD")),p.isEqual(s,this.stateDefaultRange)&&(a=="Yet To Start"?this.setDefaultFilterDateRangeForYetToStart():this.setDefaultFilterDateRange())},async setHeaderChange(e){var n;localStorage.setItem("monitoring-status-tab",e),this.stateOptionsQuery="",this.stateSelectedServiceSheet="",this.stateList=[],this.stateInterventionList=[],this.stateInterimList=[];const a=String(this.stateSelectedHeader);this.stateSelectedHeader=e;let s;this.stateHeader.forEach(t=>{t.label==e&&(s=t.value)});const r=(await h.retryTask.toArray()).map(t=>t.workorder);this.setInitialRange(a,e),await this.getMonitoringList(),await this.getMonitoringListOnlyOpenIntervention(),(n=this.stateStatusList)==null||n.forEach(t=>{var o;s==t.status&&(this.stateList=t.data.servicesheet,this.stateInitList=p.cloneDeep(this.stateList),this.stateInterventionList=t.data.intervention,this.stateInterimList=t.data.interimEngine,(o=this.stateInterventionList)==null||o.forEach(u=>{u.isPendingSync=r.includes(u.sapWorkOrder)}))}),this.stateInitOptions=this.stateList.map(t=>({label:`${t.unitNumber} - ${t.brand} ${t.equipmentModel} - ${t.psType} Hour Service - ${t.workOrder}`,value:`${t.unitNumber} - ${t.equipmentModel} - ${t.psType} Hour Service - ${t.workOrder}`})),this.stateInitOptionsInterim=this.stateInterimList.map(t=>({label:`${t.unitNumber} - ${t.brand} ${t.equipmentModel} - ${t.psType} Hour Service - ${t.workOrder}`,value:`${t.unitNumber} - ${t.equipmentModel} - ${t.psType} Hour Service - ${t.workOrder}`})),this.stateInitOptionsIntervention=this.stateInterventionList.map(t=>{var o,u;return{value:`${t.equipment} - ${t.equipmentDesc} - ${t.sampleStatus} Intervention - ${t.sapWorkOrder}`,labelPlain:`${t.equipment} - ${t.equipmentDesc} - ${t.sampleStatus} Intervention - ${t.sapWorkOrder}`,label:`${t.equipment} - ${t.equipmentDesc} - <span class="${((o=t.sampleStatus)==null?void 0:o.toLowerCase())=="caution"?"yellow":((u=t.sampleStatus)==null?void 0:u.toLowerCase())=="normal"?"green":"red"}">${t.sampleStatus} Intervention</span> - ${t.componentSystem} - ${t.sapWorkOrder}`}})},async revalidate(){const a=(await h.retryTask.toArray()).map(s=>s.workorder);this.stateStatusList[0].data.intervention.forEach(s=>{s.isPendingSync=a.includes(s.sapWorkOrder)}),this.stateInterventionList.forEach(s=>{s.isPendingSync=a.includes(s.sapWorkOrder)})},async getMonitoringList(){var s;const a={ver:"v1",siteId:c().user.SiteId,dateStart:this.defaultRange[0],dateEnd:this.defaultRange[1],statusTabName:this.stateSelectedHeader};try{const i=await m.get(O,"",new URLSearchParams(a).toString());this.stateStatusList=i.data.result.content,(s=i.data.result.content)==null||s.forEach(r=>{this.stateHeader.forEach(n=>{r.status==n.value&&(r.status=="Open"?n.total=String(Number(r.data.servicesheet.length)+Number(r.data.intervention.length)):n.total=String(Number(r.data.servicesheet.length)+Number(r.data.intervention.length)+Number(r.data.interimEngine.length)))}),r.status==this.stateSelectedHeader&&(this.stateList=r.data.servicesheet,this.stateInterventionList=r.data.intervention)})}catch(i){v(i),S("IRONS",i),console.log(i)}finally{this.stateListLoading=!1}},async getMonitoringListOnlyOpenIntervention(){const a={ver:"v1",siteId:c().user.SiteId,dateStart:this.defaultRange[0],dateEnd:this.defaultRange[1]};try{const i=(await h.retryTask.toArray()).map(n=>n.workorder),r=await m.get(y,"",new URLSearchParams(a).toString());this.stateStatusList[0].data.intervention=r.data.result.content,this.stateStatusList[0].data.intervention.forEach(n=>{n.isPendingSync=i.includes(n.sapWorkOrder)}),this.stateStatusList[0].dataCount=String(Number(this.stateStatusList[0].data.servicesheet.length)+Number(r.data.result.content.length)),this.stateHeader[0].total=String(Number(this.stateStatusList[0].data.servicesheet.length)+Number(r.data.result.content.length))}catch(s){v(s),S("IRONS",s),console.log(s)}finally{this.stateListLoading=!1}},setDefaultFilterDateRangeForYetToStart(){this.stateDefaultRange[0]=l(3,"months","YYYY-MM-DD"),this.stateDefaultRange[1]=d(1,"months","YYYY-MM-DD")},setDefaultFilterDateRange(){this.stateDefaultRange[0]=l(3,"months","YYYY-MM-DD"),this.stateDefaultRange[1]=g("YYYY-MM-DD")},setDefaultFilter(e,a){this.stateDefaultRange[0]=e,this.stateDefaultRange[1]=a},resetList(){this.stateList=[],this.stateDefaultRange=[l(3,"months","YYYY-MM-DD"),d(1,"months","YYYY-MM-DD")],this.setHeaderChange(this.stateSelectedHeader)},setOptionQuery(e){this.stateOptionsQuery=e},setServiceSheetOption(){this.stateOptions=p.cloneDeep(this.stateInitOptions),this.stateOptionsQuery&&(this.stateOptions=this.stateOptions.filter(e=>{if(e.label.toLowerCase().includes(this.stateOptionsQuery.toLowerCase()))return!0}))},fitlerList(e){this.stateSelectedServiceSheet=e,this.serviceSheetOptions.forEach(a=>{a.value==e&&(this.stateOptionsQuery=a.label)}),this.setServiceSheetOption(),this.stateList=p.cloneDeep(this.stateInitList),this.stateList=this.stateList.filter(a=>`${a.workOrder}`==this.stateSelectedServiceSheet)},async updateDownloadHistory(e,a){const s=c(),i={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"updatedBy",propertyValue:JSON.stringify({id:s.user.EmployeeId,name:s.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"downloadHistory",propertyValue:JSON.stringify({downloadBy:{id:s.user.EmployeeId,name:s.user.Name},downloadDate:"<<ServerDateTime>>"})},{propertyName:"isDownload",propertyValue:"true"}]}],employee:{id:s.user.EmployeeId,name:s.user.Name}},r={ver:"v1"};let n="";e=="Digital Service Forms"?n=D:e=="Interim Engine Service Forms"?n=I:(i.localInterventionStatus="Close",n=L);try{if(await m.post(`${n}?${new URLSearchParams(r).toString()}`,i),e=="Digital Service Forms"){const t=this.stateList.findIndex(o=>o.workOrder==a.workOrder);t>=0&&(this.stateList[t].isDownload="true")}else if(e=="Interim Engine Service Forms"){const t=this.stateInterimList.findIndex(o=>o.workOrder==a.workOrder);t>=0&&(this.stateInterimList[t].isDownload="true")}else{const t=this.stateInterventionList.findIndex(o=>o.sapWorkOrder==a.sapWorkOrder);t>=0&&(this.stateInterventionList[t].isDownload="true")}}catch(t){S("IRONS",t),console.log(t)}}}});export{H as u};

import{D as g}from"./DefectNoClass-BqGKOkzR.js";import{D as S}from"./urls-CvqtYZA-.js";import{u as D}from"./authentication-handler-Pueb_EI7.js";import{c as m,s as u,a as y}from"./index-BuVmIl8K.js";import{d as b}from"./pinia-BjOS2_Ao.js";import{u as d}from"./useCameraStore-BwXVJhPe.js";import{u as N}from"./useAttachmentStore-DqM3autD.js";import{j as A,c as E,p as V,o as w}from"./urls-CPQ2HRXU.js";import{u as v}from"./helpers-wUOLw-dU.js";import{u as I}from"./useDefectsStore-7BpSnT1n.js";import{c as T}from"./useEFormStore-DtkLPope.js";import{M as l}from"./MachineSMUEnum-CgiCo9nf.js";const k=b({id:"defectPreview",state:()=>({stateLoading:!1,stateViewYesVisible:!1,stateViewtNoVisible:!1,stateDefectInfo:{},stateIsYes:void 0,stateApprovalDefectList:[],stateSelectedApprovalDefect:{},stateHasDefectSMU:!1}),getters:{ViewYesVisible:e=>e.stateViewYesVisible,ViewNoVisible:e=>e.stateViewtNoVisible,images:()=>d().ImageObjects.find(i=>i.Id==="defect"),defectInfo:e=>e.stateDefectInfo,ApprovalDefect:e=>e.stateSelectedApprovalDefect,HasDefectSMU:e=>e.stateHasDefectSMU},actions:{toggleViewYesVisible(e){this.stateViewYesVisible=e,this.stateViewtNoVisible=!1},toggleViewNoVisible(e){this.stateViewtNoVisible=e,this.stateViewYesVisible=!1},async getDefectDetail(e,i){this.stateLoading=!0;const a={ver:"v1"},o={servicesheetDetailId:e,taskId:i};try{const t=(await m.post(`${A}?${new URLSearchParams(a).toString()}`,o)).data.result.content.detail,n=d(),f=N();if(n.setCurrent("defect"),n.clearCurrent(),t.type==="YES"){this.stateIsYes=!0,this.stateDefectInfo=new S,this.stateDefectInfo.setAssetNumber(t.assetNumber),this.stateDefectInfo.setDescription(t.description),this.stateDefectInfo.setPriority(t.priority),this.stateDefectInfo.setRaisedBy(t.raisedBy),this.stateDefectInfo.setDate(t.date),this.stateDefectInfo.setPlannedDuration(t.plannedDuration),this.stateDefectInfo.setInstruction(t.instruction),this.stateDefectInfo.setTitle(t.title),this.stateDefectInfo.importParts(...JSON.parse(t.parts)),this.stateDefectInfo.importLabours(...JSON.parse(t.labours)),this.stateDefectInfo.importResources(...JSON.parse(t.resources)),this.stateDefectInfo.importSymptoms(...JSON.parse(t.symptoms)),this.stateDefectInfo.importCauses(...JSON.parse(t.causes)),this.images.ImageInfos.push(...JSON.parse(t.images));const p=[];this.images.ImageInfos.forEach(r=>{let c="";typeof r=="string"?c=r:c=r.filename,p.push(f.downloadAttachment(c))}),Promise.all(p).then(r=>{r.forEach(c=>{const h=new Blob([c],{type:"image/png"});this.images.ImageBlobs.push(h)}),this.toggleViewYesVisible(!0)})}else{this.stateIsYes=!1,this.stateDefectInfo=new g,this.stateDefectInfo.setAssetNumber(t.assetNumber),this.stateDefectInfo.setDescription(t.description),this.stateDefectInfo.setRaisedBy(t.raisedBy),this.stateDefectInfo.setPriority(t.priority),this.stateDefectInfo.setDate(t.date),this.stateDefectInfo.setTitle(t.title),this.stateDefectInfo.importActions(...JSON.parse(t.actions)),this.images.ImageInfos.push(...JSON.parse(t.images));const p=[];this.images.ImageInfos.forEach(r=>{let c="";typeof r=="string"?c=r:c=r.filename,p.push(f.downloadAttachment(c))}),Promise.all(p).then(r=>{r.forEach(c=>{const h=new Blob([c],{type:"image/png"});this.images.ImageBlobs.push(h)}),this.toggleViewNoVisible(!0)})}this.stateLoading=!1}catch(s){D(s),console.log(s),this.stateLoading=!1,u("IRONS",s)}},async setDefectDetail(e){this.stateLoading=!0;try{const i=d(),a=N();if(i.setCurrent("defect"),i.clearCurrent(),e.type==="YES"){this.stateIsYes=!0,this.stateDefectInfo=new S,this.stateDefectInfo.setAssetNumber(e.assetNumber),this.stateDefectInfo.setDescription(e.description),this.stateDefectInfo.setPriority(e.priority),this.stateDefectInfo.setRaisedBy(e.raisedBy),this.stateDefectInfo.setDate(e.date),this.stateDefectInfo.setPlannedDuration(e.plannedDuration),this.stateDefectInfo.setInstruction(e.instruction),this.stateDefectInfo.setTitle(e.title),this.stateDefectInfo.importParts(...JSON.parse(e.parts)),this.stateDefectInfo.importLabours(...JSON.parse(e.labours)),this.stateDefectInfo.importResources(...JSON.parse(e.resources)),this.stateDefectInfo.importSymptoms(...JSON.parse(e.symptoms)),this.stateDefectInfo.importCauses(...JSON.parse(e.causes)),this.images.ImageInfos.push(...JSON.parse(e.images));const o=[];this.images.ImageInfos.forEach(s=>{let t="";typeof s=="string"?t=s:t=s.filename,o.push(a.downloadAttachment(t))}),Promise.all(o).then(s=>{s.forEach(t=>{const n=new Blob([t],{type:"image/png"});this.images.ImageBlobs.push(n)}),this.toggleViewYesVisible(!0)})}else{this.stateIsYes=!1,this.stateDefectInfo=new g,this.stateDefectInfo.setAssetNumber(e.assetNumber),this.stateDefectInfo.setDescription(e.description),this.stateDefectInfo.setPriority(e.priority),this.stateDefectInfo.setRaisedBy(e.raisedBy),this.stateDefectInfo.setDate(e.date),this.stateDefectInfo.setTitle(e.title),this.stateDefectInfo.importActions(...JSON.parse(e.actions)),this.images.ImageInfos.push(...JSON.parse(e.images));const o=[];this.images.ImageInfos.forEach(s=>{let t="";typeof s=="string"?t=s:t=s.filename,o.push(a.downloadAttachment(t))}),Promise.all(o).then(s=>{s.forEach(t=>{const n=new Blob([t],{type:"image/png"});this.images.ImageBlobs.push(n)}),this.toggleViewNoVisible(!0)})}this.stateLoading=!1}catch(i){D(i),console.log(i),this.stateLoading=!1}},async getApprovalDefect(e){const{id:i,taskId:a}=e;let o=null;if(this.stateApprovalDefectList.length!=0&&(o=v(this.stateApprovalDefectList,t=>i?t.defectHeaderId==i:a?t.taskKey==a:!1),o&&(o.object.status=="Acknowledge"||o.object.status=="Decline"||o.object.cbmNAStatus=="Confirmed"||o.object.cbmNAStatus=="Decline")))return o.object;const s=await this.getDefectsDataHeaderPerDefect(e);if(s){const t={defectHeaderId:s.id,taskKey:s.taskId,approvedBy:s.approvedBy,approvedDate:s.approvedDate,status:s.status,cbmNAStatus:s.cbmNAStatus,declineReason:s.declineReason,declineBy:s.declineBy,declineDate:s.declineDate};return o?o.index>=0&&(this.stateApprovalDefectList[o.index]=t):this.stateApprovalDefectList.push(t),t}return null},async getDefectsDataHeaderPerDefect(e){const i=e;try{const a=await m.post(`${E}`,i);return a.data.result.content&&a.data.result.content[0]?a.data.result.content[0]:null}catch(a){u("IRONS",a)}},setApprovalData(e){this.stateSelectedApprovalDefect=e},async updateSMUDefect(e){const i=I(),a=T();i.setDetailId(i.DefectSMUHeader.id),i.DefectSMUDetailDetail?(await this.updateDefectDetailSMU(e,!0),await this.updateDefectHeaderSMU(e,!0)):await a.createSMUDefect(e)},async updateDefectHeaderSMU(e,i=!1){const a=y(),s=I().DefectSMUHeader;let t=l.STATUS_NOT_IN_RANGE;e.isInRange&&(t=l.STATUS_IN_RANGE);const n={id:s.id,updateParams:[{keyValue:s.key,propertyParams:[{propertyName:"taskDesc",propertyValue:l.TITLE(t)},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:a.user.EmployeeId,name:a.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:a.user.EmployeeId,name:a.user.Name},userGroup:a.user.Position};i&&(n.isEdit="true");try{await m.post(`${V}`,n)}catch(f){u("IRONS",f),console.log(f)}},async updateDefectDetailSMU(e,i=!1){var p;const a=y(),s=I().DefectSMUDetailDetail;let t=l.STATUS_NOT_IN_RANGE;e.isInRange&&(t=l.STATUS_IN_RANGE);const n={...s==null?void 0:s.detail,title:l.TITLE(t),machineSMU:e.val,images:(p=e.generalData)==null?void 0:p.imageEquipment},f={id:s==null?void 0:s.id,updateParams:[{keyValue:s==null?void 0:s.id,propertyParams:[{propertyName:"detail",propertyValue:JSON.stringify(n)},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:a.user.EmployeeId,name:a.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:a.user.EmployeeId,name:a.user.Name},userGroup:a.user.Position};i&&(f.isEdit="true");try{await m.post(`${w}`,f)}catch(r){D(r),u("IRONS",r),console.log(r)}},resetList(){this.stateApprovalDefectList=[],this.stateSelectedApprovalDefect={}},resetInstance(){this.stateLoading=!1,this.stateIsYes=void 0,this.stateViewYesVisible=!1,this.stateViewtNoVisible=!1,this.stateDefectInfo={}}}});export{k as u};

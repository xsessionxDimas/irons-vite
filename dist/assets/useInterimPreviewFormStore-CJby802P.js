import{d as g}from"./pinia-BjOS2_Ao.js";import{c as n,s as u,a as y}from"./index-BuVmIl8K.js";import{e as I,f as G,g as f,G as v}from"./urls-COjrEEs1.js";import{e as p,_ as l}from"./lodash-DrHMlsdo.js";import{u as h}from"./useCameraStore-BwXVJhPe.js";import{u as k}from"./useAttachmentStore-DqM3autD.js";import{u as d}from"./authentication-handler-Pueb_EI7.js";import{f as E}from"./useInterimEngineStore-Ctq4w8Oq.js";import{r as F,s as _}from"./string-to-imageinfo-converter-Cdr1iOkP.js";import{w as A}from"./helpers-wUOLw-dU.js";const T="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/interim_engine_defect_header/get_data_list_by_param",V=g({id:"InterimDmaPreviewForm",state:()=>({stateGroups:[],stateSelectedSubGroups:[],stateGeneralForm:{},stateModelId:"",statePsTypeId:"",stateWorkOrder:"",stateUnitNumber:"",stateEmployee:{},stateSelectedGroup:void 0,stateServiceSheets:[],stateFormPreview:!0,stateDefectList:[],stateError:"",stateStoredSuspensionCylinderValue:[],stateStoredAdjustedSuspensionCylinderValue:[],stateStoredAdjustmentOptionValue:"",stateIsFormSelectedByOtherSupervisor:!1,stateSelectedWorkorder:{}}),getters:{serviceSheets:e=>e.stateServiceSheets,groups:e=>e.stateGroups,selectedSubGroups:e=>e.stateSelectedSubGroups,generalForm:e=>e.stateGeneralForm,employee:e=>e.stateEmployee,selectedGroup:e=>e.stateSelectedGroup,formPreview:e=>e.stateFormPreview,preRiskImages:()=>h().ImageObjects.find(t=>t.Id==="preview-risk"),errorMessage:e=>e.stateError,percentageTaskProgressAllTab:e=>A(e.stateGroups)},actions:{async postGenerateServiceSheet(e,t,r){this.stateDefectList=[];const s={employee:{id:e,name:t},modelId:this.stateModelId,psTypeId:this.statePsTypeId,workOrder:this.stateWorkOrder,unitNumber:this.stateUnitNumber,siteId:r},o={ver:"v1"};try{const a=await n.post(`${I}?${new URLSearchParams(o).toString()}`,s);if(a.data.statusCode!=200)this.stateError=a.data.result.message;else if(this.stateError="",a.data.result.message=="Cannot Access With Different Supervisor")this.stateIsFormSelectedByOtherSupervisor=!0;else try{this.stateGeneralForm=a.data.result.content.general,this.stateServiceSheets=a.data.result.content.suckBlowSheet,this.getGroups(),this.getTaskProgress(),this.stateSelectedGroup=this.groups[0];const i=h(),m=k();i.setCurrent("preview-risk"),i.clearCurrent(),p.isArray(this.generalForm.riskAssesment[0].value)&&(this.generalForm.riskAssesment[0].value=F(this.generalForm.riskAssesment[0].value),this.preRiskImages.ImageInfos=_(this.preRiskImages.ImageInfos),this.generalForm.riskAssesment[0].value.forEach(c=>{this.preRiskImages.ImageInfos.push(c)}))}catch(i){d(i),this.stateError=i.response.data.result.message}}catch(a){d(a),this.stateError=a.response.data.result.message,u("IRONS",a)}},getGroups(){let e=[{id:this.generalForm.id,modelId:this.generalForm.modelId,psTypeId:this.generalForm.psTypeId,workOrder:this.generalForm.workOrder,groupName:"General-interim",groupSeq:1,key:"1",headerId:"g1",isActive:this.generalForm.isActive.toString(),isDeleted:this.generalForm.isDeleted.toString(),createdBy:this.generalForm.createdBy,createdDate:this.generalForm.createdDate,updatedBy:"",updatedDate:this.generalForm.updatedDate,_rid:this.generalForm._rid,_self:this.generalForm._self,_etag:this.generalForm._etag,_attachments:this.generalForm._attachments,_ts:this.generalForm._ts,isSelected:!0,groupLabel:"General",subGroup:[],totalTask:0,doneTask:0}];this.serviceSheets.forEach(t=>{const r={id:t.id,modelId:t.modelId,psTypeId:t.psTypeId,workOrder:t.workOrder,groupName:t.groupName,groupSeq:t.groupSeq,key:t.key,headerId:t.headerId,isActive:t.isActive,isDeleted:t.isDeleted,createdBy:t.createdBy,createdDate:t.createdDate,updatedBy:t.updatedBy,updatedDate:t.updatedDate,_rid:t._rid,_self:t._self,_etag:t._etag,_attachments:t._attachments,_ts:t._ts,isSelected:!1,groupLabel:t.subGroup[0].name,subGroup:t.subGroup,totalTask:0,doneTask:0,isDisable:p.isUndefined(t.isDisable)?"false":t.isDisable};e.push(r)}),e=l.sortBy(e,"groupSeq"),this.stateGroups=e},async getTaskProgress(){const e={ver:"v1"};try{const t={modelId:this.generalForm.modelId,psTypeId:this.generalForm.psTypeId,workOrder:this.generalForm.workOrder,headerId:this.serviceSheets[0].headerId};(await n.post(`${G}?${new URLSearchParams(e).toString()}`,t)).data.result.content.forEach(s=>{const o=this.groups.find(a=>s.group===a.key);o&&(o.doneTask=s.doneTask,o.totalTask=s.totalTask)})}catch(t){d(t),u("IRONS",t),console.log(t)}},setModelAndPsTypeId(e,t,r,s){this.stateModelId=e,this.statePsTypeId=t,this.stateWorkOrder=r,this.stateUnitNumber=s},setShowPreviewForm(e){this.stateFormPreview=e},setSelectedGroup(e){this.stateGroups.forEach(t=>{t.id===e?t.isSelected=!0:t.isSelected=!1}),this.stateSelectedGroup=this.groups.find(t=>t.isSelected),this.stateSelectedGroup.subGroup.length>0&&this.getSubGroups()},getSubGroups(){const e=this.groups.find(t=>t.isSelected);if(e.groupSeq==1)this.stateSelectedSubGroups=[];else{const t=this.serviceSheets.find(r=>e.id===r.id);this.stateSelectedSubGroups=t.subGroup}},async updateGroupByParam(e){if(e!=="General-interim")try{const t={modelId:this.generalForm.modelId,psTypeId:this.generalForm.psTypeId,workOrder:this.generalForm.workOrder,groupName:e},r={ver:"v1"},s=await n.post(`${f}?${new URLSearchParams(r).toString()}`,t);this.stateSelectedSubGroups=s.data.result.content.subGroup,this.stateSelectedSubGroups.forEach(o=>{o.taskGroup.forEach(a=>{a.task.forEach(i=>{!p.isUndefined(i.adjustment)&&i.adjustment.rating&&(i.isShowAdjustmentRow=!0)})})})}catch(t){d(t),u("IRONS",t),console.log(t)}},setShowNextPage(){const e=this.stateGroups.findIndex(s=>{var o;return s.groupName==((o=this.stateSelectedGroup)==null?void 0:o.groupName)});let t=1,r=this.stateGroups[e+t];for(;!p.isUndefined(r.isDisable)&&r.isDisable=="true";)t++,r=this.stateGroups[e+t];this.setSelectedGroup(r.id),this.getTaskProgress(),this.updateGroupByParam(r.groupName)},setShowPrevPage(){const e=this.stateGroups.findIndex(s=>{var o;return s.groupName==((o=this.stateSelectedGroup)==null?void 0:o.groupName)});let t=1,r=this.stateGroups[e-t];for(;!p.isUndefined(r.isDisable)&&r.isDisable=="true";)t++,r=this.stateGroups[e-t];this.setSelectedGroup(r.id),this.updateGroupByParam(r.groupName)},resetPreview(){this.stateFormPreview=!1,this.stateSelectedGroup=void 0},async getDefectList(){const e={ver:"v1"},t={workorder:this.generalForm.workOrder};try{const r=await n.post(`${T}?${new URLSearchParams(e).toString()}`,t);this.stateDefectList=r.data.result.content,this.stateDefectList.forEach(async s=>{if(s.taskNumber=Number(s.taskNo.replace(/[^0-9]+/g,"")),s.category=="NORMAL"&&s.defectType=="NO"){const o={ver:"v1"},a={servicesheetDetailId:s.serviceSheetDetailId,taskId:s.taskId},i=await n.post(`${E}?${new URLSearchParams(o).toString()}`,a),m=JSON.parse(i.data.result.content.detail.actions);m.forEach((c,S)=>{s.defectAction=l.isUndefined(s.defectAction)?""+c:s.defectAction,S+1<m.length&&(s.defectAction=s.defectAction+", ")})}}),this.stateDefectList=l.orderBy(this.stateDefectList,["taskNumber"],["asc"])}catch(r){d(r),u("IRONS",r),console.log(r)}},async closeForm(){const e=y(),t={id:e.user.EmployeeId,name:e.user.Name},r={ver:"v1"},s=[{propertyName:"status",propertyValue:"Close"},{propertyName:"serviceEnd",propertyValue:"<<ServerDateTime>>"},{propertyName:"tsServiceEnd",propertyValue:"<<ServerTimeStamp>>"},{propertyName:"updatedBy",propertyValue:JSON.stringify(t)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}],o={id:this.generalForm.id,updateParams:[{keyValue:"GENERAL",propertyParams:s}],employee:t};try{return await n.post(`${v}?${new URLSearchParams(r).toString()}`,o),!0}catch(a){return d(a),u("IRONS",a),console.log(a),!1}},changePreviewForm(e){this.stateFormPreview=e},setSelectedWorkOrder(e){this.stateSelectedWorkorder=e},pushDataToSuspensionCylinderStoredValue(e){this.stateStoredSuspensionCylinderValue=e},pushDataToAdjustedSuspensionCylinderStoredValue(e){this.stateStoredAdjustedSuspensionCylinderValue=e},updateStoredAdjustmentOptionValue(e){this.stateStoredAdjustmentOptionValue=e},setSerialNumberGeneral(e){this.stateGeneralForm.serialNumber=e},updateSMUONGeneral(e){const{value:t,smuBy:r,smuDate:s}=e;this.generalForm.smu=t,this.generalForm.smuBy=r,this.generalForm.smuDate=s},updateSMUImages(e){this.stateGeneralForm.imageEquipment=e}}});export{V as u};

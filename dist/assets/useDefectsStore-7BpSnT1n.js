import{d as P}from"./pinia-BjOS2_Ao.js";import{c as O,d as w,k as F,m as G,n as R,o as k,p as f,l as C}from"./urls-CPQ2HRXU.js";import{c as d,s as u,a as y}from"./index-BuVmIl8K.js";import{D as v,C as B}from"./CrackNoClass-0DSU7BAn.js";import{D as H}from"./urls-CvqtYZA-.js";import{C as V}from"./CrackYesClass-COntz77m.js";import{u as _}from"./useCameraStore-BwXVJhPe.js";import{u as b}from"./useAttachmentStore-DqM3autD.js";import{u as M}from"./useDefectsFormStore-41UTMhiG.js";import{u as c}from"./authentication-handler-Pueb_EI7.js";import{D as J}from"./DefectNoClass-BqGKOkzR.js";import{e as I}from"./lodash-DrHMlsdo.js";import{i as S}from"./date-format-8-IvfSl3.js";import{s as m}from"./prev-val-handler-DvA3D_kF.js";import{u as T}from"./useGlobalConnectionStore-DV9B81de.js";import{m as h}from"./helpers-wUOLw-dU.js";import{d as E,a as A,b as U}from"./methods-bliey5hF.js";const ie=P({id:"defects",state:()=>({stateLoading:!1,stateData:new v,stateComments:[],stateDefectFormData:new H,stateDefectNoFormData:new J,stateCrackFormData:new V,stateCrackSimpleFormData:new B,stateDefectSMU:{},stateIsError:!1,stateHeaderId:"",stateDetailId:"",stateHeaderStatus:"",stateDefectFetched:!1,stateDefectGeneralStatus:"",stateLoadDefectImages:!1,stateApproveBy:void 0,stateApproveDate:void 0,stateDefectPictures:{},stateDefectKey:1,stateDefectDetails:[],stateReferencePhoto:{title:"",blob:"",id:"",dimension:{}},stateDefectFormStatusSPV:"",stateErrorMessage:"",stateCurrentUserGroup:"",stateErrorByNetwork:!1,stateDefectHeaderHistory:[],stateSelectedHeaderHistory:[],stateDefectDetailHistory:[],stateSelectedDetailHistory:[],stateSelectedDetailVersion:{},stateDefectHeaders:[]}),getters:{Loading:e=>e.stateLoading,GeneralStatus:e=>e.stateDefectGeneralStatus,ApprovalData:e=>e.stateData,DefectKey:e=>e.stateDefectKey,DefectFormData:e=>e.stateDefectFormData,CrackFormData:e=>e.stateCrackFormData,ImagesDefect:()=>_().ImageObjects.find(r=>r.Id==="defect"),ImagesCrack:()=>_().ImageObjects.find(r=>r.Id==="crack"),IsError:e=>e.stateIsError,ErrorMessage:e=>e.stateErrorMessage,HeaderId:e=>e.stateHeaderId,DetailId:e=>e.stateDetailId,DataFetched:e=>e.stateDefectFetched,HeaderStatus:e=>e.stateHeaderStatus,DefectPictures:e=>e.stateDefectPictures,LoadDefectImages:e=>e.stateLoadDefectImages,referencePhoto:e=>e.stateReferencePhoto,Comments:e=>e.stateComments,ApproveBy:e=>e.stateApproveBy,ApproveDate:e=>e.stateApproveDate,DefectFormStatusSPV:e=>e.stateDefectFormStatusSPV,DefectSMUHeader:e=>e.stateData.SMUDefectHeaders.find(r=>r.defectType=="machineSMU")??{},DefectSMUDetail:e=>e.stateDefectSMU,DefectSMUDetailDetail:e=>e.stateData.SMUDefectDetails.find(r=>r.defectHeaderId==e.stateDetailId),globalConnectionStore:()=>T(),DefectHeaderHistory:e=>e.stateDefectHeaderHistory,DefectDetailHistory:e=>e.stateDefectDetailHistory,SelectedDefectHeaderHistory:e=>e.stateSelectedHeaderHistory,SelectedDefectDetailVersion:e=>e.stateSelectedDetailVersion,VersionDate:e=>e.stateSelectedHeaderHistory.map(t=>t.createdDate)},actions:{setCurrentUserGroup(e){this.stateCurrentUserGroup=e},setHeaderId(e){this.stateHeaderId=e},setDefectFetched(e){this.stateDefectFetched=e},setDetailId(e){this.stateDetailId=e},createRequestBody(e){return{workorder:e}},async getDefectsDataHeader(e){const r=this.createRequestBody(e);try{const t=await d.post(`${O}`,r);this.stateData.setHeaders(t.data.result.content)}catch(t){m("fe_event_error_get_defect_header",{errorMessage:t}),u("IRONS",t)}},async getDefectsDataDetail(e){try{const r=this.createRequestBody(e),t=await d.post(`${w}`,r);this.stateData.setDetails(t.data.result.content),this.stateDefectDetails=t.data.result.content}catch(r){m("fe_event_error_get_defect_detail",{errorMessage:r}),u("IRONS",r)}},toggleErrorByNetwork(e){this.stateErrorByNetwork=e},async getDefectsDataAll(e){var t,a,p,i,n,s,o,l,N;const r={workOrder:e,ver:"v1"};try{const D=await d.get(`${F}`,"",new URLSearchParams(r).toString());this.stateData.setHeaders(((t=D.data.result.content)==null?void 0:t.content.defectHeader)||[]),this.stateData.setDetails(((a=D.data.result.content)==null?void 0:a.content.defectDetail)||[]),this.stateDefectDetails=((p=D.data.result.content)==null?void 0:p.content.defectDetail)||[],this.stateDefectHeaders=((i=D.data.result.content)==null?void 0:i.content.defectHeader)||[],this.stateComments=((n=D.data.result.content)==null?void 0:n.content.comment)||[],this.stateDefectHeaderHistory=((s=D.data.result.content)==null?void 0:s.content.defectHeaderHistory)||[],this.stateDefectDetailHistory=((o=D.data.result.content)==null?void 0:o.content.defectDetailHistory)||[],this.stateApproveBy=((l=D.data.result.content)==null?void 0:l.content.approvedBy)||void 0,this.stateApproveDate=((N=D.data.result.content)==null?void 0:N.content.approvedDate)||""}catch(D){const g=this.globalConnectionStore.checkIsErrorNoNetwork(D);this.stateErrorByNetwork=g,m("fe_event_error_get_defect_all_data",{errorMessage:D}),u("IRONS",D)}},setSelectedDefectHeaderHistory(e){return this.stateDefectHeaderHistory&&this.stateDefectHeaderHistory.length>0&&(this.stateSelectedHeaderHistory=this.stateDefectHeaderHistory.filter(r=>r.defectHeaderId==e)),[]},setDetailVersion(e){e||(this.stateSelectedDetailVersion={});const r=this.stateSelectedDetailHistory.find(t=>t.createdDate.substring(0,15)==e.substring(0,15));return r?(this.stateSelectedDetailVersion=r,!0):!1},resetDetailVersion(){this.stateSelectedDetailVersion=this.stateSelectedDetailHistory[0]??{}},setSelectedDefectDetailHistory(e){return this.stateDefectDetailHistory&&this.stateDefectDetailHistory.length>0&&(this.stateSelectedDetailHistory=this.stateDefectDetailHistory.filter(r=>r.defectHeaderId==e)),[]},async getDefectsData(e){this.stateLoading=!0;try{this.setDefectFetched(!1),await this.getDefectsDataAll(e),this.setDefectFetched(!0)}catch(r){c(r),console.error(r)}this.stateLoading=!1},async getDefectsDataCBM(e,r){const t={workOrder:e,taskKey:r};try{return(await d.post(`${G}`,t)).data.result.content}catch(a){m("fe_event_error_get_defect_cbm",{errorMessage:a}),u("IRONS",a)}},getDefectDetail(e){return this.ApprovalData.DefectDetails.find(t=>t.defectHeaderId==e)},getDefectHeader(e){return this.ApprovalData.DefectHeaders.find(t=>t.id==e)},getDefectGenericHeader(e){return this.ApprovalData.DefectGenericHeaders.find(t=>t.id==e)},getDefectGenericDetail(e){return this.ApprovalData.DefectGenericDetails.find(t=>t.defectHeaderId==e)},getCrackHeader(e){return this.ApprovalData.CrackHeaders.find(t=>t.id==e)},getCrackDetail(e){return this.ApprovalData.CrackDetails.find(t=>t.defectHeaderId==e)},getCompleteStatus(e){const r=this.ApprovalData.DefectDetails.find(t=>t.defectHeaderId==e);return r?r.detail.isComplete??!0:!0},getGenericCompleteStatus(e){const r=this.ApprovalData.DefectGenericDetails.find(t=>t.defectHeaderId==e);return r?r.detail.isComplete??!0:!0},getCrackCompleteStatus(e){const r=this.ApprovalData.CrackDetails.find(t=>t.defectHeaderId==e);return r?r.detail.isComplete??!0:!0},async setDefectImages(e){const r=await E(e,void 0);this.ImagesDefect.ImageInfos=r.ImageInfos,this.ImagesDefect.ImageBlobs=r.ImageBlobs},async setCrackImages(e){const r=await E(e,void 0);this.ImagesCrack.ImageInfos=r.ImageInfos,this.ImagesCrack.ImageBlobs=r.ImageBlobs},async setDefectGeneralStatus(e){const r=this.ApprovalData.DefectHeaders.find(t=>t.id===e);this.stateDefectGeneralStatus=(r==null?void 0:r.generalStatus)??""},async setGenericDefectGeneralStatus(e){const r=this.ApprovalData.DefectGenericHeaders.find(t=>t.id===e);this.stateDefectGeneralStatus=(r==null?void 0:r.generalStatus)??""},async setCrackGeneralStatus(e){const r=this.ApprovalData.CrackHeaders.find(t=>t.id===e);this.stateDefectGeneralStatus=(r==null?void 0:r.generalStatus)??""},async setDefectData(e){const r=this.ApprovalData.DefectHeaders.find(a=>a.id===e),t=this.ApprovalData.DefectDetails.find(a=>a.defectHeaderId==e);if(t){this.setHeaderId(e),this.setDetailId(t.id),this.setSelectedDefectHeaderHistory(e),this.setSelectedDefectDetailHistory(e);const[a]=A(t.detail);this.stateDefectFormData=a,this.stateDefectFormData.setTitle((r==null?void 0:r.taskDesc)||""),this.stateHeaderStatus=r==null?void 0:r.status;const p=await E(t.detail.images,void 0);return this.ImagesDefect.ImageInfos=p.ImageInfos,this.ImagesDefect.ImageBlobs=p.ImageBlobs,t.detail.type}},async setDefectDataGeneric(e){const r=this.ApprovalData.DefectGenericHeaders.find(a=>a.id===e),t=this.ApprovalData.DefectGenericDetails.find(a=>a.defectHeaderId==e);if(t){this.setHeaderId(e),this.setDetailId(t.id),this.setSelectedDefectHeaderHistory(e),this.setSelectedDefectDetailHistory(e);const[a]=A(t.detail);this.stateDefectFormData=a,this.stateDefectFormData.setTitle((r==null?void 0:r.taskDesc)||""),this.stateDefectFormStatusSPV=r==null?void 0:r.status,this.stateHeaderStatus=r==null?void 0:r.status;const p=await E(t.detail.images,void 0);return this.ImagesDefect.ImageInfos=p.ImageInfos,this.ImagesDefect.ImageBlobs=p.ImageBlobs,t.detail.type}},setSMUDefectData(e){let r=!1;const t=b(),a=this.ApprovalData.SMUDefectHeaders.find(i=>i.id===e),p=this.ApprovalData.SMUDefectDetails.find(i=>i.defectHeaderId==e);if(p){r=!0,this.setHeaderId(e),this.setDetailId(p.id),this.stateHeaderStatus=a==null?void 0:a.status,this.stateDefectSMU=p.detail;const i=[];this.ImagesDefect.ImageInfos.forEach(n=>{let s="";typeof n=="string"?s=n:s=n.filename,i.push(t.downloadAttachment(s))}),Promise.all(i).then(n=>{n.forEach(s=>{const o=new Blob([s],{type:"image/png"});this.ImagesDefect.ImageBlobs.push(o)})})}return r},async getDefectImages(e,r,t){const a={id:e,keyValue:r,propertyName:t},p={ver:"v1"};let i=[];try{const n=await d.post(`${R}?${new URLSearchParams(p).toString()}`,a);I.isUndefined(n.data.result.content)||(i=n.data.result.content)}catch(n){m("fe_event_error_get_defect_images",{errorMessage:n}),u("IRONS",n)}return i},setLoadingImages(e){this.stateLoadDefectImages=e},setNewDefectKey(){this.stateDefectKey+=1},async getDefectPictures(e){const r=this.ApprovalData.DefectDetails.find(t=>t.defectHeaderId==e);r&&(this.stateDefectPictures[e]=JSON.parse(r.detail.images))},getCrackPictures(e){const r=this.ApprovalData.CrackDetails.find(t=>t.defectHeaderId==e);r&&(this.stateDefectPictures[e]=JSON.parse(r.detail.images))},setDefectNewData(e=!0){var a;const r=this.ApprovalData.DefectDetails.find(p=>p.id===this.stateDetailId);r&&(r.detail.description=this.DefectFormData.Description.value,r.detail.plannedDuration=this.DefectFormData.PlannedDuration.value,r.detail.instruction=this.DefectFormData.Instruction.value,r.detail.priority=this.DefectFormData.Priority,r.detail.parts=JSON.stringify(this.DefectFormData.Parts),r.detail.labours=JSON.stringify(this.DefectFormData.Labours),r.detail.resources=JSON.stringify(this.DefectFormData.Resources.map(p=>p.value)),r.detail.symptoms=JSON.stringify(this.DefectFormData.Symptoms.map(p=>p.value)),r.detail.causes=JSON.stringify(this.DefectFormData.Causes.map(p=>p.value)),r.detail.images=JSON.stringify(((a=this.ImagesDefect)==null?void 0:a.ImageInfos)??[]));const t=this.ApprovalData.DefectHeaders.find(p=>p.id===this.stateHeaderId);t&&e&&(t.status="Acknowledge")},createDefectDetail(){var a;const e=((a=this.ImagesDefect)==null?void 0:a.ImageInfos)??[],r=this.DefectFormData.Parts.map(p=>{const i=p.qty?String(parseFloat(p.qty)):p.qty;return{...p,qty:i}}),t=this.DefectFormData.Labours.map(p=>{const i=p.qty?String(parseFloat(p.qty)):p.qty,n=p.hireEach?String(parseFloat(p.hireEach)):p.hireEach;return{...p,qty:i,hireEach:n}});return{type:this.DefectFormData.Type,assetNumber:this.DefectFormData.AssetNumber,description:this.DefectFormData.Description.value,title:this.DefectFormData.Title,raisedBy:this.DefectFormData.RaisedBy,date:this.DefectFormData.Date,plannedDuration:String(parseFloat(this.DefectFormData.PlannedDuration.value)),instruction:this.DefectFormData.Instruction.value,priority:this.DefectFormData.Priority,parts:JSON.stringify(r),labours:JSON.stringify(t),resources:JSON.stringify(this.DefectFormData.Resources.map(p=>p.value)),symptoms:JSON.stringify(this.DefectFormData.Symptoms.map(p=>p.value)),causes:JSON.stringify(this.DefectFormData.Causes.map(p=>p.value)),images:JSON.stringify(e),referencePhoto:this.stateReferencePhoto.id,referenceSection:this.stateReferencePhoto.title,isComplete:this.DefectFormData.IsComplete,requirement:this.DefectFormData.DefectRequirement}},async updateDefectDetail(e=!1){var i,n,s;const r=y();let t;e?t=this.ApprovalData.DefectGenericDetails.find(o=>o.id===this.stateDetailId):t=this.ApprovalData.DefectDetails.find(o=>o.id===this.stateDetailId);const a=this.createDefectDetail(),p={id:this.DetailId,updateParams:[{keyValue:t.key,propertyParams:[{propertyName:"detail",propertyValue:JSON.stringify(a)},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:r.user.EmployeeId,name:r.user.Name}};try{this.stateIsError=!1;const o=await d.post(`${k}`,p);return o.data.statusError==400?(this.stateIsError=!0,o.data.result.message):""}catch(o){m("fe_event_error_update_defect_detail",{errorMessage:o}),c(o),console.log(o),this.stateIsError=!0,M().toggleTaskAlreadyUpdatedStatus(!0);const N=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`);return u("IRONS",o),N}},async updateDefectAcknowledge(e={generic:!1,smu:!1}){var p,i,n;const r=y();let t;e.generic?t=this.ApprovalData.DefectGenericHeaders.find(s=>s.id===this.stateHeaderId):e.smu?t=this.ApprovalData.SMUDefectHeaders.find(s=>s.id===this.stateHeaderId):t=this.ApprovalData.DefectHeaders.find(s=>s.id===this.stateHeaderId);const a={id:t.id,updateParams:[{keyValue:t.key,propertyParams:[{propertyName:"status",propertyValue:"Acknowledge"},{propertyName:"approvedBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"approvedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:r.user.EmployeeId,name:r.user.Name},userGroup:this.stateCurrentUserGroup};e.newTitle&&a.updateParams[0].propertyParams.push({propertyName:"taskDesc",propertyValue:e.newTitle});try{this.stateIsError=!1,await d.post(`${f}`,a),t.status="Acknowledge"}catch(s){m("fe_event_error_acknowledge_defect",{errorMessage:s}),c(s),this.stateIsError=!0,this.stateErrorMessage=h(((n=(i=(p=s==null?void 0:s.response)==null?void 0:p.data)==null?void 0:i.result)==null?void 0:n.message)??`${s}`),u("IRONS",s)}},async updateDownloadHistory(e,r,t=!1){let a;r=="defect"?t?a=this.ApprovalData.DefectGenericHeaders.find(n=>n.id===e):a=this.ApprovalData.DefectHeaders.find(n=>n.id===e):a=this.ApprovalData.CrackHeaders.find(n=>n.id===e);const p=y();if(!a)return;const i={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"downloadHistory",propertyValue:!0},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:p.user.EmployeeId,name:p.user.Name})},{propertyName:"updatedDate",propertyValue:S()}]}],employee:{id:p.user.EmployeeId,name:p.user.Name}};try{this.stateIsError=!1,await d.post(`${f}`,i),a.downloadHistory?a.downloadHistory.push({downloadBy:{id:p.user.EmployeeId,name:p.user.Name}}):a.downloadHistory=[{downloadBy:{id:p.user.EmployeeId,name:p.user.Name}}]}catch(n){m("fe_event_error_update_donwload_defect_pdf_history",{errorMessage:n}),c(n),console.log(n),this.stateIsError=!0,u("IRONS",n)}this.stateData.setDetails(this.stateDefectDetails)},async updateDefectDecline(e,r=!1){var i,n,s;const t=y();let a;r?a=this.ApprovalData.DefectGenericHeaders.find(o=>o.id===this.stateHeaderId):a=this.ApprovalData.DefectHeaders.find(o=>o.id===this.stateHeaderId);const p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"status",propertyValue:"Decline"},{propertyName:"declineReason",propertyValue:e},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:S()},{propertyName:"declineBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"declineDate",propertyValue:S()}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.status="Decline",a.declineReason=e,a.declineBy={id:t.user.EmployeeId,name:t.user.Name},a.declineDate=S(),this.stateHeaderStatus="Decline"}catch(o){m("fe_event_error_decline_defect",{errorMessage:o}),c(o),console.log(o),this.stateIsError=!0,this.stateErrorMessage=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`),u("IRONS",o)}this.stateData.setDetails(this.stateDefectDetails)},async updatePlannerDefectDecline(e,r=!1){var i,n,s;const t=y();let a;r?a=this.ApprovalData.DefectGenericHeaders.find(o=>o.id===this.stateHeaderId):a=this.ApprovalData.DefectHeaders.find(o=>o.id===this.stateHeaderId);const p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"plannerStatus",propertyValue:"Decline"},{propertyName:"declineReason",propertyValue:e},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:S()},{propertyName:"declineBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"declineDate",propertyValue:S()}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.plannerStatus="Decline",a.declineReason=e,a.declineBy={id:t.user.EmployeeId,name:t.user.Name},a.declineDate=S(),this.stateHeaderStatus="Decline"}catch(o){m("fe_event_error_decline_defect_planner",{errorMessage:o}),c(o),console.log(o),this.stateIsError=!0,this.stateErrorMessage=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`),u("IRONS",o)}this.stateData.setDetails(this.stateDefectDetails)},async updateCrackDecline(e){var p,i,n;const r=y(),t=this.ApprovalData.CrackHeaders.find(s=>s.id===this.stateHeaderId),a={id:t.id,updateParams:[{keyValue:t.key,propertyParams:[{propertyName:"status",propertyValue:"Decline"},{propertyName:"declineReason",propertyValue:e},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"updatedDate",propertyValue:S()},{propertyName:"declineBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"declineDate",propertyValue:S()}]}],employee:{id:r.user.EmployeeId,name:r.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,a),t.status="Decline",t.declineReason=e,t.declineBy={id:r.user.EmployeeId,name:r.user.Name},t.declineDate=S(),this.stateHeaderStatus="Decline"}catch(s){m("fe_event_error_decline_crack",{errorMessage:s}),c(s),console.log(s),this.stateIsError=!0,this.stateErrorMessage=h(((n=(i=(p=s==null?void 0:s.response)==null?void 0:p.data)==null?void 0:i.result)==null?void 0:n.message)??`${s}`),u("IRONS",s)}this.stateData.setDetails(this.stateDefectDetails)},async updatePlannerCrackDecline(e){var p,i,n;const r=y(),t=this.ApprovalData.CrackHeaders.find(s=>s.id===this.stateHeaderId),a={id:t.id,updateParams:[{keyValue:t.key,propertyParams:[{propertyName:"plannerStatus",propertyValue:"Decline"},{propertyName:"declineReason",propertyValue:e},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"updatedDate",propertyValue:S()},{propertyName:"declineBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"declineDate",propertyValue:S()}]}],employee:{id:r.user.EmployeeId,name:r.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,a),t.plannerStatus="Decline",t.declineReason=e,t.declineBy={id:r.user.EmployeeId,name:r.user.Name},t.declineDate=S(),this.stateHeaderStatus="Decline"}catch(s){m("fe_event_error_decline_crack_planner",{errorMessage:s}),c(s),console.log(s),this.stateIsError=!0,this.stateErrorMessage=h(((n=(i=(p=s==null?void 0:s.response)==null?void 0:p.data)==null?void 0:i.result)==null?void 0:n.message)??`${s}`),u("IRONS",s)}this.stateData.setDetails(this.stateDefectDetails)},async updatePlannerDefectAcknowledge(e={generic:!1,smu:!1}){var p,i,n;const r=y();let t;e.generic?t=this.ApprovalData.DefectGenericHeaders.find(s=>s.id===this.stateHeaderId):e.smu?t=this.ApprovalData.SMUDefectHeaders.find(s=>s.id===this.stateHeaderId):t=this.ApprovalData.DefectHeaders.find(s=>s.id===this.stateHeaderId);const a={id:t.id,updateParams:[{keyValue:t.key,propertyParams:[{propertyName:"plannerStatus",propertyValue:"Acknowledge"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:r.user.EmployeeId,name:r.user.Name},userGroup:this.stateCurrentUserGroup};e.newTitle&&a.updateParams[0].propertyParams.push({propertyName:"taskDesc",propertyValue:e.newTitle});try{this.stateIsError=!1,await d.post(`${f}`,a),t.plannerStatus="Acknowledge"}catch(s){m("fe_event_error_acknlowedge_defect_planner",{errorMessage:s}),c(s),console.log(s),this.stateIsError=!0,this.stateErrorMessage=h(((n=(i=(p=s==null?void 0:s.response)==null?void 0:p.data)==null?void 0:i.result)==null?void 0:n.message)??`${s}`),u("IRONS",s)}},async updateDefectFitter(e,r=!1,t=""){var n,s,o;let a;r?a=this.ApprovalData.DefectGenericDetails.find(l=>l.id===this.stateDetailId):a=this.ApprovalData.DefectDetails.find(l=>l.id===this.stateDetailId);const p=this.createDefectDetail(),i={id:this.DetailId,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"detail",propertyValue:JSON.stringify(p)},{propertyName:"updatedBy",propertyValue:e},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:JSON.parse(e)};t&&(i.userGroup=t);try{this.stateIsError=!1;const l=await d.post(`${C}`,i);if(t)return;let N;r?N=this.ApprovalData.DefectGenericHeaders.find(g=>g.id===this.stateHeaderId):N=this.ApprovalData.DefectHeaders.find(g=>g.id===this.stateHeaderId);const D={id:this.HeaderId,updateParams:[{keyValue:N.key,propertyParams:[{propertyName:"workorder",propertyValue:N.workorder},{propertyName:"updatedBy",propertyValue:e},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:JSON.parse(e)};try{return this.stateIsError=!1,await d.post(`${f}`,D),l.data.result.message}catch(g){return m("fe_event_error_update_defect_fitter",{errorMessage:g}),c(g),this.stateIsError=!0,g.response.data.result.message}}catch(l){c(l),this.stateIsError=!0;const N=h(((o=(s=(n=l==null?void 0:l.response)==null?void 0:n.data)==null?void 0:s.result)==null?void 0:o.message)??`${l}`);return u("IRONS",l),N}},resetErrorStatus(){this.stateIsError=!1,this.stateErrorMessage=""},async updateDefectMO(e,r,t=!1){var n,s,o;const a=y();let p;t?p=this.ApprovalData.DefectGenericHeaders.find(l=>l.id===e):p=this.ApprovalData.DefectHeaders.find(l=>l.id===e);const i={id:p.id,updateParams:[{keyValue:p.key,propertyParams:[{propertyName:"defectWorkorder",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:a.user.EmployeeId,name:a.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:a.user.EmployeeId,name:a.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,i),p.defectWorkorder=r}catch(l){m("fe_event_error_update_defect_mo",{errorMessage:l}),c(l),console.log(l),this.stateIsError=!0,this.stateErrorMessage=h(((o=(s=(n=l==null?void 0:l.response)==null?void 0:n.data)==null?void 0:s.result)==null?void 0:o.message)??`${l}`),u("IRONS",l)}},async updateCompleteStatus(e,r){var p,i,n;const t=y(),a={id:e,updateParams:[{keyValue:e,propertyParams:[{propertyName:"isComplete",propertyValue:r}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${k}`,a)}catch(s){c(s),this.stateIsError=!0,this.stateErrorMessage=h(((n=(i=(p=s==null?void 0:s.response)==null?void 0:p.data)==null?void 0:i.result)==null?void 0:n.message)??`${s}`),u("IRONS",s)}},async updateDefectDetailSMU(e={}){var p,i,n;const r=y();let t=this.stateDefectSMU;I.isEmpty(e)||(t=e);const a={id:this.DetailId,updateParams:[{keyValue:this.DetailId,propertyParams:[{propertyName:"detail",propertyValue:JSON.stringify(t)},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:r.user.EmployeeId,name:r.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${k}`,a)}catch(s){c(s),this.stateIsError=!0,this.stateErrorMessage=h(((n=(i=(p=s==null?void 0:s.response)==null?void 0:p.data)==null?void 0:i.result)==null?void 0:n.message)??`${s}`),u("IRONS",s)}},async updateRepairedStatus(e,r,t=!1){const a=y();let p;t?p=this.ApprovalData.DefectGenericHeaders.find(n=>n.id===e):p=this.ApprovalData.DefectHeaders.find(n=>n.id===e);const i={id:p.id,updateParams:[{keyValue:p.key,propertyParams:[{propertyName:"repairedStatus",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:a.user.EmployeeId,name:a.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:a.user.EmployeeId,name:a.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,i),p.repairedStatus=r}catch(n){m("fe_event_error_update_repaired_status",{errorMessage:n}),c(n),console.log(n),this.stateIsError=!0,u("IRONS",n)}},async updateDefectConfirmedStatus(e,r=""){var i,n,s;const t=y(),a=this.ApprovalData.DefectNAHeaders.find(o=>o.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"cbmNAStatus",propertyValue:"Confirmed"},{propertyName:"approveReason",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"approvedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"approvedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.cbmNAStatus="Confirmed"}catch(o){m("fe_event_error_update_defect_confirmed_status",{errorMessage:o}),c(o),console.log(o),this.stateIsError=!0,this.stateErrorMessage=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`),u("IRONS",o)}},async updatePlannerDefectConfirmedStatus(e){var p,i,n;const r=y(),t=this.ApprovalData.DefectNAHeaders.find(s=>s.id===e),a={id:t.id,updateParams:[{keyValue:t.key,propertyParams:[{propertyName:"plannerCbmNAStatus",propertyValue:"Confirmed"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:r.user.EmployeeId,name:r.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,a),t.plannerCbmNAStatus="Confirmed"}catch(s){m("fe_event_error_update_defect_confirmed_status_planner",{errorMessage:s}),c(s),console.log(s),this.stateIsError=!0,this.stateErrorMessage=h(((n=(i=(p=s==null?void 0:s.response)==null?void 0:p.data)==null?void 0:i.result)==null?void 0:n.message)??`${s}`),u("IRONS",s)}},async updateCrackConfirmedStatus(e,r=""){var i,n,s;const t=y(),a=this.ApprovalData.CrackNAHeaders.find(o=>o.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"cbmNAStatus",propertyValue:"Confirmed"},{propertyName:"approveReason",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"approvedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"approvedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.cbmNAStatus="Confirmed"}catch(o){m("fe_event_error_update_crack_confirmed_status",{errorMessage:o}),c(o),console.log(o),this.stateIsError=!0,this.stateErrorMessage=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`),u("IRONS",o)}},async updatePlannerCrackConfirmedStatus(e){var p,i,n;const r=y(),t=this.ApprovalData.CrackNAHeaders.find(s=>s.id===e),a={id:t.id,updateParams:[{keyValue:t.key,propertyParams:[{propertyName:"plannerCbmNAStatus",propertyValue:"Confirmed"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:r.user.EmployeeId,name:r.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:r.user.EmployeeId,name:r.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,a),t.plannerCbmNAStatus="Confirmed"}catch(s){m("fe_event_error_update_crack_confirmed_status_planner",{errorMessage:s}),c(s),console.log(s),this.stateIsError=!0,this.stateErrorMessage=h(((n=(i=(p=s==null?void 0:s.response)==null?void 0:p.data)==null?void 0:i.result)==null?void 0:n.message)??`${s}`),u("IRONS",s)}},async updateCBMConfirmedStatus(e,r){var i,n,s;const t=y(),a=this.ApprovalData.CBMHeaders.find(o=>o.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"cbmNAStatus",propertyValue:"Confirmed"},{propertyName:"approveReason",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"appSPVBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"appSPVDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.cbmNAStatus="Confirmed"}catch(o){m("fe_event_error_update_cbm_confirmed_status",{errorMessage:o}),c(o),console.log(o),this.stateIsError=!0,this.stateErrorMessage=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`),u("IRONS",o)}},async updatePlannerCBMConfirmedStatus(e,r){var i,n,s;const t=y(),a=this.ApprovalData.CBMHeaders.find(o=>o.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"plannerCbmNAStatus",propertyValue:"Confirmed"},{propertyName:"plannerApproveReason",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"appPlannerBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"appPlannerDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.plannerCbmNAStatus="Confirmed"}catch(o){m("fe_event_error_update_cbm_confirmed_status_planner",{errorMessage:o}),c(o),console.log(o),this.stateIsError=!0,this.stateErrorMessage=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`),u("IRONS",o)}},async updateDefectDeclineStatus(e,r){var i,n,s;const t=y(),a=this.ApprovalData.DefectNAHeaders.find(o=>o.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"cbmNAStatus",propertyValue:"Decline"},{propertyName:"declineReason",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"declineBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"declineDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.cbmNAStatus="Decline"}catch(o){c(o),console.log(o),this.stateIsError=!0,this.stateErrorMessage=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`),u("IRONS",o)}},async updatePlannerDefectDeclineStatus(e,r){const t=y(),a=this.ApprovalData.DefectNAHeaders.find(i=>i.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"plannerCbmNAStatus",propertyValue:"Decline"},{propertyName:"declineReason",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"declineBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"declineDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.plannerCbmNAStatus="Decline"}catch(i){c(i),console.log(i),this.stateIsError=!0,u("IRONS",i)}},async updateCrackDeclineStatus(e,r){var i,n,s;const t=y(),a=this.ApprovalData.CrackNAHeaders.find(o=>o.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"cbmNAStatus",propertyValue:"Decline"},{propertyName:"declineReason",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"declineBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"declineDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.cbmNAStatus="Decline"}catch(o){c(o),console.log(o),this.stateIsError=!0,this.stateErrorMessage=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`),u("IRONS",o)}},async updatePlannerCrackDeclineStatus(e,r){var i,n,s;const t=y(),a=this.ApprovalData.CrackNAHeaders.find(o=>o.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"plannerCbmNAStatus",propertyValue:"Decline"},{propertyName:"declineReason",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"declineBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"declineDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.plannerCbmNAStatus="Decline"}catch(o){c(o),console.log(o),this.stateIsError=!0,this.stateErrorMessage=h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`),u("IRONS",o)}},async setCrackData(e){const r=this.ApprovalData.CrackHeaders.find(a=>a.id===e),t=this.ApprovalData.CrackDetails.find(a=>a.defectHeaderId==e);if(t){this.setHeaderId(e),this.setDetailId(t.id),this.setSelectedDefectHeaderHistory(e),this.setSelectedDefectDetailHistory(e),this.stateDefectFormStatusSPV=r==null?void 0:r.status,this.stateHeaderStatus=r==null?void 0:r.status;const[a]=U(t.detail);this.stateCrackFormData=a,this.stateCrackFormData.setType(t.detail.type),await this.setReferencePhoto(t.detail.referenceSection,t.detail.referencePhoto);const p=await E(t.detail.images,void 0);return this.ImagesCrack.ImageInfos=p.ImageInfos,this.ImagesCrack.ImageBlobs=p.ImageBlobs,t.detail.type}},setCrackNewData(){var r;const e=this.ApprovalData.CrackDetails.find(t=>t.id===this.stateDetailId);e&&(e.detail.description=this.CrackFormData.Description.value,e.detail.plannedDuration=this.CrackFormData.PlannedDuration.value,e.detail.instruction=this.CrackFormData.Instruction.value,e.detail.priority=this.CrackFormData.Priority,e.detail.parts=JSON.stringify(this.CrackFormData.Parts),e.detail.labours=JSON.stringify(this.CrackFormData.Labours),e.detail.resources=JSON.stringify(this.CrackFormData.Resources.map(t=>t.value)),e.detail.symptoms=JSON.stringify(this.CrackFormData.Symptoms.map(t=>t.value)),e.detail.causes=JSON.stringify(this.CrackFormData.Causes.map(t=>t.value)),e.detail.previousCracks=JSON.stringify(this.CrackFormData.CrackLength),e.detail.images=JSON.stringify(((r=this.ImagesCrack)==null?void 0:r.ImageInfos)??[]))},createCrackDetail(){var p;const e=((p=this.ImagesCrack)==null?void 0:p.ImageInfos)??[],r=this.CrackFormData.Parts.map(i=>{const n=i.qty?String(parseFloat(i.qty)):i.qty;return{...i,qty:n}}),t=this.CrackFormData.Labours.map(i=>{const n=i.qty?String(parseFloat(i.qty)):i.qty,s=i.hireEach?String(parseFloat(i.hireEach)):i.hireEach;return{...i,qty:n,hireEach:s}}),a=this.CrackFormData.CrackLength.map(i=>{const n=i.currentCrack?String(parseFloat(i.currentCrack)):i.currentCrack;return{...i,currentCrack:n}});return{type:this.CrackFormData.Type,assetNumber:this.CrackFormData.AssetNumber,description:this.CrackFormData.Description.value,title:this.CrackFormData.Title,raisedBy:this.CrackFormData.RaisedBy,date:this.CrackFormData.Date,plannedDuration:String(parseFloat(this.CrackFormData.PlannedDuration.value)),instruction:this.CrackFormData.Instruction.value,priority:this.CrackFormData.Priority,parts:JSON.stringify(r),labours:JSON.stringify(t),resources:JSON.stringify(this.CrackFormData.Resources.map(i=>i.value)),symptoms:JSON.stringify(this.CrackFormData.Symptoms.map(i=>i.value)),causes:JSON.stringify(this.CrackFormData.Causes.map(i=>i.value)),images:JSON.stringify(e),previousCracks:JSON.stringify(a),referencePhoto:this.stateReferencePhoto.id,referenceSection:this.stateReferencePhoto.title,isComplete:this.CrackFormData.IsComplete,requirement:this.CrackFormData.DefectRequirement}},async updateCrackDetail(){var p,i,n;const e=y(),r=this.ApprovalData.CrackDetails.find(s=>s.id===this.stateDetailId),t=this.createCrackDetail(),a={id:this.DetailId,updateParams:[{keyValue:r.key,propertyParams:[{propertyName:"detail",propertyValue:JSON.stringify(t)},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:e.user.EmployeeId,name:e.user.Name}};try{this.stateIsError=!1;const s=await d.post(`${k}`,a);return s.data.statusError==400?(this.stateIsError=!0,s.data.result.message):""}catch(s){m("fe_event_error_update_crack_detail",{errorMessage:s}),c(s),console.log(s),this.stateIsError=!0;const o=h(((n=(i=(p=s==null?void 0:s.response)==null?void 0:p.data)==null?void 0:i.result)==null?void 0:n.message)??`${s}`);return u("IRONS",s),o}},async updateCrackFitter(e,r=""){var i,n,s;const t=this.ApprovalData.CrackDetails.find(o=>o.id===this.stateDetailId),a=this.createCrackDetail(),p={id:this.DetailId,updateParams:[{keyValue:t.key,propertyParams:[{propertyName:"detail",propertyValue:JSON.stringify(a)},{propertyName:"updatedBy",propertyValue:e},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:JSON.parse(e),userGroup:""};r&&(p.userGroup=r);try{this.stateIsError=!1;const o=await d.post(`${C}`,p);if(r)return;const l=this.ApprovalData.CrackHeaders.find(D=>D.id===this.stateHeaderId),N={id:this.HeaderId,updateParams:[{keyValue:l.key,propertyParams:[{propertyName:"workorder",propertyValue:l.workorder},{propertyName:"updatedBy",propertyValue:e},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:JSON.parse(e)};try{return this.stateIsError=!1,await d.post(`${f}`,N),o.data.result.message}catch(D){m("fe_event_error_update_crack_fitter",{errorMessage:D}),c(D),this.stateIsError=!0;const g=D.response.data.result.message;return u("IRONS",D),g}}catch(o){return c(o),this.stateIsError=!0,h(((s=(n=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:n.result)==null?void 0:s.message)??`${o}`)}},async updateCrackAcknowledge(){const e=y(),r=this.ApprovalData.CrackHeaders.find(a=>a.id===this.stateHeaderId),t={id:r.id,updateParams:[{keyValue:r.key,propertyParams:[{propertyName:"status",propertyValue:"Acknowledge"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"},{propertyName:"approvedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"approvedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:e.user.EmployeeId,name:e.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,t),r.status="Acknowledge"}catch(a){m("fe_event_error_acknowledge_crack",{errorMessage:a}),c(a),console.log(a),this.stateIsError=!0,u("IRONS",a)}},async updatePlannerCrackAcknowledge(){const e=y(),r=this.ApprovalData.CrackHeaders.find(a=>a.id===this.stateHeaderId),t={id:r.id,updateParams:[{keyValue:r.key,propertyParams:[{propertyName:"plannerStatus",propertyValue:"Acknowledge"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:e.user.EmployeeId,name:e.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,t),r.plannerStatus="Acknowledge"}catch(a){m("fe_event_error_acknowledge_crack_planner",{errorMessage:a}),c(a),console.log(a),this.stateIsError=!0,u("IRONS",a)}},async updateCrackMO(e,r){const t=y(),a=this.ApprovalData.CrackHeaders.find(i=>i.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"defectWorkorder",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.defectWorkorder=r}catch(i){m("fe_event_error_update_crack_mo",{errorMessage:i}),c(i),console.log(i),this.stateIsError=!0,u("IRONS",i)}},async updateCrackRepairedStatus(e,r){const t=y(),a=this.ApprovalData.CrackHeaders.find(i=>i.id===e),p={id:a.id,updateParams:[{keyValue:a.key,propertyParams:[{propertyName:"repairedStatus",propertyValue:r},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:t.user.EmployeeId,name:t.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:t.user.EmployeeId,name:t.user.Name},userGroup:this.stateCurrentUserGroup};try{this.stateIsError=!1,await d.post(`${f}`,p),a.repairedStatus=r}catch(i){m("fe_event_error_update_crack_repaired_status",{errorMessage:i}),c(i),console.log(i),this.stateIsError=!0,u("IRONS",i)}},async getReferencePhoto(e){const r={id:e,ver:"v1"};try{const p=(await d.getBlob("https://digital-bumaau-dev-apm-001.azure-api.net/utility/api/master_attachment/download_by_id","",new URLSearchParams(r).toString())).data,i=new Blob([p]),n=window.URL||window.webkitURL,s=await createImageBitmap(i);return this.stateReferencePhoto.dimension={height:s.height,width:s.width},n.createObjectURL(i)}catch(t){return m("fe_event_error_get_crack_reference_photo",{errorMessage:t}),console.log(t),u("IRONS",t),""}},async setReferencePhoto(e,r){this.stateReferencePhoto.title=e,this.stateReferencePhoto.blob=await this.getReferencePhoto(r),this.stateReferencePhoto.id=r},reset(){this.stateLoading=!1,this.stateData=new v,this.stateDefectFormData=new H,this.stateCrackFormData=new V,this.stateIsError=!1,this.stateHeaderId="",this.stateDetailId="",this.stateDefectFetched=!1,this.stateHeaderStatus="",this.stateLoadDefectImages=!1,this.stateReferencePhoto={title:"",blob:"",id:"",dimension:{}},this.stateDefectKey=1},updateHeaderDefect(e){const r=this.ApprovalData.DefectHeaders.find(t=>t.id===e);this.stateHeaderStatus=I.isUndefined(r.plannerStatus)?"":r.plannerStatus},updateHeaderGenericDefect(e){const r=this.ApprovalData.DefectGenericHeaders.find(t=>t.id===e);this.stateHeaderStatus=I.isUndefined(r.plannerStatus)?"":r.plannerStatus},updateHeaderDefectSMU(e){const r=this.ApprovalData.SMUDefectHeaders.find(t=>t.id===e);this.stateHeaderStatus=I.isUndefined(r.plannerStatus)?"":r.plannerStatus},updateHeaderCrack(e){const r=this.ApprovalData.CrackHeaders.find(t=>t.id===e);this.stateHeaderStatus=I.isUndefined(r.plannerStatus)?"":r.plannerStatus}}});export{ie as u};

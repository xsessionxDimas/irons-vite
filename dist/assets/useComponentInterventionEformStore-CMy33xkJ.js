import{a as I,c as n,s as d,f as k}from"./index-BuVmIl8K.js";import{a as f,c as N,d as _,e as D,b as O,f as b,P as v,g as P,U as V,h as E,i as F}from"./urls-RITu66bD.js";import{d as G}from"./pinia-BjOS2_Ao.js";import{u as m}from"./authentication-handler-Pueb_EI7.js";import{e as u,_ as U}from"./lodash-DrHMlsdo.js";import{x as L,y as $,z as M}from"./helpers-wUOLw-dU.js";import{i as R,p as C}from"./date-format-8-IvfSl3.js";import{a as H}from"./element-plus-BeWdvTRa.js";import{S}from"./number-format-BdMuQVyW.js";import{C as B}from"./urls-hWHEBXep.js";import{C as x}from"./urls-D8F5Tyyp.js";import{s as A}from"./string-to-imageinfo-converter-Cdr1iOkP.js";const q="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention",oe="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention/update_task_with_defect",ie="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention_defect_detail/get_data_by_param/",W="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention_defect_header/get_data_list_by_param?ver=v1",ne="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention_defect_detail/get_data_list_by_param?ver=v1",pe="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention_defect_header/update?ver=v1",le="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention_defect_detail/update?ver=v1",de=`${q}/get_field_value`,me="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/intervention_defect_header/get_intervention_defect_header",w=G({id:"GeneralComponentInterventionFormStore",state:()=>({statePayload:{},stateUpdateParams:{},statePropertyParams:{},stateGeneralUpdated:!1,stateGeneralForm:{},initPreriskImages:[],stateSMUTolerance:{},stateSMUToleranceNotMapped:!1,stateIsSmuCameraDisabled:!1,stateIsRiskAssesmentPhotoTaken:!1,stateSelectedFitterShift:{},stateTimeStamp:"",stateShiftList:[],stateTimeZone:"+10.00",stateTimeZoneDesc:"AEST",stateIsSelectedFitterAlreadyLoggedIn:!1,stateFitterInfo:{},stateIsFitterLoggedInExist:!1,statePersoneelHistory:[]}),getters:{payload:e=>e.statePayload,generalUpdated:e=>e.stateGeneralUpdated,generalForm:e=>e.stateGeneralForm,smuTolerance:e=>e.stateSMUTolerance,SMUToleranceNotMapped:e=>e.stateSMUToleranceNotMapped,IsRiskAssesmentPhotoTaken:e=>e.stateIsRiskAssesmentPhotoTaken,IsSelectedFitterAlreadyLoggedIn:e=>e.stateIsSelectedFitterAlreadyLoggedIn,FitterInfo:e=>e.stateFitterInfo,IsFitterLoggedInExist:e=>e.stateIsFitterLoggedInExist,PersoneelHistory:e=>e.statePersoneelHistory},actions:{setPersoneelHistory(e){const t={...e};this.statePersoneelHistory.length==0?(t.isChecked=!1,this.statePersoneelHistory.push(t)):this.statePersoneelHistory.findIndex(r=>r.id==e.id)<0&&(t.isChecked=!1,this.statePersoneelHistory.push(t))},setPersoneelHistoryChecked(e,t){if(this.statePersoneelHistory.length>0){const a=this.statePersoneelHistory.findIndex(r=>r.id==e.id);a>=0&&(this.statePersoneelHistory[a].isChecked=t)}},setIsFitterLoggedInExist(e){this.stateIsFitterLoggedInExist=e},setFitterInfo(e){this.stateFitterInfo=u.cloneDeep(e)},setFitterInfoFitter(e,t,a){this.stateFitterInfo.employee={id:e.value,name:e.label},this.stateFitterInfo.timeLoggedIn=t,this.stateFitterInfo.shift=a},setFitterInfoIsIHaveReadChecked(e){this.stateFitterInfo.isIHaveReadChecked=e},setFitterInfoRiskPhotos(e){u.isUndefined(this.stateFitterInfo.riskPhotos)&&(this.stateFitterInfo.riskPhotos=[]),this.stateFitterInfo.riskPhotos=[...A(this.stateFitterInfo.riskPhotos),...e],this.stateIsFitterLoggedInExist&&this.setGeneralFitterInfoToIndexedDB()},deleteFitterInfoRiskPhotos(e){this.stateFitterInfo.riskPhotos=A(this.stateFitterInfo.riskPhotos),this.stateFitterInfo.riskPhotos=this.stateFitterInfo.riskPhotos.filter(t=>e!=t.filename),this.setGeneralFitterInfoToIndexedDB()},async setGeneralFitterInfoToIndexedDB(){const e=this.generalForm.log?u.cloneDeep(this.generalForm.log):[],t=e.findIndex(i=>i.employee.id==this.stateFitterInfo.employee.id);this.stateFitterInfo.isIHaveReadChecked=!0,t>=0?e[t]=this.stateFitterInfo:e.push(this.stateFitterInfo);const a=I(),r={id:this.generalForm.id,updateParams:[{keyValue:this.generalForm.key,propertyParams:[{propertyName:"log",propertyValue:JSON.stringify(e)}]}],employee:{id:a.user.EmployeeId,name:a.user.Name}},s={ver:"v1"};try{await n.post(`${f}?${new URLSearchParams(s).toString()}`,r)}catch(i){d("IRONS",i),console.log("update log",i)}},async deleteGeneralFitterInfoFromIndexedDB(){try{this.stateIsFitterLoggedInExist=!1,this.stateFitterInfo={}}catch(e){console.log("error at indexeddb",e)}},setServiceStart(){const t=`${R()}`;this.addPropertyParam("GENERAL","serviceStart",t),this.stateGeneralForm.serviceStart=t},setIsSelectedFitterAlreadyLoggedIn(e){this.stateIsSelectedFitterAlreadyLoggedIn=e},setPayloadId(e,t,a){this.statePayload.id=e,this.statePayload.updateParams=[],this.statePayload.employee={},this.statePayload.employee.id=t,this.statePayload.employee.name=a},addPropertyParam(e,t,a){const r=this.statePayload.updateParams.find(i=>i.keyValue===e);if(r)this.stateUpdateParams=r;else{const i={keyValue:e,propertyParams:[]};this.statePayload.updateParams.push(i),this.stateUpdateParams=i}const s=this.stateUpdateParams.propertyParams.find(i=>i.propertyName===t);if(s){s.propertyValue=a;return}this.stateUpdateParams.propertyParams.push({propertyName:t,propertyValue:a})},addUpdatedByAndDate(e,t){const a={id:e,name:t};this.addPropertyParam("GENERAL","updatedBy",JSON.stringify(a)),this.addPropertyParam("GENERAL","updatedDate","<<ServerDateTime>>"),this.addPropertyParam("GENERAL","interventionExecution","On Progress")},addStatusHistory(e){const t=this.generalForm.statusHistory?u.cloneDeep(this.generalForm.statusHistory):[];t.push({status:e,updatedBy:this.FitterInfo.employee,updatedDate:"<<ServerDateTime>>",tsUpdatedDate:"<<ServerTimeStamp>>"}),this.addPropertyParam("GENERAL","statusHistory",JSON.stringify(t))},async updateGeneralForm(){const e={ver:"v1"};this.statePayload.id=this.generalForm.id;const t=K(),a=t.groups;let r=!0;a.forEach(o=>{o.doneTask<o.totalTask&&(r=!1)});const s=I(),i={id:s.user.EmployeeId,name:s.user.Name};if(t.generalForm.riskAssesment[0].value.length>0&&this.addPropertyParam(this.generalForm.riskAssesment[0].key,"value",JSON.stringify(t.generalForm.riskAssesment[0].value)),this.generalForm.imageEquipment&&this.generalForm.imageEquipment.length>0&&this.addPropertyParam("GENERAL","imageEquipment",JSON.stringify(this.generalForm.imageEquipment)),this.addPropertyParam("GENERAL","supervisor",JSON.stringify(i)),this.addStatusHistory("On Progress"),this.setGeneralFitterInfoToIndexedDB(),r){const o=await this.getServiceSheetHeaderKeyValue("interventionExecution");if(o.toString().toLowerCase()=="open"||o.toString().toLowerCase()=="on progress")try{return this.statePayload.updateParams[0].keyValue=this.generalForm.key,await n.post(`${f}?${new URLSearchParams(e).toString()}`,this.statePayload),this.stateGeneralUpdated=!0,this.stateGeneralForm.interventionExecution="On Progress",!1}catch(l){d("IRONS",l),m(l),console.log(l)}else return!0}else try{return this.statePayload.updateParams[0].keyValue=this.generalForm.key,await n.post(`${f}?${new URLSearchParams(e).toString()}`,this.statePayload),this.stateGeneralUpdated=!0,this.stateGeneralForm.interventionExecution="On Progress",this.setGeneralFitterInfoToIndexedDB(),!1}catch(o){m(o),d("IRONS",o),console.log(o)}},resetGeneral(){this.stateGeneralUpdated=!1,this.statePersoneelHistory=[]},checkHmOffset(e){switch(e.hmOffset){case void 0:this.stateGeneralForm.hmOffset="Not Applicable";break;case"":this.stateGeneralForm.hmOffset="0";break}},setGeneralForm(e){this.stateIsRiskAssesmentPhotoTaken=!1,this.stateIsSmuCameraDisabled=!1,console.log(e),this.stateGeneralForm=e,this.checkHmOffset(e),u.isUndefined(e)||u.isUndefined(e.riskAssesment)||u.isUndefined(e.riskAssesment[0].value)||(this.initPreriskImages=u.cloneDeep(e.riskAssesment[0].value));try{this.generalForm.imageEquipment&&(this.stateIsSmuCameraDisabled=!0)}catch(t){console.log(t)}},async getServiceSheetHeaderKeyVal(e){const t={id:this.generalForm.id,keyValue:this.generalForm.key,propertyName:e},a={ver:"v1"},r=H.service({lock:!0,text:"Check SMU Value",background:"rgba(0, 0, 0, 0.7)"});try{const s=await n.post(`${N}?${new URLSearchParams(a).toString()}`,t);return r.close(),s.data.result.content!=""?s.data.result.content:""}catch(s){return m(s),console.log(s),d("IRONS",s),r.close(),""}},async getServiceSheetHeaderKeyValue(e){const t={id:this.generalForm.id,keyValue:this.generalForm.key,propertyName:e},a={ver:"v1"};try{return(await n.post(`${N}?${new URLSearchParams(a).toString()}`,t)).data.result.content}catch(r){return m(r),d("IRONS",r),console.log(r),"error"}},async UpdateServiceEndMechanic(e){const t={ver:"v1"},a=this.statePayload.updateParams[0].propertyParams.filter(s=>s.propertyName=="updatedBy"||s.propertyName=="updatedDate"),r={id:this.payload.id,updateParams:[{keyValue:this.generalForm.key,propertyParams:[e,...a]}],employee:this.payload.employee};try{await n.post(`${f}?${new URLSearchParams(t).toString()}`,r),this.stateGeneralUpdated=!0}catch(s){m(s),d("IRONS",s),console.log(s)}},async getSMUTolerance(){this.stateSMUToleranceNotMapped=!1;const e={Parameter:"",ParameterTo:"",ValueMin:"",ValueMinTo:"",ValueMax:"",ValueMaxTo:"",Uom:"",UomTo:"",StartDate:"",StartDateTo:"",EndDate:"",EndDateTo:"",Page:"1",PageSize:"1",Order:"",ver:"v1"},t=()=>{this.stateSMUTolerance={min:0,max:0},this.stateSMUToleranceNotMapped=!0,console.log("SMU tolerance not mapped on ADM")};try{const r=(await n.get(B,"",new URLSearchParams(e).toString())).data.result.content[0];u.isUndefined(r)?t():r.isActive?this.stateSMUTolerance={min:Number(r.valueMin),max:Number(r.valueMax)}:t()}catch(a){m(a),d("IRONS",a),t()}},async getServerTimestamp(e){const t={ver:"v1"};try{if(e){const a=await n.get(_,"",new URLSearchParams(t).toString());this.stateTimeStamp=a.data.result.content}else this.stateTimeStamp=R()}catch(a){d("IRONS",a),m(a)}},getShift(e){return this.stateShiftList.find(a=>a.shift==e)??{}},updateSMUImages(e){let t=[];this.generalForm.imageEquipment&&(t=this.generalForm.imageEquipment),t=[...t,...e],this.stateGeneralForm.imageEquipment=t},deleteSMUPic(e){let t=this.generalForm.imageEquipment;t=t.filter(a=>a!=e),this.generalForm.imageEquipment=t},toggleChangeIsRiskAssesmentPhotoTaken(e){this.stateIsRiskAssesmentPhotoTaken=e},updateSMUONGeneral(e){this.generalForm.interventionSMU=e},async getShiftListData(){const e={Shift:"",StartHour:"",StartHourType:"",EndHour:"",EndHourType:"",StartDate:"",EndDate:"",ver:"v1",Page:"1",PageSize:"999",Order:""};try{this.stateTimeZone="AEST",this.stateTimeZoneDesc="+10.00";const a=(await n.get(x,"",new URLSearchParams(e).toString())).data.result.content;await k.shift.clear(),await k.shift.bulkAdd(a),this.stateShiftList=a}catch(t){m(t),d("IRONS",t),console.log(t)}},async setShiftListLocal(){this.stateShiftList=await k.shift.toArray()}}}),K=G({id:"componentInterventionEformStore",state:()=>({stateInterventionId:"",stateEquipment:"",stateSapWorkOrder:"",stateModelUnit:"",stateSampleStatus:"",statecomponentDescription:"",stateServiceSheets:{},stateGroups:[],stateIsSet:!1,stateEmployee:{},stateSelectedGroup:void 0,stateTaskUpdated:void 0,stateFormAlreadySubmitted:!1,stateTaskAlreadyUpdated:!1,stateIsFormSelectedByOtherSupervisor:!1,stateMeasurementValue:"",stateImageKey:"",stateUOM:"",stateRatingNotMapped:!1,stateCBMFormulas:"",stateWorkOrder:"",stateShift:"",stateServiceStart:"",stateErrorMessage:"",stateSerialNumber:""}),getters:{selectedGroup:e=>e.stateSelectedGroup,groups:e=>e.stateGroups,isSet:e=>e.stateIsSet,employee:e=>e.stateEmployee,intervention:e=>e.stateServiceSheets,generalForm:e=>U.omit(e.stateServiceSheets,"details"),details:e=>e.stateServiceSheets&&e.stateServiceSheets.details,formAlreadySubmitted:e=>e.stateFormAlreadySubmitted,serviceStart:e=>e.stateServiceStart,shift:e=>e.stateShift,taskUpdated:e=>e.stateTaskUpdated,taskAlreadyUpdated:e=>e.stateTaskAlreadyUpdated,ratingNotMapped:e=>e.stateRatingNotMapped,allCustomValidationRequiredDone:e=>{const t=[];e.stateServiceSheets.details&&e.stateServiceSheets.details.forEach(r=>{r.tasks.forEach(s=>{s.tasks.forEach(i=>{i.items.forEach(o=>{o.customValidation&&o.customValidation=="Required"&&t.push(o.value)})})})});let a=!0;return t.length>0&&(a=t.filter(s=>{if(!s)return!0}).length==0),a},isAllTaskDone:e=>{let t=!0;return e.stateGroups.forEach((a,r)=>{r!=0&&t&&a.totalTask!=a.doneTask&&(t=!1)}),t},errorMessage:e=>e.stateErrorMessage,percentageTaskProgressAllTab:e=>{let t=0,a=0;return e.stateGroups.forEach(r=>{console.log(r),a=a+r.doneTask,t=t+r.totalTask}),t==0?100:u.floor(a/t*100)},SerialNumber:e=>e.stateSerialNumber},actions:{toggleFormAlreadySubmitted(e){this.stateFormAlreadySubmitted=e},toggleFormUpdated(e){this.stateTaskUpdated=e},setMeasurementValueAndUOM(e,t,a){this.stateMeasurementValue=e,this.stateUOM=t,this.stateImageKey=a},setComponentInterventionHeader(e,t,a,r,s,i){this.stateInterventionId=e,this.stateEquipment=t,this.stateSapWorkOrder=a,this.stateModelUnit=r,this.stateSampleStatus=s,this.statecomponentDescription=i},setSelectedGroup(e){this.stateGroups.forEach(t=>{t.key===e?t.isSelected=!0:t.isSelected=!1}),this.stateSelectedGroup=this.stateGroups.find(t=>t.isSelected)},getGroups(e=!1){const t=[{groupSeq:1,isSelected:!0,name:"General",group:"General",totalTask:0,doneTask:0,tasks:null,key:"0"}];let a=0;this.stateServiceSheets&&this.stateServiceSheets.details&&(a=this.stateServiceSheets.details.length,this.stateServiceSheets.details.forEach((r,s)=>{t.push({key:r.key,group:r.group,tasks:r.tasks,name:r.group,groupSeq:s+2,isSelected:!1,totalTask:0,doneTask:0})})),e&&t.push({groupSeq:1+a+1,isSelected:!1,name:"Defect Identified",group:"Defect Identified",totalTask:0,doneTask:0,tasks:null,key:"Defect Identified"}),this.stateGroups=t},async getTaskProgress(){const e={ver:"v1",id:this.generalForm.id};try{const a=(await n.get(`${D}`,"",new URLSearchParams(e).toString())).data.result.content;this.stateGroups[1].doneTask=a.doneTask,this.stateGroups[1].totalTask=a.totalTask}catch(t){d("IRONS",t),console.log(t)}},changeIsFormSelectedByOtherSupervisor(e){this.stateIsFormSelectedByOtherSupervisor=e},async getInterventionData(e=""){const t={ver:"v1",keyPbi:this.stateInterventionId||e},a=await n.get(`${O}?${new URLSearchParams(t).toString()}`);if(a.data.result.message=="Cannot Access With Different Supervisor")return this.changeIsFormSelectedByOtherSupervisor(!0),!1;this.stateServiceSheets=a.data.result.content},async getInterventionDataCosmos(e=""){const t={id:this.stateInterventionId||e},a={ver:"v1"},r=await n.post(`${b}?${new URLSearchParams(a).toString()}`,t);if(r.data.result.message=="Cannot Access With Different Supervisor")return this.changeIsFormSelectedByOtherSupervisor(!0),!1;this.stateServiceSheets=r.data.result.content,await k.interventionDetailView.put(r.data.result.content)},async postGenerateServiceSheet(e,t=!1,a=!1){e&&(t&&!a?await this.getInterventionDataCosmos():await this.getInterventionData());try{const r=w();this.stateServiceSheets.imageEquipment||(this.stateServiceSheets.imageEquipment=[]);const s=U.omit(this.stateServiceSheets,"details");return r.setGeneralForm(s),this.getGroups(t),this.getTaskProgress(),this.stateSelectedGroup=this.stateGroups[0],this.stateIsSet=!0,!0}catch(r){try{return m(r),console.log(r),!1}catch(s){this.stateErrorMessage=s,console.log("error",s)}}},updateSelectedFitter(e){this.stateEmployee=e},resetMechanic(){this.stateEmployee={},this.stateServiceStart="",this.stateShift=""},updateGeneralValue(e,t){this.stateServiceSheets[e]=t},updateServiceStart(e){const t=w();this.stateServiceStart=e,this.stateShift=C(t.stateTimeZone)},async updateRiskAssesment(e){let t=this.generalForm.riskAssesment&&this.generalForm.riskAssesment[0].value||"";t==""&&(t=[]),Array.isArray(t)?t=[...t,...e]:(t=[],t=[...t,...e]),this.stateServiceSheets.riskAssesment[0].value=t,await this.updatePreRiskAssesmentToBE()},async deleteRisAssesmentPic(e){let t=this.generalForm.riskAssesment[0].value;t=t.filter(a=>a.image!=e),this.stateServiceSheets.riskAssesment[0].value=t,await this.updatePreRiskAssesmentToBE()},async updatePreRiskAssesmentToBE(){const e={id:this.generalForm.id,updateParams:[{keyValue:this.generalForm.riskAssesment[0].key,propertyParams:[{propertyName:"value",propertyValue:JSON.stringify(this.generalForm.riskAssesment[0].value)}]}],employee:this.stateEmployee},t={ver:"v1"};try{await n.post(`${f}?${new URLSearchParams(t).toString()}`,e)}catch(a){m(a),d("IRONS",a),console.log(a),console.log("upload risk Assesment",a)}},async setShowNextPage(){const e={ver:"v1",id:this.generalForm.id};let t=!1;try{const r=(await n.get(`${D}`,"",new URLSearchParams(e).toString())).data.result.content;r.doneTask==r.totalTask&&(t=!0)}catch(a){m(a),d("IRONS",a),console.log(a),t=!1}if(t)if(await this.checkInterventionStatus()=="Submited")this.stateFormAlreadySubmitted=!0;else return!0;else return!1},setTaskUpdated(){this.stateTaskUpdated=!0},resetTaskUpdated(){this.stateTaskUpdated=void 0},async updateServiceSheetTaskValue(e,t,a,r=!0){let s=!1;const i={ver:"v1"};try{const o=this.groups.find(y=>y.isSelected),l={id:this.generalForm.id,headerId:this.generalForm.id,workOrder:this.generalForm.sapWorkOrder,updateParams:e,employee:{id:this.employee.id,name:this.employee.name}};this.stateTaskUpdated=!1;const p=await n.post(`${v}?${new URLSearchParams(i).toString()}`,l);p.data.result.message==S.SUBMITTED&&(this.stateFormAlreadySubmitted=!0),p.data.result.message==S.TASK_UPDATED_BY_OTHER&&(this.stateTaskAlreadyUpdated=!0),this.getTaskProgress(),this.updateGroupByParam(o==null?void 0:o.name),s=!0,this.setTaskUpdated()}catch(o){m(o),d("IRONS",o),console.log(o)}return this.stateTaskUpdated=!0,s},async updateGroupByParam(e){if(e!=="General")try{const t={id:this.generalForm.id,key:this.generalForm.key,propertyName:"details"},a={ver:"v1"},r=await n.post(`${P}?${new URLSearchParams(a).toString()}`,t);this.stateServiceSheets.details=r.data.result.content}catch(t){m(t),d("IRONS",t),console.log(t)}},async getCBMResult(e,t){let a,r="";e.items.forEach(i=>{i.categoryItemType=="dropdownTool"&&(r=i.value)});const s=this.stateCBMFormulas.filter(i=>{const o=`${i.taskNumber}${i.detailNumber?i.detailNumber:""}`;if(typeof e.items[0].value=="string")if(t.categoryItemType=="paramRatingDynamic"){const l=o==e.items[0].value||o==e.items[0].value.substring(0,e.items[0].value.length-1),p=i.cbmType==r;return l&&p}else return o==e.items[0].value||o==e.items[0].value.substring(0,e.items[0].value.length-1)});if(s.length>0)if(s.every(i=>{const o=L(i,t.value),l=$(i,t.value);return a=M(o,l,i),console.log("checkMin",o,"checkMax",l,"formula",i),!a}),a){const i=e.items.find(o=>o.categoryItemType=="targetRating");if(a=="C"||a=="X"){const o=I(),l={ver:"v1"},p=`${e.description.split(";")[0]};${e.description.split(";")[1]}`,y={updateParams:[{keyValue:e.key,propertyParams:[{propertyName:"taskValue",propertyValue:a},{propertyName:"updatedBy",propertyValue:JSON.stringify(this.employee)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],headerId:this.generalForm.id,workOrder:this.generalForm.sapWorkOrder,id:this.generalForm.id,employee:this.employee,defectHeader:{workorder:this.generalForm.sapWorkOrder,form:this.generalForm.equipmentDesc,serviceSheetDetailId:"",interventionId:this.generalForm.id,category:e.category,taskId:e.key,taskNo:p,taskDesc:e.items[2].value,defectWorkorder:"",formDefect:"",defectType:"",cbmMeasurement:this.stateMeasurementValue,cbmUom:this.stateUOM,cbmImageKey:this.stateImageKey,cbmImageProp:"value",isCbmAdjusment:"false",taskValue:a,repairedStatus:"Not-Repaired",cbmNAStatus:"Not-Confirm",supervisor:{id:o.user.EmployeeId,name:o.user.Name},status:"Submit"}},h=await n.post(`${V}?${new URLSearchParams(l).toString()}`,y);if(h.data.result.message==S.TASK_UPDATED_BY_OTHER)return this.stateTaskAlreadyUpdated=!0,{value:"",status:!1};if(h.data.result.message==S.SUBMITTED)return this.stateFormAlreadySubmitted=!0,{value:"",status:!1};const c=[{keyValue:i.key,propertyParams:[{propertyName:"value",propertyValue:a},{propertyName:"updatedBy",propertyValue:JSON.stringify(this.employee)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}];return this.updateItemServiceSheetDetail(c),this.stateMeasurementValue="",this.stateUOM="",this.stateImageKey="",{value:a,status:!0}}else{i.value=a;const o=[{keyValue:i.key,propertyParams:[{propertyName:"value",propertyValue:a},{propertyName:"updatedBy",propertyValue:JSON.stringify(this.employee)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]},{keyValue:e.key,propertyParams:[{propertyName:"taskValue",propertyValue:a},{propertyName:"updatedBy",propertyValue:JSON.stringify(this.employee)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}];await this.updateServiceSheetTaskValue(o,this.employee.id.toString(),this.employee.name,!1)}return{value:"",status:!0}}else return await this.deleteExisitingDefectCBMAuto(e),{value:"",status:!0};else return this.stateRatingNotMapped=!0,console.log("rating CBM for this task is not mapped on ADM"),{value:"",status:!1}},async deleteExisitingDefectCBMAuto(e){const t={ver:"v1"};let a={};const r={keyValue:e.key,propertyParams:[{propertyName:"value",propertyValue:""},{propertyName:"updatedBy",propertyValue:""},{propertyName:"updatedDate",propertyValue:""}]};e.items.forEach(async o=>{if(o.categoryItemType=="targetRating"){if(a={keyValue:o.key,propertyParams:[{propertyName:"value",propertyValue:""},{propertyName:"updatedBy",propertyValue:""},{propertyName:"updatedDate",propertyValue:""}]},o.value=="C"||o.value=="X"){const l={taskId:e.key,workorder:this.stateWorkOrder},y=(await n.post(`${E}?${new URLSearchParams(t).toString()}`,l)).data.result.content,h={id:y.id,updateParams:[{keyValue:y.key,propertyParams:[{propertyName:"isActive",propertyValue:"false"}]}],employee:this.employee};try{await n.post(`${F}?${new URLSearchParams(t).toString()}`,h)}catch(c){m(c),d("IRONS",c),console.log(c)}}o.value=""}});const s=[a,r],i={headerId:this.generalForm.id,workorder:this.generalForm.sapWorkOrder,id:this.generalForm.id,updateParams:s,employee:this.employee};try{await n.post(`${v}?${new URLSearchParams(t).toString()}`,i)}catch(o){m(o),d("IRONS",o),console.log(o)}},async getEhmsRating(){const e={ver:"v1"};try{const t=await n.get("",new URLSearchParams(e).toString());this.stateCBMFormulas=t.data.result.content[0].detail}catch(t){m(t),d("IRONS",t),console.log(t)}},async getValueFromItemKey(e){const t={keyValue:e,propertyName:"value"},a={ver:"v1"};let r="";const s=await n.post(`${P}?${new URLSearchParams(a).toString()}`,t);return u.isUndefined(s.data.result.content)||(r=s.data.result.content),r},async checkInterventionStatus(){const e={id:this.generalForm.id,key:this.generalForm.key,propertyName:"interventionExecution"},t={ver:"v1"};return(await n.post(`${P}?${new URLSearchParams(t).toString()}`,e)).data.result.content},async updateItemServiceSheetDetail(e){const t={ver:"v1"},a={headerId:this.generalForm.id,workorder:this.generalForm.sapWorkOrder,id:this.generalForm.id,updateParams:e,employee:{id:this.employee.id,name:this.employee.name}};try{await n.post(`${v}?${new URLSearchParams(t).toString()}`,a)}catch(r){m(r),d("IRONS",r),console.log(r),console.log("error update item",r)}},async submitEform(){const e={ver:"v1"};let t=!1;const a={interventionId:this.generalForm.id};(await n.post(`${W}`,a)).data.result.content.length>0&&(t=!0);const s=[{propertyName:"interventionExecution",propertyValue:t?"Submited":"Close"},{propertyName:"updatedBy",propertyValue:JSON.stringify(this.employee)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}],i=this.generalForm.statusHistory?u.cloneDeep(this.generalForm.statusHistory):[];i.push({status:t?"Submited":"Close",updatedBy:this.employee,updatedDate:"<<ServerDateTime>>",tsUpdatedDate:"<<ServerTimeStamp>>"}),s.push({propertyName:"statusHistory",propertyValue:JSON.stringify(i)});const o={id:this.generalForm.id,updateParams:[{keyValue:this.generalForm.key,propertyParams:s}],employee:this.employee};try{return await n.post(`${f}?${new URLSearchParams(e).toString()}`,o),!0}catch(l){return d("IRONS",l),console.log(l),!1}},async updateDefect(e,t,a){const r=I(),s={ver:"v1"},i=`${e.description.split(";")[0]};${e.description.split(";")[1]}`,o={updateParams:[{keyValue:e.key,propertyParams:[{propertyName:"taskValue",propertyValue:t},{propertyName:"updatedBy",propertyValue:JSON.stringify(this.employee)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],headerId:this.generalForm.id,workorder:this.generalForm.sapWorkOrder,id:this.generalForm.id,employee:this.employee,defectHeader:{workorder:this.generalForm.sapWorkOrder,form:this.generalForm.equipmentDesc,serviceSheetDetailId:"",interventionId:this.generalForm.id,category:e.category,taskId:e.key,taskNo:i,taskDesc:e.items[2].value,defectWorkorder:"",formDefect:"",defectType:"",cbmMeasurement:this.stateMeasurementValue,cbmUom:this.stateUOM,cbmImageKey:this.stateImageKey,cbmImageProp:"value",isCbmAdjusment:"false",taskValue:t,repairedStatus:"Not-Repaired",cbmNAStatus:"Not-Confirm",supervisor:{id:r.user.EmployeeId,name:r.user.Name},status:"Submit"}};try{const l=await n.post(`${V}?${new URLSearchParams(s).toString()}`,o);if(l.data.result.message==S.SUBMITTED)return this.stateFormAlreadySubmitted=!0,!1;if(l.data.result.message==S.TASK_UPDATED_BY_OTHER)return this.stateTaskAlreadyUpdated=!0,!1;this.stateMeasurementValue="",this.stateUOM="",this.stateImageKey="",await this.deleteDefect(e);let p={},y={};a.categoryItemType=="resultRating"&&(y={keyValue:e.key,propertyParams:[{propertyName:"taskNormalValue",propertyValue:""}]},e.items.forEach(g=>{g.categoryItemType=="resultStatus"&&(p={keyValue:g.key,propertyParams:[{propertyName:"value",propertyValue:""},{propertyName:"updatedBy",propertyValue:""},{propertyName:"updatedDate",propertyValue:""}]})}));const h=[{keyValue:a.key,propertyParams:[{propertyName:"value",propertyValue:t},{propertyName:"updatedBy",propertyValue:JSON.stringify(this.employee)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}];a.categoryItemType=="resultRating"&&(h.push(p),h.push(y)),await this.updateItemServiceSheetDetail(h);const c=this.groups.find(g=>g.isSelected);return this.getTaskProgress(),this.updateGroupByParam(c==null?void 0:c.name),!0}catch(l){return m(l),d("IRONS",l),console.log(l),!1}},toggleNotMapped(e){this.stateRatingNotMapped=e},toggleTaskAlreadyUpdatedStatus(e){this.stateTaskAlreadyUpdated=e},handleGetUomFromSelectedTool(e,t){const a=this.stateCBMFormulas.filter(s=>{const i=`${s.taskNumber}${s.detailNumber?s.detailNumber:""}`;if(typeof e.items[0].value=="string")return i==e.items[0].value||i==e.items[0].value.substring(0,e.items[0].value.length-1)});let r="";return a.forEach(s=>{s.cbmType==t&&(r=s.uom)}),r},async updateToolUom(e,t){const a=this.handleGetUomFromSelectedTool(e,t.value);let r={};e.items.forEach(p=>{p.categoryItemType=="targetTool"&&(p.value=a,r={keyValue:p.key,propertyParams:[{propertyName:"value",propertyValue:a},{propertyName:"updatedBy",propertyValue:JSON.stringify(this.employee)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]})});const s={keyValue:t.key,propertyParams:[{propertyName:"value",propertyValue:t.value},{propertyName:"updatedBy",propertyValue:JSON.stringify(this.employee)},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]},i=[r,s],o={ver:"v1"},l={headerId:this.generalForm.id,workorder:this.generalForm.sapWorkOrder,id:this.generalForm.id,updateParams:i,employee:this.employee};try{await n.post(`${v}?${new URLSearchParams(o).toString()}`,l)}catch(p){m(p),d("IRONS",p),console.log(p)}await this.resetCBMMeasurementValueAndDefect(e)},async resetCBMMeasurementValueAndDefect(e){const t={ver:"v1"};let a={},r={},s={};e.items.forEach(async p=>{if(p.categoryItemType=="paramRatingDynamic"&&(p.value="",a={keyValue:p.key,propertyParams:[{propertyName:"value",propertyValue:""},{propertyName:"updatedBy",propertyValue:""},{propertyName:"updatedDate",propertyValue:""}]}),p.categoryItemType=="targetRating"){if(r={keyValue:p.key,propertyParams:[{propertyName:"value",propertyValue:""},{propertyName:"updatedBy",propertyValue:""},{propertyName:"updatedDate",propertyValue:""}]},p.value=="C"||p.value=="X"){const y={taskId:e.key,workorder:this.stateWorkOrder},c=(await n.post(`${E}?${new URLSearchParams(t).toString()}`,y)).data.result.content,g={id:c.id,updateParams:[{keyValue:c.key,propertyParams:[{propertyName:"isActive",propertyValue:"false"}]}],employee:this.employee};try{await n.post(`${F}?${new URLSearchParams(t).toString()}`,g)}catch(T){m(T),d("IRONS",T),console.log(T)}}p.value=""}p.itemType=="smallCamera"&&(s={keyValue:p.key,propertyParams:[{propertyName:"value",propertyValue:""},{propertyName:"updatedBy",propertyValue:""},{propertyName:"updatedDate",propertyValue:""}]})});const o=[{keyValue:e.key,propertyParams:[{propertyName:"value",propertyValue:""},{propertyName:"updatedBy",propertyValue:""},{propertyName:"updatedDate",propertyValue:""}]},a,r,s],l={headerId:this.generalForm.id,workorder:this.generalForm.sapWorkOrder,id:this.generalForm.id,updateParams:o,employee:this.employee};try{await n.post(`${v}?${new URLSearchParams(t).toString()}`,l)}catch(p){m(p),d("IRONS",p),console.log(p)}await this.getTaskProgress(),await this.updateGroupByParam(this.stateSelectedGroup.name)},async deleteDefect(e){const t={ver:"v1"},a={taskId:e.key,workorder:this.stateWorkOrder},s=(await n.post(`${E}?${new URLSearchParams(t).toString()}`,a)).data.result.content,i={id:s.id,updateParams:[{keyValue:s.key,propertyParams:[{propertyName:"isDeleted",propertyValue:"true"},{propertyName:"isActive",propertyValue:"false"}]}],employee:this.employee};try{await n.post(`${F}?${new URLSearchParams(t).toString()}`,i)}catch(o){m(o),d("IRONS",o),console.log(o)}},setPreviewShowNextPage(){const e=this.stateGroups.findIndex(a=>{var r;return a.name==((r=this.stateSelectedGroup)==null?void 0:r.name)}),t=this.stateGroups[e+1];this.setSelectedGroup(t.key),this.getTaskProgress(),this.updateGroupByParam(t.name)},setPreviewShowPrevPage(){const e=this.stateGroups.findIndex(a=>{var r;return a.name==((r=this.stateSelectedGroup)==null?void 0:r.name)}),t=this.stateGroups[e-1];this.setSelectedGroup(t.key),this.updateGroupByParam(t.name)},resetPreview(){this.stateInterventionId="",this.stateEquipment="",this.stateSapWorkOrder="",this.stateModelUnit="",this.stateSampleStatus="",this.statecomponentDescription="",this.stateServiceSheets={},this.stateGroups=[],this.stateIsSet=!1,this.stateEmployee={},this.stateSelectedGroup=void 0},resetPreviewPDF(){this.stateSelectedGroup=void 0},async getDynamicValue(e){const t={id:e.id,keyValue:e.key,propertyName:e.propertyName},a={ver:"v1"};let r="";const s=await n.post(`${P}?${new URLSearchParams(a).toString()}`,t);return u.isUndefined(s.data.result.content)||(r=s.data.result.content),r},setSerialNumber(e){this.stateSerialNumber=e}}});export{W as G,pe as U,w as a,ne as b,me as c,de as d,le as e,oe as f,ie as g,K as u};

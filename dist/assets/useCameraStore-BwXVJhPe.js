import{s as a}from"./string-to-imageinfo-converter-Cdr1iOkP.js";import{d as r}from"./pinia-BjOS2_Ao.js";const i=r({id:"camera",state:()=>({stateIsVisible:!1,stateImageObjects:[],stateCurrentObject:{},stateShowCloseButton:!0,stateIsCameraError:!1,stateImage:"",stateBlob:void 0,stateIsActionFromDelete:!1,stateIsReplacement:!1,stateReplacementTool:"",stateReplacementPhotoLength:0,stateReplacementPosition:"cab side"}),getters:{isVisible:t=>t.stateIsVisible,currentImage:t=>t.stateImage,currentBlob:t=>t.stateBlob,ImageObjects:t=>t.stateImageObjects,Current:t=>t.stateCurrentObject,ShowCloseButton:t=>t.stateShowCloseButton,IsFromActionDelete:t=>t.stateIsActionFromDelete,isReplacementCamera:t=>t.stateIsReplacement,replacementTool:t=>t.stateReplacementTool,replacementPhotoLength:t=>t.stateReplacementPhotoLength,replacementPosition:t=>t.stateReplacementPosition},actions:{setImage(t){this.stateImage=t},setBlob(t){this.stateBlob=t},resetImage(){this.stateImage="s"},setIsCameraError(t){this.stateIsCameraError=t},setShowCloseButton(t){this.stateShowCloseButton=t},setCurrent(t){this.stateImageObjects.find(s=>s.Id===t)||this.stateImageObjects.push({Id:t,ImageInfos:[],ImageBlobs:[]}),this.stateCurrentObject=this.stateImageObjects.find(s=>s.Id===t)},setIsActionFromDelete(t){this.stateIsActionFromDelete=t},toggleIsVisible(t,e=null){e&&this.setCurrent(e),t&&(this.stateIsCameraError=!1),this.stateIsVisible=t},setUploadedFiles(t,e,s=null){s&&this.setCurrent(s),this.stateCurrentObject.ImageInfos=a(this.stateCurrentObject.ImageInfos),this.stateCurrentObject.ImageInfos=this.stateCurrentObject.ImageInfos.concat(t),this.stateCurrentObject.ImageBlobs=this.stateCurrentObject.ImageBlobs.concat(e)},setIsReplacementCamera(t){this.stateIsReplacement=t},setReplacementTool(t){this.stateReplacementTool=t},setReplacementPhotoLength(t){this.stateReplacementPhotoLength=t},setReplacementPosition(t){this.stateReplacementPosition=t},addPhoto(t,e){this.stateCurrentObject.ImageInfos=a(this.stateCurrentObject.ImageInfos),this.stateCurrentObject.ImageBlobs.push(t),this.stateCurrentObject.ImageInfos.push(e)},definePhoto(t,e){this.stateCurrentObject.ImageInfos=a(this.stateCurrentObject.ImageInfos),this.stateCurrentObject.ImageBlobs=[t],this.stateCurrentObject.ImageInfos=[e]},clearCurrent(){this.stateCurrentObject.ImageBlobs=[],this.stateCurrentObject.ImageInfos=[]},clearImageById(t){const e=this.stateImageObjects.find(s=>s.Id===t);e&&(e.ImageBlobs=[],e.ImageInfos=[])},reset(){this.stateIsVisible=!1,this.stateImageObjects=[],this.stateCurrentObject={},this.stateIsActionFromDelete=!1}}});export{i as u};

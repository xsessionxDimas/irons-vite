import{d as S}from"./pinia-BjOS2_Ao.js";import{a as d,c as i,s as p}from"./index-BuVmIl8K.js";import{u}from"./authentication-handler-Pueb_EI7.js";import{e as l}from"./lodash-DrHMlsdo.js";import{m as c}from"./helpers-wUOLw-dU.js";const n="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/interim_engine_header/get_defect_service_sheet",h="https://digital-bumaau-dev-apm-001.azure-api.net/dinspect/api/interim_engine_header/update?ver=v1",g=S({id:"useInterimDefectSheetStore",state:()=>({stateDefectSheets:[],stateSelectedDefectSheet:{},stateSelectedWorkOrder:"",stateIsError:!1,stateError:{},stateOption:[],stateErrorMessage:"",stateSheetAlreadyApproved:!1}),getters:{DefectSheets:e=>e.stateDefectSheets,SelectedDefectSheet:e=>e.stateSelectedDefectSheet,SelectedWorkOrder:e=>e.stateSelectedWorkOrder,DefectOptions:e=>e.stateOption,IsError:e=>e.stateIsError,Error:e=>e.stateErrorMessage,authStore:()=>d()},actions:{async getDefectLists(e){const r={ver:"v1",supervisor:e,userGroup:"supervisor"};try{this.stateIsError=!1;const t=await i.get(`${n}?${new URLSearchParams(r).toString()}`);this.stateDefectSheets=t.data.result.content,this.stateOption=this.stateDefectSheets.map(a=>({label:`${a.unitNumber} - ${a.brand} ${a.equipmentModel} - ${a.psType} Hour Service - ${a.workOrder}`,value:`${a.unitNumber} - ${a.equipmentModel} - ${a.psType} Hour Service - ${a.workOrder}`}))}catch(t){u(t),this.stateIsError=!0,this.stateError=t,p("IRONS",t)}},async getDefectListsPlanner(){const e={ver:"v1",supervisor:this.authStore.user.EmployeeId,userGroup:"planner"};try{this.stateIsError=!1;const r=await i.get(`${n}?${new URLSearchParams(e).toString()}`);this.stateDefectSheets=r.data.result.content,this.stateOption=this.stateDefectSheets.map(t=>({label:`${t.unitNumber} - ${t.brand} ${t.equipmentModel} - ${t.psType} Hour Service - ${t.workOrder}`,value:`${t.unitNumber} - ${t.equipmentModel} - ${t.psType} Hour Service - ${t.workOrder}`}))}catch(r){u(r),console.log(r),this.stateIsError=!0,this.stateError=r,p("IRONS",r)}},setSelectedDefect(e){const r=this.DefectSheets.find(t=>t.dailyScheduleId===e);r&&(this.stateSelectedDefectSheet=r,console.log("this.stateSelectedDefectSheet",this.stateSelectedDefectSheet),this.stateSelectedWorkOrder=r.workOrder)},async approveDefectSheetBySupervisor(){var t,a,o;const e=d(),r={id:this.SelectedDefectSheet.eFormId,updateParams:[{keyValue:"GENERAL",propertyParams:[{propertyName:"status",propertyValue:"Close"},{propertyName:"defectStatus",propertyValue:"Approved (SPV)"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:e.user.EmployeeId,name:e.user.Name},localStatus:this.SelectedDefectSheet.eFormStatus};try{this.stateIsError=!1,this.stateError={};const s=await i.post(`${h}`,r);if(s.data.result.message=="You cannot approve this digital service sheet because another user already approved.")return this.stateSheetAlreadyApproved=!0,!1;s.data.result.isError&&(this.stateIsError=!0,this.stateErrorMessage=c(s.data.result.message))}catch(s){u(s),this.stateIsError=!0,this.stateErrorMessage=c(((o=(a=(t=s==null?void 0:s.response)==null?void 0:t.data)==null?void 0:a.result)==null?void 0:o.message)??`${s}`),p("IRONS",s)}},async approveDefectSheetByPlanner(){var t,a,o;const e=d(),r={id:this.SelectedDefectSheet.eFormId,updateParams:[{keyValue:"GENERAL",propertyParams:[{propertyName:"defectStatus",propertyValue:"Completed"},{propertyName:"updatedBy",propertyValue:JSON.stringify({id:e.user.EmployeeId,name:e.user.Name})},{propertyName:"updatedDate",propertyValue:"<<ServerDateTime>>"}]}],employee:{id:e.user.EmployeeId,name:e.user.Name},localStatus:this.SelectedDefectSheet.eFormStatus};try{this.stateIsError=!1,this.stateError={};const s=await i.post(`${h}`,r);if(s.data.result.message=="You cannot approve this digital service sheet because another user already approved.")return this.stateSheetAlreadyApproved=!0,!1;s.data.result.isError&&(this.stateIsError=!0,this.stateErrorMessage=c(s.data.result.message))}catch(s){u(s),this.stateIsError=!0,this.stateErrorMessage=c(((o=(a=(t=s==null?void 0:s.response)==null?void 0:t.data)==null?void 0:a.result)==null?void 0:o.message)??`${s}`),p("IRONS",s)}},reset(){this.stateIsError=!1,this.stateError={},this.stateErrorMessage=""},updateSelectedWO(e,r,t,a){try{this.stateSelectedWorkOrder=e,this.stateSelectedDefectSheet.workOrder=e,this.stateSelectedDefectSheet.unitNumber=t,this.stateSelectedDefectSheet.psType=a,this.stateSelectedDefectSheet.brand=r.split(" ")[0],this.stateSelectedDefectSheet.equipmentModel=`${r.split(" ")[1]}${l.isUndefined(r.split(" ")[2])?"":" "+r.split(" ")[2]}`}catch(o){console.log("error render",o)}}}});export{g as u};

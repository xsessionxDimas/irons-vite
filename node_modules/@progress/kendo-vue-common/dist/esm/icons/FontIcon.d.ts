import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { BaseIconProps } from './BaseIconProps';
/**
 * Represents the props of the [Kendo UI for Vue Icon component]({% slug overview_icon %}).
 */
export interface FontIconProps extends BaseIconProps {
    /**
     * Represents the name of the icon.
     */
    name?: string;
}
/**
 * @hidden
 */
export interface FontIconState {
}
/**
 * @hidden
 */
export interface FontIconComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FontIconMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FontIconData {
}
/**
 * @hidden
 */
export interface FontIconAll extends Vue2type, FontIconMethods, FontIconData, FontIconComputed, FontIconState {
}
/**
 * @hidden
 */
declare let FontIconVue2: ComponentOptions<FontIconAll, DefaultData<FontIconData>, DefaultMethods<FontIconAll>, FontIconComputed, RecordPropsDefinition<FontIconProps>>;
/**
 * @hidden
 */
declare const FontIcon: DefineComponent<FontIconProps, any, FontIconData, FontIconComputed, FontIconMethods, {}, {}, {}, string, FontIconProps, FontIconProps, {}>;
export { FontIcon, FontIconVue2 };

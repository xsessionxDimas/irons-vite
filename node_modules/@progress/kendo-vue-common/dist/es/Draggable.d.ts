import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface DraggableProps {
    key?: any;
    onPressHandler?: (draggableEvent: any, element: HTMLElement) => void;
    onDragHandler?: (draggableEvent: any, element: HTMLElement) => void;
    onReleaseHandler?: (draggableEvent: any) => void;
}
/**
 * @hidden
 */
export interface DraggableMethods extends Vue2type {
    [key: string]: any;
    press: (event: any) => void;
    drag: (event: any) => void;
    release: (event: any) => void;
}
/**
 * @hidden
 */
export interface DraggableData {
    element: any | null;
    draggable: any;
}
/**
 * @hidden
 */
export interface DraggableAll extends DraggableMethods, DraggableData {
}
/**
 * @hidden
 */
export interface DraggablePressEvent {
    event: any;
    element: HTMLElement;
}
/**
 * @hidden
 */
export interface DraggableDragEvent {
    event: any;
    element: HTMLElement;
}
/**
 * @hidden
 */
export interface DraggableReleaseEvent {
    event: any;
}
/**
 * @hidden
 */
declare let DraggableVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<DraggableAll>, {}, RecordPropsDefinition<DraggableProps>>;
/**
 * @hidden
 */
declare const Draggable: DefineComponent<DraggableProps, any, DraggableData, {}, DraggableMethods, {}, {}, {}, string, DraggableProps, DraggableProps, {}>;
export { Draggable, DraggableVue2 };

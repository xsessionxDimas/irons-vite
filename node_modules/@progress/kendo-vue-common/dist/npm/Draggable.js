"use strict";

var _DraggableVue;
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return (typeof key === "undefined" ? "undefined" : _typeof(key)) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if ((typeof input === "undefined" ? "undefined" : _typeof(input)) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if ((typeof res === "undefined" ? "undefined" : _typeof(res)) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DraggableVue2 = exports.Draggable = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var d = require("@progress/kendo-draggable");
var defaultSlots_1 = require("./defaultSlots");
/**
 * @hidden
 */
var DraggableVue2 = (_DraggableVue = {
  // @ts-ignore
  emits: {
    press: null,
    drag: null,
    release: null
  },
  inheritAttrs: false,
  created: function created() {
    this.element = null;
    var draggable = d;
    var dp = typeof draggable !== 'undefined' && draggable.Draggable ? draggable : draggable.default;
    this.draggable = new dp.Draggable({
      press: this.press,
      drag: this.drag,
      release: this.release
    });
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  mounted: function mounted() {
    if (this.$el) {
      this.element = this.$el.nodeType === 3 || this.$el.nodeType === 8 ? this.$el.nextElementSibling : this.$el;
      this.draggable.bindTo(this.element);
    }
  },
  destroyed: !!isV3 ? undefined : function () {
    this.draggable.destroy();
  },
  // @ts-ignore
  unmounted: function unmounted() {
    this.draggable.destroy();
  },
  methods: {
    press: function press(event) {
      if (this.element) {
        this.$emit('press', event, this.element);
      }
    },
    drag: function drag(event) {
      if (this.element) {
        this.$emit('drag', event, this.element);
      }
    },
    release: function release(event) {
      if (this.element) {
        this.$emit('release', event, this.element);
      }
    }
  }
}, _defineProperty(_DraggableVue, "setup", !isV3 ? undefined : function () {
  var v3 = !!isV3;
  return {
    v3: v3
  };
}), _defineProperty(_DraggableVue, "render", function render(createElement) {
  // @ts-ignore
  var h = gh || createElement;
  return (0, defaultSlots_1.getDefaultSlots)(this);
}), _DraggableVue);
exports.DraggableVue2 = DraggableVue2;
/**
 * @hidden
 */
var Draggable = DraggableVue2;
exports.Draggable = Draggable;
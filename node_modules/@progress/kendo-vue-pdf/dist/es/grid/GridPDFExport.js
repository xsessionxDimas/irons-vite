// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { savePDF } from '../savePDF';
import { provideSaveGridPDF } from './provideSaveGridPDF';
import { getDefaultSlots } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
var GridPdfExportVue2 = {
  name: 'grid-pdf-export',
  props: {
    author: String,
    avoidLinks: [Boolean, String],
    forcePageBreak: String,
    keepTogether: String,
    creator: String,
    date: Date,
    imageResolution: Number,
    fileName: String,
    forceProxy: Boolean,
    keywords: String,
    landscape: Boolean,
    margin: [String, Object],
    pageTemplate: [Object, Function],
    paperSize: [String, Object],
    repeatHeaders: Boolean,
    scale: Number,
    proxyData: Object,
    proxyURL: String,
    proxyTarget: String,
    producer: String,
    subject: String,
    title: String
  },
  created: function created() {
    this.saveGridPDF = provideSaveGridPDF(this.getSavePDF());
  },
  methods: {
    save: function save(data, callback) {
      var defaultSlot = getDefaultSlots(this);
      // @ts-ignore
      var gridSlot = defaultSlot.filter(function (child) {
        return child && child.tag && child.tag.toLowerCase().indexOf('grid') !== -1 || child.componentOptions && child.componentOptions.tag && child.componentOptions.tag.toLowerCase().indexOf('grid') !== -1 || child.type && child.type.name && child.type.name.toLowerCase().indexOf('grid') !== -1;
      });
      if (gridSlot.length) {
        this.gridComponent = this.v3 ? gridSlot[0] : gridSlot[0].componentInstance;
        this.saveGridPDF(this.gridComponent, this.$props, callback, data, this.v3);
      }
    },
    getSavePDF: function getSavePDF() {
      return savePDF;
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("div", [defaultSlot]);
  }
};
/**
 * @hidden
 */
var GridPdfExport = GridPdfExportVue2;
export { GridPdfExport, GridPdfExportVue2 };
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PDFExportVue2 = exports.PDFExport = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_drawing_1 = require("@progress/kendo-drawing");
var kendo_file_saver_1 = require("@progress/kendo-file-saver");
var KendoDrawingAdapter_1 = require("./KendoDrawingAdapter");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var package_metadata_1 = require("./package-metadata");
/**
 * @hidden
 */
var PDFExportVue2 = {
  name: 'pdf-export',
  props: {
    author: String,
    avoidLinks: [Boolean, String],
    forcePageBreak: String,
    keepTogether: String,
    creator: String,
    date: Date,
    imageResolution: Number,
    fileName: String,
    forceProxy: Boolean,
    keywords: String,
    landscape: Boolean,
    margin: [String, Object],
    pageTemplate: [Object, Function],
    paperSize: [String, Object],
    repeatHeaders: Boolean,
    scale: Number,
    proxyData: Object,
    proxyURL: String,
    proxyTarget: String,
    producer: String,
    subject: String,
    title: String
  },
  methods: {
    save: function save(callback) {
      new KendoDrawingAdapter_1.default(kendo_drawing_1.drawDOM, kendo_drawing_1.exportPDF, kendo_file_saver_1.saveAs, this.$el,
      // To do: we should consider whether we need a margin-top, margin-left, etc. props
      this.$props).savePDF(callback);
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  created: function created() {
    (0, kendo_vue_common_1.validatePackage)(package_metadata_1.packageMetadata);
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = (0, kendo_vue_common_1.getDefaultSlots)(this);
    return h("div", [defaultSlot]);
  }
  // To do: we should consider whether we need a margin-top, margin-left, etc. props
  // private getOptions() {
  //     return Object.assign({}, this.$props, { margin: getPageMrgin(this.$props) });
  // }
};

exports.PDFExportVue2 = PDFExportVue2;
/**
 * @hidden
 */
var PDFExport = PDFExportVue2;
exports.PDFExport = PDFExport;
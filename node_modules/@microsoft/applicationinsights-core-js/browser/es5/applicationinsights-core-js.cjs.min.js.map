{"version":3,"file":"applicationinsights-core-js.cjs.min.js","sources":["../../dist-es5/JavaScriptSDK.Interfaces/IChannelControls.js","../../../../common/temp/node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","../../dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","../../dist-es5/JavaScriptSDK/AggregationError.js","../../dist-es5/JavaScriptSDK.Enums/EventsDiscardedReason.js","../../dist-es5/JavaScriptSDK.Enums/InitActiveStatusEnum.js","../../dist-es5/__DynamicConstants.js","../../../../tools/shims/dist-es5/Constants.js","../../../../common/temp/node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","../../../../tools/shims/dist-es5/TsLibShims.js","../../../../common/temp/node_modules/@nevware21/ts-async/dist/es5/mod/ts-async.js","../../dist-es5/JavaScriptSDK/InternalConstants.js","../../dist-es5/JavaScriptSDK/HelperFuncs.js","../../dist-es5/JavaScriptSDK/EnvUtils.js","../../dist-es5/JavaScriptSDK/RandomHelper.js","../../dist-es5/JavaScriptSDK/DataCacheHelper.js","../../dist-es5/Config/ConfigDefaults.js","../../dist-es5/Config/DynamicSupport.js","../../dist-es5/Config/DynamicProperty.js","../../dist-es5/Config/DynamicState.js","../../dist-es5/Config/DynamicConfig.js","../../dist-es5/JavaScriptSDK/AsyncUtils.js","../../dist-es5/JavaScriptSDK/Constants.js","../../dist-es5/Config/ConfigDefaultHelpers.js","../../dist-es5/JavaScriptSDK/DbgExtensionUtils.js","../../dist-es5/JavaScriptSDK/DiagnosticLogger.js","../../dist-es5/JavaScriptSDK/CookieMgr.js","../../dist-es5/JavaScriptSDK/NotificationManager.js","../../dist-es5/JavaScriptSDK/PerfManager.js","../../dist-es5/JavaScriptSDK/CoreUtils.js","../../dist-es5/JavaScriptSDK/W3cTraceParent.js","../../dist-es5/JavaScriptSDK/TelemetryHelpers.js","../../dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","../../dist-es5/JavaScriptSDK/UnloadHookContainer.js","../../dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","../../dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","../../dist-es5/JavaScriptSDK/TelemetryInitializerPlugin.js","../../dist-es5/JavaScriptSDK/AppInsightsCore.js","../../dist-es5/JavaScriptSDK/ResponseHelpers.js","../../dist-es5/JavaScriptSDK/SenderPostManager.js","../../dist-es5/JavaScriptSDK/EventHelpers.js","../../dist-es5/JavaScriptSDK.Enums/LoggingEnums.js","../../dist-es5/JavaScriptSDK/InstrumentHooks.js"],"sourcesContent":["/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\"use strict\";\r\nexport var MinChannelPriorty = 100;\r\n//# sourceMappingURL=IChannelControls.js.map","/*! https://github.com/nevware21/ts-utils v0.11.3 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1;\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key, writable);\n        _assignMapValue(theMap, value, valueType ? value : key, writable);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: !!writable\n    });\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump && propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \")) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                objDeepFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto && clsProto[funcName];\n    return function (thisArg) {\n        var theFunc = (thisArg && thisArg[funcName]) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        (!cachedValue || _globalLazyTestHooks.lzy) && (cachedValue = createCachedValue(safe(getFn, theArgs).v));\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) && (_cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE));\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl = (!_cachedGlobal || useCached === false) ? getGlobal(useCached) : _cachedGlobal.v;\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        return getWindow();\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : null;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray && theArray[\"slice\"]) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = _iterSymbol.v && theArgs[_iterSymbol.v];\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString;\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = false;\n    if (value && theType === OBJECT) {\n        isPlain = isPlainObject(value);\n    }\n    else {\n        isPrim = value === NULL_VALUE || isPrimitiveType(theType);\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_perf || _globalLazyTestHooks.lzy) && (_perf = createCachedValue(safe((getInst), [\"performance\"]).v));\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        isDone = isDone || (ctx.n ? ctx.n(arguments) : true);\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step || ((start <= end) ? 1 : -1);\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = false;\n        if (theStep > 0) {\n            isDone = nextValue > end;\n        }\n        else {\n            isDone = nextValue < end;\n        }\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter && splitter[getKnownSymbol(9 )];\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : null));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = !isUndefined(length) && length < value[LENGTH] ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = createEnumStyle({\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0 /* eEventsDiscardedReason.Unknown */,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1 /* eEventsDiscardedReason.NonRetryableStatus */,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2 /* eEventsDiscardedReason.InvalidEvent */,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3 /* eEventsDiscardedReason.SizeLimitExceeded */,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4 /* eEventsDiscardedReason.KillSwitch */,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5 /* eEventsDiscardedReason.QueueFull */\r\n});\r\n/**\r\n *  The eBatchDiscardedReason enumeration contains a set of values that specify the reason for discarding offline batches.\r\n */\r\nexport var BatchDiscardedReason = createEnumStyle({\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0 /* eBatchDiscardedReason.Unknown */,\r\n    /**\r\n      * Status set to non-retryable after sending\r\n      */\r\n    NonRetryableStatus: 1 /* eBatchDiscardedReason.NonRetryableStatus */,\r\n    /**\r\n     * Batches with lower number of critical events are dropped to free up storage space\r\n     */\r\n    CleanStorage: 2 /* eBatchDiscardedReason.CleanStorage */,\r\n    /**\r\n     * The batches in storage exceed max allowed time\r\n     */\r\n    MaxInStorageTimeExceeded: 3 /* eBatchDiscardedReason.MaxInStorageTimeExceeded */\r\n});\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { createEnumStyle } from \"./EnumHelperFuncs\";\r\nexport var ActiveStatus = createEnumStyle({\r\n    NONE: 0 /* eActiveStatus.NONE */,\r\n    PENDING: 3 /* eActiveStatus.PENDING */,\r\n    INACTIVE: 1 /* eActiveStatus.INACTIVE */,\r\n    ACTIVE: 2 /* eActiveStatus.ACTIVE */\r\n});\r\n//# sourceMappingURL=InitActiveStatusEnum.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN__INACTIVE = \"INACTIVE\"; // Count: 3\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 5\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","/*!\n * NevWare21 Solutions LLC - ts-async, 0.5.2\n * https://github.com/nevware21/ts-async\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\nimport { isPromiseLike, objDefineProperties, getDocument, createCachedValue, safe, getInst, dumpObj, arrSlice, objDefineProp, hasSymbol, getKnownSymbol, isFunction, throwTypeError, iterForOf, scheduleTimeout, isNode, getWindow, getGlobal, objDefine, objToString, isUndefined, isArray, arrForEach, isIterable, createCustomError, isNumber, scheduleIdleCallback, utcNow, getLength, isIterator, fnCall, arrIndexOf } from '@nevware21/ts-utils';\n\nvar STR_PROMISE = \"Promise\";\nvar DONE = \"done\";\nvar VALUE = \"value\";\nvar RETURN = \"return\";\nvar REJECTED = \"rejected\";\n\nfunction doAwaitResponse(value, cb) {\n    return doAwait(value, function (value) {\n        return cb ? cb({\n            status: \"fulfilled\",\n            rejected: false,\n            value: value\n        }) : value;\n    }, function (reason) {\n        return cb ? cb({\n            status: REJECTED,\n            rejected: true,\n            reason: reason\n        }) : reason;\n    });\n}\nfunction doAwait(value, resolveFn, rejectFn, finallyFn) {\n    var result = value;\n    try {\n        if (isPromiseLike(value)) {\n            if (resolveFn || rejectFn) {\n                result = value.then(resolveFn, rejectFn);\n            }\n        }\n        else {\n            try {\n                if (resolveFn) {\n                    result = resolveFn(value);\n                }\n            }\n            catch (err) {\n                if (rejectFn) {\n                    result = rejectFn(err);\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n    }\n    finally {\n        if (finallyFn) {\n            doFinally(result, finallyFn);\n        }\n    }\n    return result;\n}\nfunction doFinally(value, finallyFn) {\n    var result = value;\n    if (finallyFn) {\n        if (isPromiseLike(value)) {\n            if (value.finally) {\n                result = value.finally(finallyFn);\n            }\n            else {\n                result = value.then(function (value) {\n                    finallyFn();\n                    return value;\n                }, function (reason) {\n                    finallyFn();\n                    throw reason;\n                });\n            }\n        }\n        else {\n            finallyFn();\n        }\n    }\n    return result;\n}\n\nvar _debugState;\nvar _debugResult;\nvar _debugHandled;\nvar _promiseDebugEnabled = false;\nfunction _addDebugState$1(thePromise, stateFn, resultFn, handledFn) {\n    _debugState = _debugState || { toString: function () { return \"[[PromiseState]]\"; } };\n    _debugResult = _debugResult || { toString: function () { return \"[[PromiseResult]]\"; } };\n    _debugHandled = _debugHandled || { toString: function () { return \"[[PromiseIsHandled]]\"; } };\n    var props = {};\n    props[_debugState] = { get: stateFn };\n    props[_debugResult] = { get: resultFn };\n    props[_debugHandled] = { get: handledFn };\n    objDefineProperties(thePromise, props);\n}\nfunction setPromiseDebugState(enabled, logger) {\n    _promiseDebugEnabled = enabled;\n}\n\nvar STRING_STATES =  [\n    \"pending\", \"resolving\", \"resolved\", REJECTED\n];\n\nvar DISPATCH_EVENT = \"dispatchEvent\";\nvar _hasInitEvent;\nfunction _hasInitEventFn(doc) {\n    var evt;\n    if (doc && doc.createEvent) {\n        evt = doc.createEvent(\"Event\");\n    }\n    return (!!evt && evt.initEvent);\n}\nfunction emitEvent(target, evtName, populateEvent, useNewEvent) {\n    var doc = getDocument();\n    !_hasInitEvent && (_hasInitEvent = createCachedValue(!!safe(_hasInitEventFn, [doc]).v));\n    var theEvt = _hasInitEvent.v ? doc.createEvent(\"Event\") : (useNewEvent ? new Event(evtName) : {});\n    populateEvent && populateEvent(theEvt);\n    if (_hasInitEvent.v) {\n        theEvt.initEvent(evtName, false, true);\n    }\n    if (theEvt && target[DISPATCH_EVENT]) {\n        target[DISPATCH_EVENT](theEvt);\n    }\n    else {\n        var handler = target[\"on\" + evtName];\n        if (handler) {\n            handler(theEvt);\n        }\n        else {\n            var theConsole = getInst(\"console\");\n            theConsole && (theConsole[\"error\"] || theConsole[\"log\"])(evtName, dumpObj(theEvt));\n        }\n    }\n}\n\nvar NODE_UNHANDLED_REJECTION = \"unhandledRejection\";\nvar UNHANDLED_REJECTION = NODE_UNHANDLED_REJECTION.toLowerCase();\nvar _currentPromiseId = [];\nvar _uniquePromiseId = 0;\nvar _unhandledRejectionTimeout = 10;\nvar _aggregationError;\nvar _hasPromiseRejectionEvent;\nfunction dumpFnObj(value) {\n    if (isFunction(value)) {\n        return value.toString();\n    }\n    return dumpObj(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAggregationError(values) {\n    !_aggregationError && (_aggregationError = createCachedValue(safe(getInst, [\"AggregationError\"]).v || createCustomError(\"AggregationError\", function (self, args) {\n        self.errors = args[0];\n    })));\n    return new _aggregationError.v(values);\n}\nfunction _createPromise(newPromise, processor, executor) {\n    var additionalArgs = arrSlice(arguments, 3);\n    var _state = 0 ;\n    var _hasResolved = false;\n    var _settledValue;\n    var _queue = [];\n    var _id = _uniquePromiseId++;\n    var _parentId = _currentPromiseId.length > 0 ? _currentPromiseId[_currentPromiseId.length - 1] : undefined;\n    var _handled = false;\n    var _unHandledRejectionHandler = null;\n    var _thePromise;\n    function _then(onResolved, onRejected) {\n        try {\n            _currentPromiseId.push(_id);\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            var thenPromise = newPromise(function (resolve, reject) {\n                _queue.push(function () {\n                    try {\n                        var handler = _state === 2  ? onResolved : onRejected;\n                        var value = isUndefined(handler) ? _settledValue : (isFunction(handler) ? handler(_settledValue) : handler);\n                        if (isPromiseLike(value)) {\n                            value.then(resolve, reject);\n                        }\n                        else if (handler) {\n                            resolve(value);\n                        }\n                        else if (_state === 3 ) {\n                            reject(value);\n                        }\n                        else {\n                            resolve(value);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n                if (_hasResolved) {\n                    _processQueue();\n                }\n            }, additionalArgs);\n            return thenPromise;\n        }\n        finally {\n            _currentPromiseId.pop();\n        }\n    }\n    function _catch(onRejected) {\n        return _then(undefined, onRejected);\n    }\n    function _finally(onFinally) {\n        var thenFinally = onFinally;\n        var catchFinally = onFinally;\n        if (isFunction(onFinally)) {\n            thenFinally = function (value) {\n                onFinally && onFinally();\n                return value;\n            };\n            catchFinally = function (reason) {\n                onFinally && onFinally();\n                throw reason;\n            };\n        }\n        return _then(thenFinally, catchFinally);\n    }\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    function _processQueue() {\n        if (_queue.length > 0) {\n            var pending = _queue.slice();\n            _queue = [];\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            processor(pending);\n        }\n    }\n    function _createSettleIfFn(newState, allowState) {\n        return function (theValue) {\n            if (_state === allowState) {\n                if (newState === 2  && isPromiseLike(theValue)) {\n                    _state = 1 ;\n                    theValue.then(_createSettleIfFn(2 , 1 ), _createSettleIfFn(3 , 1 ));\n                    return;\n                }\n                _state = newState;\n                _hasResolved = true;\n                _settledValue = theValue;\n                _processQueue();\n                if (!_handled && newState === 3  && !_unHandledRejectionHandler) {\n                    _unHandledRejectionHandler = scheduleTimeout(_notifyUnhandledRejection, _unhandledRejectionTimeout);\n                }\n            }\n        };\n    }\n    function _notifyUnhandledRejection() {\n        if (!_handled) {\n            _handled = true;\n            if (isNode()) {\n                process.emit(NODE_UNHANDLED_REJECTION, _settledValue, _thePromise);\n            }\n            else {\n                var gbl = getWindow() || getGlobal();\n                !_hasPromiseRejectionEvent && (_hasPromiseRejectionEvent = createCachedValue(safe((getInst), [STR_PROMISE + \"RejectionEvent\"]).v));\n                emitEvent(gbl, UNHANDLED_REJECTION, function (theEvt) {\n                    objDefine(theEvt, \"promise\", { g: function () { return _thePromise; } });\n                    theEvt.reason = _settledValue;\n                    return theEvt;\n                }, !!_hasPromiseRejectionEvent.v);\n            }\n        }\n    }\n    _thePromise = {\n        then: _then,\n        \"catch\": _catch,\n        finally: _finally\n    };\n    objDefineProp(_thePromise, \"state\", {\n        get: _strState\n    });\n    if (_promiseDebugEnabled) {\n        _addDebugState$1(_thePromise, _strState, function () { return objToString(_settledValue); }, function () { return _handled; });\n    }\n    if (hasSymbol()) {\n        _thePromise[getKnownSymbol(11 )] = \"IPromise\";\n    }\n    function _toString() {\n        return \"IPromise\" + (_promiseDebugEnabled ? \"[\" + _id + (!isUndefined(_parentId) ? (\":\" + _parentId) : \"\") + \"]\" : \"\") + \" \" + _strState() + (_hasResolved ? (\" - \" + dumpFnObj(_settledValue)) : \"\") + (\"\");\n    }\n    _thePromise.toString = _toString;\n    (function _initialize() {\n        if (!isFunction(executor)) {\n            throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpFnObj(executor));\n        }\n        var _rejectFn = _createSettleIfFn(3 , 0 );\n        try {\n            executor.call(_thePromise, _createSettleIfFn(2 , 0 ), _rejectFn);\n        }\n        catch (e) {\n            _rejectFn(e);\n        }\n    })();\n    return _thePromise;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllPromise(newPromise) {\n    return function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            try {\n                var values_1 = [];\n                var pending_1 = 1;\n                iterForOf(input, function (item, idx) {\n                    if (item) {\n                        pending_1++;\n                        doAwait(item, function (value) {\n                            values_1[idx] = value;\n                            if (--pending_1 === 0) {\n                                resolve(values_1);\n                            }\n                        }, reject);\n                    }\n                });\n                pending_1--;\n                if (pending_1 === 0) {\n                    resolve(values_1);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createResolvedPromise(newPromise) {\n    return function (value) {\n        var additionalArgs = arrSlice(arguments, 1);\n        if (isPromiseLike(value)) {\n            return value;\n        }\n        return newPromise(function (resolve) {\n            resolve(value);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRejectedPromise(newPromise) {\n    return function (reason) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (_resolve, reject) {\n            reject(reason);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllSettledPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var values = [];\n            var pending = 1;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (value.rejected) {\n                        values[idx] = {\n                            status: REJECTED,\n                            reason: value.reason\n                        };\n                    }\n                    else {\n                        values[idx] = {\n                            status: \"fulfilled\",\n                            value: value.value\n                        };\n                    }\n                    if (--pending === 0) {\n                        resolve(values);\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0) {\n                    resolve(values);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRacePromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var isDone = false;\n            function processItem(item) {\n                doAwaitResponse(item, function (value) {\n                    if (!isDone) {\n                        isDone = true;\n                        if (value.rejected) {\n                            reject(value.reason);\n                        }\n                        else {\n                            resolve(value.value);\n                        }\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAnyPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var theErros = [];\n            var pending = 1;\n            var isDone = false;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (!value.rejected) {\n                        isDone = true;\n                        resolve(value.value);\n                        return;\n                    }\n                    else {\n                        theErros[idx] = value.reason;\n                    }\n                    if (--pending === 0 && !isDone) {\n                        reject(_createAggregationError(theErros));\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0 && !isDone) {\n                    reject(_createAggregationError(theErros));\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n\nfunction syncItemProcessor(pending) {\n    arrForEach(pending, function (fn) {\n        try {\n            fn();\n        }\n        catch (e) {\n        }\n    });\n}\nfunction timeoutItemProcessor(timeout) {\n    var callbackTimeout = isNumber(timeout) ? timeout : 0;\n    return function (pending) {\n        scheduleTimeout(function () {\n            syncItemProcessor(pending);\n        }, callbackTimeout);\n    };\n}\nfunction idleItemProcessor(timeout) {\n    var options;\n    if (timeout >= 0) {\n        options = {\n            timeout: +timeout\n        };\n    }\n    return function (pending) {\n        scheduleIdleCallback(function (deadline) {\n            syncItemProcessor(pending);\n        }, options);\n    };\n}\n\nvar _allAsyncSettledCreator;\nvar _raceAsyncCreator;\nvar _anyAsyncCreator;\nfunction createAsyncPromise(executor, timeout) {\n    return _createPromise(createAsyncPromise, timeoutItemProcessor(timeout), executor, timeout);\n}\nvar createAsyncAllPromise = /*#__PURE__*/ _createAllPromise(createAsyncPromise);\nvar createAsyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createAsyncPromise);\nvar createAsyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createAsyncPromise);\nfunction createAsyncAllSettledPromise(input, timeout) {\n    !_allAsyncSettledCreator && (_allAsyncSettledCreator = _createAllSettledPromise(createAsyncPromise));\n    return _allAsyncSettledCreator.v(input, timeout);\n}\nfunction createAsyncRacePromise(values, timeout) {\n    !_raceAsyncCreator && (_raceAsyncCreator = _createRacePromise(createAsyncPromise));\n    return _raceAsyncCreator.v(values, timeout);\n}\nfunction createAsyncAnyPromise(values, timeout) {\n    !_anyAsyncCreator && (_anyAsyncCreator = _createAnyPromise(createAsyncPromise));\n    return _anyAsyncCreator.v(values, timeout);\n}\n\nvar _promiseCls;\nvar _allCreator;\nvar _allNativeSettledCreator;\nvar _raceNativeCreator;\nvar _anyNativeCreator;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createNativePromiseHelper(name, func) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    if (_promiseCls.v && _promiseCls.v[name]) {\n        return createCachedValue(function (input, timeout) {\n            return createNativePromise(function (resolve, reject) {\n                _promiseCls.v[name](input).then(resolve, reject);\n            });\n        });\n    }\n    return func();\n}\nfunction createNativePromise(executor, timeout) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    var PrmCls = _promiseCls.v;\n    if (!PrmCls) {\n        return createAsyncPromise(executor);\n    }\n    if (!isFunction(executor)) {\n        throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpObj(executor));\n    }\n    var _state = 0 ;\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    var thePromise = new PrmCls(function (resolve, reject) {\n        function _resolve(value) {\n            _state = 2 ;\n            resolve(value);\n        }\n        function _reject(reason) {\n            _state = 3 ;\n            reject(reason);\n        }\n        executor(_resolve, _reject);\n    });\n    objDefineProp(thePromise, \"state\", {\n        get: _strState\n    });\n    return thePromise;\n}\nfunction createNativeAllPromise(input, timeout) {\n    !_allCreator && (_allCreator = _createNativePromiseHelper(\"all\", function () { return createCachedValue(_createAllPromise(createNativePromise)); }));\n    return _allCreator.v(input, timeout);\n}\nvar createNativeResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createNativePromise);\nvar createNativeRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createNativePromise);\nfunction createNativeAllSettledPromise(input, timeout) {\n    !_allNativeSettledCreator && (_allNativeSettledCreator = _createNativePromiseHelper(\"allSettled\", function () { return _createAllSettledPromise(createNativePromise); }));\n    return _allNativeSettledCreator.v(input, timeout);\n}\nfunction createNativeRacePromise(values, timeout) {\n    !_raceNativeCreator && (_raceNativeCreator = _createNativePromiseHelper(\"race\", function () { return _createRacePromise(createNativePromise); }));\n    return _raceNativeCreator.v(values, timeout);\n}\nfunction createNativeAnyPromise(values, timeout) {\n    !_anyNativeCreator && (_anyNativeCreator = _createNativePromiseHelper(\"any\", function () { return _createAnyPromise(createNativePromise); }));\n    return _anyNativeCreator.v(values, timeout);\n}\n\nvar _allSyncSettledCreator;\nvar _raceSyncCreator;\nvar _anySyncCreator;\nfunction createSyncPromise(executor) {\n    return _createPromise(createSyncPromise, syncItemProcessor, executor);\n}\nvar createSyncAllPromise = /*#__PURE__*/ _createAllPromise(createSyncPromise);\nvar createSyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createSyncPromise);\nvar createSyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createSyncPromise);\nfunction createSyncAllSettledPromise(input, timeout) {\n    !_allSyncSettledCreator && (_allSyncSettledCreator = _createAllSettledPromise(createSyncPromise));\n    return _allSyncSettledCreator.v(input, timeout);\n}\nfunction createSyncRacePromise(values, timeout) {\n    !_raceSyncCreator && (_raceSyncCreator = _createRacePromise(createSyncPromise));\n    return _raceSyncCreator.v(values, timeout);\n}\nfunction createSyncAnyPromise(values, timeout) {\n    !_anySyncCreator && (_anySyncCreator = _createAnyPromise(createSyncPromise));\n    return _anySyncCreator.v(values, timeout);\n}\n\nvar _defaultIdleTimeout;\nvar _allIdleSettledCreator;\nvar _raceIdleCreator;\nvar _anyIdleCreator;\nfunction setDefaultIdlePromiseTimeout(idleDeadline) {\n    _defaultIdleTimeout = idleDeadline;\n}\nvar setDefaultIdleTimeout = ( setDefaultIdlePromiseTimeout);\nfunction createIdlePromise(executor, timeout) {\n    var theTimeout = isUndefined(timeout) ? _defaultIdleTimeout : timeout;\n    return _createPromise(createIdlePromise, idleItemProcessor(theTimeout), executor, theTimeout);\n}\nvar createIdleAllPromise = /*#__PURE__*/ _createAllPromise(createIdlePromise);\nvar createIdleResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createIdlePromise);\nvar createIdleRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createIdlePromise);\nfunction createIdleAllSettledPromise(input, timeout) {\n    !_allIdleSettledCreator && (_allIdleSettledCreator = _createAllSettledPromise(createIdlePromise));\n    return _allIdleSettledCreator.v(input, timeout);\n}\nfunction createIdleRacePromise(values, timeout) {\n    !_raceIdleCreator && (_raceIdleCreator = _createRacePromise(createIdlePromise));\n    return _raceIdleCreator.v(values, timeout);\n}\nfunction createIdleAnyPromise(values, timeout) {\n    !_anyIdleCreator && (_anyIdleCreator = _createAnyPromise(createIdlePromise));\n    return _anyIdleCreator.v(values, timeout);\n}\n\nvar _promiseCreator;\nvar _allSettledCreator;\nvar _raceCreator;\nvar _anyCreator;\nfunction setCreatePromiseImpl(creator) {\n    _promiseCreator = creator ? createCachedValue(creator) : null;\n}\nfunction createPromise(executor, timeout) {\n    !_promiseCreator && (_promiseCreator = createCachedValue(createNativePromise));\n    return _promiseCreator.v.call(this, executor, timeout);\n}\nvar createAllPromise = /*#__PURE__*/ _createAllPromise(createPromise);\nvar createResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createPromise);\nvar createRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createPromise);\nfunction createAllSettledPromise(input, timeout) {\n    !_allSettledCreator && (_allSettledCreator = _createAllSettledPromise(createPromise));\n    return _allSettledCreator.v(input, timeout);\n}\nfunction createRacePromise(values, timeout) {\n    !_raceCreator && (_raceCreator = _createRacePromise(createPromise));\n    return _raceCreator.v(values, timeout);\n}\nfunction createAnyPromise(values, timeout) {\n    !_anyCreator && (_anyCreator = _createAnyPromise(createPromise));\n    return _anyCreator.v(values, timeout);\n}\n\nfunction createTimeoutPromise(timeout, resolveReject, message) {\n    return createPromise(function (resolve, reject) {\n        scheduleTimeout(function () {\n            (resolveReject ? resolve : reject)(!isUndefined(message) ? message : \"Timeout of \" + timeout + \"ms exceeded\");\n        }, timeout);\n    });\n}\n\nfunction _doneChk(isDone, state, value, thisArg) {\n    var result = isDone;\n    state.res = value;\n    if (!result) {\n        if (state.isDone && isFunction(state.isDone)) {\n            return doAwait(state.isDone.call(thisArg, state), function (done) {\n                state.iter++;\n                return !!done;\n            });\n        }\n        else {\n            result = !!state.isDone;\n        }\n    }\n    state.iter++;\n    return result;\n}\nfunction doWhileAsync(callbackFn, isDoneFn, thisArg) {\n    var promise;\n    var resolve;\n    var reject = function (reason) {\n        isDone = true;\n        throw reason;\n    };\n    var isDone = false;\n    var state = {\n        st: utcNow(),\n        iter: 0,\n        isDone: isDoneFn || false\n    };\n    if (callbackFn) {\n        var _createPromise_1 = function () {\n            return createPromise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n        };\n        var _handleAsyncDone_1 = function (done) {\n            isDone = !!done;\n            if (!isDone) {\n                _processNext_1();\n            }\n            else {\n                resolve(state.res);\n            }\n        };\n        var _processNext_1 = function () {\n            while (!isDone) {\n                try {\n                    var cbResult = callbackFn.call(thisArg, state);\n                    if (isPromiseLike(cbResult)) {\n                        promise = promise || _createPromise_1();\n                        doAwait(cbResult, function (res) {\n                            try {\n                                doAwait(_doneChk(isDone, state, res, thisArg), _handleAsyncDone_1, reject);\n                            }\n                            catch (e) {\n                                reject(e);\n                            }\n                        }, reject);\n                        return promise;\n                    }\n                    else {\n                        var dnRes = _doneChk(isDone, state, cbResult, thisArg);\n                        if (isPromiseLike(dnRes)) {\n                            promise = promise || _createPromise_1();\n                            doAwait(dnRes, _handleAsyncDone_1, reject);\n                            return promise;\n                        }\n                        else {\n                            isDone = !!dnRes;\n                        }\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                    return promise;\n                }\n            }\n            if (isDone && resolve) {\n                resolve(state.res);\n            }\n            return promise || state.res;\n        };\n        return _processNext_1();\n    }\n}\n\nfunction arrForEachAsync(theArray, callbackFn, thisArg) {\n    if (theArray) {\n        var len_1 = getLength(theArray);\n        if (len_1) {\n            var isDone = function (state) {\n                if (state.iter >= len_1 || state.res === -1) {\n                    return true;\n                }\n            };\n            return doWhileAsync(function (state) {\n                var idx = state.iter;\n                if (idx in theArray) {\n                    return callbackFn.call(thisArg || theArray, theArray[idx], idx, theArray);\n                }\n            }, isDone);\n        }\n    }\n}\n\nvar _iterSymbol;\nvar _iterAsyncSymbol;\nfunction iterForOfAsync(iter, callbackFn, thisArg) {\n    var err;\n    var iterResult;\n    var theIter = iter;\n    function onFailed(failed) {\n        err = { e: failed };\n        if (theIter.throw) {\n            iterResult = null;\n            theIter.throw(err);\n        }\n        throw failed;\n    }\n    function onFinally() {\n        try {\n            if (iterResult && !iterResult[DONE]) {\n                theIter[RETURN] && theIter[RETURN](iterResult);\n            }\n        }\n        finally {\n            if (err) {\n                throw err.e;\n            }\n        }\n    }\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterAsyncSymbol && (_iterAsyncSymbol = createCachedValue(getKnownSymbol(0 )));\n            theIter = iter[_iterAsyncSymbol.v] ? iter[_iterAsyncSymbol.v]() : null;\n            if (!theIter) {\n                !_iterSymbol && (_iterSymbol = createCachedValue(getKnownSymbol(3 )));\n                theIter = iter[_iterSymbol.v] ? iter[_iterSymbol.v]() : null;\n            }\n        }\n        if (theIter && isIterator(theIter)) {\n            var result = void 0;\n            try {\n                result = doWhileAsync(function (state) {\n                    return doAwait(theIter.next(), function (res) {\n                        iterResult = res;\n                        if (!res[DONE]) {\n                            return fnCall(callbackFn, thisArg || theIter, iterResult[VALUE], state.iter, theIter);\n                        }\n                    }, function (reason) {\n                        state.isDone = true;\n                        onFailed(reason);\n                    });\n                }, function (state) {\n                    if (!iterResult || iterResult[DONE] || state.res === -1) {\n                        onFinally();\n                        return true;\n                    }\n                }, thisArg || theIter);\n                if (isPromiseLike(result)) {\n                    result = doFinally(result.catch(onFailed), onFinally);\n                }\n                return result;\n            }\n            catch (failed) {\n                onFailed(failed);\n            }\n            finally {\n                if (result && !isPromiseLike(result)) {\n                    onFinally();\n                }\n            }\n        }\n    }\n}\n\nvar REJECT = \"reject\";\nvar REJECTED_ERROR = \"Rejected\";\nvar _schedulerId = 0;\nvar _debugName;\nvar _debugIntState;\nvar _customErrors = {};\nfunction _rejectDone() {\n}\nfunction _createError(type, evt, message) {\n    !_customErrors[type] && (_customErrors[type] = createCustomError(type));\n    var now = utcNow();\n    return new (_customErrors[type])(\"Task [\".concat(evt.id, \"] \").concat(message || \"\", \"- \").concat((evt.st ? \"Running\" : \"Waiting\"), \": \").concat(_calcTime(now, evt.st || evt.cr)));\n}\nfunction _calcTime(now, start) {\n    return ((now - start) || \"0\") + \" ms\";\n}\nfunction _abortStaleTasks(taskQueue, staleTimeoutPeriod) {\n    var now = utcNow();\n    var expired = now - staleTimeoutPeriod;\n    arrForEach(taskQueue, function (evt) {\n        if (evt && !evt.rj && (evt.st && evt.st < expired) || (!evt.st && evt.cr && evt.cr < expired)) {\n            evt && evt[REJECT](evt.rj || _createError(\"Aborted\", evt, \"Stale \"));\n        }\n    });\n}\nfunction _removeTask(queue, taskDetail) {\n    var idx = arrIndexOf(queue, taskDetail);\n    if (idx !== -1) {\n        queue.splice(idx, 1);\n    }\n}\nfunction _addDebugState(theScheduler, nameFn, stateFn) {\n    _debugName = _debugName || { toString: function () { return \"[[SchedulerName]]\"; } };\n    _debugIntState = _debugIntState || { toString: function () { return \"[[SchedulerState]]\"; } };\n    objDefineProp(theScheduler, _debugName, { get: nameFn });\n    objDefineProp(theScheduler, _debugIntState, { get: stateFn });\n}\nfunction createTaskScheduler(newPromise, name) {\n    var _theTask;\n    var _running = [];\n    var _waiting = [];\n    var _staleTimeoutPeriod = 600000;\n    var _staleTimeoutCheckPeriod = _staleTimeoutPeriod / 10;\n    var _taskCount = 0;\n    var _schedulerName = (name ? (name + \".\") : \"\") + _schedulerId++;\n    var _blockedTimer;\n    newPromise = newPromise || createPromise;\n    var _startBlockedTimer = function () {\n        var hasTasks = (getLength(_running) + getLength(_waiting)) > 0;\n        if (_staleTimeoutPeriod > 0) {\n            if (!_blockedTimer) {\n                _blockedTimer = scheduleTimeout(function () {\n                    _abortStaleTasks(_running, _staleTimeoutPeriod);\n                    _abortStaleTasks(_waiting, _staleTimeoutPeriod);\n                    _blockedTimer && (_blockedTimer.enabled = ((getLength(_running) + getLength(_waiting)) > 0));\n                }, _staleTimeoutCheckPeriod);\n                _blockedTimer.unref();\n            }\n            _blockedTimer && (_blockedTimer.enabled = hasTasks);\n        }\n    };\n    var _queueTask = function (startAction, taskName, timeout) {\n        var _a;\n        var taskId = _schedulerName + \".\" + _taskCount++;\n        if (taskName) {\n            taskId += \"-(\" + taskName + \")\";\n        }\n        var newTask = (_a = {\n                id: taskId,\n                cr: utcNow(),\n                to: timeout\n            },\n            _a[REJECT] = function (reason) {\n                newTask.rj = reason || _createError(REJECTED_ERROR, newTask);\n                newTask[REJECT] = _rejectDone;\n            },\n            _a);\n        if (!_theTask) {\n            newTask.p = newPromise(_runTask(newTask, startAction));\n        }\n        else {\n            newTask.p = _waitForPreviousTask(newTask, _theTask, startAction);\n        }\n        _theTask = newTask;\n        return newTask.p;\n    };\n    var _runTask = function (taskDetail, startAction) {\n        taskDetail.st = utcNow();\n        _running.push(taskDetail);\n        _startBlockedTimer();\n        return function (onTaskResolve, onTaskReject) {\n            var _promiseReject = function (reason) {\n                taskDetail.rj = taskDetail.rj || reason || _createError(REJECTED_ERROR, taskDetail);\n                taskDetail[REJECT] = _rejectDone;\n                _doCleanup(taskDetail);\n                onTaskResolve = null;\n                onTaskReject && onTaskReject(reason);\n                onTaskReject = null;\n            };\n            var taskId = taskDetail.id;\n            if (taskDetail.rj) {\n                _promiseReject(taskDetail.rj);\n            }\n            else {\n                taskDetail[REJECT] = _promiseReject;\n                try {\n                    var startResult = startAction(taskId);\n                    if (taskDetail.to && isPromiseLike(startResult)) {\n                        taskDetail.t = scheduleTimeout(function () {\n                            _promiseReject(_createError(\"Timeout\", taskDetail));\n                        }, taskDetail.to);\n                    }\n                    doAwait(startResult, function (theResult) {\n                        _doCleanup(taskDetail);\n                        try {\n                            onTaskResolve && onTaskResolve(theResult);\n                        }\n                        catch (e) {\n                            onTaskReject && onTaskReject(e);\n                        }\n                        onTaskReject = null;\n                        onTaskResolve = null;\n                    }, _promiseReject);\n                }\n                catch (e) {\n                    _promiseReject(e);\n                }\n            }\n        };\n    };\n    var _waitForPreviousTask = function (taskDetail, prevTask, startAction) {\n        _waiting.push(taskDetail);\n        _startBlockedTimer();\n        return newPromise(function (onWaitResolve, onWaitReject) {\n            doAwaitResponse(prevTask.p, function () {\n                _removeTask(_waiting, taskDetail);\n                _runTask(taskDetail, startAction)(onWaitResolve, onWaitReject);\n            });\n        });\n    };\n    var _doCleanup = function (taskDetail) {\n        _removeTask(_running, taskDetail);\n        taskDetail.t && taskDetail.t.cancel();\n        taskDetail.t = null;\n        if (_theTask && _theTask === taskDetail) {\n            _theTask = null;\n            if (getLength(_running) + getLength(_waiting) === 0) {\n                _blockedTimer && _blockedTimer.cancel();\n                _blockedTimer = null;\n            }\n        }\n    };\n    var theScheduler = {\n        idle: true,\n        queue: _queueTask,\n        setStaleTimeout: function (staleTimeout, staleCheckPeriod) {\n            _blockedTimer && _blockedTimer.cancel();\n            _blockedTimer = null;\n            _staleTimeoutPeriod = staleTimeout;\n            _staleTimeoutCheckPeriod = staleCheckPeriod || staleTimeout / 10;\n            _startBlockedTimer();\n        }\n    };\n    objDefine(theScheduler, \"idle\", {\n        g: function () {\n            return getLength(_running) + getLength(_waiting) === 0;\n        }\n    });\n    _addDebugState(theScheduler, function () { return _schedulerName; }, function () {\n        return {\n            l: _theTask,\n            r: _running,\n            w: _waiting\n        };\n    });\n    return theScheduler;\n}\n\nvar toStringTagSymbol = getKnownSymbol(11 );\nvar PolyPromise = /*#__PURE__*/ (function () {\n    function PolyPromiseImpl(executor) {\n        this._$ = createAsyncPromise(executor);\n        if (toStringTagSymbol) {\n            this[toStringTagSymbol] = \"Promise\";\n        }\n        objDefineProp(this, \"state\", {\n            get: function () {\n                return this._$.state;\n            }\n        });\n    }\n    PolyPromiseImpl.all = createAsyncAllPromise;\n    PolyPromiseImpl.race = createAsyncRacePromise;\n    PolyPromiseImpl.any = createAsyncAnyPromise;\n    PolyPromiseImpl.reject = createAsyncRejectedPromise;\n    PolyPromiseImpl.resolve = createAsyncResolvedPromise;\n    PolyPromiseImpl.allSettled = createAsyncAllSettledPromise;\n    var theProto = PolyPromiseImpl.prototype;\n    theProto.then = function (onResolved, onRejected) {\n        return this._$.then(onResolved, onRejected);\n    };\n    theProto.catch = function (onRejected) {\n        return this._$.catch(onRejected);\n    };\n    theProto.finally = function (onfinally) {\n        return this._$.finally(onfinally);\n    };\n    return PolyPromiseImpl;\n}());\n\nexport { PolyPromise, arrForEachAsync, createAllPromise, createAllSettledPromise, createAnyPromise, createAsyncAllPromise, createAsyncAllSettledPromise, createAsyncAnyPromise, createAsyncPromise, createAsyncRacePromise, createAsyncRejectedPromise, createAsyncResolvedPromise, createIdleAllPromise, createIdleAllSettledPromise, createIdleAnyPromise, createIdlePromise, createIdleRacePromise, createIdleRejectedPromise, createIdleResolvedPromise, createNativeAllPromise, createNativeAllSettledPromise, createNativeAnyPromise, createNativePromise, createNativeRacePromise, createNativeRejectedPromise, createNativeResolvedPromise, createPromise, createRacePromise, createRejectedPromise, createResolvedPromise, createSyncAllPromise, createSyncAllSettledPromise, createSyncAnyPromise, createSyncPromise, createSyncRacePromise, createSyncRejectedPromise, createSyncResolvedPromise, createTaskScheduler, createTimeoutPromise, doAwait, doAwaitResponse, doFinally, doWhileAsync, iterForOfAsync, setCreatePromiseImpl, setDefaultIdlePromiseTimeout, setDefaultIdleTimeout, setPromiseDebugState };\n//# sourceMappingURL=ts-async.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.1';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrSlice, getLength } from \"@nevware21/ts-utils\";\r\nimport { _DYN_UNLOAD } from \"../__DynamicConstants\";\r\n/**\r\n * Run the unload function of the target object if it exists\r\n * @param target - The target object that contains the unload function\r\n * @param isAsync - The caller identifies whether it is expecting the operation to complete synchronously or asynchronously. Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @returns The result of the target function\r\n */\r\nexport function runTargetUnload(target, isAsync) {\r\n    if (target && target[_DYN_UNLOAD /* @min:%2eunload */]) {\r\n        return target[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n    }\r\n}\r\n/**\r\n * Call the unload function on all targets handling any returned [IPromise](https://nevware21.github.io/ts-async/typedoc/interfaces/IPromise.html)\r\n * / Promise before calling the next targets unload\r\n * @param targets - An array of the targets to unload\r\n * @param isAsync - The caller identifies whether it is expecting the operations to complete synchronously or asynchronously.  Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @param done - Optional callback function to call once all of the unload functions have been called.\r\n */\r\nexport function doUnloadAll(targets, isAsync, done) {\r\n    var result;\r\n    if (!done) {\r\n        result = createPromise(function (resolved) {\r\n            done = resolved;\r\n        });\r\n    }\r\n    if (targets && getLength(targets) > 0) {\r\n        doAwaitResponse(runTargetUnload(targets[0], isAsync), function () {\r\n            doUnloadAll(arrSlice(targets, 1), isAsync, done);\r\n        });\r\n    }\r\n    else {\r\n        done();\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=AsyncUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var ChannelControllerPriority = 500;\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n// export const SampleRate = \"sampleRate\";\r\n// export const ProcessLegacy = \"ProcessLegacy\";\r\n// export const HttpMethod = \"http.method\";\r\n// export const DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n// export const DEFAULT_BREEZE_PATH = \"/v2/track\";\r\n// export const strNotSpecified = \"not_specified\";\r\n// export const strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = true,\r\n        _a.v = defaultValue,\r\n        _a;\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { arrForEach, arrIndexOf, dumpObj, getDocument, getLazy, getNavigator, isArray, isFunction, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, strEndsWith, strIndexOf, strLeft, strSubstring, strTrim, utcNow } from \"@nevware21/ts-utils\";\r\nimport { cfgDfMerge } from \"../Config/ConfigDefaultHelpers\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ENABLED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROTOCOL, _DYN_SET_DF, _DYN_SPLIT, _DYN_UNLOAD, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getLocation, isIE } from \"./EnvUtils\";\r\nimport { getExceptionName, isNotNullOrUndefined, setValue, strContains } from \"./HelperFuncs\";\r\nimport { STR_DOMAIN, STR_EMPTY, STR_PATH, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc;\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n// // `isCookieUseDisabled` is deprecated, so explicitly casting as a key of IConfiguration to avoid typing error\r\n// // when both isCookieUseDisabled and disableCookiesUsage are used disableCookiesUsage will take precedent, which is\r\n// // why its listed first\r\n/**\r\n * Set the supported dynamic config values as undefined (or an empty object) so that\r\n * any listeners will be informed of any changes.\r\n * Explicitly NOT including the deprecated `isCookieUseDisabled` as we don't want to support\r\n * the v1 deprecated field as dynamic for updates\r\n */\r\nvar rootDefaultConfig = (_a = {\r\n        cookieCfg: cfgDfMerge((_b = {},\r\n            _b[STR_DOMAIN] = { fb: \"cookieDomain\", dfVal: isNotNullOrUndefined },\r\n            _b.path = { fb: \"cookiePath\", dfVal: isNotNullOrUndefined },\r\n            _b.enabled = UNDEFINED_VALUE,\r\n            _b.ignoreCookies = UNDEFINED_VALUE,\r\n            _b.blockedCookies = UNDEFINED_VALUE,\r\n            _b)),\r\n        cookieDomain: UNDEFINED_VALUE,\r\n        cookiePath: UNDEFINED_VALUE\r\n    },\r\n    _a[strDisableCookiesUsage] = UNDEFINED_VALUE,\r\n    _a);\r\nfunction _getDoc() {\r\n    !_doc && (_doc = getLazy(function () { return getDocument(); }));\r\n}\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nfunction _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _isIgnoredCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.ignoreCookies)) {\r\n        return arrIndexOf(cookieMgrCfg.ignoreCookies, name) !== -1;\r\n    }\r\n    return false;\r\n}\r\nfunction _isBlockedCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.blockedCookies)) {\r\n        if (arrIndexOf(cookieMgrCfg.blockedCookies, name) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return _isIgnoredCookie(cookieMgrCfg, name);\r\n}\r\nfunction _isCfgEnabled(rootConfig, cookieMgrConfig) {\r\n    var isCfgEnabled = cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */];\r\n    if (isNullOrUndefined(isCfgEnabled)) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        // This field is deprecated and dynamic updates will not be fully supported\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        // If this value is defined it takes precedent over the above\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        // Not setting the cookieMgrConfig.enabled as that will update (set) the global dynamic config\r\n        // So future \"updates\" then may not be as expected\r\n        isCfgEnabled = cookieEnabled;\r\n    }\r\n    return isCfgEnabled;\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core\r\n * @param config\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config.cookieCfg;\r\n        if (cookieCfg && cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {})[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var _a;\r\n    var cookieMgrConfig;\r\n    var _path;\r\n    var _domain;\r\n    var unloadHandler;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled;\r\n    var _getCookieFn;\r\n    var _setCookieFn;\r\n    var _delCookieFn;\r\n    // Make sure the root config is dynamic as it may be the global config\r\n    rootConfig = createDynamicConfig(rootConfig || _globalCookieConfig, null, logger).cfg;\r\n    // Will get recalled if the referenced configuration is changed\r\n    unloadHandler = onConfigChange(rootConfig, function (details) {\r\n        // Make sure the root config has all of the the defaults to the root config to ensure they are dynamic\r\n        details[_DYN_SET_DF /* @min:%2esetDf */](details.cfg, rootDefaultConfig);\r\n        // Create and apply the defaults to the cookieCfg element\r\n        cookieMgrConfig = details.ref(details.cfg, \"cookieCfg\"); // details.setDf(details.cfg.cookieCfg, defaultConfig);\r\n        _path = cookieMgrConfig[STR_PATH /* @min:%2epath */] || \"/\";\r\n        _domain = cookieMgrConfig[STR_DOMAIN /* @min:%2edomain */];\r\n        // Explicitly checking against false, so that setting to undefined will === true\r\n        _enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false;\r\n        _getCookieFn = cookieMgrConfig.getCookie || _getCookieValue;\r\n        _setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n        _delCookieFn = cookieMgrConfig.delCookie || _setCookieValue;\r\n    }, logger);\r\n    var cookieMgr = (_a = {\r\n            isEnabled: function () {\r\n                var enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false && _enabled && areCookiesSupported(logger);\r\n                // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n                // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n                var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n                if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                    // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                    // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                    enabled = _isMgrEnabled(gblManager);\r\n                }\r\n                return enabled;\r\n            },\r\n            setEnabled: function (value) {\r\n                // Explicitly checking against false, so that setting to undefined will === true\r\n                _enabled = value !== false;\r\n                cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */] = value;\r\n            },\r\n            set: function (name, value, maxAgeSec, domain, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr) && !_isBlockedCookie(cookieMgrConfig, name)) {\r\n                    var values = {};\r\n                    var theValue = strTrim(value || STR_EMPTY);\r\n                    var idx = strIndexOf(theValue, \";\");\r\n                    if (idx !== -1) {\r\n                        theValue = strTrim(strLeft(value, idx));\r\n                        values = _extractParts(strSubstring(value, idx + 1));\r\n                    }\r\n                    // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                    setValue(values, STR_DOMAIN, domain || _domain, isTruthy, isUndefined);\r\n                    if (!isNullOrUndefined(maxAgeSec)) {\r\n                        var _isIE = isIE();\r\n                        if (isUndefined(values[strExpires])) {\r\n                            var nowMs = utcNow();\r\n                            // Only add expires if not already present\r\n                            var expireMs = nowMs + (maxAgeSec * 1000);\r\n                            // Sanity check, if zero or -ve then ignore\r\n                            if (expireMs > 0) {\r\n                                var expiry = new Date();\r\n                                expiry.setTime(expireMs);\r\n                                setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || STR_EMPTY, isTruthy);\r\n                            }\r\n                        }\r\n                        if (!_isIE) {\r\n                            // Only replace if not already present\r\n                            setValue(values, \"max-age\", STR_EMPTY + maxAgeSec, null, isUndefined);\r\n                        }\r\n                    }\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1[_DYN_PROTOCOL /* @min:%2eprotocol */] === \"https:\") {\r\n                        setValue(values, \"secure\", null, null, isUndefined);\r\n                        // Only set same site if not also secure\r\n                        if (_allowUaSameSite === null) {\r\n                            _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {})[_DYN_USER_AGENT /* @min:%2euserAgent */]);\r\n                        }\r\n                        if (_allowUaSameSite) {\r\n                            setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                        }\r\n                    }\r\n                    setValue(values, STR_PATH, path || _path, null, isUndefined);\r\n                    //let setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                    _setCookieFn(name, _formatCookieValue(theValue, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            },\r\n            get: function (name) {\r\n                var value = STR_EMPTY;\r\n                if (_isMgrEnabled(cookieMgr) && !_isIgnoredCookie(cookieMgrConfig, name)) {\r\n                    value = _getCookieFn(name);\r\n                }\r\n                return value;\r\n            },\r\n            del: function (name, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr)) {\r\n                    // Only remove the cookie if the manager and cookie support has not been disabled\r\n                    result = cookieMgr.purge(name, path);\r\n                }\r\n                return result;\r\n            },\r\n            purge: function (name, path) {\r\n                var _a;\r\n                var result = false;\r\n                if (areCookiesSupported(logger)) {\r\n                    // Setting the expiration date in the past immediately removes the cookie\r\n                    var values = (_a = {},\r\n                        _a[STR_PATH] = path ? path : \"/\",\r\n                        _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                        _a);\r\n                    if (!isIE()) {\r\n                        // Set max age to expire now\r\n                        values[\"max-age\"] = \"0\";\r\n                    }\r\n                    // let delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                    _delCookieFn(name, _formatCookieValue(STR_EMPTY, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        _a[_DYN_UNLOAD /* @min:unload */] = function (isAsync) {\r\n            unloadHandler && unloadHandler.rm();\r\n            unloadHandler = null;\r\n        },\r\n        _a);\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        !_doc && _getDoc();\r\n        try {\r\n            var doc = _doc.v || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 68 /* _eInternalMessageId.CannotAccessCookie */, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue[_DYN_LENGTH /* @min:%2elength */]) {\r\n        var parts = strTrim(theValue)[_DYN_SPLIT /* @min:%2esplit */](\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || STR_EMPTY);\r\n            if (thePart) {\r\n                var idx = strIndexOf(thePart, \"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(strLeft(thePart, idx))] = strTrim(strSubstring(thePart, idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || STR_EMPTY;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : STR_EMPTY);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = STR_EMPTY;\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        var theCookie = _doc.v[strCookie] || STR_EMPTY;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || STR_EMPTY);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        _doc.v[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, objDefine, safe, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_DATA, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SPLICE, _DYN_UNLOAD, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_OFFLINE_DROP, STR_OFFLINE_SENT, STR_OFFLINE_STORE, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar defaultValues = {\r\n    perfEvtsSendAll: false\r\n};\r\nfunction _runScheduledListeners(asyncNotifications) {\r\n    asyncNotifications.h = null;\r\n    var callbacks = asyncNotifications.cb;\r\n    asyncNotifications.cb = [];\r\n    arrForEach(callbacks, function (cb) {\r\n        // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n        safe(cb.fn, [cb.arg]);\r\n    });\r\n}\r\n// This function is used to combine the logic of running the listeners and handling the async notifications so that they don't\r\n// create multiple timers if there are multiple async listeners.\r\nfunction _runListeners(listeners, name, asyncNotifications, callback) {\r\n    arrForEach(listeners, function (listener) {\r\n        if (listener && listener[name]) {\r\n            if (asyncNotifications) {\r\n                // Schedule the callback to be called after the current call stack has cleared.\r\n                asyncNotifications.cb[_DYN_PUSH /* @min:%2epush */]({\r\n                    fn: callback,\r\n                    arg: listener\r\n                });\r\n                asyncNotifications.h = asyncNotifications.h || scheduleTimeout(_runScheduledListeners, 0, asyncNotifications);\r\n            }\r\n            else {\r\n                // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n                safe(callback, [listener]);\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var perfEvtsSendAll;\r\n        var unloadHandler;\r\n        var _listeners = [];\r\n        var _asyncNotifications = {\r\n            h: null,\r\n            cb: []\r\n        };\r\n        var cfgHandler = createDynamicConfig(config, defaultValues);\r\n        unloadHandler = cfgHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n            perfEvtsSendAll = !!details.cfg.perfEvtsSendAll;\r\n        });\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            objDefine(_self, \"listeners\", {\r\n                g: function () { return _listeners; }\r\n            });\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _listeners[_DYN_PUSH /* @min:%2epush */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - AWTNotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                var index = arrIndexOf(_listeners, listener);\r\n                while (index > -1) {\r\n                    _listeners[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                    index = arrIndexOf(_listeners, listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param events - The array of events that have been sent.\r\n             */\r\n            _self[STR_EVENTS_SENT /* @min:%2eeventsSent */] = function (events) {\r\n                _runListeners(_listeners, STR_EVENTS_SENT, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_SENT /* @min:%2eeventsSent */](events);\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param events - The array of events that have been discarded by the SDK.\r\n             * @param reason - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */] = function (events, reason) {\r\n                _runListeners(_listeners, STR_EVENTS_DISCARDED, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */](events, reason);\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param sendReason - The reason why the event batch is being sent.\r\n             * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */] = function (sendReason, isAsync) {\r\n                _runListeners(_listeners, STR_EVENTS_SEND_REQUEST, isAsync ? _asyncNotifications : null, function (listener) {\r\n                    listener[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendReason, isAsync);\r\n                });\r\n            };\r\n            _self[STR_PERF_EVENT /* @min:%2eperfEvent */] = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */]()) {\r\n                        _runListeners(_listeners, STR_PERF_EVENT, null, function (listener) {\r\n                            if (perfEvent[_DYN_IS_ASYNC /* @min:%2eisAsync */]) {\r\n                                scheduleTimeout(function () { return listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent); }, 0);\r\n                            }\r\n                            else {\r\n                                listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */] = function (events) {\r\n                if (events && events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_STORE, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */](events);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */] = function (batch) {\r\n                if (batch && batch[_DYN_DATA /* @min:%2edata */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_SENT, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */](batch);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */] = function (cnt, reason) {\r\n                if (cnt > 0) {\r\n                    var rn_1 = reason || 0; // default is unknown\r\n                    _runListeners(_listeners, STR_OFFLINE_DROP, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */](cnt, rn_1);\r\n                    });\r\n                }\r\n            };\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                var _finishUnload = function () {\r\n                    unloadHandler && unloadHandler.rm();\r\n                    unloadHandler = null;\r\n                    _listeners = [];\r\n                    // Clear any async listener\r\n                    _asyncNotifications.h && _asyncNotifications.h[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                    _asyncNotifications.h = null;\r\n                    _asyncNotifications.cb = [];\r\n                };\r\n                var waiting;\r\n                _runListeners(_listeners, \"unload\", null, function (listener) {\r\n                    var asyncUnload = listener[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n                    if (asyncUnload) {\r\n                        if (!waiting) {\r\n                            waiting = [];\r\n                        }\r\n                        waiting[_DYN_PUSH /* @min:%2epush */](asyncUnload);\r\n                    }\r\n                });\r\n                if (waiting) {\r\n                    return createPromise(function (resolve) {\r\n                        return doAwaitResponse(createAllPromise(waiting), function () {\r\n                            _finishUnload();\r\n                            resolve();\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    _finishUnload();\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for NotificationManager.prototype.addNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.removeNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.eventsSent.\r\n// Removed Stub for NotificationManager.prototype.eventsDiscarded.\r\n// Removed Stub for NotificationManager.prototype.eventsSendRequest.\r\n// Removed Stub for NotificationManager.prototype.perfEvent.\r\n// Removed Stub for NotificationManager.prototype.unload.\r\n// Removed Stub for NotificationManager.prototype.offlineEventsStored.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchSent.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchDrop.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    NotificationManager.__ieDyn=1;\n\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = utcNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { random32 } from \"./RandomHelper\";\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nexport function newGuid() {\r\n    var uuid = generateW3CId();\r\n    return strSubstring(uuid, 0, 8) + \"-\" + strSubstring(uuid, 8, 12) + \"-\" + strSubstring(uuid, 12, 16) + \"-\" + strSubstring(uuid, 16, 20) + \"-\" + strSubstring(uuid, 20);\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value[_DYN_LENGTH /* @min:%2elength */];\r\n        var start = len - search[_DYN_LENGTH /* @min:%2elength */];\r\n        return strSubstring(value, start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = STR_EMPTY, tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return strSubstr(oct, 0, 8) + strSubstr(oct, 9, 4) + \"4\" + strSubstr(oct, 13, 3) + clockSequenceHi + strSubstr(oct, 16, 3) + strSubstr(oct, 19, 12);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, isArray, isString, strLeft, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_ATTRIBUTE, _DYN_LENGTH, _DYN_PUSH, _DYN_SPAN_ID, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_VERSION } from \"../__DynamicConstants\";\r\nimport { generateW3CId } from \"./CoreUtils\";\r\nimport { findMetaTag, findNamedServerTiming } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// using {0,16} for leading and trailing whitespace just to constrain the possible runtime of a random string\r\nvar TRACE_PARENT_REGEX = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})(-[^\\s]{1,64})?$/i;\r\nvar DEFAULT_VERSION = \"00\";\r\nvar INVALID_VERSION = \"ff\";\r\nvar INVALID_TRACE_ID = \"00000000000000000000000000000000\";\r\nvar INVALID_SPAN_ID = \"0000000000000000\";\r\nvar SAMPLED_FLAG = 0x01;\r\nfunction _isValid(value, len, invalidValue) {\r\n    if (value && value[_DYN_LENGTH /* @min:%2elength */] === len && value !== invalidValue) {\r\n        return !!value.match(/^[\\da-f]*$/i);\r\n    }\r\n    return false;\r\n}\r\nfunction _formatValue(value, len, defValue) {\r\n    if (_isValid(value, len)) {\r\n        return value;\r\n    }\r\n    return defValue;\r\n}\r\nfunction _formatFlags(value) {\r\n    if (isNaN(value) || value < 0 || value > 255) {\r\n        value = 0x01;\r\n    }\r\n    var result = value.toString(16);\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < 2) {\r\n        result = \"0\" + result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new ITraceParent instance using the provided values.\r\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\r\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\r\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\r\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\r\n * @returns\r\n */\r\nexport function createTraceParent(traceId, spanId, flags, version) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = _isValid(version, 2, INVALID_VERSION) ? version : DEFAULT_VERSION,\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = isValidTraceId(traceId) ? traceId : generateW3CId(),\r\n        _a[_DYN_SPAN_ID /* @min:spanId */] = isValidSpanId(spanId) ? spanId : strLeft(generateW3CId(), 16),\r\n        _a.traceFlags = flags >= 0 && flags <= 0xFF ? flags : 1,\r\n        _a;\r\n}\r\n/**\r\n * Attempt to parse the provided string as a W3C TraceParent header value (https://www.w3.org/TR/trace-context/#traceparent-header)\r\n *\r\n * @param value - The value to be parsed\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function parseTraceParent(value, selectIdx) {\r\n    var _a;\r\n    if (!value) {\r\n        // Don't pass a null/undefined or empty string\r\n        return null;\r\n    }\r\n    if (isArray(value)) {\r\n        // The value may have been encoded on the page into an array so handle this automatically\r\n        value = value[0] || \"\";\r\n    }\r\n    if (!value || !isString(value) || value[_DYN_LENGTH /* @min:%2elength */] > 8192) {\r\n        // limit potential processing based on total length\r\n        return null;\r\n    }\r\n    if (value.indexOf(\",\") !== -1) {\r\n        var values = value[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        value = values[selectIdx > 0 && values[_DYN_LENGTH /* @min:%2elength */] > selectIdx ? selectIdx : 0];\r\n    }\r\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\r\n    var match = TRACE_PARENT_REGEX.exec(strTrim(value));\r\n    if (!match || // No match\r\n        match[1] === INVALID_VERSION || // version ff is forbidden\r\n        match[2] === INVALID_TRACE_ID || // All zeros is considered to be invalid\r\n        match[3] === INVALID_SPAN_ID) { // All zeros is considered to be invalid\r\n        return null;\r\n    }\r\n    return _a = {\r\n            version: (match[1] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            traceId: (match[2] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            spanId: (match[3] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()\r\n        },\r\n        _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = parseInt(match[4], 16),\r\n        _a;\r\n}\r\n/**\r\n * Is the provided W3c Trace Id a valid string representation, it must be a 32-character string\r\n * of lowercase hexadecimal characters for example, 4bf92f3577b34da6a3ce929d0e0e4736.\r\n * If all characters as zero (00000000000000000000000000000000) it will be considered an invalid value.\r\n * @param value - The W3c trace Id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidTraceId(value) {\r\n    return _isValid(value, 32, INVALID_TRACE_ID);\r\n}\r\n/**\r\n * Is the provided W3c span id (aka. parent id) a valid string representation, it must be a 16-character\r\n * string of lowercase hexadecimal characters, for example, 00f067aa0ba902b7.\r\n * If all characters are zero (0000000000000000) this is considered an invalid value.\r\n * @param value - The W3c span id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidSpanId(value) {\r\n    return _isValid(value, 16, INVALID_SPAN_ID);\r\n}\r\n/**\r\n * Validates that the provided ITraceParent instance conforms to the currently supported specifications\r\n * @param value\r\n * @returns\r\n */\r\nexport function isValidTraceParent(value) {\r\n    if (!value ||\r\n        !_isValid(value[_DYN_VERSION /* @min:%2eversion */], 2, INVALID_VERSION) ||\r\n        !_isValid(value[_DYN_TRACE_ID /* @min:%2etraceId */], 32, INVALID_TRACE_ID) ||\r\n        !_isValid(value[_DYN_SPAN_ID /* @min:%2espanId */], 16, INVALID_SPAN_ID) ||\r\n        !_isValid(_formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]), 2)) {\r\n        // Each known field must contain a valid value\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Is the parsed traceParent indicating that the trace is currently sampled.\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function isSampledFlag(value) {\r\n    if (isValidTraceParent(value)) {\r\n        return (value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] & SAMPLED_FLAG) === SAMPLED_FLAG;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Format the ITraceParent value as a string using the supported and know version formats.\r\n * So even if the passed traceParent is a later version the string value returned from this\r\n * function will convert it to only the known version formats.\r\n * This currently only supports version \"00\" and invalid \"ff\"\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function formatTraceParent(value) {\r\n    if (value) {\r\n        // Special Note: This only supports formatting as version 00, future versions should encode any known supported version\r\n        // So parsing a future version will populate the correct version value but reformatting will reduce it to version 00.\r\n        var flags = _formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]);\r\n        if (!_isValid(flags, 2)) {\r\n            flags = \"01\";\r\n        }\r\n        var version = value[_DYN_VERSION /* @min:%2eversion */] || DEFAULT_VERSION;\r\n        if (version !== \"00\" && version !== \"ff\") {\r\n            // Reduce version to \"00\"\r\n            version = DEFAULT_VERSION;\r\n        }\r\n        // Format as version 00\r\n        return \"\".concat(version.toLowerCase(), \"-\").concat(_formatValue(value.traceId, 32, INVALID_TRACE_ID).toLowerCase(), \"-\").concat(_formatValue(value.spanId, 16, INVALID_SPAN_ID).toLowerCase(), \"-\").concat(flags.toLowerCase());\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function findW3cTraceParent(selectIdx) {\r\n    var name = \"traceparent\";\r\n    var traceParent = parseTraceParent(findMetaTag(name), selectIdx);\r\n    if (!traceParent) {\r\n        traceParent = parseTraceParent(findNamedServerTiming(name), selectIdx);\r\n    }\r\n    return traceParent;\r\n}\r\n/**\r\n * Find all script tags in the provided document and return the information about them.\r\n * @param doc\r\n * @returns\r\n */\r\nexport function findAllScripts(doc) {\r\n    var scripts = doc.getElementsByTagName(\"script\");\r\n    var result = [];\r\n    arrForEach(scripts, function (script) {\r\n        var src = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"src\");\r\n        if (src) {\r\n            var crossOrigin = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"crossorigin\");\r\n            var async = script.hasAttribute(\"async\") === true;\r\n            var defer = script.hasAttribute(\"defer\") === true;\r\n            var referrerPolicy = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"referrerpolicy\");\r\n            var info = { url: src };\r\n            if (crossOrigin) {\r\n                info.crossOrigin = crossOrigin;\r\n            }\r\n            if (async) {\r\n                info.async = async;\r\n            }\r\n            if (defer) {\r\n                info.defer = defer;\r\n            }\r\n            if (referrerPolicy) {\r\n                info.referrerPolicy = referrerPolicy;\r\n            }\r\n            result[_DYN_PUSH /* @min:%2epush */](info);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//# sourceMappingURL=W3cTraceParent.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_DF, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \r\n// \r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nfunction _addInitializer(_initializers, id, telemetryInitializer) {\r\n    var theInitializer = {\r\n        id: id,\r\n        fn: telemetryInitializer\r\n    };\r\n    arrAppend(_initializers, theInitializer);\r\n    var handler = {\r\n        remove: function () {\r\n            arrForEach(_initializers, function (initializer, idx) {\r\n                if (initializer.id === theInitializer.id) {\r\n                    _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return handler;\r\n}\r\nfunction _runInitializers(_initializers, item, logger) {\r\n    var doNotSendItem = false;\r\n    var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n    for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n        var telemetryInitializer = _initializers[i];\r\n        if (telemetryInitializer) {\r\n            try {\r\n                if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                    doNotSendItem = true;\r\n                    break;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // log error but dont stop executing rest of the telemetry initializers\r\n                // doNotSendItem = true;\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Telemetry initializer failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n            }\r\n        }\r\n    }\r\n    return !doNotSendItem;\r\n}\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                return _addInitializer(_initializers, _id++, telemetryInitializer);\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                if (_runInitializers(_initializers, item, itemCtx ? itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]() : _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]())) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryInitializerPlugin.__ieDyn=1;\n\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport { __spreadArrayFn as __spreadArray } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllSettledPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrAppend, arrForEach, arrIndexOf, createTimeout, deepExtend, hasDocument, isFunction, isNullOrUndefined, isPlainObject, isPromiseLike, objDeepFreeze, objDefine, objForEachKey, objFreeze, objHasOwn, scheduleTimeout, throwError } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { ActiveStatus } from \"../JavaScriptSDK.Enums/InitActiveStatusEnum\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_CREATE_NEW, _DYN_ENABLED, _DYN_GET_NOTIFY_MGR, _DYN_GET_PLUGIN, _DYN_GET_PROCESS_TEL_CONT2, _DYN_IDENTIFIER, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_I_KEY, _DYN_LENGTH, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_NAME, _DYN_NOTIFY, _DYN_ON_COMPLETE, _DYN_POLL_INTERNAL_LOGS, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SET_DF, _DYN_SPLICE, _DYN_STOP_POLLING_INTERNA3, _DYN_TEARDOWN, _DYN_TIME, _DYN_UNLOAD, _DYN_VALUE, _DYN_VERSION, _DYN_WATCH, _DYN__INACTIVE } from \"../__DynamicConstants\";\r\nimport { doUnloadAll, runTargetUnload } from \"./AsyncUtils\";\r\nimport { ChannelControllerPriority } from \"./Constants\";\r\nimport { createCookieMgr } from \"./CookieMgr\";\r\nimport { createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { getDebugListener } from \"./DbgExtensionUtils\";\r\nimport { DiagnosticLogger, _InternalLogMessage, _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getSetValue, isNotNullOrUndefined, proxyFunctionAs, proxyFunctions, toISOString } from \"./HelperFuncs\";\r\nimport { STR_CHANNELS, STR_CORE, STR_CREATE_PERF_MGR, STR_DISABLED, STR_EMPTY, STR_EVENTS_DISCARDED, STR_EXTENSIONS, STR_EXTENSION_CONFIG, STR_GET_PERF_MGR, STR_PRIORITY, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { PerfManager, doPerf, getGblPerfMgr } from \"./PerfManager\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext, createTelemetryProxyChain } from \"./ProcessTelemetryContext\";\r\nimport { _getPluginState, createDistributedTraceContext, initializePlugins, sortPlugins } from \"./TelemetryHelpers\";\r\nimport { TelemetryInitializerPlugin } from \"./TelemetryInitializerPlugin\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strValidationError = \"Plugins must provide initialize method\";\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar strSdkUnloadingError = \"SDK is still unloading...\";\r\nvar strSdkNotInitialized = \"SDK is not initialized\";\r\nvar maxInitQueueSize = 100;\r\nvar maxInitTimeout = 50000;\r\n// const strPluginUnloadFailed = \"Failed to unload plugin\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze((_a = {\r\n        cookieCfg: {}\r\n    },\r\n    _a[STR_EXTENSIONS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_CHANNELS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_EXTENSION_CONFIG] = { ref: true, v: {} },\r\n    _a[STR_CREATE_PERF_MGR] = UNDEFINED_VALUE,\r\n    _a.loggingLevelConsole = 0 /* eLoggingSeverity.DISABLED */,\r\n    _a.diagnosticLogInterval = UNDEFINED_VALUE,\r\n    _a));\r\n/**\r\n * Helper to create the default performance manager\r\n * @param core\r\n * @param notificationMgr\r\n */\r\nfunction _createPerfManager(core, notificationMgr) {\r\n    return new PerfManager(notificationMgr);\r\n}\r\nfunction _validateExtensions(logger, channelPriority, allExtensions) {\r\n    var _a;\r\n    // Concat all available extensions\r\n    var coreExtensions = [];\r\n    var channels = [];\r\n    // Check if any two extensions have the same priority, then warn to console\r\n    // And extract the local extensions from the\r\n    var extPriorities = {};\r\n    // Extension validation\r\n    arrForEach(allExtensions, function (ext) {\r\n        // Check for ext.initialize\r\n        if (isNullOrUndefined(ext) || isNullOrUndefined(ext[_DYN_INITIALIZE /* @min:%2einitialize */])) {\r\n            throwError(strValidationError);\r\n        }\r\n        var extPriority = ext[STR_PRIORITY /* @min:%2epriority */];\r\n        var identifier = ext[_DYN_IDENTIFIER /* @min:%2eidentifier */];\r\n        if (ext && extPriority) {\r\n            if (!isNullOrUndefined(extPriorities[extPriority])) {\r\n                _warnToConsole(logger, \"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n            }\r\n            else {\r\n                // set a value\r\n                extPriorities[extPriority] = identifier;\r\n            }\r\n        }\r\n        // Split extensions to core and channels\r\n        if (!extPriority || extPriority < channelPriority) {\r\n            // Add to core extension that will be managed by AppInsightsCore\r\n            coreExtensions[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n        else {\r\n            channels[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n    });\r\n    return _a = {},\r\n        _a[STR_CORE /* @min:core */] = coreExtensions,\r\n        _a[STR_CHANNELS /* @min:channels */] = channels,\r\n        _a;\r\n}\r\nfunction _isPluginPresent(thePlugin, plugins) {\r\n    var exists = false;\r\n    arrForEach(plugins, function (plugin) {\r\n        if (plugin === thePlugin) {\r\n            exists = true;\r\n            return -1;\r\n        }\r\n    });\r\n    return exists;\r\n}\r\nfunction _deepMergeConfig(details, target, newValues, merge) {\r\n    // Lets assign the new values to the existing config\r\n    if (newValues) {\r\n        objForEachKey(newValues, function (key, value) {\r\n            if (merge) {\r\n                if (isPlainObject(value) && isPlainObject(target[key])) {\r\n                    // The target is an object and it has a value\r\n                    _deepMergeConfig(details, target[key], value, merge);\r\n                }\r\n            }\r\n            if (merge && isPlainObject(value) && isPlainObject(target[key])) {\r\n                // The target is an object and it has a value\r\n                _deepMergeConfig(details, target[key], value, merge);\r\n            }\r\n            else {\r\n                // Just Assign (replace) and/or make the property dynamic\r\n                details.set(target, key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _findWatcher(listeners, newWatcher) {\r\n    var theListener = null;\r\n    var idx = -1;\r\n    arrForEach(listeners, function (listener, lp) {\r\n        if (listener.w === newWatcher) {\r\n            theListener = listener;\r\n            idx = lp;\r\n            return -1;\r\n        }\r\n    });\r\n    return { i: idx, l: theListener };\r\n}\r\nfunction _addDelayedCfgListener(listeners, newWatcher) {\r\n    var theListener = _findWatcher(listeners, newWatcher).l;\r\n    if (!theListener) {\r\n        theListener = {\r\n            w: newWatcher,\r\n            rm: function () {\r\n                var fnd = _findWatcher(listeners, newWatcher);\r\n                if (fnd.i !== -1) {\r\n                    listeners[_DYN_SPLICE /* @min:%2esplice */](fnd.i, 1);\r\n                }\r\n            }\r\n        };\r\n        listeners[_DYN_PUSH /* @min:%2epush */](theListener);\r\n    }\r\n    return theListener;\r\n}\r\nfunction _registerDelayedCfgListener(config, listeners, logger) {\r\n    arrForEach(listeners, function (listener) {\r\n        var unloadHdl = onConfigChange(config, listener.w, logger);\r\n        delete listener.w; // Clear the listener reference so it will get garbage collected.\r\n        // replace the remove function\r\n        listener.rm = function () {\r\n            unloadHdl.rm();\r\n        };\r\n    });\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _initDebugListener(configHandler, unloadContainer, notificationManager, debugListener) {\r\n    // Will get recalled if any referenced config values are changed\r\n    unloadContainer.add(configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n        var disableDbgExt = details.cfg.disableDbgExt;\r\n        if (disableDbgExt === true && debugListener) {\r\n            // Remove any previously loaded debug listener\r\n            notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](debugListener);\r\n            debugListener = null;\r\n        }\r\n        if (notificationManager && !debugListener && disableDbgExt !== true) {\r\n            debugListener = getDebugListener(details.cfg);\r\n            notificationManager[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](debugListener);\r\n        }\r\n    }));\r\n    return debugListener;\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _createUnloadHook(unloadHook) {\r\n    return objDefine({\r\n        rm: function () {\r\n            unloadHook.rm();\r\n        }\r\n    }, \"toJSON\", { v: function () { return \"aicore::onCfgChange<\" + JSON.stringify(unloadHook) + \">\"; } });\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _configHandler;\r\n        var _isInitialized;\r\n        var _logger;\r\n        var _eventQueue;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        var _cfgPerfManager;\r\n        var _cookieManager;\r\n        var _pluginChain;\r\n        var _configExtensions;\r\n        var _channelConfig;\r\n        var _channels;\r\n        var _isUnloading;\r\n        var _telemetryInitializerPlugin;\r\n        var _internalLogsEventName;\r\n        var _evtNamespace;\r\n        var _unloadHandlers;\r\n        var _hookContainer;\r\n        var _debugListener;\r\n        var _traceCtx;\r\n        var _instrumentationKey;\r\n        var _cfgListeners;\r\n        var _extensions;\r\n        var _pluginVersionStringArr;\r\n        var _pluginVersionString;\r\n        var _activeStatus; // to indicate if ikey or endpoint url promised is resolved or not\r\n        var _endpoint;\r\n        var _initInMemoMaxSize; // max event count limit during wait for init promises to be resolved\r\n        var _isStatusSet; // track if active status is set in case of init timeout and init promises setting the status twice\r\n        var _initTimer;\r\n        /**\r\n         * Internal log poller\r\n         */\r\n        var _internalLogPoller;\r\n        var _internalLogPollerListening;\r\n        var _forceStopInternalLogPoller;\r\n        dynamicProto(AppInsightsCore, this, function (_self) {\r\n            // Set the default values (also called during teardown)\r\n            _initDefaults();\r\n            // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_extensions, _eventQueue];\r\n            };\r\n            _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () { return _isInitialized; };\r\n            // since version 3.3.0\r\n            _self.activeStatus = function () { return _activeStatus; };\r\n            // since version 3.3.0\r\n            // internal\r\n            _self._setPendingStatus = function () {\r\n                _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n            };\r\n            // Creating the self.initialize = ()\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                if (_isUnloading) {\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                // Make sure core is only initialized once\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    throwError(\"Core cannot be initialized more than once\");\r\n                }\r\n                _configHandler = createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false);\r\n                // Re-assigning the local config property so we don't have any references to the passed value and it can be garbage collected\r\n                config = _configHandler.cfg;\r\n                // This will be \"re-run\" if the referenced config properties are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var rootCfg = details.cfg;\r\n                    var isPending = _activeStatus === 3 /* eActiveStatus.PENDING */;\r\n                    if (isPending) {\r\n                        // means waiting for previous promises to be resolved, won't apply new changes\r\n                        return;\r\n                    }\r\n                    _initInMemoMaxSize = rootCfg.initInMemoMaxSize || maxInitQueueSize;\r\n                    // app Insights core only handle ikey and endpointurl, aisku will handle cs\r\n                    var ikey = rootCfg[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    var endpointUrl = rootCfg.endpointUrl; // do not need to validate endpoint url, if it is null, default one will be set by sender\r\n                    if (isNullOrUndefined(ikey)) {\r\n                        _instrumentationKey = null;\r\n                        // if new ikey is null, set status to be inactive, all new events will be saved in memory or dropped\r\n                        _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                        var msg = \"Please provide instrumentation key\";\r\n                        if (!_isInitialized) {\r\n                            // only throw error during initialization\r\n                            throwError(msg);\r\n                        }\r\n                        else {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, msg);\r\n                            _releaseQueues();\r\n                        }\r\n                        return;\r\n                    }\r\n                    var promises = [];\r\n                    if (isPromiseLike(ikey)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](ikey);\r\n                        _instrumentationKey = null; // reset current local ikey variable (otherwise it will always be the previous ikeys if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string\r\n                        _instrumentationKey = ikey;\r\n                    }\r\n                    if (isPromiseLike(endpointUrl)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](endpointUrl);\r\n                        _endpoint = null; // reset current local endpoint variable (otherwise it will always be the previous urls if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string or null\r\n                        _endpoint = endpointUrl;\r\n                    }\r\n                    // at least have one promise\r\n                    if (promises[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        // reset to false for new dynamic changes\r\n                        _isStatusSet = false;\r\n                        _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n                        var initTimeout = isNotNullOrUndefined(rootCfg.initTimeOut) ? rootCfg.initTimeOut : maxInitTimeout; // rootCfg.initTimeOut could be 0\r\n                        var allPromises = createAllSettledPromise(promises);\r\n                        _initTimer = scheduleTimeout(function () {\r\n                            // set _isStatusSet to true\r\n                            // set active status\r\n                            // release queues\r\n                            _initTimer = null;\r\n                            if (!_isStatusSet) {\r\n                                _setStatus();\r\n                            }\r\n                        }, initTimeout);\r\n                        doAwaitResponse(allPromises, function (response) {\r\n                            try {\r\n                                if (_isStatusSet) {\r\n                                    // promises take too long to resolve, ignore them\r\n                                    // active status should be set by timeout already\r\n                                    return;\r\n                                }\r\n                                if (!response.rejected) {\r\n                                    var values = response[_DYN_VALUE /* @min:%2evalue */];\r\n                                    if (values && values[_DYN_LENGTH /* @min:%2elength */]) {\r\n                                        // ikey\r\n                                        var ikeyRes = values[0];\r\n                                        _instrumentationKey = ikeyRes && ikeyRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        // endpoint\r\n                                        if (values[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                                            var endpointRes = values[1];\r\n                                            _endpoint = endpointRes && endpointRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        }\r\n                                    }\r\n                                    if (_instrumentationKey) {\r\n                                        // if ikey is null, no need to trigger extra dynamic changes for extensions\r\n                                        config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = _instrumentationKey; // set config.instrumentationKey for extensions to consume\r\n                                        config.endpointUrl = _endpoint; // set config.endpointUrl for extensions to consume\r\n                                    }\r\n                                }\r\n                                // set _isStatusSet to true\r\n                                // set active status\r\n                                // release queues\r\n                                _setStatus();\r\n                            }\r\n                            catch (e) {\r\n                                if (!_isStatusSet) {\r\n                                    _setStatus();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        // means no promises\r\n                        _setStatus();\r\n                    }\r\n                    //_instrumentationKey = details.cfg.instrumentationKey;\r\n                    // Mark the extensionConfig and all first level keys as referenced\r\n                    // This is so that calls to getExtCfg() will always return the same object\r\n                    // Even when a user may \"re-assign\" the plugin properties (or it's unloaded/reloaded)\r\n                    var extCfg = details.ref(details.cfg, STR_EXTENSION_CONFIG);\r\n                    objForEachKey(extCfg, function (key) {\r\n                        details.ref(extCfg, key);\r\n                    });\r\n                }));\r\n                _notificationManager = notificationManager;\r\n                // Initialize the debug listener outside of the closure to reduce the retained memory footprint\r\n                _debugListener = _initDebugListener(_configHandler, _hookContainer, _notificationManager && _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */](), _debugListener);\r\n                _initPerfManager();\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = logger;\r\n                var cfgExtensions = config[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                // Extension validation\r\n                _configExtensions = [];\r\n                _configExtensions[_DYN_PUSH /* @min:%2epush */].apply(_configExtensions, __spreadArray(__spreadArray([], extensions, false), cfgExtensions, false));\r\n                _channelConfig = config[STR_CHANNELS /* @min:%2echannels */];\r\n                _initPluginChain(null);\r\n                if (!_channels || _channels[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    throwError(\"No \" + STR_CHANNELS + \" available\");\r\n                }\r\n                if (_channelConfig && _channelConfig[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                    var teeController = _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */](\"TeeChannelController\");\r\n                    if (!teeController || !teeController.plugin) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"TeeChannel required\");\r\n                    }\r\n                }\r\n                _registerDelayedCfgListener(config, _cfgListeners, _logger);\r\n                _cfgListeners = null;\r\n                _isInitialized = true;\r\n                if (_activeStatus === ActiveStatus.ACTIVE) {\r\n                    _releaseQueues();\r\n                }\r\n            };\r\n            _self.getChannels = function () {\r\n                var controls = [];\r\n                if (_channels) {\r\n                    arrForEach(_channels, function (channel) {\r\n                        controls[_DYN_PUSH /* @min:%2epush */](channel);\r\n                    });\r\n                }\r\n                return objFreeze(controls);\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */](), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throwError(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    if (!telemetryItem[_DYN_NAME /* @min:%2ename */] && isNullOrUndefined(telemetryItem[_DYN_NAME /* @min:%2ename */])) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        throwError(\"telemetry name required\");\r\n                    }\r\n                    // setup default iKey if not passed in\r\n                    telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] = telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                    // add default timestamp if not passed in\r\n                    telemetryItem[_DYN_TIME /* @min:%2etime */] = telemetryItem[_DYN_TIME /* @min:%2etime */] || toISOString(new Date());\r\n                    // Common Schema 4.0\r\n                    telemetryItem.ver = telemetryItem.ver || \"4.0\";\r\n                    if (!_isUnloading && _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]() && _activeStatus === ActiveStatus.ACTIVE) {\r\n                        // Process the telemetry plugin chain\r\n                        _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](telemetryItem);\r\n                    }\r\n                    else if (_activeStatus !== ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */]) {\r\n                        // Queue events until all extensions are initialized\r\n                        if (_eventQueue[_DYN_LENGTH /* @min:%2elength */] <= _initInMemoMaxSize) {\r\n                            // set limit, if full, stop adding new events\r\n                            _eventQueue[_DYN_PUSH /* @min:%2epush */](telemetryItem);\r\n                        }\r\n                    }\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            _self[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */] = _createTelCtx;\r\n            _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */] = function () {\r\n                if (!_notificationManager) {\r\n                    _notificationManager = new NotificationManager(_configHandler.cfg);\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param listener - An INotificationListener object.\r\n             */\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _self.getNotifyMgr()[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - INotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                if (_notificationManager) {\r\n                    _notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](listener);\r\n                }\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                if (!_cookieManager) {\r\n                    _cookieManager = createCookieMgr(_configHandler.cfg, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _cookieManager;\r\n            };\r\n            _self.setCookieMgr = function (cookieMgr) {\r\n                if (_cookieManager !== cookieMgr) {\r\n                    runTargetUnload(_cookieManager, false);\r\n                    _cookieManager = cookieMgr;\r\n                }\r\n            };\r\n            _self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */] = function () {\r\n                return _perfManager || _cfgPerfManager || getGblPerfMgr();\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_isInitialized && _eventQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var eventQueue = _eventQueue;\r\n                    _eventQueue = [];\r\n                    if (_activeStatus === 2 /* eActiveStatus.ACTIVE */) {\r\n                        arrForEach(eventQueue, function (event) {\r\n                            event[_DYN_I_KEY /* @min:%2eiKey */] = event[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                            _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](event);\r\n                        });\r\n                    }\r\n                    else {\r\n                        // new one for msg ikey\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"core init status is not active\");\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                _internalLogsEventName = eventName || null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                return _startLogPoller(true);\r\n            };\r\n            function _setStatus() {\r\n                _isStatusSet = true;\r\n                if (isNullOrUndefined(_instrumentationKey)) {\r\n                    _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 112 /* _eInternalMessageId.InitPromiseException */, \"ikey can't be resolved from promises\");\r\n                }\r\n                else {\r\n                    _activeStatus = ActiveStatus.ACTIVE;\r\n                }\r\n                _releaseQueues();\r\n            }\r\n            function _releaseQueues() {\r\n                if (_isInitialized) {\r\n                    _self.releaseQueue();\r\n                    _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n                }\r\n            }\r\n            function _startLogPoller(alwaysStart) {\r\n                if ((!_internalLogPoller || !_internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */]) && !_forceStopInternalLogPoller) {\r\n                    var shouldStart = alwaysStart || (_logger && _logger.queue[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                    if (shouldStart) {\r\n                        if (!_internalLogPollerListening) {\r\n                            _internalLogPollerListening = true;\r\n                            // listen for any configuration changes so that changes to the\r\n                            // interval will cause the timer to be re-initialized\r\n                            _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                                var interval = details.cfg.diagnosticLogInterval;\r\n                                if (!interval || !(interval > 0)) {\r\n                                    interval = 10000;\r\n                                }\r\n                                var isRunning = false;\r\n                                if (_internalLogPoller) {\r\n                                    // It was already created so remember it's running and cancel\r\n                                    isRunning = _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */];\r\n                                    _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                                }\r\n                                // Create / reconfigure\r\n                                _internalLogPoller = createTimeout(_flushInternalLogs, interval);\r\n                                _internalLogPoller.unref();\r\n                                // Restart if previously running\r\n                                _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = isRunning;\r\n                            }));\r\n                        }\r\n                        _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = true;\r\n                    }\r\n                }\r\n                return _internalLogPoller;\r\n            }\r\n            _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */] = function () {\r\n                _forceStopInternalLogPoller = true;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                _flushInternalLogs();\r\n            };\r\n            // Add addTelemetryInitializer\r\n            proxyFunctions(_self, function () { return _telemetryInitializerPlugin; }, [\"addTelemetryInitializer\"]);\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync, unloadComplete, cbTimeout) {\r\n                var _a;\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_isInitialized) {\r\n                    // The SDK is not initialized\r\n                    throwError(strSdkNotInitialized);\r\n                }\r\n                // Check if the SDK still unloading so throw\r\n                if (_isUnloading) {\r\n                    // The SDK is already unloading\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                var unloadState = (_a = {\r\n                        reason: 50 /* TelemetryUnloadReason.SdkUnload */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                    _a.flushComplete = false,\r\n                    _a);\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                var processUnloadCtx = createProcessTelemetryUnloadContext(_getPluginChain(), _self);\r\n                processUnloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                    _hookContainer.run(_self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                    // Run any \"unload\" functions for the _cookieManager, _notificationManager and _logger\r\n                    doUnloadAll([_cookieManager, _notificationManager, _logger], isAsync, function () {\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    });\r\n                }, _self);\r\n                function _doUnload(flushComplete) {\r\n                    unloadState.flushComplete = flushComplete;\r\n                    _isUnloading = true;\r\n                    // Run all of the unload handlers first (before unloading the plugins)\r\n                    _unloadHandlers.run(processUnloadCtx, unloadState);\r\n                    // Stop polling the internal logs\r\n                    _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */]();\r\n                    // Start unloading the components, from this point onwards the SDK should be considered to be in an unstable state\r\n                    processUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                _flushInternalLogs();\r\n                if (!_flushChannels(isAsync, _doUnload, 6 /* SendRequestReason.SdkUnload */, cbTimeout)) {\r\n                    _doUnload(false);\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */] = _getPlugin;\r\n            _self.addPlugin = function (plugin, replaceExisting, isAsync, addCb) {\r\n                if (!plugin) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(strValidationError);\r\n                    return;\r\n                }\r\n                var existingPlugin = _getPlugin(plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                if (existingPlugin && !replaceExisting) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(\"Plugin [\" + plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"] is already loaded!\");\r\n                    return;\r\n                }\r\n                var updateState = {\r\n                    reason: 16 /* TelemetryUpdateReason.PluginAdded */\r\n                };\r\n                function _addPlugin(removed) {\r\n                    _configExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                    updateState.added = [plugin];\r\n                    // Re-Initialize the plugin chain\r\n                    _initPluginChain(updateState);\r\n                    addCb && addCb(true);\r\n                }\r\n                if (existingPlugin) {\r\n                    var removedPlugins_1 = [existingPlugin.plugin];\r\n                    var unloadState = {\r\n                        reason: 2 /* TelemetryUnloadReason.PluginReplace */,\r\n                        isAsync: !!isAsync\r\n                    };\r\n                    _removePlugins(removedPlugins_1, unloadState, function (removed) {\r\n                        if (!removed) {\r\n                            // Previous plugin was successfully removed or was not installed\r\n                            addCb && addCb(false);\r\n                        }\r\n                        else {\r\n                            updateState.removed = removedPlugins_1;\r\n                            updateState.reason |= 32 /* TelemetryUpdateReason.PluginRemoved */;\r\n                            _addPlugin(true);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    _addPlugin(false);\r\n                }\r\n            };\r\n            _self.updateCfg = function (newConfig, mergeExisting) {\r\n                if (mergeExisting === void 0) { mergeExisting = true; }\r\n                var updateState;\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    updateState = {\r\n                        reason: 1 /* TelemetryUpdateReason.ConfigurationChanged */,\r\n                        cfg: _configHandler.cfg,\r\n                        oldCfg: deepExtend({}, _configHandler.cfg),\r\n                        newConfig: deepExtend({}, newConfig),\r\n                        merge: mergeExisting\r\n                    };\r\n                    newConfig = updateState.newConfig;\r\n                    var cfg = _configHandler.cfg;\r\n                    // replace the immutable (if initialized) values\r\n                    // We don't currently allow updating the extensions and channels via the update config\r\n                    // So overwriting any user provided values to reuse the existing values\r\n                    newConfig[STR_EXTENSIONS /* @min:%2eextensions */] = cfg[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                    newConfig[STR_CHANNELS /* @min:%2echannels */] = cfg[STR_CHANNELS /* @min:%2echannels */];\r\n                }\r\n                // Explicitly blocking any previous config watchers so that they don't get called because\r\n                // of this bulk update (Probably not necessary)\r\n                _configHandler._block(function (details) {\r\n                    // Lets assign the new values to the existing config either overwriting or re-assigning\r\n                    var theConfig = details.cfg;\r\n                    _deepMergeConfig(details, theConfig, newConfig, mergeExisting);\r\n                    if (!mergeExisting) {\r\n                        // Remove (unassign) the values \"missing\" from the newConfig and also not in the default config\r\n                        objForEachKey(theConfig, function (key) {\r\n                            if (!objHasOwn(newConfig, key)) {\r\n                                // Set the value to undefined\r\n                                details.set(theConfig, key, UNDEFINED_VALUE);\r\n                            }\r\n                        });\r\n                    }\r\n                    // Apply defaults to the new config\r\n                    details[_DYN_SET_DF /* @min:%2esetDf */](theConfig, defaultConfig);\r\n                }, true);\r\n                // Now execute all of the listeners (synchronously) so they update their values immediately\r\n                _configHandler[_DYN_NOTIFY /* @min:%2enotify */]();\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            };\r\n            _self.evtNamespace = function () {\r\n                return _evtNamespace;\r\n            };\r\n            _self.flush = _flushChannels;\r\n            _self.getTraceCtx = function (createNew) {\r\n                if (!_traceCtx) {\r\n                    _traceCtx = createDistributedTraceContext();\r\n                }\r\n                return _traceCtx;\r\n            };\r\n            _self.setTraceCtx = function (traceCtx) {\r\n                _traceCtx = traceCtx || null;\r\n            };\r\n            _self.addUnloadHook = _addUnloadHook;\r\n            // Create the addUnloadCb\r\n            proxyFunctionAs(_self, \"addUnloadCb\", function () { return _unloadHandlers; }, \"add\");\r\n            _self.onCfgChange = function (handler) {\r\n                var unloadHook;\r\n                if (!_isInitialized) {\r\n                    unloadHook = _addDelayedCfgListener(_cfgListeners, handler);\r\n                }\r\n                else {\r\n                    unloadHook = onConfigChange(_configHandler.cfg, handler, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _createUnloadHook(unloadHook);\r\n            };\r\n            _self.getWParam = function () {\r\n                return (hasDocument() || !!_configHandler.cfg.enableWParam) ? 0 : -1;\r\n            };\r\n            function _setPluginVersions() {\r\n                var thePlugins = {};\r\n                _pluginVersionStringArr = [];\r\n                var _addPluginVersions = function (plugins) {\r\n                    if (plugins) {\r\n                        arrForEach(plugins, function (plugin) {\r\n                            if (plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] && plugin[_DYN_VERSION /* @min:%2eversion */] && !thePlugins[plugin.identifier]) {\r\n                                var ver = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"=\" + plugin[_DYN_VERSION /* @min:%2eversion */];\r\n                                _pluginVersionStringArr[_DYN_PUSH /* @min:%2epush */](ver);\r\n                                thePlugins[plugin.identifier] = plugin;\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                _addPluginVersions(_channels);\r\n                if (_channelConfig) {\r\n                    arrForEach(_channelConfig, function (channels) {\r\n                        _addPluginVersions(channels);\r\n                    });\r\n                }\r\n                _addPluginVersions(_configExtensions);\r\n            }\r\n            function _initDefaults() {\r\n                _isInitialized = false;\r\n                // Use a default logger so initialization errors are not dropped on the floor with full logging\r\n                _configHandler = createDynamicConfig({}, defaultConfig, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                // Set the logging level to critical so that any critical initialization failures are displayed on the console\r\n                _configHandler.cfg[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */] = 1 /* eLoggingSeverity.CRITICAL */;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _configHandler.cfg; },\r\n                    s: function (newValue) {\r\n                        _self.updateCfg(newValue, false);\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionStringArr\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionStringArr) {\r\n                            _setPluginVersions();\r\n                        }\r\n                        return _pluginVersionStringArr;\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionString\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionString) {\r\n                            if (!_pluginVersionStringArr) {\r\n                                _setPluginVersions();\r\n                            }\r\n                            _pluginVersionString = _pluginVersionStringArr.join(\";\");\r\n                        }\r\n                        return _pluginVersionString || STR_EMPTY;\r\n                    }\r\n                });\r\n                objDefine(_self, \"logger\", {\r\n                    g: function () {\r\n                        if (!_logger) {\r\n                            _logger = new DiagnosticLogger(_configHandler.cfg);\r\n                            _configHandler[_DYN_LOGGER /* @min:%2elogger */] = _logger;\r\n                        }\r\n                        return _logger;\r\n                    },\r\n                    s: function (newLogger) {\r\n                        _configHandler[_DYN_LOGGER /* @min:%2elogger */] = newLogger;\r\n                        if (_logger !== newLogger) {\r\n                            runTargetUnload(_logger, false);\r\n                            _logger = newLogger;\r\n                        }\r\n                    }\r\n                });\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = new DiagnosticLogger(_configHandler.cfg);\r\n                _extensions = [];\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                _telemetryInitializerPlugin = new TelemetryInitializerPlugin();\r\n                _eventQueue = [];\r\n                runTargetUnload(_notificationManager, false);\r\n                _notificationManager = null;\r\n                _perfManager = null;\r\n                _cfgPerfManager = null;\r\n                runTargetUnload(_cookieManager, false);\r\n                _cookieManager = null;\r\n                _pluginChain = null;\r\n                _configExtensions = [];\r\n                _channelConfig = null;\r\n                _channels = null;\r\n                _isUnloading = false;\r\n                _internalLogsEventName = null;\r\n                _evtNamespace = createUniqueNamespace(\"AIBaseCore\", true);\r\n                _unloadHandlers = createUnloadHandlerContainer();\r\n                _traceCtx = null;\r\n                _instrumentationKey = null;\r\n                _hookContainer = createUnloadHookContainer();\r\n                _cfgListeners = [];\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller = null;\r\n                _internalLogPollerListening = false;\r\n                _activeStatus = 0 /* eActiveStatus.NONE */; // default is None\r\n                _endpoint = null;\r\n                _initInMemoMaxSize = null;\r\n                _isStatusSet = false;\r\n                _initTimer = null;\r\n            }\r\n            function _createTelCtx() {\r\n                var theCtx = createProcessTelemetryContext(_getPluginChain(), _configHandler.cfg, _self);\r\n                theCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                return theCtx;\r\n            }\r\n            // Initialize or Re-initialize the plugins\r\n            function _initPluginChain(updateState) {\r\n                // Extension validation\r\n                var theExtensions = _validateExtensions(_self[_DYN_LOGGER /* @min:%2elogger */], ChannelControllerPriority, _configExtensions);\r\n                _pluginChain = null;\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                // Get the primary channel queue and include as part of the normal extensions\r\n                _channels = (_channelConfig || [])[0] || [];\r\n                // Add any channels provided in the extensions and sort them\r\n                _channels = sortPlugins(arrAppend(_channels, theExtensions[STR_CHANNELS /* @min:%2echannels */]));\r\n                // Create an array of all extensions, including the _channels\r\n                var allExtensions = arrAppend(sortPlugins(theExtensions[STR_CORE /* @min:%2ecore */]), _channels);\r\n                // Required to allow plugins to call core.getPlugin() during their own initialization\r\n                _extensions = objFreeze(allExtensions);\r\n                // This has a side effect of adding the extensions passed during initialization\r\n                // into the config.extensions, so you can see all of the extensions loaded.\r\n                // This will also get updated by the addPlugin() and remove plugin code.\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                var rootCtx = _createTelCtx();\r\n                // Initializing the channels first\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    initializePlugins(rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels), allExtensions);\r\n                }\r\n                // Now initialize the normal extensions (explicitly not including the _channels as this can cause duplicate initialization)\r\n                initializePlugins(rootCtx, allExtensions);\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            }\r\n            function _getPlugin(pluginIdentifier) {\r\n                var theExt = null;\r\n                var thePlugin = null;\r\n                var channelHosts = [];\r\n                arrForEach(_extensions, function (ext) {\r\n                    if (ext[_DYN_IDENTIFIER /* @min:%2eidentifier */] === pluginIdentifier && ext !== _telemetryInitializerPlugin) {\r\n                        thePlugin = ext;\r\n                        return -1;\r\n                    }\r\n                    if (ext.getChannel) {\r\n                        channelHosts[_DYN_PUSH /* @min:%2epush */](ext);\r\n                    }\r\n                });\r\n                if (!thePlugin && channelHosts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(channelHosts, function (host) {\r\n                        thePlugin = host.getChannel(pluginIdentifier);\r\n                        if (!thePlugin) {\r\n                            return -1;\r\n                        }\r\n                    });\r\n                }\r\n                if (thePlugin) {\r\n                    theExt = {\r\n                        plugin: thePlugin,\r\n                        setEnabled: function (enabled) {\r\n                            _getPluginState(thePlugin)[STR_DISABLED] = !enabled;\r\n                        },\r\n                        isEnabled: function () {\r\n                            var pluginState = _getPluginState(thePlugin);\r\n                            return !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] && !pluginState[STR_DISABLED];\r\n                        },\r\n                        remove: function (isAsync, removeCb) {\r\n                            var _a;\r\n                            if (isAsync === void 0) { isAsync = true; }\r\n                            var pluginsToRemove = [thePlugin];\r\n                            var unloadState = (_a = {\r\n                                    reason: 1 /* TelemetryUnloadReason.PluginUnload */\r\n                                },\r\n                                _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                                _a);\r\n                            _removePlugins(pluginsToRemove, unloadState, function (removed) {\r\n                                if (removed) {\r\n                                    // Re-Initialize the plugin chain\r\n                                    _initPluginChain({\r\n                                        reason: 32 /* TelemetryUpdateReason.PluginRemoved */,\r\n                                        removed: pluginsToRemove\r\n                                    });\r\n                                }\r\n                                removeCb && removeCb(removed);\r\n                            });\r\n                        }\r\n                    };\r\n                }\r\n                return theExt;\r\n            }\r\n            function _getPluginChain() {\r\n                if (!_pluginChain) {\r\n                    // copy the collection of extensions\r\n                    var extensions = (_extensions || []).slice();\r\n                    // During add / remove this may get called again, so don't read if already present\r\n                    if (arrIndexOf(extensions, _telemetryInitializerPlugin) === -1) {\r\n                        extensions[_DYN_PUSH /* @min:%2epush */](_telemetryInitializerPlugin);\r\n                    }\r\n                    _pluginChain = createTelemetryProxyChain(sortPlugins(extensions), _configHandler.cfg, _self);\r\n                }\r\n                return _pluginChain;\r\n            }\r\n            function _removePlugins(thePlugins, unloadState, removeComplete) {\r\n                if (thePlugins && thePlugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var unloadChain = createTelemetryProxyChain(thePlugins, _configHandler.cfg, _self);\r\n                    var unloadCtx = createProcessTelemetryUnloadContext(unloadChain, _self);\r\n                    unloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                        var removed = false;\r\n                        // Remove the listed config extensions\r\n                        var newConfigExtensions = [];\r\n                        arrForEach(_configExtensions, function (plugin, idx) {\r\n                            if (!_isPluginPresent(plugin, thePlugins)) {\r\n                                newConfigExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                            }\r\n                            else {\r\n                                removed = true;\r\n                            }\r\n                        });\r\n                        _configExtensions = newConfigExtensions;\r\n                        _pluginVersionString = null;\r\n                        _pluginVersionStringArr = null;\r\n                        // Re-Create the channel config\r\n                        var newChannelConfig = [];\r\n                        if (_channelConfig) {\r\n                            arrForEach(_channelConfig, function (queue, idx) {\r\n                                var newQueue = [];\r\n                                arrForEach(queue, function (channel) {\r\n                                    if (!_isPluginPresent(channel, thePlugins)) {\r\n                                        newQueue[_DYN_PUSH /* @min:%2epush */](channel);\r\n                                    }\r\n                                    else {\r\n                                        removed = true;\r\n                                    }\r\n                                });\r\n                                newChannelConfig[_DYN_PUSH /* @min:%2epush */](newQueue);\r\n                            });\r\n                            _channelConfig = newChannelConfig;\r\n                        }\r\n                        removeComplete && removeComplete(removed);\r\n                        _startLogPoller();\r\n                    });\r\n                    unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                else {\r\n                    removeComplete(false);\r\n                }\r\n            }\r\n            function _flushInternalLogs() {\r\n                if (_logger && _logger.queue) {\r\n                    var queue = _logger.queue.slice(0);\r\n                    _logger.queue[_DYN_LENGTH /* @min:%2elength */] = 0;\r\n                    arrForEach(queue, function (logMessage) {\r\n                        var _a;\r\n                        var item = (_a = {},\r\n                            _a[_DYN_NAME /* @min:name */] = _internalLogsEventName ? _internalLogsEventName : \"InternalMessageId: \" + logMessage[_DYN_MESSAGE_ID /* @min:%2emessageId */],\r\n                            _a[_DYN_I_KEY /* @min:iKey */] = _instrumentationKey,\r\n                            _a[_DYN_TIME /* @min:time */] = toISOString(new Date()),\r\n                            _a.baseType = _InternalLogMessage.dataType,\r\n                            _a.baseData = { message: logMessage[_DYN_MESSAGE /* @min:%2emessage */] },\r\n                            _a);\r\n                        _self.track(item);\r\n                    });\r\n                }\r\n            }\r\n            function _flushChannels(isAsync, callBack, sendReason, cbTimeout) {\r\n                // Setting waiting to one so that we don't call the callBack until we finish iterating\r\n                var waiting = 1;\r\n                var doneIterating = false;\r\n                var cbTimer = null;\r\n                cbTimeout = cbTimeout || 5000;\r\n                function doCallback() {\r\n                    waiting--;\r\n                    if (doneIterating && waiting === 0) {\r\n                        cbTimer && cbTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                        cbTimer = null;\r\n                        callBack && callBack(doneIterating);\r\n                        callBack = null;\r\n                    }\r\n                }\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var flushCtx = _createTelCtx()[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels);\r\n                    flushCtx.iterate(function (plugin) {\r\n                        if (plugin.flush) {\r\n                            waiting++;\r\n                            var handled_1 = false;\r\n                            // Not all channels will call this callback for every scenario\r\n                            if (!plugin.flush(isAsync, function () {\r\n                                handled_1 = true;\r\n                                doCallback();\r\n                            }, sendReason)) {\r\n                                if (!handled_1) {\r\n                                    // If any channel doesn't return true and it didn't call the callback, then we should assume that the callback\r\n                                    // will never be called, so use a timeout to allow the channel(s) some time to \"finish\" before triggering any\r\n                                    // followup function (such as unloading)\r\n                                    if (isAsync && cbTimer == null) {\r\n                                        cbTimer = scheduleTimeout(function () {\r\n                                            cbTimer = null;\r\n                                            doCallback();\r\n                                        }, cbTimeout);\r\n                                    }\r\n                                    else {\r\n                                        doCallback();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                doneIterating = true;\r\n                doCallback();\r\n                return true;\r\n            }\r\n            function _initPerfManager() {\r\n                // Save the previous config based performance manager creator to avoid creating new perf manager instances if unchanged\r\n                var prevCfgPerfMgr;\r\n                // Will get recalled if any referenced config values are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var enablePerfMgr = details.cfg.enablePerfMgr;\r\n                    if (enablePerfMgr) {\r\n                        var createPerfMgr = details.cfg[STR_CREATE_PERF_MGR /* @min:%2ecreatePerfMgr */];\r\n                        if (prevCfgPerfMgr !== createPerfMgr) {\r\n                            if (!createPerfMgr) {\r\n                                createPerfMgr = _createPerfManager;\r\n                            }\r\n                            // Set the performance manager creation function if not defined\r\n                            getSetValue(details.cfg, STR_CREATE_PERF_MGR, createPerfMgr);\r\n                            prevCfgPerfMgr = createPerfMgr;\r\n                            // Remove any existing config based performance manager\r\n                            _cfgPerfManager = null;\r\n                        }\r\n                        // Only create the performance manager if it's not already created or manually set\r\n                        if (!_perfManager && !_cfgPerfManager && isFunction(createPerfMgr)) {\r\n                            // Create a new config based performance manager\r\n                            _cfgPerfManager = createPerfMgr(_self, _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]());\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Remove any existing config based performance manager\r\n                        _cfgPerfManager = null;\r\n                        // Clear the previous cached value so it can be GC'd\r\n                        prevCfgPerfMgr = null;\r\n                    }\r\n                }));\r\n            }\r\n            function _doUpdate(updateState) {\r\n                var updateCtx = createProcessTelemetryUpdateContext(_getPluginChain(), _self);\r\n                updateCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                if (!_self._updateHook || _self._updateHook(updateCtx, updateState) !== true) {\r\n                    updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n                }\r\n            }\r\n            function _logOrThrowError(message) {\r\n                var logger = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                if (logger) {\r\n                    // there should always be a logger\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, message);\r\n                    _startLogPoller();\r\n                }\r\n                else {\r\n                    throwError(message);\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]();\r\n                if (manager) {\r\n                    manager[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */]([telemetryItem], 2 /* eEventsDiscardedReason.InvalidEvent */);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _hookContainer.add(hooks);\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.getChannels.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.getProcessTelContext.\r\n// Removed Stub for AppInsightsCore.prototype.getNotifyMgr.\r\n// Removed Stub for AppInsightsCore.prototype.addNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.removeNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.getPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.eventCnt.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.addTelemetryInitializer.\r\n// Removed Stub for AppInsightsCore.prototype.unload.\r\n// Removed Stub for AppInsightsCore.prototype.getPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.addPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.updateCfg.\r\n// Removed Stub for AppInsightsCore.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsCore.prototype.flush.\r\n// Removed Stub for AppInsightsCore.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.setTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadHook.\r\n// Removed Stub for AppInsightsCore.prototype.onCfgChange.\r\n// Removed Stub for AppInsightsCore.prototype.activeStatus.\r\n// Removed Stub for AppInsightsCore.prototype._setPendingStatus.\r\n// Removed Stub for AppInsightsCore.prototype.releaseQueue.\r\n// Removed Stub for AppInsightsCore.prototype._updateHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_NAME } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getJSON } from \"./EnvUtils\";\r\n/**\r\n * Parses the response from the backend.\r\n * @param response - XMLHttpRequest or XDomainRequest response\r\n */\r\nexport function parseResponse(response, diagLog) {\r\n    try {\r\n        if (response && response !== \"\") {\r\n            var result = getJSON().parse(response);\r\n            if (result && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] >= result.itemsAccepted &&\r\n                result.itemsReceived - result.itemsAccepted === result.errors[_DYN_LENGTH /* @min:%2elength */]) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 43 /* _eInternalMessageId.InvalidBackendResponse */, \"Cannot parse the response. \" + (e[_DYN_NAME /* @min:%2ename */] || dumpObj(e)), {\r\n            response: response\r\n        });\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=ResponseHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, dumpObj, getNavigator, getWindow, isFunction, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DATA, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PROTOCOL, _DYN_REPLACE, _DYN_SEND_POST, _DYN_SET_REQUEST_HEADER, _DYN_STATUS, _DYN_TIMEOUT, _DYN_TO_LOWER_CASE, _DYN_URL_STRING, _DYN_VALUE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { DisabledPropertyName } from \"./Constants\";\r\nimport { _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getLocation, isBeaconsSupported, isFetchSupported, isXhrSupported, useXDomainRequest } from \"./EnvUtils\";\r\nimport { _getAllResponseHeaders, formatErrorMessageXdr, formatErrorMessageXhr, getResponseText, openXhr } from \"./HelperFuncs\";\r\nvar STR_EMPTY = \"\";\r\nvar STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar STR_POST_METHOD = \"POST\";\r\n/**\r\n * This Internal component\r\n * Manager SendPost functions\r\n * SendPostManger\r\n * @internal for internal use only\r\n */\r\nvar SenderPostManager = /** @class */ (function () {\r\n    function SenderPostManager() {\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _enableSendPromise;\r\n        var _isInitialized;\r\n        var _diagLog;\r\n        var _isOneDs;\r\n        var _onCompleteFuncs;\r\n        var _disableCredentials;\r\n        var _fetchCredentials;\r\n        var _fallbackInst;\r\n        var _disableXhr;\r\n        var _disableBeacon;\r\n        var _disableBeaconSync;\r\n        var _disableFetchKeepAlive;\r\n        var _addNoResponse;\r\n        var _timeoutWrapper;\r\n        dynamicProto(SenderPostManager, this, function (_self, _base) {\r\n            var _sendCredentials = true; // for 1ds\r\n            _initDefaults();\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, diagLog) {\r\n                _diagLog = diagLog;\r\n                if (_isInitialized) {\r\n                    _throwInternal(_diagLog, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _self.SetConfig(config);\r\n                _isInitialized = true;\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_isInitialized, _isOneDs, _disableCredentials, _enableSendPromise];\r\n            };\r\n            // This componet might get its config from sender, offline sender, 1ds post\r\n            // so set this function to mock dynamic changes\r\n            _self.SetConfig = function (config) {\r\n                try {\r\n                    _onCompleteFuncs = config.senderOnCompleteCallBack || {};\r\n                    _disableCredentials = !!config.disableCredentials;\r\n                    _fetchCredentials = config.fetchCredentials;\r\n                    _isOneDs = !!config.isOneDs;\r\n                    _enableSendPromise = !!config.enableSendPromise;\r\n                    _disableXhr = !!config.disableXhr;\r\n                    _disableBeacon = !!config.disableBeacon;\r\n                    _disableBeaconSync = !!config.disableBeaconSync;\r\n                    _timeoutWrapper = config.timeWrapper;\r\n                    _addNoResponse = !!config.addNoResponse;\r\n                    _disableFetchKeepAlive = !!config.disableFetchKeepAlive;\r\n                    _fallbackInst = { sendPOST: _xhrSender };\r\n                    if (!_isOneDs) {\r\n                        _sendCredentials = false; // for appInsights, set it to false always\r\n                    }\r\n                    if (_disableCredentials) {\r\n                        var location_1 = getLocation();\r\n                        if (location_1 && location_1.protocol && location_1.protocol[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"file:\") {\r\n                            // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            _sendCredentials = false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            };\r\n            _self.getSyncFetchPayload = function () {\r\n                return _syncFetchPayload;\r\n            };\r\n            _self.getSenderInst = function (transports, sync) {\r\n                if (transports && transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    return _getSenderInterface(transports, sync);\r\n                }\r\n                return null;\r\n            };\r\n            _self.getFallbackInst = function () {\r\n                return _fallbackInst;\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function (unloadCtx, unloadState) {\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(res, onComplete) {\r\n                _doOnComplete(onComplete, 200, {}, res);\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(message, onComplete) {\r\n                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _doOnComplete(onComplete, 400, {});\r\n            }\r\n            function _onNoPayloadUrl(onComplete) {\r\n                _onError(\"No endpoint url is provided for the batch\", onComplete);\r\n            }\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                var _a;\r\n                var transportType = 0 /* TransportType.NotSet */;\r\n                var sendPostFunc = null;\r\n                var lp = 0;\r\n                while (sendPostFunc == null && lp < transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    transportType = transports[lp];\r\n                    if (!_disableXhr && transportType === 1 /* TransportType.Xhr */) {\r\n                        if (useXDomainRequest()) {\r\n                            // IE 8 and 9\r\n                            sendPostFunc = _xdrSender;\r\n                        }\r\n                        else if (isXhrSupported()) {\r\n                            sendPostFunc = _xhrSender;\r\n                        }\r\n                    }\r\n                    else if (transportType === 2 /* TransportType.Fetch */ && isFetchSupported(syncSupport) && (!syncSupport || !_disableFetchKeepAlive)) {\r\n                        sendPostFunc = _doFetchSender;\r\n                    }\r\n                    else if (transportType === 3 /* TransportType.Beacon */ && isBeaconsSupported() && (syncSupport ? !_disableBeaconSync : !_disableBeacon)) {\r\n                        sendPostFunc = _beaconSender;\r\n                    }\r\n                    lp++;\r\n                }\r\n                if (sendPostFunc) {\r\n                    return _a = {\r\n                            _transport: transportType,\r\n                            _isSync: syncSupport\r\n                        },\r\n                        _a[_DYN_SEND_POST /* @min:sendPOST */] = sendPostFunc,\r\n                        _a;\r\n                }\r\n                return null;\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete && oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doBeaconSend(payload, oncomplete) {\r\n                var nav = getNavigator();\r\n                var url = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!url) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    // return true here, because we don't want to retry it with fallback sender\r\n                    return true;\r\n                }\r\n                url = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                var plainTextBatch = _isOneDs ? data : new Blob([data], { type: \"text/plain;charset=UTF-8\" });\r\n                // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                var queued = nav.sendBeacon(url, plainTextBatch);\r\n                return queued;\r\n            }\r\n            /**\r\n             * Send Beacon API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - not used\r\n             * Note: Beacon API does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _beaconSender(payload, oncomplete, sync) {\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                try {\r\n                    if (data) {\r\n                        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                        if (!_doBeaconSend(payload, oncomplete)) {\r\n                            var onRetry = _onCompleteFuncs && _onCompleteFuncs.beaconOnRetry;\r\n                            if (onRetry && isFunction(onRetry)) {\r\n                                onRetry(payload, oncomplete, _doBeaconSend);\r\n                            }\r\n                            else {\r\n                                _fallbackInst && _fallbackInst[_DYN_SEND_POST /* @min:%2esendPOST */](payload, oncomplete, true);\r\n                                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // if can send\r\n                            _onSuccess(STR_EMPTY, oncomplete);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _isOneDs && _warnToConsole(_diagLog, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(e));\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, STR_EMPTY);\r\n                }\r\n                return;\r\n            }\r\n            /**\r\n             * Send XMLHttpRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             */\r\n            function _xhrSender(payload, oncomplete, sync) {\r\n                //let  internalPayload = payload as IInternalPayloadData;\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (_isOneDs && sync && payload.disableXhrSync) {\r\n                    sync = false;\r\n                }\r\n                //const xhr = new XMLHttpRequest();\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                var xhr = openXhr(STR_POST_METHOD, endPointUrl, _sendCredentials, true, sync, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                if (!_isOneDs) {\r\n                    // application/json should NOT add to 1ds post by default\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](\"Content-type\", \"application/json\");\r\n                }\r\n                arrForEach(objKeys(headers), function (headerName) {\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](headerName, headers[headerName]);\r\n                });\r\n                xhr.onreadystatechange = function () {\r\n                    if (!_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                        if (xhr.readyState === 4) {\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }\r\n                };\r\n                xhr.onload = function () {\r\n                    if (_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                    }\r\n                };\r\n                function _doOnReadyFunc(xhr) {\r\n                    var onReadyFunc = _onCompleteFuncs && _onCompleteFuncs.xhrOnComplete;\r\n                    var onReadyFuncExist = onReadyFunc && isFunction(onReadyFunc);\r\n                    if (onReadyFuncExist) {\r\n                        onReadyFunc(xhr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        var response = getResponseText(xhr);\r\n                        _doOnComplete(oncomplete, xhr[_DYN_STATUS /* @min:%2estatus */], _getAllResponseHeaders(xhr, _isOneDs), response);\r\n                    }\r\n                }\r\n                xhr.onerror = function (event) {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 400, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    rejectFunc && rejectFunc(event);\r\n                };\r\n                xhr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 500, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    resolveFunc && resolveFunc(false);\r\n                };\r\n                xhr.send(payload[_DYN_DATA /* @min:%2edata */]);\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send fetch API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - For fetch this identifies whether we are \"unloading\" (false) or a normal request\r\n             */\r\n            function _doFetchSender(payload, oncomplete, sync) {\r\n                var _a;\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                var batch = payload[_DYN_DATA /* @min:%2edata */];\r\n                var plainTextBatch = _isOneDs ? batch : new Blob([batch], { type: \"application/json\" });\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var requestHeaders = new Headers();\r\n                var batchLength = batch[_DYN_LENGTH /* @min:%2elength */];\r\n                var ignoreResponse = false;\r\n                var responseHandled = false;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                //TODO: handle time out for 1ds\r\n                var init = (_a = {\r\n                        method: STR_POST_METHOD,\r\n                        body: plainTextBatch\r\n                    },\r\n                    _a[DisabledPropertyName] = true // Mark so we don't attempt to track this request\r\n                ,\r\n                    _a);\r\n                // Only add headers if there are headers to add, due to issue with some polyfills\r\n                if (payload.headers && objKeys(payload.headers)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(objKeys(headers), function (headerName) {\r\n                        requestHeaders.append(headerName, headers[headerName]);\r\n                    });\r\n                    init[_DYN_HEADERS /* @min:%2eheaders */] = requestHeaders;\r\n                }\r\n                if (_fetchCredentials) { // if user passed in this value via post channel (1ds), then use it\r\n                    init.credentials = _fetchCredentials;\r\n                }\r\n                else if (_sendCredentials && _isOneDs) {\r\n                    // for 1ds, Don't send credentials when URL is file://\r\n                    init.credentials = \"include\";\r\n                }\r\n                if (sync) {\r\n                    init.keepalive = true;\r\n                    _syncFetchPayload += batchLength;\r\n                    if (_isOneDs) {\r\n                        if (payload[\"_sendReason\"] === 2 /* SendRequestReason.Unload */) {\r\n                            // As a sync request (during unload), it is unlikely that we will get a chance to process the response so\r\n                            // just like beacon send assume that the events have been accepted and processed\r\n                            ignoreResponse = true;\r\n                            if (_addNoResponse) {\r\n                                endPointUrl += _noResponseQs;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // for appinsights, set to true for all sync request\r\n                        ignoreResponse = true;\r\n                    }\r\n                }\r\n                var request = new Request(endPointUrl, init);\r\n                try {\r\n                    // Also try and tag the request (just in case the value in init is not copied over)\r\n                    request[DisabledPropertyName] = true;\r\n                }\r\n                catch (e) {\r\n                    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n                    // cause the request to fail and we no telemetry would be sent\r\n                }\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                function _handleError(res) {\r\n                    // In case there is an error in the request. Set the status to 0 for 1ds and 400 for appInsights\r\n                    // so that the events can be retried later.\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, _isOneDs ? STR_EMPTY : res);\r\n                }\r\n                function _onFetchComplete(response, payload, value) {\r\n                    var status = response[_DYN_STATUS /* @min:%2estatus */];\r\n                    var onCompleteFunc = _onCompleteFuncs.fetchOnComplete;\r\n                    if (onCompleteFunc && isFunction(onCompleteFunc)) {\r\n                        onCompleteFunc(response, oncomplete, value || STR_EMPTY, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, status, {}, value || STR_EMPTY);\r\n                    }\r\n                }\r\n                try {\r\n                    doAwaitResponse(fetch(_isOneDs ? endPointUrl : request, _isOneDs ? init : null), function (result) {\r\n                        if (sync) {\r\n                            _syncFetchPayload -= batchLength;\r\n                            batchLength = 0;\r\n                        }\r\n                        if (!responseHandled) {\r\n                            responseHandled = true;\r\n                            if (!result.rejected) {\r\n                                var response_1 = result[_DYN_VALUE /* @min:%2evalue */];\r\n                                try {\r\n                                    /**\r\n                                     * The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.\r\n                                     * Instead, it will resolve normally (with ok status set to false), and it will only reject on network failure\r\n                                     * or if anything prevented the request from completing.\r\n                                     */\r\n                                    if (!_isOneDs && !response_1.ok) {\r\n                                        // this is for appInsights only\r\n                                        _handleError(response_1.statusText);\r\n                                        resolveFunc && resolveFunc(false);\r\n                                    }\r\n                                    else {\r\n                                        if (_isOneDs && !response_1.body) {\r\n                                            _onFetchComplete(response_1, null, STR_EMPTY);\r\n                                            resolveFunc && resolveFunc(true);\r\n                                        }\r\n                                        else {\r\n                                            doAwaitResponse(response_1.text(), function (resp) {\r\n                                                _onFetchComplete(response_1, payload, resp[_DYN_VALUE /* @min:%2evalue */]);\r\n                                                resolveFunc && resolveFunc(true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e) {\r\n                                    _handleError(dumpObj(e));\r\n                                    rejectFunc && rejectFunc(e);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _handleError(result.reason && result.reason[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                rejectFunc && rejectFunc(result.reason);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    if (!responseHandled) {\r\n                        _handleError(dumpObj(e));\r\n                        rejectFunc && rejectFunc(e);\r\n                    }\r\n                }\r\n                if (ignoreResponse && !responseHandled) {\r\n                    // Assume success during unload processing as we most likely won't get the response\r\n                    responseHandled = true;\r\n                    _doOnComplete(oncomplete, 200, {});\r\n                    resolveFunc && resolveFunc(true);\r\n                }\r\n                if (_isOneDs && !responseHandled && payload[_DYN_TIMEOUT /* @min:%2etimeout */] > 0) {\r\n                    // Simulate timeout\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        if (!responseHandled) {\r\n                            // Assume a 500 response (which will cause a retry)\r\n                            responseHandled = true;\r\n                            _doOnComplete(oncomplete, 500, {});\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                }\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send XDomainRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             *\r\n             * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n             * to maintain consistency with the xhrSender's contract\r\n             * Note: XDomainRequest does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _xdrSender(payload, oncomplete, sync) {\r\n                // It doesn't support custom headers, so no action is taken with current requestHeaders\r\n                var _window = getWindow();\r\n                var xdr = new XDomainRequest();\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                xdr.onload = function () {\r\n                    var response = getResponseText(xdr);\r\n                    var onloadFunc = _onCompleteFuncs && _onCompleteFuncs.xdrOnComplete;\r\n                    if (onloadFunc && isFunction(onloadFunc)) {\r\n                        onloadFunc(xdr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, 200, {}, response);\r\n                    }\r\n                };\r\n                xdr.onerror = function () {\r\n                    _doOnComplete(oncomplete, 400, {}, _isOneDs ? STR_EMPTY : formatErrorMessageXdr(xdr));\r\n                };\r\n                xdr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, 500, {});\r\n                };\r\n                xdr.onprogress = function () { };\r\n                // XDomainRequest requires the same protocol as the hosting page.\r\n                // If the protocol doesn't match, we can't send the telemetry :(.\r\n                var hostingProtocol = _window && _window.location && _window.location[_DYN_PROTOCOL /* @min:%2eprotocol */] || \"\";\r\n                var endpoint = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endpoint) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    return;\r\n                }\r\n                if (!_isOneDs && endpoint.lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                    var msg = \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\";\r\n                    _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + msg);\r\n                    _onError(msg, oncomplete);\r\n                    return;\r\n                }\r\n                var endpointUrl = _isOneDs ? endpoint : endpoint[_DYN_REPLACE /* @min:%2ereplace */](/^(https?:)/, \"\");\r\n                xdr.open(STR_POST_METHOD, endpointUrl);\r\n                if (payload[_DYN_TIMEOUT /* @min:%2etimeout */]) {\r\n                    xdr[_DYN_TIMEOUT /* @min:%2etimeout */] = payload[_DYN_TIMEOUT /* @min:%2etimeout */];\r\n                }\r\n                xdr.send(data);\r\n                if (_isOneDs && sync) {\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        xdr.send(data);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    xdr.send(data);\r\n                }\r\n            }\r\n            function _initDefaults() {\r\n                _syncFetchPayload = 0;\r\n                _isInitialized = false;\r\n                _enableSendPromise = false;\r\n                _diagLog = null;\r\n                _isOneDs = null;\r\n                _onCompleteFuncs = null;\r\n                _disableCredentials = null;\r\n                _fetchCredentials = null;\r\n                _fallbackInst = null;\r\n                _disableXhr = false;\r\n                _disableBeacon = false;\r\n                _disableBeaconSync = false;\r\n                _disableFetchKeepAlive = false;\r\n                _addNoResponse = false;\r\n                _timeoutWrapper = null;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SenderPostManager.prototype.initialize.\r\n// Removed Stub for SenderPostManager.prototype.getSyncFetchPayload.\r\n// Removed Stub for SenderPostManager.prototype.SetConfig.\r\n// Removed Stub for SenderPostManager.prototype.getSenderInst.\r\n// Removed Stub for SenderPostManager.prototype.getFallbackInst.\r\n// Removed Stub for SenderPostManager.prototype._doTeardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    SenderPostManager.__ieDyn=1;\n\n    return SenderPostManager;\r\n}());\r\nexport { SenderPostManager };\r\n//# sourceMappingURL=SenderPostManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n//  @skip-file-minify\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\nexport var LoggingSeverity = createEnumStyle({\r\n    DISABLED: 0 /* eLoggingSeverity.DISABLED */,\r\n    CRITICAL: 1 /* eLoggingSeverity.CRITICAL */,\r\n    WARNING: 2 /* eLoggingSeverity.WARNING */,\r\n    DEBUG: 3 /* eLoggingSeverity.DEBUG */\r\n});\r\n//# sourceMappingURL=LoggingEnums.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strShimFunction, strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\nimport { getInst, objHasOwnProperty } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SPLICE } from \"../__DynamicConstants\";\r\nimport { _getObjProto } from \"./HelperFuncs\";\r\nvar aiInstrumentHooks = \"_aiHooks\";\r\nvar cbNames = [\r\n    \"req\", \"rsp\", \"hkErr\", \"fnErr\"\r\n];\r\n/** @ignore */\r\nfunction _arrLoop(arr, fn) {\r\n    if (arr) {\r\n        for (var lp = 0; lp < arr[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            if (fn(arr[lp], lp)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _doCallbacks(hooks, callDetails, cbArgs, hookCtx, type) {\r\n    if (type >= 0 /* CallbackType.Request */ && type <= 2 /* CallbackType.HookError */) {\r\n        _arrLoop(hooks, function (hook, idx) {\r\n            var cbks = hook.cbks;\r\n            var cb = cbks[cbNames[type]];\r\n            if (cb) {\r\n                // Set the specific hook context implementation using a lazy creation pattern\r\n                callDetails.ctx = function () {\r\n                    var ctx = hookCtx[idx] = (hookCtx[idx] || {});\r\n                    return ctx;\r\n                };\r\n                try {\r\n                    cb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                }\r\n                catch (err) {\r\n                    var orgEx = callDetails.err;\r\n                    try {\r\n                        // Report Hook error via the callback\r\n                        var hookErrorCb = cbks[cbNames[2 /* CallbackType.HookError */]];\r\n                        if (hookErrorCb) {\r\n                            callDetails.err = err;\r\n                            hookErrorCb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // Not much we can do here -- swallowing the exception to avoid crashing the hosting app\r\n                    }\r\n                    finally {\r\n                        // restore the original exception (if any)\r\n                        callDetails.err = orgEx;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _createFunctionHook(aiHook) {\r\n    // Define a temporary method that queues-up a the real method call\r\n    return function () {\r\n        var _a;\r\n        var funcThis = this;\r\n        // Capture the original arguments passed to the method\r\n        var orgArgs = arguments;\r\n        var hooks = aiHook.h;\r\n        var funcArgs = (_a = {},\r\n            _a[_DYN_NAME /* @min:name */] = aiHook.n,\r\n            _a.inst = funcThis,\r\n            _a.ctx = null,\r\n            _a.set = _replaceArg,\r\n            _a);\r\n        var hookCtx = [];\r\n        var cbArgs = _createArgs([funcArgs], orgArgs);\r\n        funcArgs.evt = getInst(\"event\");\r\n        function _createArgs(target, theArgs) {\r\n            _arrLoop(theArgs, function (arg) {\r\n                target[_DYN_PUSH /* @min:%2epush */](arg);\r\n            });\r\n            return target;\r\n        }\r\n        function _replaceArg(idx, value) {\r\n            orgArgs = _createArgs([], orgArgs);\r\n            orgArgs[idx] = value;\r\n            cbArgs = _createArgs([funcArgs], orgArgs);\r\n        }\r\n        // Call the pre-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 0 /* CallbackType.Request */);\r\n        // Call the original function was called\r\n        var theFunc = aiHook.f;\r\n        if (theFunc) {\r\n            try {\r\n                funcArgs.rslt = theFunc[_DYN_APPLY /* @min:%2eapply */](funcThis, orgArgs);\r\n            }\r\n            catch (err) {\r\n                // Report the request callback\r\n                funcArgs.err = err;\r\n                _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 3 /* CallbackType.FunctionError */);\r\n                // rethrow the original exception so anyone listening for it can catch the exception\r\n                throw err;\r\n            }\r\n        }\r\n        // Call the post-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 1 /* CallbackType.Response */);\r\n        return funcArgs.rslt;\r\n    };\r\n}\r\n/** @ignore */\r\nfunction _getOwner(target, name, checkPrototype, checkParentProto) {\r\n    var owner = null;\r\n    if (target) {\r\n        if (objHasOwnProperty(target, name)) {\r\n            owner = target;\r\n        }\r\n        else if (checkPrototype) {\r\n            owner = _getOwner(_getObjProto(target), name, checkParentProto, false);\r\n        }\r\n    }\r\n    return owner;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProto(target, funcName, callbacks) {\r\n    if (target) {\r\n        return InstrumentFunc(target[strShimPrototype], funcName, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProtos(target, funcNames, callbacks) {\r\n    if (target) {\r\n        return InstrumentFuncs(target[strShimPrototype], funcNames, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\nfunction _createInstrumentHook(owner, funcName, fn, callbacks) {\r\n    var aiHook = fn && fn[aiInstrumentHooks];\r\n    if (!aiHook) {\r\n        // Only hook the function once\r\n        aiHook = {\r\n            i: 0,\r\n            n: funcName,\r\n            f: fn,\r\n            h: []\r\n        };\r\n        // Override (hook) the original function\r\n        var newFunc = _createFunctionHook(aiHook);\r\n        newFunc[aiInstrumentHooks] = aiHook; // Tag and store the function hooks\r\n        owner[funcName] = newFunc;\r\n    }\r\n    var theHook = {\r\n        // tslint:disable:object-literal-shorthand\r\n        id: aiHook.i,\r\n        cbks: callbacks,\r\n        rm: function () {\r\n            // DO NOT Use () => { shorthand for the function as the this gets replaced\r\n            // with the outer this and not the this for theHook instance.\r\n            var id = this.id;\r\n            _arrLoop(aiHook.h, function (hook, idx) {\r\n                if (hook.id === id) {\r\n                    aiHook.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return 1;\r\n                }\r\n            });\r\n        }\r\n        // tslint:enable:object-literal-shorthand\r\n    };\r\n    aiHook.i++;\r\n    aiHook.h[_DYN_PUSH /* @min:%2epush */](theHook);\r\n    return theHook;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    if (target && funcName && callbacks) {\r\n        var owner = _getOwner(target, funcName, checkPrototype, checkParentProto);\r\n        if (owner) {\r\n            var fn = owner[funcName];\r\n            if (typeof fn === strShimFunction) {\r\n                return _createInstrumentHook(owner, funcName, fn, callbacks);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFuncs(target, funcNames, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    var hooks = null;\r\n    _arrLoop(funcNames, function (funcName) {\r\n        var hook = InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto);\r\n        if (hook) {\r\n            if (!hooks) {\r\n                hooks = [];\r\n            }\r\n            hooks[_DYN_PUSH /* @min:%2epush */](hook);\r\n        }\r\n    });\r\n    return hooks;\r\n}\r\n/**\r\n * Add an instrumentation hook to the provided named \"event\" for the target class / object, this doesn't check whether the\r\n * named \"event\" is in fact a function and just assigns the instrumentation hook to the target[evtName]\r\n * @param target - The target object\r\n * @param evtName - The name of the event\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentEvent(target, evtName, callbacks, checkPrototype, checkParentProto) {\r\n    if (target && evtName && callbacks) {\r\n        var owner = _getOwner(target, evtName, checkPrototype, checkParentProto) || target;\r\n        if (owner) {\r\n            return _createInstrumentHook(owner, evtName, owner[evtName], callbacks);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=InstrumentHooks.js.map"],"names":["MinChannelPriorty","_pureAssign","func1","func2","_pureRef","value","name","_primitiveTypes","UNDEF_VALUE","undefined","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","ObjClass","Object","ObjProto","StrCls","String","StrProto","MathCls","Math","ArrCls","Array","ArrProto","ArrSlice","safe","func","argArray","v","apply","this","e","safeGet","cb","defValue","result","_createIs","theType","_createObjIs","theName","objToString","call","isTypeof","isUndefined","isNullOrUndefined","isStrictNullOrUndefined","isDefined","arg","isPrimitiveType","indexOf","isString","isFunction","isObject","isArray","isDate","isNumber","isBoolean","isError","isPromiseLike","then","isNotTruthy","isTruthy","objGetOwnPropertyDescriptor","objHasOwnProperty","obj","prop","hasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","theObject","callbackfn","thisArg","propMap","c","w","g","s","_createProp","desc","l","get","set","newValue","key","objDefineProp","objDefineAccessors","target","getProp","setProp","configurable","enumerable","objDefine","propDesc","_createKeyValueMap","values","keyType","valueType","completeFn","writable","theMap","_assignMapValue","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stack","message","JSON","stringify","replace","throwError","Error","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objAssign","objKeys","objDeepFreeze","objFreeze","objSeal","objGetPrototypeOf","createEnum","createEnumKeyMap","createSimpleMap","mapClass","createTypeMap","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","match","matchAll","search","species","split","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","globalThis","self","window","global","_getGlobalConfig","gbl","_unwrapFunction","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theArgs","theFunc","arguments","_unwrapProp","propName","mathMax","strSlice","strSubstring","strSubstr","polyStrSubstr","start","length","strLeft","count","_polySymbols","_wellKnownSymbolCache","_globalLazyTestHooks","UNIQUE_REGISTRY_ID","_globalSymbolRegistry","gblCfg","gblSym","k","polyNewSymbol","description","theSymbol","toString","polySymbolFor","newSymbol_1","regId_1","registry","polyGetKnownSymbol","knownName","_initTestHooks","getLazy","lazyValue","b","lzy","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","getGlobal","useCached","getInst","getWindow","hasDocument","getDocument","hasWindow","hasNavigator","getNavigator","hasHistory","getHistory","_symbol","_symbolFor","isNode","process","versions","node","_initSymbol","_getSymbolKey","_iterSymbol$1","isSymbol","hasSymbol","getSymbol","getKnownSymbol","noPoly","sym","newSymbol","symbolFor","isIterator","next","isIterable","iterForOf","iter","err","iterResult","done","failed","throw","return","fnApply","fn","arrAppend","elms","push","elm","arrForEach","theArray","len","idx","arrIndexOf","arrMap","arrSlice","end","_isProtoArray","arrReduce","objCreate","polyObjCreate","type","tempFunc","objSetPrototypeOf","proto","d","_a","_createCustomError","__","_setName","baseClass","createCustomError","constructCb","errorBase","theBaseClass","orgName","captureFn","captureStackTrace","_this","orgProto","_self","utcNow","Date","now","polyUtcNow","getTime","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","polyStrTrim","strTrim","isPlainObject","Function","ex","_defaultDeepCopyHandler","details","plainObjDeepCopyHandler","defaultDeepCopyHandlers","arrayDeepCopyHandler","functionDeepCopyHandler","dateDeepCopyHandler","_getSetVisited","visitMap","source","newPath","theEntry","entry","_deepCopy","ctx","userHandler","handler","path","concat","newCtx","src","isPlain","isPrim","origin","copy","newKey","copyTo","_copyProps","newEntry","objCopyProps","objDeepCopy","_doExtend","theArg","deepExtend","obj1","obj2","obj3","obj4","obj5","obj6","_perf","getLength","getPerformance","perfNow","perf","strEndsWith","polyStrEndsWith","searchString","searchValue","strIndexOf","strStartsWith","polyStrStartsWith","position","pos","REF","UNREF","HAS_REF","ENABLED","_createTimerHandler","startTimer","refreshFn","cancelFn","theTimerHandler","ref","timerId","_unref","_cancel","_refresh","cancel","refresh","h","dn","_createTimeoutWith","overrideFn","isArr","setFn","setTimeout","clearFn","clearTimeout","timerFn","scheduleTimeout","callback","timeout","createTimeout","aggregationErrorType","createEnumStyle","createValueMap","EventsDiscardedReason","Unknown","NonRetryableStatus","InvalidEvent","SizeLimitExceeded","KillSwitch","QueueFull","BatchDiscardedReason","CleanStorage","MaxInStorageTimeExceeded","ActiveStatus","NONE","PENDING","INACTIVE","ACTIVE","_DYN_TO_LOWER_CASE","_DYN_BLK_VAL","_DYN_LENGTH","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_LOGGER","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_HDLR","_DYN_CANCEL","_DYN_INITIALIZE","_DYN_IDENTIFIER","_DYN_REMOVE_NOTIFICATION_0","_DYN_ADD_NOTIFICATION_LIS1","_DYN_IS_INITIALIZED","_DYN_INSTRUMENTATION_KEY","_DYN__INACTIVE","_DYN_VALUE","_DYN_GET_NOTIFY_MGR","_DYN_GET_PLUGIN","_DYN_NAME","_DYN_I_KEY","_DYN_TIME","_DYN_PROCESS_NEXT","_DYN_GET_PROCESS_TEL_CONT2","_DYN_POLL_INTERNAL_LOGS","_DYN_ENABLED","_DYN_STOP_POLLING_INTERNA3","_DYN_UNLOAD","_DYN_ON_COMPLETE","_DYN_VERSION","_DYN_LOGGING_LEVEL_CONSOL4","_DYN_CREATE_NEW","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_MESSAGE","_DYN_IS_ASYNC","_DYN_DIAG_LOG","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_PROTOCOL","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_LOG_INTERNAL_MESSAGE","_DYN_TYPE","_DYN_HANDLER","_DYN_STATUS","_DYN_GET_RESPONSE_HEADER","_DYN_GET_ALL_RESPONSE_HEA5","_DYN_IS_CHILD_EVT","_DYN_DATA","_DYN_GET_CTX","_DYN_SET_CTX","_DYN_COMPLETE","_DYN_ITEMS_RECEIVED","_DYN_URL_STRING","_DYN_SEND_POST","_DYN_HEADERS","_DYN_TIMEOUT","_DYN_SET_REQUEST_HEADER","_DYN_TRACE_ID","_DYN_SPAN_ID","_DYN_TRACE_FLAGS","_DYN_GET_ATTRIBUTE","throwAggregationError","sourceErrors","args","errors","theMessage","srcError","strShimFunction","strShimObject","strShimUndefined","strShimPrototype","strHasOwnProperty","extendStaticsFn","__proto__","p","__extendsFn","constructor","__spreadArrayFn","to","from","i","il","j","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynClassNamePrefix","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","n","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","curProto","newProto","_forEachProp","props","name_1","lp","_isDynamicCandidate","skipOwn","_throwTypeError","_getInstanceFuncs","thisTarget","instFuncs","_hasVisited","_getBaseFuncs","classProto","useBaseInst","_instFuncProxy","funcHost","instFuncTable","baseFuncs","baseProto","visited","_getInstFunc","currentDynProtoProxy","instFunc","canAddInst","objProto","protoFunc","_getProtoFunc","_populatePrototype","className","baseInstFuncs","setInstanceFunc","instFuncs_1","dynProtoProxy","_checkPrototype","thisProto","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","options","perfOptions","STR_PROMISE","REJECTED","doAwaitResponse","doAwait","status","rejected","reason","resolveFn","rejectFn","finallyFn","doFinally","finally","_hasInitEvent","STRING_STATES","DISPATCH_EVENT","_hasInitEventFn","doc","evt","createEvent","initEvent","emitEvent","evtName","populateEvent","useNewEvent","theEvt","Event","theConsole","_hasPromiseRejectionEvent","_promiseCls","_promiseCreator","_allSettledCreator","NODE_UNHANDLED_REJECTION","UNHANDLED_REJECTION","toLowerCase","_unhandledRejectionTimeout","dumpFnObj","_createPromise","newPromise","processor","executor","_settledValue","_thePromise","additionalArgs","_state","_hasResolved","_queue","_handled","_unHandledRejectionHandler","_then","onResolved","onRejected","resolve","reject","_processQueue","_strState","pending","slice","_createSettleIfFn","newState","allowState","theValue","_notifyUnhandledRejection","emit","catch","onFinally","thenFinally","catchFinally","_rejectFn","_createAllPromise","input","values_1","pending_1","item","_createAllSettledPromise","processItem","syncItemProcessor","timeoutItemProcessor","callbackTimeout","createAsyncPromise","createNativePromise","PrmCls","thePromise","createPromise","createAllPromise","createAllSettledPromise","UNDEFINED_VALUE","STR_EMPTY","STR_CHANNELS","STR_CORE","STR_CREATE_PERF_MGR","STR_DISABLED","STR_EXTENSION_CONFIG","STR_EXTENSIONS","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_EVENTS_SENT","STR_EVENTS_DISCARDED","STR_EVENTS_SEND_REQUEST","STR_PERF_EVENT","STR_OFFLINE_STORE","STR_OFFLINE_SENT","STR_OFFLINE_DROP","STR_GET_PERF_MGR","STR_DOMAIN","STR_PATH","STR_NOT_DYNAMIC_ERROR","strGetPrototypeOf","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotUndefined","isNotNullOrUndefined","normalizeJsName","_all","letter","toUpperCase","strContains","toISOString","date","getExceptionName","setValue","field","valChk","srcChk","getSetValue","_createProxyFunction","srcFunc","originalArguments","proxyAssign","chkSet","_loop_1","proxyFunctionAs","overwriteTarget","proxyFunctions","functionsToProxy","theFuncName","createClassFromInterface","defaults","optimizeObject","ObjAssign","objExtend","extended","argLen","deep","isNewArray","clone","isArgArray","isArgObj","isFeatureEnabled","feature","cfg","ft","featureOptIn","mode","getResponseText","xhr","responseText","formatErrorMessageXdr","xdr","formatErrorMessageXhr","response","prependTransports","theTransports","newTransports","strDisabledPropertyName","strWithCredentials","strTimeout","openXhr","method","urlString","withCredentials","disabled","isSync","_wrapSetXhrProp","XMLHttpRequest","open","convertAllHeadersToMap","headersString","headers","headerEntry","header","substring","_appendHeader","theHeaders","STR_KILL_DURATION_HEADER","STR_KILL_DURATION_SECONDS_HEADER","STR_TIME_DELTA_HEADER","_getAllResponseHeaders","isOneDs","strDocumentMode","strLocation","strConsole","strJSON","strCrypto","strMsCrypto","strReactNative","strMsie","strTrident","strXMLHttpRequest","_isTrident","_navUserAgentCheck","_enableMocks","_useXDomainRequest","_beaconsSupported","_hasProperty","property","supported","setEnableEnvMocks","enabled","getLocation","checkForMock","mockLocation","location","getConsole","console","hasJSON","getJSON","getCrypto","getMsCrypto","isReactNative","nav","product","isIE","userAgent","getIEVersion","userAgentStr","ua","navigator_1","max","parseInt","tridentVer","isSafari","navigator_2","isBeaconsSupported","sendBeacon","isFetchSupported","withKeepAlive","isSupported","request","useXDomainRequest","XDomainRequest","isXhrSupported","_getNamedValue","findMetaTag","querySelectorAll","content","findNamedServerTiming","navPerf","getEntriesByType","serverTiming","dispatchEvent","evnt","createCustomDomEvent","eventName","event","detail","CustomEvent","initCustomEvent","sendCustomEvent","customDetails","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","_mwcSeed","seedValue","_autoSeedMwc","random","randomValue","maxValue","floor","random32","signed","getRandomValues","Uint32Array","mwcRandom32","mwcRandomSeed","newId","maxLength","number","chars","base64chars","version","instanceName","_dataUid","_canAcceptData","_getCache","data","theCache","id","createUniqueNamespace","includeVersion","createElmNodeData","accept","addDefault","kill","_isConfigDefaults","isVal","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","_resolveDefaultValue","newValue_1","_applyDefaultValue","defaultValue","isValid","mergeDf","reference","readOnly","blkDynamicValue","mrg","usingDefault","cfgValue","dfName","dfValue","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_cfgDeepCopy","target_1","getDynamicConfigHandler","blockDynamicConversion","forceDynamicConversion","_canMakeDynamic","getFunc","state","blkVal","throwInvalidAccess","arrayMethodsToPatch","_throwDynamicError","logger","_patchArray","orgMethod","_i","_makeDynamicObject","_getOwnPropGetter","_createDynamicProperty","trk","clr","checkDynamic","isObjectOrArray","_getProperty","activeHandler","act","chng","add","ro","upd","newIsObjectOrArray","isReferenced","rf","_setDynamicProperty","hdlr","getter","valueState","_setDynamicPropertyState","flags","isDynamic","inPlace","rdOnly","blkProp","symPrefix","symPostfix","_createState","cfgHandler","theState","dynamicPropertySymbol","uid","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","prevWatcher","bind","setDf","_notifyWatchers","notifyHandlers","watcherFailures_1","use","_createAndUseHandler","configHandler","rm","_createDynamicHandler","newTarget","defaultValues","_block","allowUpdate","prevUpd","_logInvalidAccess","createDynamicConfig","config","defaultConfig","onConfigChange","runTargetUnload","isAsync","doUnloadAll","targets","resolved","ChannelControllerPriority","DisabledPropertyName","_stringToBoolOrDefault","cfgDfMerge","cfgDfSet","setter","cfgDfValidate","validator","fallBackName","cfgDfBoolean","cfgDfFunc","cfgDfString","cfgDfBlockPropValue","_debugListener","listenerFuncs","_aiNamespace","_listenerProxyFunc","dbgExt","getDebugExt","listener","_getExtensionNamespace","ns","disableDbgExt","getDebugListener","STR_WARN_TO_CONSOLE","AiNonUserActionablePrefix","AiUserActionablePrefix","AIInternalMessagePrefix","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","text","_logToConsole","logFunc","_InternalLogMessage","msgId","msg","isUserAct","properties","strProps","diagnosticText","dataType","safeGetLogger","core","DiagnosticLogger","_b","identifier","queue","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","throttleLimitMessage","throttleMessage","logMessage","messageKey","_debugExtMsg","errorToConsole","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","__ieDyn","_getLogger","_throwInternal","_warnToConsole","_doc","strToGMTString","strToUTCString","strCookie","strExpires","strIsCookieUseDisabled","strDisableCookiesUsage","strConfigCookieMgr","_supportsCookies","_allowUaSameSite","_parsedCookieValue","_cookieCache","_globalCookieConfig","rootDefaultConfig","cookieCfg","ignoreCookies","blockedCookies","cookieDomain","cookiePath","_getDoc","_gblCookieMgr","inst","createCookieMgr","_isMgrEnabled","cookieMgr","isEnabled","_isIgnoredCookie","cookieMgrCfg","_isBlockedCookie","_isCfgEnabled","rootConfig","cookieMgrConfig","cookieEnabled","isCfgEnabled","safeGetCookieMgr","getCookieMgr","unloadHandler","_path","_domain","_enabled","_getCookieFn","getCookie","_getCookieValue","_setCookieFn","setCookie","_setCookieValue","_delCookieFn","delCookie","areCookiesSupported","gblManager","setEnabled","maxAgeSec","domain","location_1","_extractParts","_isIE","expireMs","expiry","setTime","_formatDate","uaDisallowsSameSiteNone","_formatCookieValue","del","purge","exception","thePart","theDate","cookieValue","theCookie","perfEvtsSendAll","_runScheduledListeners","asyncNotifications","callbacks","_runListeners","listeners","NotificationManager","_listeners","_asyncNotifications","index","events","sendReason","perfEvent","batch","cnt","rn_1","waiting","_finishUnload","asyncUnload","strExecutionContextKey","strParentContextKey","strChildrenContextKey","_defaultPerfManager","PerfEvent","payloadDetails","theDetails_1","childTime","childEvts","childEvt","exTime","ParentContextKey","ChildrenContextKey","PerfManager","manager","create","fire","doPerfActiveKey","doPerf","mgrSource","getSource","perfMgr","children","perfEvt","currentActive","setGblPerfMgr","perfManager","getGblPerfMgr","Undefined","newGuid","uuid","generateW3CId","tmp","hexValues","oct","a","clockSequenceHi","TRACE_PARENT_REGEX","DEFAULT_VERSION","INVALID_VERSION","INVALID_TRACE_ID","INVALID_SPAN_ID","SAMPLED_FLAG","_isValid","invalidValue","_formatValue","_formatFlags","isNaN","createTraceParent","traceId","spanId","isValidTraceId","isValidSpanId","traceFlags","parseTraceParent","selectIdx","exec","isValidTraceParent","isSampledFlag","formatTraceParent","findW3cTraceParent","findAllScripts","scripts","getElementsByTagName","script","crossOrigin","async","defer","hasAttribute","referrerPolicy","info","url","pluginStateData","_getPluginState","plugin","initializePlugins","processContext","extensions","initPlugins","lastPlugin","proxy","pluginState","isInitialized","thePlugin","getCfg","sortPlugins","plugins","sort","extA","extB","bHasProcess","unloadComponents","components","unloadCtx","unloadState","asyncCallback","_doUnload","component","createDistributedTraceContext","parentCtx","trace","getName","setName","getTraceId","setTraceId","getSpanId","setSpanId","getTraceFlags","setTraceFlags","newTraceFlags","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_getNextProxyStart","startAt","createTelemetryProxyChain","_createInternalContext","telemetryChain","_nextProxy","_onComplete","context","_next","onComplete","nextProxy","completeDetails","diagLog","getExtCfg","newConfig","_getExtCfg","getConfig","extConfig","hasNext","getNext","setNext","nextPlugin","iterate","that","createIfMissing","extCfg","idCfg","createProcessTelemetryContext","internalContext","env","createProcessTelemetryUnloadContext","createProcessTelemetryUpdateContext","updateState","lastProxy_1","firstProxy","newProxy","createTelemetryPluginProxy","_setNext","hasProcessTelemetry","hasSetNext","chainId","proxyChain","getPlugin","processTelemetry","itemCtx","_processChain","unload","pluginCore","hasRun","update","updateCtx","_id","processPluginFn","hasRunContext","nextId","error","hasNextRun","_maxHooks","_hookAddMonitor","ProcessTelemetryContext","pluginChain","createUnloadHandlerContainer","handlers","run","_testHookMaxUnloadHooksCb","maxHooks","addMonitor","createUnloadHookContainer","_hooks","oldHooks","remove","hooks","strGetPlugin","BaseTelemetryPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","_hookContainer","_getTelCtx","currentCtx","rootCtx","_setDefaults","_initDefaults","unloadDone","theUnloadCtx","theUnloadState","_unloadCallback","updateDone","theUpdateCtx","_doUpdate","_updateCallback","setInitialized","_addInitializer","_initializers","telemetryInitializer","theInitializer","initializer","_runInitializers","doNotSendItem","telemetryInitializersCount","TelemetryInitializerPlugin","_super","priority","_base","addTelemetryInitializer","__extends","strValidationError","strNotificationManager","strSdkUnloadingError","strSdkNotInitialized","maxInitQueueSize","maxInitTimeout","diagnosticLogInterval","_createPerfManager","notificationMgr","_validateExtensions","channelPriority","allExtensions","coreExtensions","channels","extPriorities","ext","extPriority","_isPluginPresent","exists","_deepMergeConfig","newValues","merge","_findWatcher","newWatcher","theListener","_addDelayedCfgListener","fnd","_registerDelayedCfgListener","unloadHdl","_initDebugListener","unloadContainer","notificationManager","debugListener","_createUnloadHook","unloadHook","AppInsightsCore","_configHandler","_isInitialized","_logger","_eventQueue","_notificationManager","_perfManager","_cfgPerfManager","_cookieManager","_pluginChain","_configExtensions","_channelConfig","_channels","_isUnloading","_telemetryInitializerPlugin","_internalLogsEventName","_evtNamespace","_unloadHandlers","_traceCtx","_instrumentationKey","_cfgListeners","_extensions","_pluginVersionStringArr","_pluginVersionString","_activeStatus","_endpoint","_initInMemoMaxSize","_isStatusSet","_internalLogPoller","_internalLogPollerListening","_forceStopInternalLogPoller","_setStatus","_releaseQueues","releaseQueue","_startLogPoller","alwaysStart","_addUnloadHook","interval","isRunning","_flushInternalLogs","unref","_setPluginVersions","thePlugins","_addPluginVersions","ver","updateCfg","join","newLogger","cfgExtensions","splice","_createTelCtx","theCtx","_getPluginChain","_initPluginChain","theExtensions","_getPlugin","pluginIdentifier","channelHosts","getChannel","host","removeCb","pluginsToRemove","_removePlugins","removed","removeComplete","newConfigExtensions","newChannelConfig","newQueue","channel","baseType","baseData","track","_flushChannels","callBack","cbTimeout","doneIterating","cbTimer","doCallback","handled_1","flush","_updateHook","_logOrThrowError","_notifyInvalidEvent","telemetryItem","activeStatus","_setPendingStatus","rootCfg","initInMemoMaxSize","ikey","endpointUrl","promises","initTimeout","initTimeOut","allPromises","ikeyRes","endpointRes","createPerfMgr","enablePerfMgr","prevCfgPerfMgr","__spreadArray","teeController","getChannels","controls","getNotifyMgr","setCookieMgr","setPerfMgr","eventCnt","eventQueue","unloadComplete","flushComplete","processUnloadCtx","addPlugin","replaceExisting","addCb","existingPlugin","removedPlugins_1","_addPlugin","added","mergeExisting","oldCfg","evtNamespace","getTraceCtx","createNew","setTraceCtx","traceCtx","addUnloadHook","onCfgChange","getWParam","enableWParam","parseResponse","parse","itemsAccepted","itemsReceived","STR_NO_RESPONSE_BODY","_noResponseQs","STR_POST_METHOD","SenderPostManager","_enableSendPromise","_diagLog","_isOneDs","_onCompleteFuncs","_disableCredentials","_fetchCredentials","_fallbackInst","_disableXhr","_disableBeacon","_disableBeaconSync","_disableFetchKeepAlive","_addNoResponse","_timeoutWrapper","_syncFetchPayload","_sendCredentials","_onError","_doOnComplete","_onNoPayloadUrl","oncomplete","_doBeaconSend","payload","plainTextBatch","Blob","_beaconSender","sync","onRetry","beaconOnRetry","_xhrSender","resolveFunc","rejectFunc","endPointUrl","disableXhrSync","_doOnReadyFunc","onReadyFunc","xhrOnComplete","headerName","onreadystatechange","readyState","onload","onerror","ontimeout","send","_doFetchSender","requestHeaders","Headers","batchLength","ignoreResponse","responseHandled","body","append","init","credentials","keepalive","Request","_handleError","res","_onFetchComplete","onCompleteFunc","fetchOnComplete","fetch","response_1","ok","resp","statusText","_xdrSender","_window","hostingProtocol","onloadFunc","xdrOnComplete","onprogress","endpoint","lastIndexOf","SetConfig","senderOnCompleteCallBack","disableCredentials","fetchCredentials","enableSendPromise","disableXhr","disableBeacon","disableBeaconSync","timeWrapper","addNoResponse","disableFetchKeepAlive","sendPOST","protocol","getSyncFetchPayload","getSenderInst","transports","_getSenderInterface","syncSupport","transportType","sendPostFunc","_transport","_isSync","getFallbackInst","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","strVisibilityChangeEvt","strPageHide","strPageShow","strUnload","strBeforeUnload","strPageHideNamespace","strPageShowNamespace","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","theNamespace_1","parsedEvent","__getRegisteredEvents","theEvents","eventCache","evtType","registeredEvents","_getRegisteredEvents","aiEvts","_doDetach","handlerRef","useCapture","_doAttach","_doUnregister","unRegFn","theEvent","capture","_unregisterEvents","mergeEvtNamespace","theNamespace","namespaces","eventOn","registeredEvent","guid","eventOff","evtName_1","found_1","regEvent","attachEvent","eventNameWithoutOn","detachEvent","addEventHandler","removeEventHandler","_addEventListeners","excludeEvents","addEventListeners","removeEventListeners","addPageUnloadEventListener","removePageUnloadEventListener","addPageHideEventListener","newNamespaces","pageUnloadAdded","visibilityState","removePageHideEventListener","addPageShowEventListener","pageShowAdded","removePageShowEventListener","LoggingSeverity","DISABLED","CRITICAL","WARNING","DEBUG","aiInstrumentHooks","cbNames","_arrLoop","arr","_doCallbacks","callDetails","cbArgs","hookCtx","hook","cbks","orgEx","hookErrorCb","_createFunctionHook","aiHook","orgArgs","funcArgs","_createArgs","f","rslt","_getOwner","checkPrototype","checkParentProto","owner","InstrumentProto","InstrumentFunc","InstrumentProtos","funcNames","InstrumentFuncs","_createInstrumentHook","theHook","newFunc","InstrumentEvent"],"mappings":"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","x_google_ignoreList":[1,8,10]}
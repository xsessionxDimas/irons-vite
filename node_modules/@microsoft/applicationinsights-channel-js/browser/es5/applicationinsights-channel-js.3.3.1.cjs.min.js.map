{"version":3,"file":"applicationinsights-channel-js.3.3.1.cjs.min.js","sources":["../../../../tools/shims/dist-es5/Constants.js","../../../../common/temp/node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","../../../../tools/shims/dist-es5/TsLibShims.js","../../../../common/temp/node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/AggregationError.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK.Enums/InitActiveStatusEnum.js","../../../../shared/AppInsightsCore/dist-es5/__DynamicConstants.js","../../../../common/temp/node_modules/@nevware21/ts-async/dist/es5/mod/ts-async.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/InternalConstants.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/HelperFuncs.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/EnvUtils.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/RandomHelper.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DataCacheHelper.js","../../../../shared/AppInsightsCore/dist-es5/Config/ConfigDefaults.js","../../../../shared/AppInsightsCore/dist-es5/Config/DynamicSupport.js","../../../../shared/AppInsightsCore/dist-es5/Config/DynamicProperty.js","../../../../shared/AppInsightsCore/dist-es5/Config/DynamicState.js","../../../../shared/AppInsightsCore/dist-es5/Config/DynamicConfig.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/AsyncUtils.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/Constants.js","../../../../shared/AppInsightsCore/dist-es5/Config/ConfigDefaultHelpers.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DiagnosticLogger.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/PerfManager.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/TelemetryHelpers.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/UnloadHookContainer.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/ResponseHelpers.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/SenderPostManager.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/EventHelpers.js","../../../../shared/AppInsightsCommon/dist-es5/Constants.js","../../../../shared/AppInsightsCommon/dist-es5/RequestResponseHeaders.js","../../../../shared/AppInsightsCommon/dist-es5/__DynamicConstants.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/DataSanitizer.js","../../../../shared/AppInsightsCommon/dist-es5/UrlHelperFuncs.js","../../../../shared/AppInsightsCommon/dist-es5/Util.js","../../../../shared/AppInsightsCommon/dist-es5/Enums.js","../../../../shared/AppInsightsCommon/dist-es5/StorageHelperFuncs.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/Envelope.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/Event.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/Exception.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/DataPoint.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/Metric.js","../../../../shared/AppInsightsCommon/dist-es5/HelperFuncs.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/PageView.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/RemoteDependencyData.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/Trace.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/PageViewPerformance.js","../../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/Data.js","../../../../shared/AppInsightsCommon/dist-es5/Interfaces/Contracts/ContextTagKeys.js","../../../../shared/AppInsightsCommon/dist-es5/Interfaces/PartAExtensions.js","../../../../shared/AppInsightsCommon/dist-es5/Offline.js","../../../../shared/AppInsightsCommon/dist-es5/applicationinsights-common.js","../../dist-es5/InternalConstants.js","../../dist-es5/__DynamicConstants.js","../../dist-es5/EnvelopeCreator.js","../../dist-es5/SendBuffer.js","../../dist-es5/Sender.js","../../dist-es5/Serializer.js","../../dist-es5/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","../../dist-es5/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","../../dist-es5/TelemetryProcessors/Sample.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","/*! https://github.com/nevware21/ts-utils v0.11.3 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1;\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key, writable);\n        _assignMapValue(theMap, value, valueType ? value : key, writable);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: !!writable\n    });\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump && propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \")) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                objDeepFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto && clsProto[funcName];\n    return function (thisArg) {\n        var theFunc = (thisArg && thisArg[funcName]) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        (!cachedValue || _globalLazyTestHooks.lzy) && (cachedValue = createCachedValue(safe(getFn, theArgs).v));\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) && (_cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE));\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl = (!_cachedGlobal || useCached === false) ? getGlobal(useCached) : _cachedGlobal.v;\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        return getWindow();\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : null;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray && theArray[\"slice\"]) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = _iterSymbol.v && theArgs[_iterSymbol.v];\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString;\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = false;\n    if (value && theType === OBJECT) {\n        isPlain = isPlainObject(value);\n    }\n    else {\n        isPrim = value === NULL_VALUE || isPrimitiveType(theType);\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_perf || _globalLazyTestHooks.lzy) && (_perf = createCachedValue(safe((getInst), [\"performance\"]).v));\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        isDone = isDone || (ctx.n ? ctx.n(arguments) : true);\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step || ((start <= end) ? 1 : -1);\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = false;\n        if (theStep > 0) {\n            isDone = nextValue > end;\n        }\n        else {\n            isDone = nextValue < end;\n        }\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter && splitter[getKnownSymbol(9 )];\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : null));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = !isUndefined(length) && length < value[LENGTH] ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { createEnumStyle } from \"./EnumHelperFuncs\";\r\nexport var ActiveStatus = createEnumStyle({\r\n    NONE: 0 /* eActiveStatus.NONE */,\r\n    PENDING: 3 /* eActiveStatus.PENDING */,\r\n    INACTIVE: 1 /* eActiveStatus.INACTIVE */,\r\n    ACTIVE: 2 /* eActiveStatus.ACTIVE */\r\n});\r\n//# sourceMappingURL=InitActiveStatusEnum.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN__INACTIVE = \"INACTIVE\"; // Count: 3\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 5\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*!\n * NevWare21 Solutions LLC - ts-async, 0.5.2\n * https://github.com/nevware21/ts-async\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\nimport { isPromiseLike, objDefineProperties, getDocument, createCachedValue, safe, getInst, dumpObj, arrSlice, objDefineProp, hasSymbol, getKnownSymbol, isFunction, throwTypeError, iterForOf, scheduleTimeout, isNode, getWindow, getGlobal, objDefine, objToString, isUndefined, isArray, arrForEach, isIterable, createCustomError, isNumber, scheduleIdleCallback, utcNow, getLength, isIterator, fnCall, arrIndexOf } from '@nevware21/ts-utils';\n\nvar STR_PROMISE = \"Promise\";\nvar DONE = \"done\";\nvar VALUE = \"value\";\nvar RETURN = \"return\";\nvar REJECTED = \"rejected\";\n\nfunction doAwaitResponse(value, cb) {\n    return doAwait(value, function (value) {\n        return cb ? cb({\n            status: \"fulfilled\",\n            rejected: false,\n            value: value\n        }) : value;\n    }, function (reason) {\n        return cb ? cb({\n            status: REJECTED,\n            rejected: true,\n            reason: reason\n        }) : reason;\n    });\n}\nfunction doAwait(value, resolveFn, rejectFn, finallyFn) {\n    var result = value;\n    try {\n        if (isPromiseLike(value)) {\n            if (resolveFn || rejectFn) {\n                result = value.then(resolveFn, rejectFn);\n            }\n        }\n        else {\n            try {\n                if (resolveFn) {\n                    result = resolveFn(value);\n                }\n            }\n            catch (err) {\n                if (rejectFn) {\n                    result = rejectFn(err);\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n    }\n    finally {\n        if (finallyFn) {\n            doFinally(result, finallyFn);\n        }\n    }\n    return result;\n}\nfunction doFinally(value, finallyFn) {\n    var result = value;\n    if (finallyFn) {\n        if (isPromiseLike(value)) {\n            if (value.finally) {\n                result = value.finally(finallyFn);\n            }\n            else {\n                result = value.then(function (value) {\n                    finallyFn();\n                    return value;\n                }, function (reason) {\n                    finallyFn();\n                    throw reason;\n                });\n            }\n        }\n        else {\n            finallyFn();\n        }\n    }\n    return result;\n}\n\nvar _debugState;\nvar _debugResult;\nvar _debugHandled;\nvar _promiseDebugEnabled = false;\nfunction _addDebugState$1(thePromise, stateFn, resultFn, handledFn) {\n    _debugState = _debugState || { toString: function () { return \"[[PromiseState]]\"; } };\n    _debugResult = _debugResult || { toString: function () { return \"[[PromiseResult]]\"; } };\n    _debugHandled = _debugHandled || { toString: function () { return \"[[PromiseIsHandled]]\"; } };\n    var props = {};\n    props[_debugState] = { get: stateFn };\n    props[_debugResult] = { get: resultFn };\n    props[_debugHandled] = { get: handledFn };\n    objDefineProperties(thePromise, props);\n}\nfunction setPromiseDebugState(enabled, logger) {\n    _promiseDebugEnabled = enabled;\n}\n\nvar STRING_STATES =  [\n    \"pending\", \"resolving\", \"resolved\", REJECTED\n];\n\nvar DISPATCH_EVENT = \"dispatchEvent\";\nvar _hasInitEvent;\nfunction _hasInitEventFn(doc) {\n    var evt;\n    if (doc && doc.createEvent) {\n        evt = doc.createEvent(\"Event\");\n    }\n    return (!!evt && evt.initEvent);\n}\nfunction emitEvent(target, evtName, populateEvent, useNewEvent) {\n    var doc = getDocument();\n    !_hasInitEvent && (_hasInitEvent = createCachedValue(!!safe(_hasInitEventFn, [doc]).v));\n    var theEvt = _hasInitEvent.v ? doc.createEvent(\"Event\") : (useNewEvent ? new Event(evtName) : {});\n    populateEvent && populateEvent(theEvt);\n    if (_hasInitEvent.v) {\n        theEvt.initEvent(evtName, false, true);\n    }\n    if (theEvt && target[DISPATCH_EVENT]) {\n        target[DISPATCH_EVENT](theEvt);\n    }\n    else {\n        var handler = target[\"on\" + evtName];\n        if (handler) {\n            handler(theEvt);\n        }\n        else {\n            var theConsole = getInst(\"console\");\n            theConsole && (theConsole[\"error\"] || theConsole[\"log\"])(evtName, dumpObj(theEvt));\n        }\n    }\n}\n\nvar NODE_UNHANDLED_REJECTION = \"unhandledRejection\";\nvar UNHANDLED_REJECTION = NODE_UNHANDLED_REJECTION.toLowerCase();\nvar _currentPromiseId = [];\nvar _uniquePromiseId = 0;\nvar _unhandledRejectionTimeout = 10;\nvar _aggregationError;\nvar _hasPromiseRejectionEvent;\nfunction dumpFnObj(value) {\n    if (isFunction(value)) {\n        return value.toString();\n    }\n    return dumpObj(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAggregationError(values) {\n    !_aggregationError && (_aggregationError = createCachedValue(safe(getInst, [\"AggregationError\"]).v || createCustomError(\"AggregationError\", function (self, args) {\n        self.errors = args[0];\n    })));\n    return new _aggregationError.v(values);\n}\nfunction _createPromise(newPromise, processor, executor) {\n    var additionalArgs = arrSlice(arguments, 3);\n    var _state = 0 ;\n    var _hasResolved = false;\n    var _settledValue;\n    var _queue = [];\n    var _id = _uniquePromiseId++;\n    var _parentId = _currentPromiseId.length > 0 ? _currentPromiseId[_currentPromiseId.length - 1] : undefined;\n    var _handled = false;\n    var _unHandledRejectionHandler = null;\n    var _thePromise;\n    function _then(onResolved, onRejected) {\n        try {\n            _currentPromiseId.push(_id);\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            var thenPromise = newPromise(function (resolve, reject) {\n                _queue.push(function () {\n                    try {\n                        var handler = _state === 2  ? onResolved : onRejected;\n                        var value = isUndefined(handler) ? _settledValue : (isFunction(handler) ? handler(_settledValue) : handler);\n                        if (isPromiseLike(value)) {\n                            value.then(resolve, reject);\n                        }\n                        else if (handler) {\n                            resolve(value);\n                        }\n                        else if (_state === 3 ) {\n                            reject(value);\n                        }\n                        else {\n                            resolve(value);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n                if (_hasResolved) {\n                    _processQueue();\n                }\n            }, additionalArgs);\n            return thenPromise;\n        }\n        finally {\n            _currentPromiseId.pop();\n        }\n    }\n    function _catch(onRejected) {\n        return _then(undefined, onRejected);\n    }\n    function _finally(onFinally) {\n        var thenFinally = onFinally;\n        var catchFinally = onFinally;\n        if (isFunction(onFinally)) {\n            thenFinally = function (value) {\n                onFinally && onFinally();\n                return value;\n            };\n            catchFinally = function (reason) {\n                onFinally && onFinally();\n                throw reason;\n            };\n        }\n        return _then(thenFinally, catchFinally);\n    }\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    function _processQueue() {\n        if (_queue.length > 0) {\n            var pending = _queue.slice();\n            _queue = [];\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            processor(pending);\n        }\n    }\n    function _createSettleIfFn(newState, allowState) {\n        return function (theValue) {\n            if (_state === allowState) {\n                if (newState === 2  && isPromiseLike(theValue)) {\n                    _state = 1 ;\n                    theValue.then(_createSettleIfFn(2 , 1 ), _createSettleIfFn(3 , 1 ));\n                    return;\n                }\n                _state = newState;\n                _hasResolved = true;\n                _settledValue = theValue;\n                _processQueue();\n                if (!_handled && newState === 3  && !_unHandledRejectionHandler) {\n                    _unHandledRejectionHandler = scheduleTimeout(_notifyUnhandledRejection, _unhandledRejectionTimeout);\n                }\n            }\n        };\n    }\n    function _notifyUnhandledRejection() {\n        if (!_handled) {\n            _handled = true;\n            if (isNode()) {\n                process.emit(NODE_UNHANDLED_REJECTION, _settledValue, _thePromise);\n            }\n            else {\n                var gbl = getWindow() || getGlobal();\n                !_hasPromiseRejectionEvent && (_hasPromiseRejectionEvent = createCachedValue(safe((getInst), [STR_PROMISE + \"RejectionEvent\"]).v));\n                emitEvent(gbl, UNHANDLED_REJECTION, function (theEvt) {\n                    objDefine(theEvt, \"promise\", { g: function () { return _thePromise; } });\n                    theEvt.reason = _settledValue;\n                    return theEvt;\n                }, !!_hasPromiseRejectionEvent.v);\n            }\n        }\n    }\n    _thePromise = {\n        then: _then,\n        \"catch\": _catch,\n        finally: _finally\n    };\n    objDefineProp(_thePromise, \"state\", {\n        get: _strState\n    });\n    if (_promiseDebugEnabled) {\n        _addDebugState$1(_thePromise, _strState, function () { return objToString(_settledValue); }, function () { return _handled; });\n    }\n    if (hasSymbol()) {\n        _thePromise[getKnownSymbol(11 )] = \"IPromise\";\n    }\n    function _toString() {\n        return \"IPromise\" + (_promiseDebugEnabled ? \"[\" + _id + (!isUndefined(_parentId) ? (\":\" + _parentId) : \"\") + \"]\" : \"\") + \" \" + _strState() + (_hasResolved ? (\" - \" + dumpFnObj(_settledValue)) : \"\") + (\"\");\n    }\n    _thePromise.toString = _toString;\n    (function _initialize() {\n        if (!isFunction(executor)) {\n            throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpFnObj(executor));\n        }\n        var _rejectFn = _createSettleIfFn(3 , 0 );\n        try {\n            executor.call(_thePromise, _createSettleIfFn(2 , 0 ), _rejectFn);\n        }\n        catch (e) {\n            _rejectFn(e);\n        }\n    })();\n    return _thePromise;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllPromise(newPromise) {\n    return function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            try {\n                var values_1 = [];\n                var pending_1 = 1;\n                iterForOf(input, function (item, idx) {\n                    if (item) {\n                        pending_1++;\n                        doAwait(item, function (value) {\n                            values_1[idx] = value;\n                            if (--pending_1 === 0) {\n                                resolve(values_1);\n                            }\n                        }, reject);\n                    }\n                });\n                pending_1--;\n                if (pending_1 === 0) {\n                    resolve(values_1);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createResolvedPromise(newPromise) {\n    return function (value) {\n        var additionalArgs = arrSlice(arguments, 1);\n        if (isPromiseLike(value)) {\n            return value;\n        }\n        return newPromise(function (resolve) {\n            resolve(value);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRejectedPromise(newPromise) {\n    return function (reason) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (_resolve, reject) {\n            reject(reason);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllSettledPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var values = [];\n            var pending = 1;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (value.rejected) {\n                        values[idx] = {\n                            status: REJECTED,\n                            reason: value.reason\n                        };\n                    }\n                    else {\n                        values[idx] = {\n                            status: \"fulfilled\",\n                            value: value.value\n                        };\n                    }\n                    if (--pending === 0) {\n                        resolve(values);\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0) {\n                    resolve(values);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRacePromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var isDone = false;\n            function processItem(item) {\n                doAwaitResponse(item, function (value) {\n                    if (!isDone) {\n                        isDone = true;\n                        if (value.rejected) {\n                            reject(value.reason);\n                        }\n                        else {\n                            resolve(value.value);\n                        }\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAnyPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var theErros = [];\n            var pending = 1;\n            var isDone = false;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (!value.rejected) {\n                        isDone = true;\n                        resolve(value.value);\n                        return;\n                    }\n                    else {\n                        theErros[idx] = value.reason;\n                    }\n                    if (--pending === 0 && !isDone) {\n                        reject(_createAggregationError(theErros));\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0 && !isDone) {\n                    reject(_createAggregationError(theErros));\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n\nfunction syncItemProcessor(pending) {\n    arrForEach(pending, function (fn) {\n        try {\n            fn();\n        }\n        catch (e) {\n        }\n    });\n}\nfunction timeoutItemProcessor(timeout) {\n    var callbackTimeout = isNumber(timeout) ? timeout : 0;\n    return function (pending) {\n        scheduleTimeout(function () {\n            syncItemProcessor(pending);\n        }, callbackTimeout);\n    };\n}\nfunction idleItemProcessor(timeout) {\n    var options;\n    if (timeout >= 0) {\n        options = {\n            timeout: +timeout\n        };\n    }\n    return function (pending) {\n        scheduleIdleCallback(function (deadline) {\n            syncItemProcessor(pending);\n        }, options);\n    };\n}\n\nvar _allAsyncSettledCreator;\nvar _raceAsyncCreator;\nvar _anyAsyncCreator;\nfunction createAsyncPromise(executor, timeout) {\n    return _createPromise(createAsyncPromise, timeoutItemProcessor(timeout), executor, timeout);\n}\nvar createAsyncAllPromise = /*#__PURE__*/ _createAllPromise(createAsyncPromise);\nvar createAsyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createAsyncPromise);\nvar createAsyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createAsyncPromise);\nfunction createAsyncAllSettledPromise(input, timeout) {\n    !_allAsyncSettledCreator && (_allAsyncSettledCreator = _createAllSettledPromise(createAsyncPromise));\n    return _allAsyncSettledCreator.v(input, timeout);\n}\nfunction createAsyncRacePromise(values, timeout) {\n    !_raceAsyncCreator && (_raceAsyncCreator = _createRacePromise(createAsyncPromise));\n    return _raceAsyncCreator.v(values, timeout);\n}\nfunction createAsyncAnyPromise(values, timeout) {\n    !_anyAsyncCreator && (_anyAsyncCreator = _createAnyPromise(createAsyncPromise));\n    return _anyAsyncCreator.v(values, timeout);\n}\n\nvar _promiseCls;\nvar _allCreator;\nvar _allNativeSettledCreator;\nvar _raceNativeCreator;\nvar _anyNativeCreator;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createNativePromiseHelper(name, func) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    if (_promiseCls.v && _promiseCls.v[name]) {\n        return createCachedValue(function (input, timeout) {\n            return createNativePromise(function (resolve, reject) {\n                _promiseCls.v[name](input).then(resolve, reject);\n            });\n        });\n    }\n    return func();\n}\nfunction createNativePromise(executor, timeout) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    var PrmCls = _promiseCls.v;\n    if (!PrmCls) {\n        return createAsyncPromise(executor);\n    }\n    if (!isFunction(executor)) {\n        throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpObj(executor));\n    }\n    var _state = 0 ;\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    var thePromise = new PrmCls(function (resolve, reject) {\n        function _resolve(value) {\n            _state = 2 ;\n            resolve(value);\n        }\n        function _reject(reason) {\n            _state = 3 ;\n            reject(reason);\n        }\n        executor(_resolve, _reject);\n    });\n    objDefineProp(thePromise, \"state\", {\n        get: _strState\n    });\n    return thePromise;\n}\nfunction createNativeAllPromise(input, timeout) {\n    !_allCreator && (_allCreator = _createNativePromiseHelper(\"all\", function () { return createCachedValue(_createAllPromise(createNativePromise)); }));\n    return _allCreator.v(input, timeout);\n}\nvar createNativeResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createNativePromise);\nvar createNativeRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createNativePromise);\nfunction createNativeAllSettledPromise(input, timeout) {\n    !_allNativeSettledCreator && (_allNativeSettledCreator = _createNativePromiseHelper(\"allSettled\", function () { return _createAllSettledPromise(createNativePromise); }));\n    return _allNativeSettledCreator.v(input, timeout);\n}\nfunction createNativeRacePromise(values, timeout) {\n    !_raceNativeCreator && (_raceNativeCreator = _createNativePromiseHelper(\"race\", function () { return _createRacePromise(createNativePromise); }));\n    return _raceNativeCreator.v(values, timeout);\n}\nfunction createNativeAnyPromise(values, timeout) {\n    !_anyNativeCreator && (_anyNativeCreator = _createNativePromiseHelper(\"any\", function () { return _createAnyPromise(createNativePromise); }));\n    return _anyNativeCreator.v(values, timeout);\n}\n\nvar _allSyncSettledCreator;\nvar _raceSyncCreator;\nvar _anySyncCreator;\nfunction createSyncPromise(executor) {\n    return _createPromise(createSyncPromise, syncItemProcessor, executor);\n}\nvar createSyncAllPromise = /*#__PURE__*/ _createAllPromise(createSyncPromise);\nvar createSyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createSyncPromise);\nvar createSyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createSyncPromise);\nfunction createSyncAllSettledPromise(input, timeout) {\n    !_allSyncSettledCreator && (_allSyncSettledCreator = _createAllSettledPromise(createSyncPromise));\n    return _allSyncSettledCreator.v(input, timeout);\n}\nfunction createSyncRacePromise(values, timeout) {\n    !_raceSyncCreator && (_raceSyncCreator = _createRacePromise(createSyncPromise));\n    return _raceSyncCreator.v(values, timeout);\n}\nfunction createSyncAnyPromise(values, timeout) {\n    !_anySyncCreator && (_anySyncCreator = _createAnyPromise(createSyncPromise));\n    return _anySyncCreator.v(values, timeout);\n}\n\nvar _defaultIdleTimeout;\nvar _allIdleSettledCreator;\nvar _raceIdleCreator;\nvar _anyIdleCreator;\nfunction setDefaultIdlePromiseTimeout(idleDeadline) {\n    _defaultIdleTimeout = idleDeadline;\n}\nvar setDefaultIdleTimeout = ( setDefaultIdlePromiseTimeout);\nfunction createIdlePromise(executor, timeout) {\n    var theTimeout = isUndefined(timeout) ? _defaultIdleTimeout : timeout;\n    return _createPromise(createIdlePromise, idleItemProcessor(theTimeout), executor, theTimeout);\n}\nvar createIdleAllPromise = /*#__PURE__*/ _createAllPromise(createIdlePromise);\nvar createIdleResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createIdlePromise);\nvar createIdleRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createIdlePromise);\nfunction createIdleAllSettledPromise(input, timeout) {\n    !_allIdleSettledCreator && (_allIdleSettledCreator = _createAllSettledPromise(createIdlePromise));\n    return _allIdleSettledCreator.v(input, timeout);\n}\nfunction createIdleRacePromise(values, timeout) {\n    !_raceIdleCreator && (_raceIdleCreator = _createRacePromise(createIdlePromise));\n    return _raceIdleCreator.v(values, timeout);\n}\nfunction createIdleAnyPromise(values, timeout) {\n    !_anyIdleCreator && (_anyIdleCreator = _createAnyPromise(createIdlePromise));\n    return _anyIdleCreator.v(values, timeout);\n}\n\nvar _promiseCreator;\nvar _allSettledCreator;\nvar _raceCreator;\nvar _anyCreator;\nfunction setCreatePromiseImpl(creator) {\n    _promiseCreator = creator ? createCachedValue(creator) : null;\n}\nfunction createPromise(executor, timeout) {\n    !_promiseCreator && (_promiseCreator = createCachedValue(createNativePromise));\n    return _promiseCreator.v.call(this, executor, timeout);\n}\nvar createAllPromise = /*#__PURE__*/ _createAllPromise(createPromise);\nvar createResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createPromise);\nvar createRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createPromise);\nfunction createAllSettledPromise(input, timeout) {\n    !_allSettledCreator && (_allSettledCreator = _createAllSettledPromise(createPromise));\n    return _allSettledCreator.v(input, timeout);\n}\nfunction createRacePromise(values, timeout) {\n    !_raceCreator && (_raceCreator = _createRacePromise(createPromise));\n    return _raceCreator.v(values, timeout);\n}\nfunction createAnyPromise(values, timeout) {\n    !_anyCreator && (_anyCreator = _createAnyPromise(createPromise));\n    return _anyCreator.v(values, timeout);\n}\n\nfunction createTimeoutPromise(timeout, resolveReject, message) {\n    return createPromise(function (resolve, reject) {\n        scheduleTimeout(function () {\n            (resolveReject ? resolve : reject)(!isUndefined(message) ? message : \"Timeout of \" + timeout + \"ms exceeded\");\n        }, timeout);\n    });\n}\n\nfunction _doneChk(isDone, state, value, thisArg) {\n    var result = isDone;\n    state.res = value;\n    if (!result) {\n        if (state.isDone && isFunction(state.isDone)) {\n            return doAwait(state.isDone.call(thisArg, state), function (done) {\n                state.iter++;\n                return !!done;\n            });\n        }\n        else {\n            result = !!state.isDone;\n        }\n    }\n    state.iter++;\n    return result;\n}\nfunction doWhileAsync(callbackFn, isDoneFn, thisArg) {\n    var promise;\n    var resolve;\n    var reject = function (reason) {\n        isDone = true;\n        throw reason;\n    };\n    var isDone = false;\n    var state = {\n        st: utcNow(),\n        iter: 0,\n        isDone: isDoneFn || false\n    };\n    if (callbackFn) {\n        var _createPromise_1 = function () {\n            return createPromise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n        };\n        var _handleAsyncDone_1 = function (done) {\n            isDone = !!done;\n            if (!isDone) {\n                _processNext_1();\n            }\n            else {\n                resolve(state.res);\n            }\n        };\n        var _processNext_1 = function () {\n            while (!isDone) {\n                try {\n                    var cbResult = callbackFn.call(thisArg, state);\n                    if (isPromiseLike(cbResult)) {\n                        promise = promise || _createPromise_1();\n                        doAwait(cbResult, function (res) {\n                            try {\n                                doAwait(_doneChk(isDone, state, res, thisArg), _handleAsyncDone_1, reject);\n                            }\n                            catch (e) {\n                                reject(e);\n                            }\n                        }, reject);\n                        return promise;\n                    }\n                    else {\n                        var dnRes = _doneChk(isDone, state, cbResult, thisArg);\n                        if (isPromiseLike(dnRes)) {\n                            promise = promise || _createPromise_1();\n                            doAwait(dnRes, _handleAsyncDone_1, reject);\n                            return promise;\n                        }\n                        else {\n                            isDone = !!dnRes;\n                        }\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                    return promise;\n                }\n            }\n            if (isDone && resolve) {\n                resolve(state.res);\n            }\n            return promise || state.res;\n        };\n        return _processNext_1();\n    }\n}\n\nfunction arrForEachAsync(theArray, callbackFn, thisArg) {\n    if (theArray) {\n        var len_1 = getLength(theArray);\n        if (len_1) {\n            var isDone = function (state) {\n                if (state.iter >= len_1 || state.res === -1) {\n                    return true;\n                }\n            };\n            return doWhileAsync(function (state) {\n                var idx = state.iter;\n                if (idx in theArray) {\n                    return callbackFn.call(thisArg || theArray, theArray[idx], idx, theArray);\n                }\n            }, isDone);\n        }\n    }\n}\n\nvar _iterSymbol;\nvar _iterAsyncSymbol;\nfunction iterForOfAsync(iter, callbackFn, thisArg) {\n    var err;\n    var iterResult;\n    var theIter = iter;\n    function onFailed(failed) {\n        err = { e: failed };\n        if (theIter.throw) {\n            iterResult = null;\n            theIter.throw(err);\n        }\n        throw failed;\n    }\n    function onFinally() {\n        try {\n            if (iterResult && !iterResult[DONE]) {\n                theIter[RETURN] && theIter[RETURN](iterResult);\n            }\n        }\n        finally {\n            if (err) {\n                throw err.e;\n            }\n        }\n    }\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterAsyncSymbol && (_iterAsyncSymbol = createCachedValue(getKnownSymbol(0 )));\n            theIter = iter[_iterAsyncSymbol.v] ? iter[_iterAsyncSymbol.v]() : null;\n            if (!theIter) {\n                !_iterSymbol && (_iterSymbol = createCachedValue(getKnownSymbol(3 )));\n                theIter = iter[_iterSymbol.v] ? iter[_iterSymbol.v]() : null;\n            }\n        }\n        if (theIter && isIterator(theIter)) {\n            var result = void 0;\n            try {\n                result = doWhileAsync(function (state) {\n                    return doAwait(theIter.next(), function (res) {\n                        iterResult = res;\n                        if (!res[DONE]) {\n                            return fnCall(callbackFn, thisArg || theIter, iterResult[VALUE], state.iter, theIter);\n                        }\n                    }, function (reason) {\n                        state.isDone = true;\n                        onFailed(reason);\n                    });\n                }, function (state) {\n                    if (!iterResult || iterResult[DONE] || state.res === -1) {\n                        onFinally();\n                        return true;\n                    }\n                }, thisArg || theIter);\n                if (isPromiseLike(result)) {\n                    result = doFinally(result.catch(onFailed), onFinally);\n                }\n                return result;\n            }\n            catch (failed) {\n                onFailed(failed);\n            }\n            finally {\n                if (result && !isPromiseLike(result)) {\n                    onFinally();\n                }\n            }\n        }\n    }\n}\n\nvar REJECT = \"reject\";\nvar REJECTED_ERROR = \"Rejected\";\nvar _schedulerId = 0;\nvar _debugName;\nvar _debugIntState;\nvar _customErrors = {};\nfunction _rejectDone() {\n}\nfunction _createError(type, evt, message) {\n    !_customErrors[type] && (_customErrors[type] = createCustomError(type));\n    var now = utcNow();\n    return new (_customErrors[type])(\"Task [\".concat(evt.id, \"] \").concat(message || \"\", \"- \").concat((evt.st ? \"Running\" : \"Waiting\"), \": \").concat(_calcTime(now, evt.st || evt.cr)));\n}\nfunction _calcTime(now, start) {\n    return ((now - start) || \"0\") + \" ms\";\n}\nfunction _abortStaleTasks(taskQueue, staleTimeoutPeriod) {\n    var now = utcNow();\n    var expired = now - staleTimeoutPeriod;\n    arrForEach(taskQueue, function (evt) {\n        if (evt && !evt.rj && (evt.st && evt.st < expired) || (!evt.st && evt.cr && evt.cr < expired)) {\n            evt && evt[REJECT](evt.rj || _createError(\"Aborted\", evt, \"Stale \"));\n        }\n    });\n}\nfunction _removeTask(queue, taskDetail) {\n    var idx = arrIndexOf(queue, taskDetail);\n    if (idx !== -1) {\n        queue.splice(idx, 1);\n    }\n}\nfunction _addDebugState(theScheduler, nameFn, stateFn) {\n    _debugName = _debugName || { toString: function () { return \"[[SchedulerName]]\"; } };\n    _debugIntState = _debugIntState || { toString: function () { return \"[[SchedulerState]]\"; } };\n    objDefineProp(theScheduler, _debugName, { get: nameFn });\n    objDefineProp(theScheduler, _debugIntState, { get: stateFn });\n}\nfunction createTaskScheduler(newPromise, name) {\n    var _theTask;\n    var _running = [];\n    var _waiting = [];\n    var _staleTimeoutPeriod = 600000;\n    var _staleTimeoutCheckPeriod = _staleTimeoutPeriod / 10;\n    var _taskCount = 0;\n    var _schedulerName = (name ? (name + \".\") : \"\") + _schedulerId++;\n    var _blockedTimer;\n    newPromise = newPromise || createPromise;\n    var _startBlockedTimer = function () {\n        var hasTasks = (getLength(_running) + getLength(_waiting)) > 0;\n        if (_staleTimeoutPeriod > 0) {\n            if (!_blockedTimer) {\n                _blockedTimer = scheduleTimeout(function () {\n                    _abortStaleTasks(_running, _staleTimeoutPeriod);\n                    _abortStaleTasks(_waiting, _staleTimeoutPeriod);\n                    _blockedTimer && (_blockedTimer.enabled = ((getLength(_running) + getLength(_waiting)) > 0));\n                }, _staleTimeoutCheckPeriod);\n                _blockedTimer.unref();\n            }\n            _blockedTimer && (_blockedTimer.enabled = hasTasks);\n        }\n    };\n    var _queueTask = function (startAction, taskName, timeout) {\n        var _a;\n        var taskId = _schedulerName + \".\" + _taskCount++;\n        if (taskName) {\n            taskId += \"-(\" + taskName + \")\";\n        }\n        var newTask = (_a = {\n                id: taskId,\n                cr: utcNow(),\n                to: timeout\n            },\n            _a[REJECT] = function (reason) {\n                newTask.rj = reason || _createError(REJECTED_ERROR, newTask);\n                newTask[REJECT] = _rejectDone;\n            },\n            _a);\n        if (!_theTask) {\n            newTask.p = newPromise(_runTask(newTask, startAction));\n        }\n        else {\n            newTask.p = _waitForPreviousTask(newTask, _theTask, startAction);\n        }\n        _theTask = newTask;\n        return newTask.p;\n    };\n    var _runTask = function (taskDetail, startAction) {\n        taskDetail.st = utcNow();\n        _running.push(taskDetail);\n        _startBlockedTimer();\n        return function (onTaskResolve, onTaskReject) {\n            var _promiseReject = function (reason) {\n                taskDetail.rj = taskDetail.rj || reason || _createError(REJECTED_ERROR, taskDetail);\n                taskDetail[REJECT] = _rejectDone;\n                _doCleanup(taskDetail);\n                onTaskResolve = null;\n                onTaskReject && onTaskReject(reason);\n                onTaskReject = null;\n            };\n            var taskId = taskDetail.id;\n            if (taskDetail.rj) {\n                _promiseReject(taskDetail.rj);\n            }\n            else {\n                taskDetail[REJECT] = _promiseReject;\n                try {\n                    var startResult = startAction(taskId);\n                    if (taskDetail.to && isPromiseLike(startResult)) {\n                        taskDetail.t = scheduleTimeout(function () {\n                            _promiseReject(_createError(\"Timeout\", taskDetail));\n                        }, taskDetail.to);\n                    }\n                    doAwait(startResult, function (theResult) {\n                        _doCleanup(taskDetail);\n                        try {\n                            onTaskResolve && onTaskResolve(theResult);\n                        }\n                        catch (e) {\n                            onTaskReject && onTaskReject(e);\n                        }\n                        onTaskReject = null;\n                        onTaskResolve = null;\n                    }, _promiseReject);\n                }\n                catch (e) {\n                    _promiseReject(e);\n                }\n            }\n        };\n    };\n    var _waitForPreviousTask = function (taskDetail, prevTask, startAction) {\n        _waiting.push(taskDetail);\n        _startBlockedTimer();\n        return newPromise(function (onWaitResolve, onWaitReject) {\n            doAwaitResponse(prevTask.p, function () {\n                _removeTask(_waiting, taskDetail);\n                _runTask(taskDetail, startAction)(onWaitResolve, onWaitReject);\n            });\n        });\n    };\n    var _doCleanup = function (taskDetail) {\n        _removeTask(_running, taskDetail);\n        taskDetail.t && taskDetail.t.cancel();\n        taskDetail.t = null;\n        if (_theTask && _theTask === taskDetail) {\n            _theTask = null;\n            if (getLength(_running) + getLength(_waiting) === 0) {\n                _blockedTimer && _blockedTimer.cancel();\n                _blockedTimer = null;\n            }\n        }\n    };\n    var theScheduler = {\n        idle: true,\n        queue: _queueTask,\n        setStaleTimeout: function (staleTimeout, staleCheckPeriod) {\n            _blockedTimer && _blockedTimer.cancel();\n            _blockedTimer = null;\n            _staleTimeoutPeriod = staleTimeout;\n            _staleTimeoutCheckPeriod = staleCheckPeriod || staleTimeout / 10;\n            _startBlockedTimer();\n        }\n    };\n    objDefine(theScheduler, \"idle\", {\n        g: function () {\n            return getLength(_running) + getLength(_waiting) === 0;\n        }\n    });\n    _addDebugState(theScheduler, function () { return _schedulerName; }, function () {\n        return {\n            l: _theTask,\n            r: _running,\n            w: _waiting\n        };\n    });\n    return theScheduler;\n}\n\nvar toStringTagSymbol = getKnownSymbol(11 );\nvar PolyPromise = /*#__PURE__*/ (function () {\n    function PolyPromiseImpl(executor) {\n        this._$ = createAsyncPromise(executor);\n        if (toStringTagSymbol) {\n            this[toStringTagSymbol] = \"Promise\";\n        }\n        objDefineProp(this, \"state\", {\n            get: function () {\n                return this._$.state;\n            }\n        });\n    }\n    PolyPromiseImpl.all = createAsyncAllPromise;\n    PolyPromiseImpl.race = createAsyncRacePromise;\n    PolyPromiseImpl.any = createAsyncAnyPromise;\n    PolyPromiseImpl.reject = createAsyncRejectedPromise;\n    PolyPromiseImpl.resolve = createAsyncResolvedPromise;\n    PolyPromiseImpl.allSettled = createAsyncAllSettledPromise;\n    var theProto = PolyPromiseImpl.prototype;\n    theProto.then = function (onResolved, onRejected) {\n        return this._$.then(onResolved, onRejected);\n    };\n    theProto.catch = function (onRejected) {\n        return this._$.catch(onRejected);\n    };\n    theProto.finally = function (onfinally) {\n        return this._$.finally(onfinally);\n    };\n    return PolyPromiseImpl;\n}());\n\nexport { PolyPromise, arrForEachAsync, createAllPromise, createAllSettledPromise, createAnyPromise, createAsyncAllPromise, createAsyncAllSettledPromise, createAsyncAnyPromise, createAsyncPromise, createAsyncRacePromise, createAsyncRejectedPromise, createAsyncResolvedPromise, createIdleAllPromise, createIdleAllSettledPromise, createIdleAnyPromise, createIdlePromise, createIdleRacePromise, createIdleRejectedPromise, createIdleResolvedPromise, createNativeAllPromise, createNativeAllSettledPromise, createNativeAnyPromise, createNativePromise, createNativeRacePromise, createNativeRejectedPromise, createNativeResolvedPromise, createPromise, createRacePromise, createRejectedPromise, createResolvedPromise, createSyncAllPromise, createSyncAllSettledPromise, createSyncAnyPromise, createSyncPromise, createSyncRacePromise, createSyncRejectedPromise, createSyncResolvedPromise, createTaskScheduler, createTimeoutPromise, doAwait, doAwaitResponse, doFinally, doWhileAsync, iterForOfAsync, setCreatePromiseImpl, setDefaultIdlePromiseTimeout, setDefaultIdleTimeout, setPromiseDebugState };\n//# sourceMappingURL=ts-async.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.1';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrSlice, getLength } from \"@nevware21/ts-utils\";\r\nimport { _DYN_UNLOAD } from \"../__DynamicConstants\";\r\n/**\r\n * Run the unload function of the target object if it exists\r\n * @param target - The target object that contains the unload function\r\n * @param isAsync - The caller identifies whether it is expecting the operation to complete synchronously or asynchronously. Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @returns The result of the target function\r\n */\r\nexport function runTargetUnload(target, isAsync) {\r\n    if (target && target[_DYN_UNLOAD /* @min:%2eunload */]) {\r\n        return target[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n    }\r\n}\r\n/**\r\n * Call the unload function on all targets handling any returned [IPromise](https://nevware21.github.io/ts-async/typedoc/interfaces/IPromise.html)\r\n * / Promise before calling the next targets unload\r\n * @param targets - An array of the targets to unload\r\n * @param isAsync - The caller identifies whether it is expecting the operations to complete synchronously or asynchronously.  Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @param done - Optional callback function to call once all of the unload functions have been called.\r\n */\r\nexport function doUnloadAll(targets, isAsync, done) {\r\n    var result;\r\n    if (!done) {\r\n        result = createPromise(function (resolved) {\r\n            done = resolved;\r\n        });\r\n    }\r\n    if (targets && getLength(targets) > 0) {\r\n        doAwaitResponse(runTargetUnload(targets[0], isAsync), function () {\r\n            doUnloadAll(arrSlice(targets, 1), isAsync, done);\r\n        });\r\n    }\r\n    else {\r\n        done();\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=AsyncUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var ChannelControllerPriority = 500;\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n// export const SampleRate = \"sampleRate\";\r\n// export const ProcessLegacy = \"ProcessLegacy\";\r\n// export const HttpMethod = \"http.method\";\r\n// export const DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n// export const DEFAULT_BREEZE_PATH = \"/v2/track\";\r\n// export const strNotSpecified = \"not_specified\";\r\n// export const strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = true,\r\n        _a.v = defaultValue,\r\n        _a;\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = utcNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_DF, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_NAME } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getJSON } from \"./EnvUtils\";\r\n/**\r\n * Parses the response from the backend.\r\n * @param response - XMLHttpRequest or XDomainRequest response\r\n */\r\nexport function parseResponse(response, diagLog) {\r\n    try {\r\n        if (response && response !== \"\") {\r\n            var result = getJSON().parse(response);\r\n            if (result && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] >= result.itemsAccepted &&\r\n                result.itemsReceived - result.itemsAccepted === result.errors[_DYN_LENGTH /* @min:%2elength */]) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 43 /* _eInternalMessageId.InvalidBackendResponse */, \"Cannot parse the response. \" + (e[_DYN_NAME /* @min:%2ename */] || dumpObj(e)), {\r\n            response: response\r\n        });\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=ResponseHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, dumpObj, getNavigator, getWindow, isFunction, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DATA, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PROTOCOL, _DYN_REPLACE, _DYN_SEND_POST, _DYN_SET_REQUEST_HEADER, _DYN_STATUS, _DYN_TIMEOUT, _DYN_TO_LOWER_CASE, _DYN_URL_STRING, _DYN_VALUE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { DisabledPropertyName } from \"./Constants\";\r\nimport { _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getLocation, isBeaconsSupported, isFetchSupported, isXhrSupported, useXDomainRequest } from \"./EnvUtils\";\r\nimport { _getAllResponseHeaders, formatErrorMessageXdr, formatErrorMessageXhr, getResponseText, openXhr } from \"./HelperFuncs\";\r\nvar STR_EMPTY = \"\";\r\nvar STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar STR_POST_METHOD = \"POST\";\r\n/**\r\n * This Internal component\r\n * Manager SendPost functions\r\n * SendPostManger\r\n * @internal for internal use only\r\n */\r\nvar SenderPostManager = /** @class */ (function () {\r\n    function SenderPostManager() {\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _enableSendPromise;\r\n        var _isInitialized;\r\n        var _diagLog;\r\n        var _isOneDs;\r\n        var _onCompleteFuncs;\r\n        var _disableCredentials;\r\n        var _fetchCredentials;\r\n        var _fallbackInst;\r\n        var _disableXhr;\r\n        var _disableBeacon;\r\n        var _disableBeaconSync;\r\n        var _disableFetchKeepAlive;\r\n        var _addNoResponse;\r\n        var _timeoutWrapper;\r\n        dynamicProto(SenderPostManager, this, function (_self, _base) {\r\n            var _sendCredentials = true; // for 1ds\r\n            _initDefaults();\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, diagLog) {\r\n                _diagLog = diagLog;\r\n                if (_isInitialized) {\r\n                    _throwInternal(_diagLog, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _self.SetConfig(config);\r\n                _isInitialized = true;\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_isInitialized, _isOneDs, _disableCredentials, _enableSendPromise];\r\n            };\r\n            // This componet might get its config from sender, offline sender, 1ds post\r\n            // so set this function to mock dynamic changes\r\n            _self.SetConfig = function (config) {\r\n                try {\r\n                    _onCompleteFuncs = config.senderOnCompleteCallBack || {};\r\n                    _disableCredentials = !!config.disableCredentials;\r\n                    _fetchCredentials = config.fetchCredentials;\r\n                    _isOneDs = !!config.isOneDs;\r\n                    _enableSendPromise = !!config.enableSendPromise;\r\n                    _disableXhr = !!config.disableXhr;\r\n                    _disableBeacon = !!config.disableBeacon;\r\n                    _disableBeaconSync = !!config.disableBeaconSync;\r\n                    _timeoutWrapper = config.timeWrapper;\r\n                    _addNoResponse = !!config.addNoResponse;\r\n                    _disableFetchKeepAlive = !!config.disableFetchKeepAlive;\r\n                    _fallbackInst = { sendPOST: _xhrSender };\r\n                    if (!_isOneDs) {\r\n                        _sendCredentials = false; // for appInsights, set it to false always\r\n                    }\r\n                    if (_disableCredentials) {\r\n                        var location_1 = getLocation();\r\n                        if (location_1 && location_1.protocol && location_1.protocol[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"file:\") {\r\n                            // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            _sendCredentials = false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            };\r\n            _self.getSyncFetchPayload = function () {\r\n                return _syncFetchPayload;\r\n            };\r\n            _self.getSenderInst = function (transports, sync) {\r\n                if (transports && transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    return _getSenderInterface(transports, sync);\r\n                }\r\n                return null;\r\n            };\r\n            _self.getFallbackInst = function () {\r\n                return _fallbackInst;\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function (unloadCtx, unloadState) {\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(res, onComplete) {\r\n                _doOnComplete(onComplete, 200, {}, res);\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(message, onComplete) {\r\n                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _doOnComplete(onComplete, 400, {});\r\n            }\r\n            function _onNoPayloadUrl(onComplete) {\r\n                _onError(\"No endpoint url is provided for the batch\", onComplete);\r\n            }\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                var _a;\r\n                var transportType = 0 /* TransportType.NotSet */;\r\n                var sendPostFunc = null;\r\n                var lp = 0;\r\n                while (sendPostFunc == null && lp < transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    transportType = transports[lp];\r\n                    if (!_disableXhr && transportType === 1 /* TransportType.Xhr */) {\r\n                        if (useXDomainRequest()) {\r\n                            // IE 8 and 9\r\n                            sendPostFunc = _xdrSender;\r\n                        }\r\n                        else if (isXhrSupported()) {\r\n                            sendPostFunc = _xhrSender;\r\n                        }\r\n                    }\r\n                    else if (transportType === 2 /* TransportType.Fetch */ && isFetchSupported(syncSupport) && (!syncSupport || !_disableFetchKeepAlive)) {\r\n                        sendPostFunc = _doFetchSender;\r\n                    }\r\n                    else if (transportType === 3 /* TransportType.Beacon */ && isBeaconsSupported() && (syncSupport ? !_disableBeaconSync : !_disableBeacon)) {\r\n                        sendPostFunc = _beaconSender;\r\n                    }\r\n                    lp++;\r\n                }\r\n                if (sendPostFunc) {\r\n                    return _a = {\r\n                            _transport: transportType,\r\n                            _isSync: syncSupport\r\n                        },\r\n                        _a[_DYN_SEND_POST /* @min:sendPOST */] = sendPostFunc,\r\n                        _a;\r\n                }\r\n                return null;\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete && oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doBeaconSend(payload, oncomplete) {\r\n                var nav = getNavigator();\r\n                var url = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!url) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    // return true here, because we don't want to retry it with fallback sender\r\n                    return true;\r\n                }\r\n                url = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                var plainTextBatch = _isOneDs ? data : new Blob([data], { type: \"text/plain;charset=UTF-8\" });\r\n                // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                var queued = nav.sendBeacon(url, plainTextBatch);\r\n                return queued;\r\n            }\r\n            /**\r\n             * Send Beacon API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - not used\r\n             * Note: Beacon API does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _beaconSender(payload, oncomplete, sync) {\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                try {\r\n                    if (data) {\r\n                        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                        if (!_doBeaconSend(payload, oncomplete)) {\r\n                            var onRetry = _onCompleteFuncs && _onCompleteFuncs.beaconOnRetry;\r\n                            if (onRetry && isFunction(onRetry)) {\r\n                                onRetry(payload, oncomplete, _doBeaconSend);\r\n                            }\r\n                            else {\r\n                                _fallbackInst && _fallbackInst[_DYN_SEND_POST /* @min:%2esendPOST */](payload, oncomplete, true);\r\n                                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // if can send\r\n                            _onSuccess(STR_EMPTY, oncomplete);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _isOneDs && _warnToConsole(_diagLog, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(e));\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, STR_EMPTY);\r\n                }\r\n                return;\r\n            }\r\n            /**\r\n             * Send XMLHttpRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             */\r\n            function _xhrSender(payload, oncomplete, sync) {\r\n                //let  internalPayload = payload as IInternalPayloadData;\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (_isOneDs && sync && payload.disableXhrSync) {\r\n                    sync = false;\r\n                }\r\n                //const xhr = new XMLHttpRequest();\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                var xhr = openXhr(STR_POST_METHOD, endPointUrl, _sendCredentials, true, sync, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                if (!_isOneDs) {\r\n                    // application/json should NOT add to 1ds post by default\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](\"Content-type\", \"application/json\");\r\n                }\r\n                arrForEach(objKeys(headers), function (headerName) {\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](headerName, headers[headerName]);\r\n                });\r\n                xhr.onreadystatechange = function () {\r\n                    if (!_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                        if (xhr.readyState === 4) {\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }\r\n                };\r\n                xhr.onload = function () {\r\n                    if (_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                    }\r\n                };\r\n                function _doOnReadyFunc(xhr) {\r\n                    var onReadyFunc = _onCompleteFuncs && _onCompleteFuncs.xhrOnComplete;\r\n                    var onReadyFuncExist = onReadyFunc && isFunction(onReadyFunc);\r\n                    if (onReadyFuncExist) {\r\n                        onReadyFunc(xhr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        var response = getResponseText(xhr);\r\n                        _doOnComplete(oncomplete, xhr[_DYN_STATUS /* @min:%2estatus */], _getAllResponseHeaders(xhr, _isOneDs), response);\r\n                    }\r\n                }\r\n                xhr.onerror = function (event) {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 400, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    rejectFunc && rejectFunc(event);\r\n                };\r\n                xhr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 500, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    resolveFunc && resolveFunc(false);\r\n                };\r\n                xhr.send(payload[_DYN_DATA /* @min:%2edata */]);\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send fetch API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - For fetch this identifies whether we are \"unloading\" (false) or a normal request\r\n             */\r\n            function _doFetchSender(payload, oncomplete, sync) {\r\n                var _a;\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                var batch = payload[_DYN_DATA /* @min:%2edata */];\r\n                var plainTextBatch = _isOneDs ? batch : new Blob([batch], { type: \"application/json\" });\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var requestHeaders = new Headers();\r\n                var batchLength = batch[_DYN_LENGTH /* @min:%2elength */];\r\n                var ignoreResponse = false;\r\n                var responseHandled = false;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                //TODO: handle time out for 1ds\r\n                var init = (_a = {\r\n                        method: STR_POST_METHOD,\r\n                        body: plainTextBatch\r\n                    },\r\n                    _a[DisabledPropertyName] = true // Mark so we don't attempt to track this request\r\n                ,\r\n                    _a);\r\n                // Only add headers if there are headers to add, due to issue with some polyfills\r\n                if (payload.headers && objKeys(payload.headers)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(objKeys(headers), function (headerName) {\r\n                        requestHeaders.append(headerName, headers[headerName]);\r\n                    });\r\n                    init[_DYN_HEADERS /* @min:%2eheaders */] = requestHeaders;\r\n                }\r\n                if (_fetchCredentials) { // if user passed in this value via post channel (1ds), then use it\r\n                    init.credentials = _fetchCredentials;\r\n                }\r\n                else if (_sendCredentials && _isOneDs) {\r\n                    // for 1ds, Don't send credentials when URL is file://\r\n                    init.credentials = \"include\";\r\n                }\r\n                if (sync) {\r\n                    init.keepalive = true;\r\n                    _syncFetchPayload += batchLength;\r\n                    if (_isOneDs) {\r\n                        if (payload[\"_sendReason\"] === 2 /* SendRequestReason.Unload */) {\r\n                            // As a sync request (during unload), it is unlikely that we will get a chance to process the response so\r\n                            // just like beacon send assume that the events have been accepted and processed\r\n                            ignoreResponse = true;\r\n                            if (_addNoResponse) {\r\n                                endPointUrl += _noResponseQs;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // for appinsights, set to true for all sync request\r\n                        ignoreResponse = true;\r\n                    }\r\n                }\r\n                var request = new Request(endPointUrl, init);\r\n                try {\r\n                    // Also try and tag the request (just in case the value in init is not copied over)\r\n                    request[DisabledPropertyName] = true;\r\n                }\r\n                catch (e) {\r\n                    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n                    // cause the request to fail and we no telemetry would be sent\r\n                }\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                function _handleError(res) {\r\n                    // In case there is an error in the request. Set the status to 0 for 1ds and 400 for appInsights\r\n                    // so that the events can be retried later.\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, _isOneDs ? STR_EMPTY : res);\r\n                }\r\n                function _onFetchComplete(response, payload, value) {\r\n                    var status = response[_DYN_STATUS /* @min:%2estatus */];\r\n                    var onCompleteFunc = _onCompleteFuncs.fetchOnComplete;\r\n                    if (onCompleteFunc && isFunction(onCompleteFunc)) {\r\n                        onCompleteFunc(response, oncomplete, value || STR_EMPTY, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, status, {}, value || STR_EMPTY);\r\n                    }\r\n                }\r\n                try {\r\n                    doAwaitResponse(fetch(_isOneDs ? endPointUrl : request, _isOneDs ? init : null), function (result) {\r\n                        if (sync) {\r\n                            _syncFetchPayload -= batchLength;\r\n                            batchLength = 0;\r\n                        }\r\n                        if (!responseHandled) {\r\n                            responseHandled = true;\r\n                            if (!result.rejected) {\r\n                                var response_1 = result[_DYN_VALUE /* @min:%2evalue */];\r\n                                try {\r\n                                    /**\r\n                                     * The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.\r\n                                     * Instead, it will resolve normally (with ok status set to false), and it will only reject on network failure\r\n                                     * or if anything prevented the request from completing.\r\n                                     */\r\n                                    if (!_isOneDs && !response_1.ok) {\r\n                                        // this is for appInsights only\r\n                                        _handleError(response_1.statusText);\r\n                                        resolveFunc && resolveFunc(false);\r\n                                    }\r\n                                    else {\r\n                                        if (_isOneDs && !response_1.body) {\r\n                                            _onFetchComplete(response_1, null, STR_EMPTY);\r\n                                            resolveFunc && resolveFunc(true);\r\n                                        }\r\n                                        else {\r\n                                            doAwaitResponse(response_1.text(), function (resp) {\r\n                                                _onFetchComplete(response_1, payload, resp[_DYN_VALUE /* @min:%2evalue */]);\r\n                                                resolveFunc && resolveFunc(true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e) {\r\n                                    _handleError(dumpObj(e));\r\n                                    rejectFunc && rejectFunc(e);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _handleError(result.reason && result.reason[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                rejectFunc && rejectFunc(result.reason);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    if (!responseHandled) {\r\n                        _handleError(dumpObj(e));\r\n                        rejectFunc && rejectFunc(e);\r\n                    }\r\n                }\r\n                if (ignoreResponse && !responseHandled) {\r\n                    // Assume success during unload processing as we most likely won't get the response\r\n                    responseHandled = true;\r\n                    _doOnComplete(oncomplete, 200, {});\r\n                    resolveFunc && resolveFunc(true);\r\n                }\r\n                if (_isOneDs && !responseHandled && payload[_DYN_TIMEOUT /* @min:%2etimeout */] > 0) {\r\n                    // Simulate timeout\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        if (!responseHandled) {\r\n                            // Assume a 500 response (which will cause a retry)\r\n                            responseHandled = true;\r\n                            _doOnComplete(oncomplete, 500, {});\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                }\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send XDomainRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             *\r\n             * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n             * to maintain consistency with the xhrSender's contract\r\n             * Note: XDomainRequest does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _xdrSender(payload, oncomplete, sync) {\r\n                // It doesn't support custom headers, so no action is taken with current requestHeaders\r\n                var _window = getWindow();\r\n                var xdr = new XDomainRequest();\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                xdr.onload = function () {\r\n                    var response = getResponseText(xdr);\r\n                    var onloadFunc = _onCompleteFuncs && _onCompleteFuncs.xdrOnComplete;\r\n                    if (onloadFunc && isFunction(onloadFunc)) {\r\n                        onloadFunc(xdr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, 200, {}, response);\r\n                    }\r\n                };\r\n                xdr.onerror = function () {\r\n                    _doOnComplete(oncomplete, 400, {}, _isOneDs ? STR_EMPTY : formatErrorMessageXdr(xdr));\r\n                };\r\n                xdr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, 500, {});\r\n                };\r\n                xdr.onprogress = function () { };\r\n                // XDomainRequest requires the same protocol as the hosting page.\r\n                // If the protocol doesn't match, we can't send the telemetry :(.\r\n                var hostingProtocol = _window && _window.location && _window.location[_DYN_PROTOCOL /* @min:%2eprotocol */] || \"\";\r\n                var endpoint = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endpoint) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    return;\r\n                }\r\n                if (!_isOneDs && endpoint.lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                    var msg = \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\";\r\n                    _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + msg);\r\n                    _onError(msg, oncomplete);\r\n                    return;\r\n                }\r\n                var endpointUrl = _isOneDs ? endpoint : endpoint[_DYN_REPLACE /* @min:%2ereplace */](/^(https?:)/, \"\");\r\n                xdr.open(STR_POST_METHOD, endpointUrl);\r\n                if (payload[_DYN_TIMEOUT /* @min:%2etimeout */]) {\r\n                    xdr[_DYN_TIMEOUT /* @min:%2etimeout */] = payload[_DYN_TIMEOUT /* @min:%2etimeout */];\r\n                }\r\n                xdr.send(data);\r\n                if (_isOneDs && sync) {\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        xdr.send(data);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    xdr.send(data);\r\n                }\r\n            }\r\n            function _initDefaults() {\r\n                _syncFetchPayload = 0;\r\n                _isInitialized = false;\r\n                _enableSendPromise = false;\r\n                _diagLog = null;\r\n                _isOneDs = null;\r\n                _onCompleteFuncs = null;\r\n                _disableCredentials = null;\r\n                _fetchCredentials = null;\r\n                _fallbackInst = null;\r\n                _disableXhr = false;\r\n                _disableBeacon = false;\r\n                _disableBeaconSync = false;\r\n                _disableFetchKeepAlive = false;\r\n                _addNoResponse = false;\r\n                _timeoutWrapper = null;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SenderPostManager.prototype.initialize.\r\n// Removed Stub for SenderPostManager.prototype.getSyncFetchPayload.\r\n// Removed Stub for SenderPostManager.prototype.SetConfig.\r\n// Removed Stub for SenderPostManager.prototype.getSenderInst.\r\n// Removed Stub for SenderPostManager.prototype.getFallbackInst.\r\n// Removed Stub for SenderPostManager.prototype._doTeardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    SenderPostManager.__ieDyn=1;\n\n    return SenderPostManager;\r\n}());\r\nexport { SenderPostManager };\r\n//# sourceMappingURL=SenderPostManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nexport var RequestHeaders = createValueMap({\r\n    requestContextHeader: [0 /* eRequestHeaders.requestContextHeader */, \"Request-Context\"],\r\n    requestContextTargetKey: [1 /* eRequestHeaders.requestContextTargetKey */, \"appId\"],\r\n    requestContextAppIdFormat: [2 /* eRequestHeaders.requestContextAppIdFormat */, \"appId=cid-v1:\"],\r\n    requestIdHeader: [3 /* eRequestHeaders.requestIdHeader */, \"Request-Id\"],\r\n    traceParentHeader: [4 /* eRequestHeaders.traceParentHeader */, \"traceparent\"],\r\n    traceStateHeader: [5 /* eRequestHeaders.traceStateHeader */, \"tracestate\"],\r\n    sdkContextHeader: [6 /* eRequestHeaders.sdkContextHeader */, \"Sdk-Context\"],\r\n    sdkContextHeaderAppIdRequest: [7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */, \"appId\"],\r\n    requestContextHeaderLowerCase: [8 /* eRequestHeaders.requestContextHeaderLowerCase */, \"request-context\"]\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_LENGTH = \"length\"; // Count: 41\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 6\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 9\r\nexport var _DYN_PUSH = \"push\"; // Count: 5\r\nexport var _DYN_REMOVE_ITEM = \"removeItem\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 10\r\nexport var _DYN_COUNT = \"count\"; // Count: 8\r\nexport var _DYN_PRE_TRIGGER_DATE = \"preTriggerDate\"; // Count: 4\r\nexport var _DYN_DISABLED = \"disabled\"; // Count: 3\r\nexport var _DYN_INTERVAL = \"interval\"; // Count: 3\r\nexport var _DYN_DAYS_OF_MONTH = \"daysOfMonth\"; // Count: 3\r\nexport var _DYN_DATE = \"date\"; // Count: 5\r\nexport var _DYN_GET_UTCDATE = \"getUTCDate\"; // Count: 3\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 4\r\nexport var _DYN_CORRELATION_HEADER_E0 = \"correlationHeaderExcludePatterns\"; // Count: 2\r\nexport var _DYN_EXTENSION_CONFIG = \"extensionConfig\"; // Count: 4\r\nexport var _DYN_EXCEPTIONS = \"exceptions\"; // Count: 6\r\nexport var _DYN_PARSED_STACK = \"parsedStack\"; // Count: 13\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 9\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 9\r\nexport var _DYN_SIZE_IN_BYTES = \"sizeInBytes\"; // Count: 11\r\nexport var _DYN_TYPE_NAME = \"typeName\"; // Count: 11\r\nexport var _DYN_SEVERITY_LEVEL = \"severityLevel\"; // Count: 5\r\nexport var _DYN_PROBLEM_GROUP = \"problemGroup\"; // Count: 3\r\nexport var _DYN_IS_MANUAL = \"isManual\"; // Count: 3\r\nexport var _DYN__CREATE_FROM_INTERFA1 = \"CreateFromInterface\"; // Count: 2\r\nexport var _DYN_ASSEMBLY = \"assembly\"; // Count: 7\r\nexport var _DYN_FILE_NAME = \"fileName\"; // Count: 8\r\nexport var _DYN_HAS_FULL_STACK = \"hasFullStack\"; // Count: 6\r\nexport var _DYN_LEVEL = \"level\"; // Count: 5\r\nexport var _DYN_METHOD = \"method\"; // Count: 7\r\nexport var _DYN_LINE = \"line\"; // Count: 6\r\nexport var _DYN_DURATION = \"duration\"; // Count: 4\r\nexport var _DYN_RECEIVED_RESPONSE = \"receivedResponse\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, getJSON, hasJSON, isObject, objForEachKey, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { asString, strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_STRINGIFY, _DYN_TO_STRING } from \"../../__DynamicConstants\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key[_DYN_LENGTH /* @min:%2elength */];\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field[_DYN_LENGTH /* @min:%2elength */] !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = strSubstring(field, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(asString(name));\r\n        // truncate the string to 150 chars\r\n        if (name[_DYN_LENGTH /* @min:%2elength */] > 150 /* DataSanitizerValues.MAX_NAME_LENGTH */) {\r\n            nameTrunc = strSubstring(name, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 57 /* _eInternalMessageId.NameTooLong */, \"name is too long.  It has been truncated to \" + 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(asString(value));\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            valueTrunc = strSubstring(value, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 61 /* _eInternalMessageId.StringValueTooLong */, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* DataSanitizerValues.MAX_URL_LENGTH */, 66 /* _eInternalMessageId.UrlTooLong */);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = strSubstring(message, 0, 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 56 /* _eInternalMessageId.MessageTruncated */, \"message is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = strSubstring(value, 0, 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 52 /* _eInternalMessageId.ExceptionTruncated */, \"exception is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* DataSanitizerValues.MAX_ID_LENGTH */, 69 /* _eInternalMessageId.IdTooLong */)[_DYN_TO_STRING /* @min:%2etoString */]() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(asString(input));\r\n        if (input[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            inputTrunc = strSubstring(input, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return strSubstr(s, s[_DYN_LENGTH /* @min:%2elength */] - 3);\r\n}\r\n//# sourceMappingURL=DataSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PATHNAME, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _document = getDocument() || {};\r\nvar _htmlAnchorIdx = 0;\r\n// Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\nvar _htmlAnchorElement = [null, null, null, null, null];\r\nexport function urlParseUrl(url) {\r\n    var anchorIdx = _htmlAnchorIdx;\r\n    var anchorCache = _htmlAnchorElement;\r\n    var tempAnchor = anchorCache[anchorIdx];\r\n    if (!_document.createElement) {\r\n        // Always create the temp instance if createElement is not available\r\n        tempAnchor = { host: urlParseHost(url, true) };\r\n    }\r\n    else if (!anchorCache[anchorIdx]) {\r\n        // Create and cache the unattached anchor instance\r\n        tempAnchor = anchorCache[anchorIdx] = _document.createElement(\"a\");\r\n    }\r\n    tempAnchor.href = url;\r\n    // Move the cache index forward\r\n    anchorIdx++;\r\n    if (anchorIdx >= anchorCache[_DYN_LENGTH /* @min:%2elength */]) {\r\n        anchorIdx = 0;\r\n    }\r\n    _htmlAnchorIdx = anchorIdx;\r\n    return tempAnchor;\r\n}\r\nexport function urlGetAbsoluteUrl(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a.href;\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetPathName(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a[_DYN_PATHNAME /* @min:%2epathname */];\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetCompleteUrl(method, absoluteUrl) {\r\n    if (method) {\r\n        return method.toUpperCase() + \" \" + absoluteUrl;\r\n    }\r\n    return absoluteUrl;\r\n}\r\n// Fallback method to grab host from url if document.createElement method is not available\r\nexport function urlParseHost(url, inclPort) {\r\n    var fullHost = urlParseFullHost(url, inclPort) || \"\";\r\n    if (fullHost) {\r\n        var match = fullHost.match(/(www\\d{0,5}\\.)?([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 3 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            return match[2] + (match[3] || \"\");\r\n        }\r\n    }\r\n    return fullHost;\r\n}\r\nexport function urlParseFullHost(url, inclPort) {\r\n    var result = null;\r\n    if (url) {\r\n        var match = url.match(/(\\w{1,150}):\\/\\/([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 2 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            result = match[2] || \"\";\r\n            if (inclPort && match[_DYN_LENGTH /* @min:%2elength */] > 2) {\r\n                var protocol = (match[1] || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                var port = match[3] || \"\";\r\n                // IE includes the standard port so pass it off if it's the same as the protocol\r\n                if (protocol === \"http\" && port === \":80\") {\r\n                    port = \"\";\r\n                }\r\n                else if (protocol === \"https\" && port === \":443\") {\r\n                    port = \"\";\r\n                }\r\n                result += port;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=UrlHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dateNow, getPerformance, isNullOrUndefined, isValidSpanId, isValidTraceId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH } from \"./Constants\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { urlParseFullHost, urlParseUrl } from \"./UrlHelperFuncs\";\r\nimport { _DYN_CORRELATION_HEADER_E0, _DYN_LENGTH, _DYN_NAME, _DYN_PATHNAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\n// listing only non-geo specific locations\r\nvar _internalEndpoints = [\r\n    DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH,\r\n    \"https://breeze.aimon.applicationinsights.io\" + DEFAULT_BREEZE_PATH,\r\n    \"https://dc-int.services.visualstudio.com\" + DEFAULT_BREEZE_PATH\r\n];\r\nvar _correlationIdPrefix = \"cid-v1:\";\r\nexport function isInternalApplicationInsightsEndpoint(endpointUrl) {\r\n    return arrIndexOf(_internalEndpoints, endpointUrl[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) !== -1;\r\n}\r\nexport function correlationIdSetPrefix(prefix) {\r\n    _correlationIdPrefix = prefix;\r\n}\r\nexport function correlationIdGetPrefix() {\r\n    return _correlationIdPrefix;\r\n}\r\n/**\r\n * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n */\r\nexport function correlationIdCanIncludeCorrelationHeader(config, requestUrl, currentHost) {\r\n    if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n        return false;\r\n    }\r\n    if (config && config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */]) {\r\n        for (var i = 0; i < config.correlationHeaderExcludePatterns[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */][i].test(requestUrl)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    var requestHost = urlParseUrl(requestUrl).host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    if (requestHost && (strIndexOf(requestHost, \":443\") !== -1 || strIndexOf(requestHost, \":80\") !== -1)) {\r\n        // [Bug #1260] IE can include the port even for http and https URLs so if present\r\n        // try and parse it to remove if it matches the default protocol port\r\n        requestHost = (urlParseFullHost(requestUrl, true) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    }\r\n    if ((!config || !config.enableCorsCorrelation) && (requestHost && requestHost !== currentHost)) {\r\n        return false;\r\n    }\r\n    var includedDomains = config && config.correlationHeaderDomains;\r\n    if (includedDomains) {\r\n        var matchExists_1;\r\n        arrForEach(includedDomains, function (domain) {\r\n            var regex = new RegExp(domain.toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n            matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n        });\r\n        if (!matchExists_1) {\r\n            return false;\r\n        }\r\n    }\r\n    var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n    if (!excludedDomains || excludedDomains[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < excludedDomains[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n        if (regex.test(requestHost)) {\r\n            return false;\r\n        }\r\n    }\r\n    // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n    // Previously we always returned false for a falsy requestHost\r\n    return requestHost && requestHost[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\n/**\r\n * Combines target appId and target role name from response header.\r\n */\r\nexport function correlationIdGetCorrelationContext(responseHeader) {\r\n    if (responseHeader) {\r\n        var correlationId = correlationIdGetCorrelationContextValue(responseHeader, RequestHeaders[1 /* eRequestHeaders.requestContextTargetKey */]);\r\n        if (correlationId && correlationId !== _correlationIdPrefix) {\r\n            return correlationId;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets key from correlation response header\r\n */\r\nexport function correlationIdGetCorrelationContextValue(responseHeader, key) {\r\n    if (responseHeader) {\r\n        var keyValues = responseHeader[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        for (var i = 0; i < keyValues[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            var keyValue = keyValues[i][_DYN_SPLIT /* @min:%2esplit */](\"=\");\r\n            if (keyValue[_DYN_LENGTH /* @min:%2elength */] === 2 && keyValue[0] === key) {\r\n                return keyValue[1];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {\r\n    var target, name = commandName, data = commandName;\r\n    if (absoluteUrl && absoluteUrl[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        var parsedUrl = urlParseUrl(absoluteUrl);\r\n        target = parsedUrl.host;\r\n        if (!name) {\r\n            if (parsedUrl[_DYN_PATHNAME /* @min:%2epathname */] != null) {\r\n                var pathName = (parsedUrl.pathname[_DYN_LENGTH /* @min:%2elength */] === 0) ? \"/\" : parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                if (pathName.charAt(0) !== \"/\") {\r\n                    pathName = \"/\" + pathName;\r\n                }\r\n                data = parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                name = dataSanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n            }\r\n            else {\r\n                name = dataSanitizeString(logger, absoluteUrl);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        target = commandName;\r\n        name = commandName;\r\n    }\r\n    return {\r\n        target: target,\r\n        name: name,\r\n        data: data\r\n    };\r\n}\r\nexport function dateTimeUtilsNow() {\r\n    // returns the window or webworker performance object\r\n    var perf = getPerformance();\r\n    if (perf && perf.now && perf.timing) {\r\n        var now = perf.now() + perf.timing.navigationStart;\r\n        // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n        if (now > 0) {\r\n            return now;\r\n        }\r\n    }\r\n    return dateNow();\r\n}\r\nexport function dateTimeUtilsDuration(start, end) {\r\n    var result = null;\r\n    if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {\r\n        result = end - start;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param telemetryTrace - The telemetryTrace instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the telemetryTrace or temporary object\r\n */\r\nexport function createDistributedTraceContextFromTrace(telemetryTrace, parentCtx) {\r\n    var trace = telemetryTrace || {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceID;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceID = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentID;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentID = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Util.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\nexport var StorageType = createEnumStyle({\r\n    LocalStorage: 0 /* eStorageType.LocalStorage */,\r\n    SessionStorage: 1 /* eStorageType.SessionStorage */\r\n});\r\nexport var DistributedTracingModes = createEnumStyle({\r\n    AI: 0 /* eDistributedTracingModes.AI */,\r\n    AI_AND_W3C: 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    W3C: 2 /* eDistributedTracingModes.W3C */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nimport { _DYN_PUSH, _DYN_REMOVE_ITEM, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\nvar _storagePrefix = \"\";\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType - Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = (new Date)[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        var name_1 = _storagePrefix + uid;\r\n        storage.setItem(name_1, uid);\r\n        var fail = storage.getItem(name_1) !== uid;\r\n        storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name_1);\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Disables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\nexport function utlSetStoragePrefix(storagePrefix) {\r\n    _storagePrefix = storagePrefix || \"\";\r\n}\r\n/**\r\n * Re-enables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlEnableStorage() {\r\n    _canUseLocalStorage = utlCanUseLocalStorage(true);\r\n    _canUseSessionStorage = utlCanUseSessionStorage(true);\r\n}\r\n/**\r\n * Returns whether LocalStorage can be used, if the reset parameter is passed a true this will override\r\n * any previous disable calls.\r\n * @param reset - Should the usage be reset and determined only based on whether LocalStorage is available\r\n */\r\nexport function utlCanUseLocalStorage(reset) {\r\n    if (reset || _canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 1 /* _eInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 3 /* _eInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 5 /* _eInternalMessageId.BrowserFailedRemovalFromLocalStorage */, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage(reset) {\r\n    if (reset || _canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys[_DYN_PUSH /* @min:%2epush */](key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 2 /* _eInternalMessageId.BrowserCannotReadSessionStorage */, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 4 /* _eInternalMessageId.BrowserCannotWriteSessionStorage */, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 6 /* _eInternalMessageId.BrowserFailedRemovalFromSessionStorage */, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strNotSpecified } from \"../../Constants\";\r\nimport { _DYN_NAME } from \"../../__DynamicConstants\";\r\nimport { dataSanitizeString } from \"./DataSanitizer\";\r\nvar Envelope = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = this;\r\n        var _self = this;\r\n        _self.ver = 1;\r\n        _self.sampleRate = 100.0;\r\n        _self.tags = {};\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self.data = data;\r\n        _self.time = toISOString(new Date());\r\n        _self.aiDataContract = {\r\n            time: 1 /* FieldType.Required */,\r\n            iKey: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? 4 /* FieldType.Hidden */ : 1 /* FieldType.Required */;\r\n            },\r\n            tags: 1 /* FieldType.Required */,\r\n            data: 1 /* FieldType.Required */\r\n        };\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}());\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, arrMap, isArray, isError, isFunction, isNullOrUndefined, isObject, isString, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getWindow, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_ASSEMBLY, _DYN_EXCEPTIONS, _DYN_FILE_NAME, _DYN_HAS_FULL_STACK, _DYN_IS_MANUAL, _DYN_LENGTH, _DYN_LEVEL, _DYN_LINE, _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_METHOD, _DYN_NAME, _DYN_PARSED_STACK, _DYN_PROBLEM_GROUP, _DYN_PROPERTIES, _DYN_PUSH, _DYN_SEVERITY_LEVEL, _DYN_SIZE_IN_BYTES, _DYN_SPLIT, _DYN_STRINGIFY, _DYN_TO_STRING, _DYN_TYPE_NAME, _DYN__CREATE_FROM_INTERFA1 } from \"../__DynamicConstants\";\r\nimport { dataSanitizeException, dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar NoMethod = \"<no_method>\";\r\nvar strError = \"error\";\r\nvar strStack = \"stack\";\r\nvar strStackDetails = \"stackDetails\";\r\nvar strErrorSrc = \"errorSrc\";\r\nvar strMessage = \"message\";\r\nvar strDescription = \"description\";\r\nfunction _stringify(value, convertToString) {\r\n    var result = value;\r\n    if (result && !isString(result)) {\r\n        if (JSON && JSON[_DYN_STRINGIFY /* @min:%2estringify */]) {\r\n            result = JSON[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            if (convertToString && (!result || result === \"{}\")) {\r\n                if (isFunction(value[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n                    result = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                }\r\n                else {\r\n                    result = \"\" + value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = \"\" + value + \" - (Missing JSON.stringify)\";\r\n        }\r\n    }\r\n    return result || \"\";\r\n}\r\nfunction _formatMessage(theEvent, errorType) {\r\n    var evtMessage = theEvent;\r\n    if (theEvent) {\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;\r\n        }\r\n        // Make sure the message is a string\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            // tslint:disable-next-line: prefer-conditional-expression\r\n            evtMessage = _stringify(evtMessage, true);\r\n        }\r\n        if (theEvent[\"filename\"]) {\r\n            // Looks like an event object with filename\r\n            evtMessage = evtMessage + \" @\" + (theEvent[\"filename\"] || \"\") + \":\" + (theEvent[\"lineno\"] || \"?\") + \":\" + (theEvent[\"colno\"] || \"?\");\r\n        }\r\n    }\r\n    // Automatically add the error type to the message if it does already appear to be present\r\n    if (errorType && errorType !== \"String\" && errorType !== \"Object\" && errorType !== \"Error\" && strIndexOf(evtMessage || \"\", errorType) === -1) {\r\n        evtMessage = errorType + \": \" + evtMessage;\r\n    }\r\n    return evtMessage || \"\";\r\n}\r\nfunction _isExceptionDetailsInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return \"hasFullStack\" in value && \"typeName\" in value;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isStackDetails(details) {\r\n    return details && details.src && isString(details.src) && details.obj && isArray(details.obj);\r\n}\r\nfunction _convertStackObj(errorStack) {\r\n    var src = errorStack || \"\";\r\n    if (!isString(src)) {\r\n        if (isString(src[strStack])) {\r\n            src = src[strStack];\r\n        }\r\n        else {\r\n            src = \"\" + src;\r\n        }\r\n    }\r\n    var items = src[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    return {\r\n        src: src,\r\n        obj: items\r\n    };\r\n}\r\nfunction _getOperaStack(errorMessage) {\r\n    var stack = [];\r\n    var lines = errorMessage[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    for (var lp = 0; lp < lines[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        var entry = lines[lp];\r\n        if (lines[lp + 1]) {\r\n            entry += \"@\" + lines[lp + 1];\r\n            lp++;\r\n        }\r\n        stack[_DYN_PUSH /* @min:%2epush */](entry);\r\n    }\r\n    return {\r\n        src: errorMessage,\r\n        obj: stack\r\n    };\r\n}\r\nfunction _getStackFromErrorObj(errorObj) {\r\n    var details = null;\r\n    if (errorObj) {\r\n        try {\r\n            /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot\r\n            notation for undefined objects and we don't want to loose the error from being reported */\r\n            if (errorObj[strStack]) {\r\n                // Chrome/Firefox\r\n                details = _convertStackObj(errorObj[strStack]);\r\n            }\r\n            else if (errorObj[strError] && errorObj[strError][strStack]) {\r\n                // Edge error event provides the stack and error object\r\n                details = _convertStackObj(errorObj[strError][strStack]);\r\n            }\r\n            else if (errorObj[\"exception\"] && errorObj.exception[strStack]) {\r\n                details = _convertStackObj(errorObj.exception[strStack]);\r\n            }\r\n            else if (_isStackDetails(errorObj)) {\r\n                details = errorObj;\r\n            }\r\n            else if (_isStackDetails(errorObj[strStackDetails])) {\r\n                details = errorObj[strStackDetails];\r\n            }\r\n            else if (getWindow() && getWindow()[\"opera\"] && errorObj[strMessage]) {\r\n                // Opera\r\n                details = _getOperaStack(errorObj[_DYN_MESSAGE /* @min:%2emessage */]);\r\n            }\r\n            else if (errorObj[\"reason\"] && errorObj.reason[strStack]) {\r\n                // UnhandledPromiseRejection\r\n                details = _convertStackObj(errorObj.reason[strStack]);\r\n            }\r\n            else if (isString(errorObj)) {\r\n                details = _convertStackObj(errorObj);\r\n            }\r\n            else {\r\n                var evtMessage = errorObj[strMessage] || errorObj[strDescription] || \"\";\r\n                if (isString(errorObj[strErrorSrc])) {\r\n                    if (evtMessage) {\r\n                        evtMessage += \"\\n\";\r\n                    }\r\n                    evtMessage += \" from \" + errorObj[strErrorSrc];\r\n                }\r\n                if (evtMessage) {\r\n                    details = _convertStackObj(evtMessage);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // something unexpected happened so to avoid failing to report any error lets swallow the exception\r\n            // and fallback to the callee/caller method\r\n            details = _convertStackObj(e);\r\n        }\r\n    }\r\n    return details || {\r\n        src: \"\",\r\n        obj: null\r\n    };\r\n}\r\nfunction _formatStackTrace(stackDetails) {\r\n    var stack = \"\";\r\n    if (stackDetails) {\r\n        if (stackDetails.obj) {\r\n            arrForEach(stackDetails.obj, function (entry) {\r\n                stack += entry + \"\\n\";\r\n            });\r\n        }\r\n        else {\r\n            stack = stackDetails.src || \"\";\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nfunction _parseStack(stack) {\r\n    var parsedStack;\r\n    var frames = stack.obj;\r\n    if (frames && frames[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        parsedStack = [];\r\n        var level_1 = 0;\r\n        var totalSizeInBytes_1 = 0;\r\n        arrForEach(frames, function (frame) {\r\n            var theFrame = frame[_DYN_TO_STRING /* @min:%2etoString */]();\r\n            if (_StackFrame.regex.test(theFrame)) {\r\n                var parsedFrame = new _StackFrame(theFrame, level_1++);\r\n                totalSizeInBytes_1 += parsedFrame[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                parsedStack[_DYN_PUSH /* @min:%2epush */](parsedFrame);\r\n            }\r\n        });\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        var exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {\r\n            var left = 0;\r\n            var right = parsedStack[_DYN_LENGTH /* @min:%2elength */] - 1;\r\n            var size = 0;\r\n            var acceptedLeft = left;\r\n            var acceptedRight = right;\r\n            while (left < right) {\r\n                // check size\r\n                var lSize = parsedStack[left][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                var rSize = parsedStack[right][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                size += lSize + rSize;\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    var howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n    return parsedStack;\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType[_DYN_NAME /* @min:%2ename */] || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,200})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor[_DYN_TO_STRING /* @min:%2etoString */]());\r\n                typeName = (results && results[_DYN_LENGTH /* @min:%2elength */] > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\n/**\r\n * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.\r\n * @param errorObj - The supplied errorObj\r\n */\r\nexport function _formatErrorCode(errorObj) {\r\n    if (errorObj) {\r\n        try {\r\n            if (!isString(errorObj)) {\r\n                var errorType = _getErrorType(errorObj);\r\n                var result = _stringify(errorObj, false);\r\n                if (!result || result === \"{}\") {\r\n                    if (errorObj[strError]) {\r\n                        // Looks like an MS Error Event\r\n                        errorObj = errorObj[strError];\r\n                        errorType = _getErrorType(errorObj);\r\n                    }\r\n                    result = _stringify(errorObj, true);\r\n                }\r\n                if (strIndexOf(result, errorType) !== 0 && errorType !== \"String\") {\r\n                    return errorType + \":\" + result;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n        }\r\n    }\r\n    // Fallback to just letting the object format itself into a string\r\n    return \"\" + (errorObj || \"\");\r\n}\r\nvar Exception = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            exceptions: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n        if (!_isExceptionInternal(exception)) {\r\n            if (!properties) {\r\n                properties = {};\r\n            }\r\n            if (id) {\r\n                properties.id = id;\r\n            }\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = [new _ExceptionDetails(logger, exception, properties)];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n            }\r\n            if (id) {\r\n                _self.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */] || [];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = exception[_DYN_PROPERTIES /* @min:%2eproperties */];\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = exception[_DYN_MEASUREMENTS /* @min:%2emeasurements */];\r\n            if (exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */]) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */];\r\n            }\r\n            if (exception.id) {\r\n                _self.id = exception.id;\r\n                exception[_DYN_PROPERTIES /* @min:%2eproperties */].id = exception.id;\r\n            }\r\n            if (exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */]) {\r\n                _self[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */] = exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */];\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!isNullOrUndefined(exception[_DYN_IS_MANUAL /* @min:%2eisManual */])) {\r\n                _self[_DYN_IS_MANUAL /* @min:%2eisManual */] = exception[_DYN_IS_MANUAL /* @min:%2eisManual */];\r\n            }\r\n        }\r\n    }\r\n    Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {\r\n        var _a;\r\n        var errorType = _getErrorType(error || evt || message);\r\n        return _a = {},\r\n            _a[_DYN_MESSAGE /* @min:message */] = _formatMessage(message, errorType),\r\n            _a.url = url,\r\n            _a.lineNumber = lineNumber,\r\n            _a.columnNumber = columnNumber,\r\n            _a.error = _formatErrorCode(error || evt || message),\r\n            _a.evt = _formatErrorCode(evt || message),\r\n            _a[_DYN_TYPE_NAME /* @min:typeName */] = errorType,\r\n            _a.stackDetails = _getStackFromErrorObj(stack || error || evt),\r\n            _a.errorSrc = errorSrc,\r\n            _a;\r\n    };\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */]\r\n            && arrMap(exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */], function (ex) { return _ExceptionDetails[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign(__assign({}, exception), { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a;\r\n        var _b = this, exceptions = _b.exceptions, properties = _b.properties, measurements = _b.measurements, severityLevel = _b.severityLevel, problemGroup = _b.problemGroup, id = _b.id, isManual = _b.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return _a = {\r\n                ver: \"4.0\"\r\n            },\r\n            _a[_DYN_EXCEPTIONS /* @min:exceptions */] = exceptionDetailsInterface,\r\n            _a.severityLevel = severityLevel,\r\n            _a.properties = properties,\r\n            _a.measurements = measurements,\r\n            _a.problemGroup = problemGroup,\r\n            _a.id = id,\r\n            _a.isManual = isManual,\r\n            _a;\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        var _a;\r\n        return {\r\n            exceptions: [\r\n                (_a = {},\r\n                    _a[_DYN_HAS_FULL_STACK /* @min:hasFullStack */] = true,\r\n                    _a.message = message,\r\n                    _a.stack = details,\r\n                    _a.typeName = typeName,\r\n                    _a)\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    Exception.formatError = _formatErrorCode;\r\n    return Exception;\r\n}());\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function () {\r\n    function _ExceptionDetails(logger, exception, properties) {\r\n        this.aiDataContract = {\r\n            id: 0 /* FieldType.Default */,\r\n            outerId: 0 /* FieldType.Default */,\r\n            typeName: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            hasFullStack: 0 /* FieldType.Default */,\r\n            stack: 0 /* FieldType.Default */,\r\n            parsedStack: 2 /* FieldType.Array */\r\n        };\r\n        var _self = this;\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            var evt = error && error.evt;\r\n            if (!isError(error)) {\r\n                error = error[strError] || evt || error;\r\n            }\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, _formatMessage(exception || error, _self[_DYN_TYPE_NAME /* @min:%2etypeName */])) || strNotSpecified;\r\n            var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = _parseStack(stack);\r\n            // after parsedStack is inited, iterate over each frame object, sanitize its assembly field\r\n            if (isArray(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */])) {\r\n                arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) {\r\n                    frame[_DYN_ASSEMBLY /* @min:%2eassembly */] = dataSanitizeString(logger, frame[_DYN_ASSEMBLY /* @min:%2eassembly */]);\r\n                    frame[_DYN_FILE_NAME /* @min:%2efileName */] = dataSanitizeString(logger, frame[_DYN_FILE_NAME /* @min:%2efileName */]);\r\n                });\r\n            }\r\n            _self[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));\r\n            _self.hasFullStack = isArray(_self.parsedStack) && _self.parsedStack[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n            if (properties) {\r\n                properties[_DYN_TYPE_NAME /* @min:%2etypeName */] = properties[_DYN_TYPE_NAME /* @min:%2etypeName */] || _self[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = exception[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = exception[_DYN_MESSAGE /* @min:%2emessage */];\r\n            _self[strStack] = exception[strStack];\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] || [];\r\n            _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */] = exception[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */];\r\n        }\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var _a;\r\n        var _self = this;\r\n        var parsedStack = _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = (_a = {\r\n                id: _self.id,\r\n                outerId: _self.outerId,\r\n                typeName: _self[_DYN_TYPE_NAME /* @min:%2etypeName */],\r\n                message: _self[_DYN_MESSAGE /* @min:%2emessage */],\r\n                hasFullStack: _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */],\r\n                stack: _self[strStack]\r\n            },\r\n            _a[_DYN_PARSED_STACK /* @min:parsedStack */] = parsedStack || undefined,\r\n            _a);\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return _StackFrame[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](frame); }))\r\n            || exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */];\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign(__assign({}, exception), { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    return _ExceptionDetails;\r\n}());\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function () {\r\n    function _StackFrame(sourceFrame, level) {\r\n        this.aiDataContract = {\r\n            level: 1 /* FieldType.Required */,\r\n            method: 1 /* FieldType.Required */,\r\n            assembly: 0 /* FieldType.Default */,\r\n            fileName: 0 /* FieldType.Default */,\r\n            line: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        // Not converting this to isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = level;\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = NoMethod;\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = strTrim(frame);\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = \"\";\r\n            _self[_DYN_LINE /* @min:%2eline */] = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches[_DYN_LENGTH /* @min:%2elength */] >= 5) {\r\n                _self[_DYN_METHOD /* @min:%2emethod */] = strTrim(matches[2]) || _self[_DYN_METHOD /* @min:%2emethod */];\r\n                _self[_DYN_FILE_NAME /* @min:%2efileName */] = strTrim(matches[4]);\r\n                _self[_DYN_LINE /* @min:%2eline */] = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = sourceFrame[_DYN_LEVEL /* @min:%2elevel */];\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = sourceFrame[_DYN_METHOD /* @min:%2emethod */];\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = sourceFrame[_DYN_ASSEMBLY /* @min:%2eassembly */];\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = sourceFrame[_DYN_FILE_NAME /* @min:%2efileName */];\r\n            _self[_DYN_LINE /* @min:%2eline */] = sourceFrame[_DYN_LINE /* @min:%2eline */];\r\n            _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        }\r\n        _self.sizeInBytes += _self.method[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.fileName[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.assembly[_DYN_LENGTH /* @min:%2elength */];\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] += _StackFrame.baseSize;\r\n        _self.sizeInBytes += _self.level.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.line.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        var _self = this;\r\n        return {\r\n            level: _self[_DYN_LEVEL /* @min:%2elevel */],\r\n            method: _self[_DYN_METHOD /* @min:%2emethod */],\r\n            assembly: _self[_DYN_ASSEMBLY /* @min:%2eassembly */],\r\n            fileName: _self[_DYN_FILE_NAME /* @min:%2efileName */],\r\n            line: _self[_DYN_LINE /* @min:%2eline */]\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?[\\s]{0,50}([^\\@\\()]+?)[\\s]{0,50}(\\@|\\()([^\\(\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            name: 1 /* FieldType.Required */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 1 /* FieldType.Required */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */\r\n        };\r\n        /**\r\n         * Metric type. Single measurement or the aggregated value.\r\n         */\r\n        this.kind = 0 /* DataPointType.Measurement */;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_COUNT, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { DataPoint } from \"./Common/DataPoint\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Metric = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            metrics: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        var dataPoint = new DataPoint();\r\n        dataPoint[_DYN_COUNT /* @min:%2ecount */] = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        dataPoint.value = value;\r\n        dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;\r\n        _self.metrics = [dataPoint];\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}());\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar strEmpty = \"\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString()[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = strEmpty + totalms % 1000;\r\n    var sec = strEmpty + Math.floor(totalms / 1000) % 60;\r\n    var min = strEmpty + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = strEmpty + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms[_DYN_LENGTH /* @min:%2elength */] === 1 ? \"00\" + ms : ms[_DYN_LENGTH /* @min:%2elength */] === 2 ? \"0\" + ms : ms;\r\n    sec = sec[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + sec : sec;\r\n    min = min[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + min : min;\r\n    hour = hour[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : strEmpty) + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageView = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            id: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = dataSanitizeId(logger, id);\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(durationMs);\r\n        }\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}());\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { AjaxHelperParseDependencyPath } from \"../Util\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar RemoteDependencyData = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        this.aiDataContract = {\r\n            id: 1 /* FieldType.Required */,\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            resultCode: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            success: 0 /* FieldType.Default */,\r\n            data: 0 /* FieldType.Default */,\r\n            target: 0 /* FieldType.Default */,\r\n            type: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 0 /* FieldType.Default */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */,\r\n            dependencyKind: 0 /* FieldType.Default */,\r\n            dependencySource: 0 /* FieldType.Default */,\r\n            commandName: 0 /* FieldType.Default */,\r\n            dependencyTypeName: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = id;\r\n        _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(value);\r\n        _self.success = success;\r\n        _self.resultCode = resultCode + \"\";\r\n        _self.type = dataSanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _self.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _self.target = dataSanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _self.target = \"\".concat(_self.target, \" | \").concat(correlationContext);\r\n        }\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, dependencyFields[_DYN_NAME /* @min:%2ename */]);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}());\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties } from \"./Common/DataSanitizer\";\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        message = message || strNotSpecified;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, message);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n        }\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES, _DYN_RECEIVED_RESPONSE } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageViewPerformance = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            perfTotal: 0 /* FieldType.Default */,\r\n            networkConnect: 0 /* FieldType.Default */,\r\n            sentRequest: 0 /* FieldType.Default */,\r\n            receivedResponse: 0 /* FieldType.Default */,\r\n            domProcessing: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _self.domProcessing = cs4BaseData.domProcessing;\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = cs4BaseData[_DYN_DURATION /* @min:%2eduration */];\r\n            _self.networkConnect = cs4BaseData.networkConnect;\r\n            _self.perfTotal = cs4BaseData.perfTotal;\r\n            _self[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */] = cs4BaseData[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */];\r\n            _self.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}());\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Data = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            baseType: 1 /* FieldType.Required */,\r\n            baseData: 1 /* FieldType.Required */\r\n        };\r\n        this.baseType = baseType;\r\n        this.baseData = data;\r\n    }\r\n    return Data;\r\n}());\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { createClassFromInterface } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _aiNameFunc(baseName) {\r\n    var aiName = \"ai.\" + baseName + \".\";\r\n    return function (name) {\r\n        return aiName + name;\r\n    };\r\n}\r\nvar _aiApplication = _aiNameFunc(\"application\");\r\nvar _aiDevice = _aiNameFunc(\"device\");\r\nvar _aiLocation = _aiNameFunc(\"location\");\r\nvar _aiOperation = _aiNameFunc(\"operation\");\r\nvar _aiSession = _aiNameFunc(\"session\");\r\nvar _aiUser = _aiNameFunc(\"user\");\r\nvar _aiCloud = _aiNameFunc(\"cloud\");\r\nvar _aiInternal = _aiNameFunc(\"internal\");\r\nvar ContextTagKeys = /** @class */ (function (_super) {\r\n    __extends(ContextTagKeys, _super);\r\n    function ContextTagKeys() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return ContextTagKeys;\r\n}(createClassFromInterface({\r\n    applicationVersion: _aiApplication(\"ver\"),\r\n    applicationBuild: _aiApplication(\"build\"),\r\n    applicationTypeId: _aiApplication(\"typeId\"),\r\n    applicationId: _aiApplication(\"applicationId\"),\r\n    applicationLayer: _aiApplication(\"layer\"),\r\n    deviceId: _aiDevice(\"id\"),\r\n    deviceIp: _aiDevice(\"ip\"),\r\n    deviceLanguage: _aiDevice(\"language\"),\r\n    deviceLocale: _aiDevice(\"locale\"),\r\n    deviceModel: _aiDevice(\"model\"),\r\n    deviceFriendlyName: _aiDevice(\"friendlyName\"),\r\n    deviceNetwork: _aiDevice(\"network\"),\r\n    deviceNetworkName: _aiDevice(\"networkName\"),\r\n    deviceOEMName: _aiDevice(\"oemName\"),\r\n    deviceOS: _aiDevice(\"os\"),\r\n    deviceOSVersion: _aiDevice(\"osVersion\"),\r\n    deviceRoleInstance: _aiDevice(\"roleInstance\"),\r\n    deviceRoleName: _aiDevice(\"roleName\"),\r\n    deviceScreenResolution: _aiDevice(\"screenResolution\"),\r\n    deviceType: _aiDevice(\"type\"),\r\n    deviceMachineName: _aiDevice(\"machineName\"),\r\n    deviceVMName: _aiDevice(\"vmName\"),\r\n    deviceBrowser: _aiDevice(\"browser\"),\r\n    deviceBrowserVersion: _aiDevice(\"browserVersion\"),\r\n    locationIp: _aiLocation(\"ip\"),\r\n    locationCountry: _aiLocation(\"country\"),\r\n    locationProvince: _aiLocation(\"province\"),\r\n    locationCity: _aiLocation(\"city\"),\r\n    operationId: _aiOperation(\"id\"),\r\n    operationName: _aiOperation(\"name\"),\r\n    operationParentId: _aiOperation(\"parentId\"),\r\n    operationRootId: _aiOperation(\"rootId\"),\r\n    operationSyntheticSource: _aiOperation(\"syntheticSource\"),\r\n    operationCorrelationVector: _aiOperation(\"correlationVector\"),\r\n    sessionId: _aiSession(\"id\"),\r\n    sessionIsFirst: _aiSession(\"isFirst\"),\r\n    sessionIsNew: _aiSession(\"isNew\"),\r\n    userAccountAcquisitionDate: _aiUser(\"accountAcquisitionDate\"),\r\n    userAccountId: _aiUser(\"accountId\"),\r\n    userAgent: _aiUser(\"userAgent\"),\r\n    userId: _aiUser(\"id\"),\r\n    userStoreRegion: _aiUser(\"storeRegion\"),\r\n    userAuthUserId: _aiUser(\"authUserId\"),\r\n    userAnonymousUserAcquisitionDate: _aiUser(\"anonUserAcquisitionDate\"),\r\n    userAuthenticatedUserAcquisitionDate: _aiUser(\"authUserAcquisitionDate\"),\r\n    cloudName: _aiCloud(\"name\"),\r\n    cloudRole: _aiCloud(\"role\"),\r\n    cloudRoleVer: _aiCloud(\"roleVer\"),\r\n    cloudRoleInstance: _aiCloud(\"roleInstance\"),\r\n    cloudEnvironment: _aiCloud(\"environment\"),\r\n    cloudLocation: _aiCloud(\"location\"),\r\n    cloudDeploymentUnit: _aiCloud(\"deploymentUnit\"),\r\n    internalNodeName: _aiInternal(\"nodeName\"),\r\n    internalSdkVersion: _aiInternal(\"sdkVersion\"),\r\n    internalAgentVersion: _aiInternal(\"agentVersion\"),\r\n    internalSnippet: _aiInternal(\"snippet\"),\r\n    internalSdkSrc: _aiInternal(\"sdkSrc\")\r\n})));\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { ContextTagKeys } from \"./Contracts/ContextTagKeys\";\r\nexport var Extensions = {\r\n    UserExt: \"user\",\r\n    DeviceExt: \"device\",\r\n    TraceExt: \"trace\",\r\n    WebExt: \"web\",\r\n    AppExt: \"app\",\r\n    OSExt: \"os\",\r\n    SessionExt: \"ses\",\r\n    SDKExt: \"sdk\"\r\n};\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_PUSH } from \"./__DynamicConstants\";\r\nfunction _disableEvents(target, evtNamespace) {\r\n    eventOff(target, null, null, evtNamespace);\r\n}\r\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\r\nexport function createOfflineListener(parentEvtNamespace) {\r\n    var _document = getDocument();\r\n    var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\r\n    var _isListening = false;\r\n    var listenerList = [];\r\n    // Set the initial state\r\n    // rState is changed by the browser, both via events and when we check the navigator.onLine property\r\n    var rState = 1 /* eOfflineValue.Online */;\r\n    if (_navigator && !isNullOrUndefined(_navigator.onLine) && !_navigator.onLine) { // navigator.onLine is undefined in react-native\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n    }\r\n    // ustate is changed by the user calling setOnlineState\r\n    var uState = 0 /* eOfflineValue.Unknown */;\r\n    // current state would be updated each time rState or uState is changed\r\n    // it is a resolved value of rState and uState\r\n    var _currentState = calCurrentState();\r\n    var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\r\n    try {\r\n        if (_enableEvents(getWindow())) {\r\n            _isListening = true;\r\n        }\r\n        if (_document) {\r\n            // Also attach to the document.body or document\r\n            var target = _document.body || _document;\r\n            if (target.ononline) {\r\n                if (_enableEvents(target)) {\r\n                    _isListening = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this makes react-native less angry\r\n        _isListening = false;\r\n    }\r\n    function _enableEvents(target) {\r\n        var enabled = false;\r\n        if (target) {\r\n            enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\r\n            if (enabled) {\r\n                eventOn(target, \"offline\", _setOffline, _evtNamespace);\r\n            }\r\n        }\r\n        return enabled;\r\n    }\r\n    function _isOnline() {\r\n        return _currentState;\r\n    }\r\n    function calCurrentState() {\r\n        if (uState === 2 /* eOfflineValue.Offline */ || rState === 2 /* eOfflineValue.Offline */) {\r\n            return false;\r\n        }\r\n        return true; // if both unknown, then we assume the network is good\r\n    }\r\n    function listnerNoticeCheck() {\r\n        // we were offline and are now online or we were online and now offline\r\n        var newState = calCurrentState();\r\n        if (_currentState !== newState) {\r\n            _currentState = newState; // use the resolved state to update\r\n            // send all the callbacks with the current state\r\n            arrForEach(listenerList, function (callback) {\r\n                var offlineState = {\r\n                    isOnline: _currentState,\r\n                    rState: rState,\r\n                    uState: uState\r\n                };\r\n                try {\r\n                    callback(offlineState);\r\n                }\r\n                catch (e) {\r\n                    // Do nothing, just making sure we run all of the callbacks\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function setOnlineState(newState) {\r\n        uState = newState;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOnline() {\r\n        rState = 1 /* eOfflineValue.Online */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOffline() {\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _unload() {\r\n        var win = getWindow();\r\n        if (win && _isListening) {\r\n            _disableEvents(win, _evtNamespace);\r\n            if (_document) {\r\n                // Also attach to the document.body or document\r\n                var target = _document.body || _document;\r\n                if (!isUndefined(target.ononline)) {\r\n                    _disableEvents(target, _evtNamespace);\r\n                }\r\n            }\r\n            _isListening = false;\r\n        }\r\n    }\r\n    function addListener(callback) {\r\n        listenerList[_DYN_PUSH /* @min:%2epush */](callback);\r\n        // Define rm as an instance of IUnloadHook\r\n        return {\r\n            rm: function () {\r\n                var index = listenerList.indexOf(callback);\r\n                if (index > -1) {\r\n                    return listenerList.splice(index, 1);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    return {\r\n        isOnline: _isOnline,\r\n        isListening: function () { return _isListening; },\r\n        unload: _unload,\r\n        addListener: addListener,\r\n        setOnlineState: setOnlineState\r\n    };\r\n}\r\n//# sourceMappingURL=Offline.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent, findAllScripts } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TAGS = \"tags\"; // Count: 17\r\nexport var _DYN_DEVICE_TYPE = \"deviceType\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 15\r\nexport var _DYN_NAME = \"name\"; // Count: 8\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 5\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 10\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 7\r\nexport var _DYN__GET = \"_get\"; // Count: 5\r\nexport var _DYN_ENQUEUE = \"enqueue\"; // Count: 7\r\nexport var _DYN_COUNT = \"count\"; // Count: 7\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_PUSH = \"push\"; // Count: 9\r\nexport var _DYN_ITEM = \"item\"; // Count: 6\r\nexport var _DYN_EMIT_LINE_DELIMITED_0 = \"emitLineDelimitedJson\"; // Count: 3\r\nexport var _DYN_CLEAR = \"clear\"; // Count: 6\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 3\r\nexport var _DYN_MARK_AS_SENT = \"markAsSent\"; // Count: 4\r\nexport var _DYN_CLEAR_SENT = \"clearSent\"; // Count: 5\r\nexport var _DYN_BUFFER_OVERRIDE = \"bufferOverride\"; // Count: 3\r\nexport var _DYN__BUFFER__KEY = \"BUFFER_KEY\"; // Count: 5\r\nexport var _DYN__SENT__BUFFER__KEY = \"SENT_BUFFER_KEY\"; // Count: 8\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 6\r\nexport var _DYN__MAX__BUFFER__SIZE = \"MAX_BUFFER_SIZE\"; // Count: 5\r\nexport var _DYN_TRIGGER_SEND = \"triggerSend\"; // Count: 5\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 16\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 3\r\nexport var _DYN__SENDER = \"_sender\"; // Count: 5\r\nexport var _DYN_CUSTOM_HEADERS = \"customHeaders\"; // Count: 3\r\nexport var _DYN_MAX_BATCH_SIZE_IN_BY1 = \"maxBatchSizeInBytes\"; // Count: 2\r\nexport var _DYN_ONUNLOAD_DISABLE_BEA2 = \"onunloadDisableBeacon\"; // Count: 3\r\nexport var _DYN_IS_BEACON_API_DISABL3 = \"isBeaconApiDisabled\"; // Count: 3\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR4 = \"alwaysUseXhrOverride\"; // Count: 2\r\nexport var _DYN_DISABLE_XHR = \"disableXhr\"; // Count: 3\r\nexport var _DYN_ENABLE_SESSION_STORA5 = \"enableSessionStorageBuffer\"; // Count: 2\r\nexport var _DYN__BUFFER = \"_buffer\"; // Count: 9\r\nexport var _DYN_ONUNLOAD_DISABLE_FET6 = \"onunloadDisableFetch\"; // Count: 2\r\nexport var _DYN_DISABLE_SEND_BEACON_7 = \"disableSendBeaconSplit\"; // Count: 2\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN_ENABLE_SEND_PROMISE = \"enableSendPromise\"; // Count: 2\r\nexport var _DYN_GET_SENDER_INST = \"getSenderInst\"; // Count: 4\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_CONVERT_UNDEFINED = \"convertUndefined\"; // Count: 2\r\nexport var _DYN_MAX_BATCH_INTERVAL = \"maxBatchInterval\"; // Count: 2\r\nexport var _DYN_SERIALIZE = \"serialize\"; // Count: 4\r\nexport var _DYN__ON_ERROR = \"_onError\"; // Count: 7\r\nexport var _DYN__ON_PARTIAL_SUCCESS = \"_onPartialSuccess\"; // Count: 3\r\nexport var _DYN__ON_SUCCESS = \"_onSuccess\"; // Count: 6\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_ITEMS_ACCEPTED = \"itemsAccepted\"; // Count: 3\r\nexport var _DYN_ORI_PAYLOAD = \"oriPayload\"; // Count: 3\r\nexport var _DYN_BASE_TYPE = \"baseType\"; // Count: 4\r\nexport var _DYN_SAMPLE_RATE = \"sampleRate\"; // Count: 4\r\nexport var _DYN_EVENTS_SEND_REQUEST = \"eventsSendRequest\"; // Count: 2\r\nexport var _DYN_GET_SAMPLING_SCORE = \"getSamplingScore\"; // Count: 2\r\nexport var _DYN_GET_HASH_CODE_SCORE = \"getHashCodeScore\"; // Count: 4\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { CtxTagKeys, Data, Envelope, Event, Exception, HttpMethod, Metric, PageView, PageViewPerformance, RemoteDependencyData, SampleRate, Trace, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, _warnToConsole, getJSON, hasJSON, isNullOrUndefined, isNumber, isString, isTruthy, objForEachKey, optimizeObject, setValue, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION } from \"./InternalConstants\";\r\nimport { _DYN_DATA, _DYN_DATA_TYPE, _DYN_DEVICE_TYPE, _DYN_ENVELOPE_TYPE, _DYN_LENGTH, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_STRINGIFY, _DYN_TAGS, _DYN_TO_STRING, _DYN_TRACE_ID } from \"./__DynamicConstants\";\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar strBaseType = \"baseType\";\r\nvar strBaseData = \"baseData\";\r\nvar strProperties = \"properties\";\r\nvar strTrue = \"true\";\r\nfunction _setValueIf(target, field, value) {\r\n    return setValue(target, field, value, isTruthy);\r\n}\r\n/*\r\n * Maps Part A data from CS 4.0\r\n */\r\nfunction _extractPartAExtensions(logger, item, env) {\r\n    // todo: switch to keys from common in this method\r\n    var envTags = env[_DYN_TAGS /* @min:%2etags */] = env[_DYN_TAGS /* @min:%2etags */] || {};\r\n    var itmExt = item.ext = item.ext || {};\r\n    var itmTags = item[_DYN_TAGS /* @min:%2etags */] = item[_DYN_TAGS /* @min:%2etags */] || [];\r\n    var extUser = itmExt.user;\r\n    if (extUser) {\r\n        _setValueIf(envTags, CtxTagKeys.userAuthUserId, extUser.authId);\r\n        _setValueIf(envTags, CtxTagKeys.userId, extUser.id || extUser.localId);\r\n    }\r\n    var extApp = itmExt.app;\r\n    if (extApp) {\r\n        _setValueIf(envTags, CtxTagKeys.sessionId, extApp.sesId);\r\n    }\r\n    var extDevice = itmExt.device;\r\n    if (extDevice) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceId, extDevice.id || extDevice.localId);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice.deviceClass);\r\n        _setValueIf(envTags, CtxTagKeys.deviceIp, extDevice.ip);\r\n        _setValueIf(envTags, CtxTagKeys.deviceModel, extDevice.model);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice[_DYN_DEVICE_TYPE /* @min:%2edeviceType */]);\r\n    }\r\n    var web = item.ext.web;\r\n    if (web) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceLanguage, web.browserLang);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowserVersion, web.browserVer);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowser, web.browser);\r\n        var envData = env[_DYN_DATA /* @min:%2edata */] = env[_DYN_DATA /* @min:%2edata */] || {};\r\n        var envBaseData = envData[strBaseData] = envData[strBaseData] || {};\r\n        var envProps = envBaseData[strProperties] = envBaseData[strProperties] || {};\r\n        _setValueIf(envProps, \"domain\", web.domain);\r\n        _setValueIf(envProps, \"isManual\", web.isManual ? strTrue : null);\r\n        _setValueIf(envProps, \"screenRes\", web.screenRes);\r\n        _setValueIf(envProps, \"userConsent\", web.userConsent ? strTrue : null);\r\n    }\r\n    var extOs = itmExt.os;\r\n    if (extOs) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceOS, extOs[_DYN_NAME /* @min:%2ename */]);\r\n        _setValueIf(envTags, CtxTagKeys.deviceOSVersion, extOs.osVer);\r\n    }\r\n    // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n    var extTrace = itmExt.trace;\r\n    if (extTrace) {\r\n        _setValueIf(envTags, CtxTagKeys.operationParentId, extTrace.parentID);\r\n        _setValueIf(envTags, CtxTagKeys.operationName, dataSanitizeString(logger, extTrace[_DYN_NAME /* @min:%2ename */]));\r\n        _setValueIf(envTags, CtxTagKeys.operationId, extTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n    }\r\n    // Sample 4.0 schema\r\n    //  {\r\n    //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n    //     \"name\" : \"MetricWithNamespace\",\r\n    //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n    //     \"ext\": {  \"cloud\": {\r\n    //          \"role\": \"WATSON3\",\r\n    //          \"roleInstance\": \"CO4AEAP00000260\"\r\n    //      },\r\n    //      \"device\": {}, \"correlation\": {} },\r\n    //      \"tags\": [\r\n    //        { \"amazon.region\" : \"east2\" },\r\n    //        { \"os.expid\" : \"wp:02df239\" }\r\n    //     ]\r\n    //   }\r\n    var tgs = {};\r\n    // deals with tags.push({object})\r\n    for (var i = itmTags[_DYN_LENGTH /* @min:%2elength */] - 1; i >= 0; i--) {\r\n        var tg = itmTags[i];\r\n        objForEachKey(tg, function (key, value) {\r\n            tgs[key] = value;\r\n        });\r\n        itmTags.splice(i, 1);\r\n    }\r\n    // deals with tags[key]=value (and handles hasOwnProperty)\r\n    objForEachKey(itmTags, function (tg, value) {\r\n        tgs[tg] = value;\r\n    });\r\n    var theTags = __assign(__assign({}, envTags), tgs);\r\n    if (!theTags[CtxTagKeys.internalSdkVersion]) {\r\n        // Append a version in case it is not already set\r\n        theTags[CtxTagKeys.internalSdkVersion] = dataSanitizeString(logger, \"javascript:\".concat(EnvelopeCreator.Version), 64);\r\n    }\r\n    env[_DYN_TAGS /* @min:%2etags */] = optimizeObject(theTags);\r\n}\r\nfunction _extractPropsAndMeasurements(data, properties, measurements) {\r\n    if (!isNullOrUndefined(data)) {\r\n        objForEachKey(data, function (key, value) {\r\n            if (isNumber(value)) {\r\n                measurements[key] = value;\r\n            }\r\n            else if (isString(value)) {\r\n                properties[key] = value;\r\n            }\r\n            else if (hasJSON()) {\r\n                properties[key] = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue) {\r\n    if (!isNullOrUndefined(properties)) {\r\n        objForEachKey(properties, function (key, value) {\r\n            properties[key] = value || customUndefinedValue;\r\n        });\r\n    }\r\n}\r\n// TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\nfunction _createEnvelope(logger, envelopeType, telemetryItem, data) {\r\n    var envelope = new Envelope(logger, data, envelopeType);\r\n    _setValueIf(envelope, \"sampleRate\", telemetryItem[SampleRate]);\r\n    if ((telemetryItem[strBaseData] || {}).startTime) {\r\n        // Starting from Version 3.0.3, the time property will be assigned by the startTime value,\r\n        // which records the loadEvent time for the pageView event.\r\n        envelope.time = toISOString(telemetryItem[strBaseData].startTime);\r\n    }\r\n    envelope.iKey = telemetryItem.iKey;\r\n    var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n    envelope[_DYN_NAME /* @min:%2ename */] = envelope[_DYN_NAME /* @min:%2ename */].replace(\"{0}\", iKeyNoDashes);\r\n    // extract all extensions from ctx\r\n    _extractPartAExtensions(logger, telemetryItem, envelope);\r\n    // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n    telemetryItem[_DYN_TAGS /* @min:%2etags */] = telemetryItem[_DYN_TAGS /* @min:%2etags */] || [];\r\n    return optimizeObject(envelope);\r\n}\r\nfunction EnvelopeCreatorInit(logger, telemetryItem) {\r\n    if (isNullOrUndefined(telemetryItem[strBaseData])) {\r\n        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 46 /* _eInternalMessageId.TelemetryEnvelopeInvalid */, \"telemetryItem.baseData cannot be null.\");\r\n    }\r\n}\r\nexport var EnvelopeCreator = {\r\n    Version: '3.3.1'\r\n};\r\nexport function DependencyEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    if (isNullOrUndefined(bd)) {\r\n        _warnToConsole(logger, \"Invalid input for dependency data\");\r\n        return null;\r\n    }\r\n    var method = bd[strProperties] && bd[strProperties][HttpMethod] ? bd[strProperties][HttpMethod] : \"GET\";\r\n    var remoteDepData = new RemoteDependencyData(logger, bd.id, bd.target, bd[_DYN_NAME /* @min:%2ename */], bd[STR_DURATION /* @min:%2eduration */], bd.success, bd.responseCode, method, bd.type, bd.correlationContext, customProperties, customMeasurements);\r\n    var data = new Data(RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */], remoteDepData);\r\n    return _createEnvelope(logger, RemoteDependencyData[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function EventEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customProperties = {};\r\n    var customMeasurements = {};\r\n    if (telemetryItem[strBaseType] !== Event[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n        customProperties[\"baseTypeSource\"] = telemetryItem[strBaseType]; // save the passed in base type as a property\r\n    }\r\n    if (telemetryItem[strBaseType] === Event[_DYN_DATA_TYPE /* @min:%2edataType */]) { // take collection\r\n        customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n        customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    }\r\n    else { // if its not a known type, convert to custom event\r\n        if (telemetryItem[strBaseData]) {\r\n            _extractPropsAndMeasurements(telemetryItem[strBaseData], customProperties, customMeasurements);\r\n        }\r\n    }\r\n    // Extract root level properties from part C telemetryItem.data\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var eventName = telemetryItem[strBaseData][_DYN_NAME /* @min:%2ename */];\r\n    var eventData = new Event(logger, eventName, customProperties, customMeasurements);\r\n    var data = new Data(Event[_DYN_DATA_TYPE /* @min:%2edataType */], eventData);\r\n    return _createEnvelope(logger, Event[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function ExceptionEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Extract root level properties from part C telemetryItem.data\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    var exData = Exception.CreateFromInterface(logger, bd, customProperties, customMeasurements);\r\n    var data = new Data(Exception[_DYN_DATA_TYPE /* @min:%2edataType */], exData);\r\n    return _createEnvelope(logger, Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function MetricEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var baseData = telemetryItem[strBaseData];\r\n    var props = baseData[strProperties] || {};\r\n    var measurements = baseData[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseMetricData = new Metric(logger, baseData[_DYN_NAME /* @min:%2ename */], baseData.average, baseData.sampleCount, baseData.min, baseData.max, baseData.stdDev, props, measurements);\r\n    var data = new Data(Metric[_DYN_DATA_TYPE /* @min:%2edataType */], baseMetricData);\r\n    return _createEnvelope(logger, Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n    var duration;\r\n    var baseData = telemetryItem[strBaseData];\r\n    if (!isNullOrUndefined(baseData) &&\r\n        !isNullOrUndefined(baseData[strProperties]) &&\r\n        !isNullOrUndefined(baseData[strProperties][STR_DURATION])) { // from part B properties\r\n        duration = baseData[strProperties][STR_DURATION];\r\n        delete baseData[strProperties][STR_DURATION];\r\n    }\r\n    else if (!isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */]) &&\r\n        !isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION])) { // from custom properties\r\n        duration = telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n        delete telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n    var currentContextId;\r\n    if (((telemetryItem.ext || {}).trace || {})[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n        currentContextId = telemetryItem.ext.trace[_DYN_TRACE_ID /* @min:%2etraceID */];\r\n    }\r\n    var id = bd.id || currentContextId;\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.refUri)) {\r\n        properties[\"refUri\"] = bd.refUri;\r\n    }\r\n    // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.pageType)) {\r\n        properties[\"pageType\"] = bd.pageType;\r\n    }\r\n    // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.isLoggedIn)) {\r\n        properties[\"isLoggedIn\"] = bd.isLoggedIn[_DYN_TO_STRING /* @min:%2etoString */]();\r\n    }\r\n    // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd[strProperties])) {\r\n        var pageTags = bd[strProperties];\r\n        objForEachKey(pageTags, function (key, value) {\r\n            properties[key] = value;\r\n        });\r\n    }\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var pageViewData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n    var data = new Data(PageView[_DYN_DATA_TYPE /* @min:%2edataType */], pageViewData);\r\n    return _createEnvelope(logger, PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewPerformanceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var bd = telemetryItem[strBaseData];\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri || bd.url;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n    var data = new Data(PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function TraceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var message = telemetryItem[strBaseData].message;\r\n    var severityLevel = telemetryItem[strBaseData].severityLevel;\r\n    var props = telemetryItem[strBaseData][strProperties] || {};\r\n    var measurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseData = new Trace(logger, message, severityLevel, props, measurements);\r\n    var data = new Data(Trace[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\n//# sourceMappingURL=EnvelopeCreator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, arrIndexOf, dumpObj, getExceptionName, getJSON, isArray, isFunction, isNullOrUndefined, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_ITEM, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_PUSH, _DYN_STRINGIFY, _DYN__BUFFER__KEY, _DYN__GET, _DYN__MAX__BUFFER__SIZE, _DYN__SENT__BUFFER__KEY } from \"./__DynamicConstants\";\r\nvar BaseSendBuffer = /** @class */ (function () {\r\n    function BaseSendBuffer(logger, config) {\r\n        var _buffer = [];\r\n        var _bufferFullMessageSent = false;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        this[_DYN__GET /* @min:%2e_get */] = function () {\r\n            return _buffer;\r\n        };\r\n        this._set = function (buffer) {\r\n            _buffer = buffer;\r\n            return _buffer;\r\n        };\r\n        dynamicProto(BaseSendBuffer, this, function (_self) {\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= config[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 105 /* _eInternalMessageId.InMemoryStorageBufferFull */, \"Maximum in-memory buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _buffer[_DYN_PUSH /* @min:%2epush */](payload);\r\n                return;\r\n            };\r\n            _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n                return _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.size = function () {\r\n                var size = _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n                for (var lp = 0; lp < _buffer[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    size += (_buffer[lp].item)[_DYN_LENGTH /* @min:%2elength */];\r\n                }\r\n                if (!config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */]) {\r\n                    size += 2;\r\n                }\r\n                return size;\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _buffer = [];\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self.getItems = function () {\r\n                return _buffer.slice(0);\r\n            };\r\n            _self.batchPayloads = function (payloads) {\r\n                if (payloads && payloads[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var payloadStr_1 = [];\r\n                    arrForEach(payloads, function (payload) {\r\n                        payloadStr_1[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                    });\r\n                    var batch = config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */] ?\r\n                        payloadStr_1.join(\"\\n\") :\r\n                        \"[\" + payloadStr_1.join(\",\") + \"]\";\r\n                    return batch;\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                var items = _buffer.slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                var newBuffer = !!canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(items, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                return newBuffer;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for BaseSendBuffer.prototype.enqueue.\r\n// Removed Stub for BaseSendBuffer.prototype.count.\r\n// Removed Stub for BaseSendBuffer.prototype.size.\r\n// Removed Stub for BaseSendBuffer.prototype.clear.\r\n// Removed Stub for BaseSendBuffer.prototype.getItems.\r\n// Removed Stub for BaseSendBuffer.prototype.batchPayloads.\r\n// Removed Stub for BaseSendBuffer.prototype.createNew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseSendBuffer.__ieDyn=1;\n\n    return BaseSendBuffer;\r\n}());\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function (_super) {\r\n    __extends(ArraySendBuffer, _super);\r\n    function ArraySendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        dynamicProto(ArraySendBuffer, _this, function (_self, _base) {\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                // not supported\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ArraySendBuffer.prototype.markAsSent.\r\n// Removed Stub for ArraySendBuffer.prototype.clearSent.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ArraySendBuffer.__ieDyn=1;\n\n    return ArraySendBuffer;\r\n}(BaseSendBuffer));\r\nexport { ArraySendBuffer };\r\nvar PREVIOUS_KEYS = [\"AI_buffer\", \"AI_sentBuffer\"];\r\n/*\r\n * Session storage buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function (_super) {\r\n    __extends(SessionStorageSendBuffer, _super);\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        var _bufferFullMessageSent = false;\r\n        //Note: should not use config.namePrefix directly, because it will always refers to the latest namePrefix\r\n        var _namePrefix = config === null || config === void 0 ? void 0 : config.namePrefix;\r\n        // TODO: add remove buffer override as well\r\n        var _b = config[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */] || { getItem: utlGetSessionStorage, setItem: utlSetSessionStorage }, getItem = _b.getItem, setItem = _b.setItem;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        dynamicProto(SessionStorageSendBuffer, _this, function (_self, _base) {\r\n            var bufferItems = _getBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */]);\r\n            var itemsInSentBuffer = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n            var previousItems = _getPreviousEvents();\r\n            var notDeliveredItems = itemsInSentBuffer[_DYN_CONCAT /* @min:%2econcat */](previousItems);\r\n            var buffer = _self._set(bufferItems[_DYN_CONCAT /* @min:%2econcat */](notDeliveredItems));\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (buffer[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                buffer[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n            }\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], buffer);\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Maximum buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _base[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], _self._set(_removePayloadsFromBuffer(payload, _self[_DYN__GET /* @min:%2e_get */]())));\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                if (sentElements instanceof Array && payload instanceof Array) {\r\n                    sentElements = sentElements[_DYN_CONCAT /* @min:%2econcat */](payload);\r\n                    if (sentElements[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                        // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                        // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Sent buffer reached its maximum size: \" + sentElements[_DYN_LENGTH /* @min:%2elength */], true);\r\n                        sentElements[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n                    }\r\n                    _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n                }\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                sentElements = _removePayloadsFromBuffer(payload, sentElements);\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                canUseSessionStorage = !!canUseSessionStorage;\r\n                var unsentItems = _self[_DYN__GET /* @min:%2e_get */]().slice(0);\r\n                var sentItems = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]).slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                // to make sure that we do not send duplicated payloads when it is switched back to previous one\r\n                _self[_DYN_CLEAR /* @min:%2eclear */]();\r\n                var newBuffer = canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(unsentItems, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                if (canUseSessionStorage) {\r\n                    // arr buffer will clear all payloads if markAsSent() is called\r\n                    newBuffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](sentItems);\r\n                }\r\n                return newBuffer;\r\n            };\r\n            function _removePayloadsFromBuffer(payloads, buffer) {\r\n                var remaining = [];\r\n                var payloadStr = [];\r\n                arrForEach(payloads, function (payload) {\r\n                    payloadStr[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                });\r\n                arrForEach(buffer, function (value) {\r\n                    if (!isFunction(value) && arrIndexOf(payloadStr, value[_DYN_ITEM /* @min:%2eitem */]) === -1) {\r\n                        remaining[_DYN_PUSH /* @min:%2epush */](value);\r\n                    }\r\n                });\r\n                return remaining;\r\n            }\r\n            function _getBuffer(key) {\r\n                var prefixedKey = key;\r\n                prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                return _getBufferBase(prefixedKey);\r\n            }\r\n            function _getBufferBase(key) {\r\n                try {\r\n                    var bufferJson = getItem(logger, key);\r\n                    if (bufferJson) {\r\n                        var buffer_1 = getJSON().parse(bufferJson);\r\n                        if (isString(buffer_1)) {\r\n                            // When using some version prototype.js the stringify / parse cycle does not decode array's correctly\r\n                            buffer_1 = getJSON().parse(buffer_1);\r\n                        }\r\n                        if (buffer_1 && isArray(buffer_1)) {\r\n                            return buffer_1;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 42 /* _eInternalMessageId.FailedToRestoreStorageBuffer */, \" storage key: \" + key + \", \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            function _setBuffer(key, buffer) {\r\n                var prefixedKey = key;\r\n                try {\r\n                    prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                    var bufferJson = JSON[_DYN_STRINGIFY /* @min:%2estringify */](buffer);\r\n                    setItem(logger, prefixedKey, bufferJson);\r\n                }\r\n                catch (e) {\r\n                    // if there was an error, clear the buffer\r\n                    // telemetry is stored in the _buffer array so we won't loose any items\r\n                    setItem(logger, prefixedKey, JSON[_DYN_STRINGIFY /* @min:%2estringify */]([]));\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \" storage key: \" + prefixedKey + \", \" + getExceptionName(e) + \". Buffer cleared\", { exception: dumpObj(e) });\r\n                }\r\n            }\r\n            // this removes buffer with prefix+key\r\n            function _getPreviousEvents() {\r\n                var items = [];\r\n                try {\r\n                    arrForEach(PREVIOUS_KEYS, function (key) {\r\n                        var events = _getItemsFromPreviousKey(key);\r\n                        items = items[_DYN_CONCAT /* @min:%2econcat */](events);\r\n                        // to make sure that we also transfer items from old prefixed + key buffer\r\n                        if (_namePrefix) {\r\n                            var prefixedKey = _namePrefix + \"_\" + key;\r\n                            var prefixEvents = _getItemsFromPreviousKey(prefixedKey);\r\n                            items = items[_DYN_CONCAT /* @min:%2econcat */](prefixEvents);\r\n                        }\r\n                    });\r\n                    return items;\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \"Transfer events from previous buffers: \" + getExceptionName(e) + \". previous Buffer items can not be removed\", { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            // transform string[] to IInternalStorageItem[]\r\n            function _getItemsFromPreviousKey(key) {\r\n                try {\r\n                    var items = _getBufferBase(key);\r\n                    var transFormedItems_1 = [];\r\n                    arrForEach(items, function (item) {\r\n                        var internalItem = {\r\n                            item: item,\r\n                            cnt: 0 // previous events will be default to 0 count\r\n                        };\r\n                        transFormedItems_1[_DYN_PUSH /* @min:%2epush */](internalItem);\r\n                    });\r\n                    // remove the session storage if we can add events back\r\n                    utlRemoveSessionStorage(logger, key);\r\n                    return transFormedItems_1;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return [];\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for SessionStorageSendBuffer.prototype.enqueue.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clear.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.markAsSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clearSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.createNew.\r\n    var _a;\r\n    _a = SessionStorageSendBuffer;\r\n    SessionStorageSendBuffer.VERSION = \"_1\";\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\" + _a.VERSION;\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\" + _a.VERSION;\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}(BaseSendBuffer));\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, Event, Exception, Metric, PageView, PageViewPerformance, ProcessLegacy, RemoteDependencyData, RequestHeaders, SampleRate, Trace, createOfflineListener, isInternalApplicationInsightsEndpoint, utlCanUseSessionStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { ActiveStatus, BaseTelemetryPlugin, SenderPostManager, _throwInternal, _warnToConsole, arrForEach, cfgDfBoolean, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dateNow, dumpObj, formatErrorMessageXdr, formatErrorMessageXhr, getExceptionName, getIEVersion, isArray, isBeaconsSupported, isFetchSupported, isNullOrUndefined, mergeEvtNamespace, objExtend, onConfigChange, parseResponse, prependTransports, runTargetUnload } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isNumber, isString, isTruthy, objDeepFreeze, objDefine, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from \"./EnvelopeCreator\";\r\nimport { ArraySendBuffer, SessionStorageSendBuffer } from \"./SendBuffer\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { Sample } from \"./TelemetryProcessors/Sample\";\r\nimport { _DYN_ALWAYS_USE_XHR_OVERR4, _DYN_BASE_TYPE, _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONVERT_UNDEFINED, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_CUSTOM_HEADERS, _DYN_DATA, _DYN_DIAG_LOG, _DYN_DISABLE_SEND_BEACON_7, _DYN_DISABLE_XHR, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENABLE_SEND_PROMISE, _DYN_ENABLE_SESSION_STORA5, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_EVENTS_SEND_REQUEST, _DYN_GET_SENDER_INST, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_BEACON_API_DISABL3, _DYN_ITEM, _DYN_ITEMS_ACCEPTED, _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_MAX_BATCH_INTERVAL, _DYN_MAX_BATCH_SIZE_IN_BY1, _DYN_ONUNLOAD_DISABLE_BEA2, _DYN_ONUNLOAD_DISABLE_FET6, _DYN_ORI_PAYLOAD, _DYN_PUSH, _DYN_SAMPLE_RATE, _DYN_SERIALIZE, _DYN_TAGS, _DYN_TRIGGER_SEND, _DYN_UNLOAD_TRANSPORTS, _DYN__BUFFER, _DYN__ON_ERROR, _DYN__ON_PARTIAL_SUCCESS, _DYN__ON_SUCCESS, _DYN__SENDER } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar EMPTY_STR = \"\";\r\nvar FetchSyncRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nfunction _getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\nvar defaultAppInsightsChannelConfig = objDeepFreeze((_a = {\r\n        // Use the default value (handles empty string in the configuration)\r\n        endpointUrl: cfgDfValidate(isTruthy, DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH)\r\n    },\r\n    _a[_DYN_EMIT_LINE_DELIMITED_0 /* @min:emitLineDelimitedJson */] = cfgDfBoolean(),\r\n    _a[_DYN_MAX_BATCH_INTERVAL /* @min:maxBatchInterval */] = 15000,\r\n    _a[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:maxBatchSizeInBytes */] = 102400,\r\n    _a.disableTelemetry = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_SESSION_STORA5 /* @min:enableSessionStorageBuffer */] = cfgDfBoolean(true),\r\n    _a.isRetryDisabled = cfgDfBoolean(),\r\n    _a[_DYN_IS_BEACON_API_DISABL3 /* @min:isBeaconApiDisabled */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_SEND_BEACON_7 /* @min:disableSendBeaconSplit */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:onunloadDisableFetch */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:onunloadDisableBeacon */] = cfgDfBoolean(),\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.namePrefix = UNDEFINED_VALUE,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_CUSTOM_HEADERS /* @min:customHeaders */] = UNDEFINED_VALUE,\r\n    _a[_DYN_CONVERT_UNDEFINED /* @min:convertUndefined */] = UNDEFINED_VALUE,\r\n    _a[_DYN_EVENTS_LIMIT_IN_MEM /* @min:eventsLimitInMem */] = 10000,\r\n    _a[_DYN_BUFFER_OVERRIDE /* @min:bufferOverride */] = false,\r\n    _a.httpXHROverride = { isVal: isOverrideFn, v: UNDEFINED_VALUE },\r\n    _a[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:alwaysUseXhrOverride */] = cfgDfBoolean(),\r\n    _a.transports = UNDEFINED_VALUE,\r\n    _a.retryCodes = UNDEFINED_VALUE,\r\n    _a.maxRetryCnt = { isVal: isNumber, v: 10 },\r\n    _a));\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nvar EnvelopeTypeCreator = (_b = {},\r\n    _b[Event.dataType] = EventEnvelopeCreator,\r\n    _b[Trace.dataType] = TraceEnvelopeCreator,\r\n    _b[PageView.dataType] = PageViewEnvelopeCreator,\r\n    _b[PageViewPerformance.dataType] = PageViewPerformanceEnvelopeCreator,\r\n    _b[Exception.dataType] = ExceptionEnvelopeCreator,\r\n    _b[Metric.dataType] = MetricEnvelopeCreator,\r\n    _b[RemoteDependencyData.dataType] = DependencyEnvelopeCreator,\r\n    _b);\r\nvar Sender = /** @class */ (function (_super) {\r\n    __extends(Sender, _super);\r\n    function Sender() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 1001;\r\n        _this.identifier = BreezeChannelIdentifier;\r\n        // Don't set the defaults here, set them in the _initDefaults() as this is also called during unload\r\n        var _consecutiveErrors; // How many times in a row a retryable error condition has occurred.\r\n        var _retryAt; // The time to retry at in milliseconds from 1970/01/01 (this makes the timer calculation easy).\r\n        var _lastSend; // The time of the last send operation.\r\n        var _paused; // Flag indicating that the sending should be paused\r\n        var _timeoutHandle; // Handle to the timer for delayed sending of batches of data.\r\n        var _serializer;\r\n        var _stamp_specific_redirects;\r\n        var _headers;\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _syncUnloadSender; // The identified sender to use for the synchronous unload stage\r\n        var _offlineListener;\r\n        var _evtNamespace;\r\n        var _endpointUrl;\r\n        var _orgEndpointUrl;\r\n        var _maxBatchSizeInBytes;\r\n        var _beaconSupported;\r\n        var _beaconOnUnloadSupported;\r\n        var _beaconNormalSupported;\r\n        var _customHeaders;\r\n        var _disableTelemetry;\r\n        var _instrumentationKey;\r\n        var _convertUndefined;\r\n        var _isRetryDisabled;\r\n        var _maxBatchInterval;\r\n        var _sessionStorageUsed;\r\n        var _bufferOverrideUsed;\r\n        var _namePrefix;\r\n        var _enableSendPromise;\r\n        var _alwaysUseCustomSend;\r\n        var _disableXhr;\r\n        var _fetchKeepAlive;\r\n        var _xhrSend;\r\n        var _fallbackSend;\r\n        var _disableBeaconSplit;\r\n        var _sendPostMgr;\r\n        var _retryCodes;\r\n        dynamicProto(Sender, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n            };\r\n            _self.resume = function () {\r\n                if (_paused) {\r\n                    _paused = false;\r\n                    _retryAt = null;\r\n                    // flush if we have exceeded the max-size already\r\n                    _checkMaxSize();\r\n                    _setupTimer();\r\n                }\r\n            };\r\n            _self.flush = function (isAsync, callBack, sendReason) {\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_paused) {\r\n                    // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                    _clearScheduledTimer();\r\n                    try {\r\n                        return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](isAsync, null, sendReason || 1 /* SendRequestReason.ManualFlush */);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 22 /* _eInternalMessageId.FlushFailed */, \"flush failed, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            };\r\n            _self.onunloadFlush = function () {\r\n                if (!_paused) {\r\n                    if (_beaconSupported || _alwaysUseCustomSend) {\r\n                        try {\r\n                            return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, _doUnloadSend, 2 /* SendRequestReason.Unload */);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                    else {\r\n                        _self.flush(false);\r\n                    }\r\n                }\r\n            };\r\n            _self.addHeader = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _base[_DYN_INITIALIZE /* @min:%2einitialize */](config, core, extensions, pluginChain);\r\n                var identifier = _self.identifier;\r\n                _serializer = new Serializer(core.logger);\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = 0;\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _stamp_specific_redirects = 0;\r\n                var diagLog = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"Sender\"), core.evtNamespace && core.evtNamespace());\r\n                _offlineListener = createOfflineListener(_evtNamespace);\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    var senderConfig = ctx.getExtCfg(identifier, defaultAppInsightsChannelConfig);\r\n                    objDefine(_self, \"_senderConfig\", {\r\n                        g: function () {\r\n                            return senderConfig;\r\n                        }\r\n                    });\r\n                    // or is not string\r\n                    if (core.activeStatus() === ActiveStatus.PENDING) {\r\n                        // waiting for core promises to be resolved\r\n                        // NOTE: if active status is set to pending, stop sending, clear timer here\r\n                        _self.pause();\r\n                    }\r\n                    else if (core.activeStatus() === ActiveStatus.ACTIVE) {\r\n                        // core status changed from pending to other status\r\n                        _self.resume();\r\n                    }\r\n                    // Only update the endpoint if the original config !== the current config\r\n                    // This is so any redirect endpointUrl is not overwritten\r\n                    if (_orgEndpointUrl !== senderConfig.endpointUrl) {\r\n                        if (_orgEndpointUrl) {\r\n                            // TODO: add doc to remind users to flush before changing endpoint, otherwise all unsent payload will be sent to new endpoint\r\n                        }\r\n                        _endpointUrl = _orgEndpointUrl = senderConfig.endpointUrl;\r\n                    }\r\n                    if (_customHeaders && _customHeaders !== senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */]) {\r\n                        // Removing any previously defined custom headers as they have changed\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            delete _headers[customHeader.header];\r\n                        });\r\n                    }\r\n                    _maxBatchSizeInBytes = senderConfig[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:%2emaxBatchSizeInBytes */];\r\n                    _beaconSupported = (senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false || senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false) && isBeaconsSupported();\r\n                    _beaconOnUnloadSupported = senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false && isBeaconsSupported();\r\n                    _beaconNormalSupported = senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false && isBeaconsSupported();\r\n                    _alwaysUseCustomSend = senderConfig[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:%2ealwaysUseXhrOverride */];\r\n                    _disableXhr = !!senderConfig[_DYN_DISABLE_XHR /* @min:%2edisableXhr */];\r\n                    _retryCodes = senderConfig.retryCodes;\r\n                    var bufferOverride = senderConfig[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */];\r\n                    var canUseSessionStorage = !!senderConfig[_DYN_ENABLE_SESSION_STORA5 /* @min:%2eenableSessionStorageBuffer */] &&\r\n                        (!!bufferOverride || utlCanUseSessionStorage());\r\n                    var namePrefix = senderConfig.namePrefix;\r\n                    //Note: emitLineDelimitedJson and eventsLimitInMem is directly accessed via config in senderBuffer\r\n                    //Therefore, if canUseSessionStorage is not changed, we do not need to re initialize a new one\r\n                    var shouldUpdate = (canUseSessionStorage !== _sessionStorageUsed)\r\n                        || (canUseSessionStorage && (_namePrefix !== namePrefix)) // prefixName is only used in session storage\r\n                        || (canUseSessionStorage && (_bufferOverrideUsed !== bufferOverride));\r\n                    if (_self[_DYN__BUFFER /* @min:%2e_buffer */]) {\r\n                        // case1 (Pre and Now enableSessionStorageBuffer settings are same)\r\n                        // if namePrefix changes, transfer current buffer to new buffer\r\n                        // else no action needed\r\n                        //case2 (Pre and Now enableSessionStorageBuffer settings are changed)\r\n                        // transfer current buffer to new buffer\r\n                        if (shouldUpdate) {\r\n                            try {\r\n                                _self._buffer = _self._buffer[_DYN_CREATE_NEW /* @min:%2ecreateNew */](diagLog, senderConfig, canUseSessionStorage);\r\n                            }\r\n                            catch (e) {\r\n                                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"failed to transfer telemetry to different buffer storage, telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                            }\r\n                        }\r\n                        _checkMaxSize();\r\n                    }\r\n                    else {\r\n                        _self[_DYN__BUFFER /* @min:%2e_buffer */] = canUseSessionStorage\r\n                            ? new SessionStorageSendBuffer(diagLog, senderConfig) : new ArraySendBuffer(diagLog, senderConfig);\r\n                    }\r\n                    _namePrefix = namePrefix;\r\n                    _sessionStorageUsed = canUseSessionStorage;\r\n                    _bufferOverrideUsed = bufferOverride;\r\n                    _fetchKeepAlive = !senderConfig[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:%2eonunloadDisableFetch */] && isFetchSupported(true);\r\n                    _disableBeaconSplit = !!senderConfig[_DYN_DISABLE_SEND_BEACON_7 /* @min:%2edisableSendBeaconSplit */];\r\n                    _self._sample = new Sample(senderConfig.samplingPercentage, diagLog);\r\n                    _instrumentationKey = senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    if (!_validateInstrumentationKey(_instrumentationKey, config)) {\r\n                        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, \"Invalid Instrumentation key \" + _instrumentationKey);\r\n                    }\r\n                    _customHeaders = senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */];\r\n                    if (isString(_endpointUrl) && !isInternalApplicationInsightsEndpoint(_endpointUrl) && _customHeaders && _customHeaders[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            _this.addHeader(customHeader.header, customHeader.value);\r\n                        });\r\n                    }\r\n                    else {\r\n                        _customHeaders = null;\r\n                    }\r\n                    _enableSendPromise = senderConfig[_DYN_ENABLE_SEND_PROMISE /* @min:%2eenableSendPromise */];\r\n                    var sendPostConfig = _getSendPostMgrConfig();\r\n                    // only init it once\r\n                    if (!_sendPostMgr) {\r\n                        _sendPostMgr = new SenderPostManager();\r\n                        _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, diagLog);\r\n                    }\r\n                    else {\r\n                        _sendPostMgr.SetConfig(sendPostConfig);\r\n                    }\r\n                    var customInterface = senderConfig.httpXHROverride;\r\n                    var httpInterface = null;\r\n                    var syncInterface = null;\r\n                    // User requested transport(s) values > Beacon > Fetch > XHR\r\n                    // Beacon would be filtered out if user has set disableBeaconApi to true at _getSenderInterface\r\n                    var theTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */], senderConfig.transports);\r\n                    httpInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](theTransports, false);\r\n                    var xhrInterface = _sendPostMgr && _sendPostMgr.getFallbackInst();\r\n                    _xhrSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync);\r\n                    };\r\n                    _fallbackSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync, false);\r\n                    };\r\n                    httpInterface = _alwaysUseCustomSend ? customInterface : (httpInterface || customInterface || xhrInterface);\r\n                    _self[_DYN__SENDER /* @min:%2e_sender */] = function (payload, isAsync) {\r\n                        return _doSend(httpInterface, payload, isAsync);\r\n                    };\r\n                    if (_fetchKeepAlive) {\r\n                        // Try and use the fetch with keepalive\r\n                        _syncUnloadSender = _fetchKeepAliveSender;\r\n                    }\r\n                    var syncTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */], senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                    if (!_fetchKeepAlive) {\r\n                        // remove fetch from theTransports\r\n                        syncTransports = syncTransports.filter(function (transport) { return transport !== 2 /* TransportType.Fetch */; });\r\n                    }\r\n                    syncInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](syncTransports, true);\r\n                    syncInterface = _alwaysUseCustomSend ? customInterface : (syncInterface || customInterface);\r\n                    if ((_alwaysUseCustomSend || senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */] || !_syncUnloadSender) && syncInterface) {\r\n                        _syncUnloadSender = function (payload, isAsync) {\r\n                            return _doSend(syncInterface, payload, isAsync);\r\n                        };\r\n                    }\r\n                    if (!_syncUnloadSender) {\r\n                        _syncUnloadSender = _xhrSend;\r\n                    }\r\n                    _disableTelemetry = senderConfig.disableTelemetry;\r\n                    _convertUndefined = senderConfig[_DYN_CONVERT_UNDEFINED /* @min:%2econvertUndefined */] || UNDEFINED_VALUE;\r\n                    _isRetryDisabled = senderConfig.isRetryDisabled;\r\n                    _maxBatchInterval = senderConfig[_DYN_MAX_BATCH_INTERVAL /* @min:%2emaxBatchInterval */];\r\n                }));\r\n            };\r\n            _self.processTelemetry = function (telemetryItem, itemCtx) {\r\n                var _a;\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                var diagLogger = itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var isValidate = _validate(telemetryItem, diagLogger);\r\n                    if (!isValidate) {\r\n                        return;\r\n                    }\r\n                    var aiEnvelope = _getEnvelope(telemetryItem, diagLogger);\r\n                    if (!aiEnvelope) {\r\n                        return;\r\n                    }\r\n                    // check if the incoming payload is too large, truncate if necessary\r\n                    var payload = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](aiEnvelope);\r\n                    // flush if we would exceed the max-size limit by adding this item\r\n                    var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                    _checkMaxSize(payload);\r\n                    var payloadItem = (_a = {},\r\n                        _a[_DYN_ITEM /* @min:item */] = payload,\r\n                        _a.cnt = 0 // inital cnt will always be 0\r\n                    ,\r\n                        _a);\r\n                    // enqueue the payload\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payloadItem);\r\n                    // ensure an invocation timeout is set\r\n                    _setupTimer();\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                // hand off the telemetry item to the next plugin\r\n                _self.processNext(telemetryItem, itemCtx);\r\n            };\r\n            _self.isCompletelyIdle = function () {\r\n                return !_paused && _syncFetchPayload === 0 && _self._buffer[_DYN_COUNT /* @min:%2ecount */]() === 0;\r\n            };\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            _self._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n                // since version 3.2.0, this function is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xhrReadyStateChange(xhr, payload, countOfItemsInPayload);\r\n            };\r\n            /**\r\n             * Immediately send buffered data\r\n             * @param async - {boolean} - Indicates if the events should be sent asynchronously\r\n             * @param forcedSender - {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n             */\r\n            _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */] = function (async, forcedSender, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    try {\r\n                        var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                        // Send data only if disableTelemetry is false\r\n                        if (!_disableTelemetry) {\r\n                            if (buffer[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var payload = buffer.getItems();\r\n                                _notifySendRequest(sendReason || 0 /* SendRequestReason.Undefined */, async);\r\n                                // invoke send\r\n                                if (forcedSender) {\r\n                                    result = forcedSender.call(_self, payload, async);\r\n                                }\r\n                                else {\r\n                                    result = _self[_DYN__SENDER /* @min:%2e_sender */](payload, async);\r\n                                }\r\n                            }\r\n                            // update lastSend time to enable throttling\r\n                            _lastSend = +new Date;\r\n                        }\r\n                        else {\r\n                            buffer[_DYN_CLEAR /* @min:%2eclear */]();\r\n                        }\r\n                        _clearScheduledTimer();\r\n                    }\r\n                    catch (e) {\r\n                        /* Ignore this error for IE under v10 */\r\n                        var ieVer = getIEVersion();\r\n                        if (!ieVer || ieVer > 9) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Telemetry transmission failed, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                var _a;\r\n                return _a = {\r\n                        getUrl: function () {\r\n                            return _endpointUrl;\r\n                        },\r\n                        createPayload: _createPayload\r\n                    },\r\n                    _a[_DYN_SERIALIZE /* @min:serialize */] = _serialize,\r\n                    _a.batch = _batch,\r\n                    _a.shouldProcess = function (evt) {\r\n                        return !!_validate(evt);\r\n                    },\r\n                    _a;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _self.onunloadFlush();\r\n                runTargetUnload(_offlineListener, false);\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * error handler\r\n             */\r\n            _self[_DYN__ON_ERROR /* @min:%2e_onError */] = function (payload, message, event) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onError(payload, message, event);\r\n            };\r\n            /**\r\n             * partial success handler\r\n             */\r\n            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */] = function (payload, results) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onPartialSuccess(payload, results);\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */] = function (payload, countOfItemsInPayload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onSuccess(payload, countOfItemsInPayload);\r\n                //_self._buffer && _self._buffer.clearSent(payload);\r\n            };\r\n            /**\r\n             * xdr state changes\r\n             */\r\n            _self._xdrOnLoad = function (xdr, payload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xdrOnLoad(xdr, payload);\r\n            };\r\n            function _xdrOnLoad(xdr, payload) {\r\n                var responseText = _getResponseText(xdr);\r\n                if (xdr && (responseText + \"\" === \"200\" || responseText === \"\")) {\r\n                    _consecutiveErrors = 0;\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, 0);\r\n                }\r\n                else {\r\n                    var results = parseResponse(responseText);\r\n                    if (results && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] > results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]\r\n                        && !_isRetryDisabled) {\r\n                        _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, results);\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, formatErrorMessageXdr(xdr));\r\n                    }\r\n                }\r\n            }\r\n            function _getSendPostMgrConfig() {\r\n                var _a;\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: function (xdr, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xdrOnLoad(xdr, data);\r\n                        },\r\n                        fetchOnComplete: function (response, onComplete, resValue, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _checkResponsStatus(response.status, data, response.url, data[_DYN_LENGTH /* @min:%2elength */], response.statusText, resValue || \"\");\r\n                        },\r\n                        xhrOnComplete: function (request, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xhrReadyStateChange(request, data, data[_DYN_LENGTH /* @min:%2elength */]);\r\n                        },\r\n                        beaconOnRetry: function (data, onComplete, canSend) {\r\n                            return _onBeaconRetry(data, onComplete, canSend);\r\n                        }\r\n                    };\r\n                    var config = (_a = {},\r\n                        _a[_DYN_ENABLE_SEND_PROMISE /* @min:enableSendPromise */] = _enableSendPromise,\r\n                        _a.isOneDs = false,\r\n                        _a.disableCredentials = false,\r\n                        _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = _disableXhr,\r\n                        _a.disableBeacon = !_beaconNormalSupported,\r\n                        _a.disableBeaconSync = !_beaconOnUnloadSupported,\r\n                        _a.senderOnCompleteCallBack = onCompleteFuncs,\r\n                        _a);\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            function _xhrReadyStateChange(xhr, payload, countOfItemsInPayload) {\r\n                if (xhr.readyState === 4) {\r\n                    _checkResponsStatus(xhr.status, payload, xhr.responseURL, countOfItemsInPayload, formatErrorMessageXhr(xhr), _getResponseText(xhr) || xhr.response);\r\n                }\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(payload, message, event) {\r\n                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            /**\r\n             * partial success handler\r\n             */\r\n            function _onPartialSuccess(payload, results) {\r\n                var failed = [];\r\n                var retry = [];\r\n                // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n                var errors = results.errors.reverse();\r\n                for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                    var error = errors_1[_i];\r\n                    var extracted = payload.splice(error.index, 1)[0];\r\n                    if (_isRetriable(error.statusCode)) {\r\n                        retry[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                    else {\r\n                        // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                        failed[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                }\r\n                if (payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]);\r\n                }\r\n                if (failed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_ERROR /* @min:%2e_onError */](failed, formatErrorMessageXhr(null, [\"partial success\", results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */], \"of\", results.itemsReceived].join(\" \")));\r\n                }\r\n                if (retry[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _resendPayload(retry);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Partial success. \" +\r\n                        \"Delivered: \" + payload[_DYN_LENGTH /* @min:%2elength */] + \", Failed: \" + failed[_DYN_LENGTH /* @min:%2elength */] +\r\n                        \". Will retry to send \" + retry[_DYN_LENGTH /* @min:%2elength */] + \" our of \" + results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] + \" items\");\r\n                }\r\n            }\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(payload, countOfItemsInPayload) {\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            function _getPayloadArr(payload) {\r\n                try {\r\n                    if (payload) {\r\n                        var internalPayload = payload;\r\n                        var arr = internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                        if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                            return arr;\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _validate(telemetryItem, diagLogger) {\r\n                if (_disableTelemetry) {\r\n                    // Do not send/save data\r\n                    return false;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 7 /* _eInternalMessageId.CannotSendEmptyTelemetry */, \"Cannot send empty telemetry\");\r\n                    return false;\r\n                }\r\n                // validate event\r\n                if (telemetryItem.baseData && !telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 70 /* _eInternalMessageId.InvalidEvent */, \"Cannot send telemetry without baseData and baseType\");\r\n                    return false;\r\n                }\r\n                if (!telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    // Default\r\n                    telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */] = \"EventData\";\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!_self[_DYN__SENDER /* @min:%2e_sender */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender was not initialized\");\r\n                    return false;\r\n                }\r\n                // check if this item should be sampled in, else add sampleRate tag\r\n                if (!_isSampledIn(telemetryItem)) {\r\n                    // Item is sampled out, do not send it\r\n                    diagLogger && _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 33 /* _eInternalMessageId.TelemetrySampledAndNotSent */, \"Telemetry item was sampled out and not sent\", { SampleRate: _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] });\r\n                    return false;\r\n                }\r\n                else {\r\n                    telemetryItem[SampleRate] = _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */];\r\n                }\r\n                return true;\r\n            }\r\n            function _getEnvelope(telemetryItem, diagLogger) {\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                // if ikey of telemetry is provided and not empty, envelope will use this iKey instead of senderConfig iKey\r\n                var defaultEnvelopeIkey = telemetryItem.iKey || _instrumentationKey;\r\n                var aiEnvelope = Sender.constructEnvelope(telemetryItem, defaultEnvelopeIkey, diagLogger, _convertUndefined);\r\n                if (!aiEnvelope) {\r\n                    _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 47 /* _eInternalMessageId.CreateEnvelopeError */, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                var doNotSendItem = false;\r\n                // this is for running in legacy mode, where customer may already have a custom initializer present\r\n                if (telemetryItem[_DYN_TAGS /* @min:%2etags */] && telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy]) {\r\n                    arrForEach(telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy], function (callBack) {\r\n                        try {\r\n                            if (callBack && callBack(aiEnvelope) === false) {\r\n                                doNotSendItem = true;\r\n                                _warnToConsole(diagLogger, \"Telemetry processor check returns false\");\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // log error but dont stop executing rest of the telemetry initializers\r\n                            // doNotSendItem = true;\r\n                            _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n                        }\r\n                    });\r\n                    delete telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy];\r\n                }\r\n                if (doNotSendItem) {\r\n                    return; // do not send, no need to execute next plugin\r\n                }\r\n                return aiEnvelope;\r\n            }\r\n            function _serialize(item) {\r\n                var rlt = EMPTY_STR;\r\n                var diagLogger = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var valid = _validate(item, diagLogger);\r\n                    var envelope = null;\r\n                    if (valid) {\r\n                        envelope = _getEnvelope(item, diagLogger);\r\n                    }\r\n                    if (envelope) {\r\n                        rlt = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](envelope);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    rlt = \"[\" + arr.join(\",\") + \"]\";\r\n                }\r\n                return rlt;\r\n            }\r\n            function _createPayload(data) {\r\n                var _a;\r\n                var headers = _getHeaders();\r\n                return _a = {\r\n                        urlString: _endpointUrl\r\n                    },\r\n                    _a[_DYN_DATA /* @min:data */] = data,\r\n                    _a.headers = headers,\r\n                    _a;\r\n            }\r\n            function _isSampledIn(envelope) {\r\n                return _self._sample.isSampledIn(envelope);\r\n            }\r\n            function _getOnComplete(payload, status, headers, response) {\r\n                // ***********************************************************************************************\r\n                //TODO: handle other status codes\r\n                if (status === 200 && payload) {\r\n                    _self._onSuccess(payload, payload[_DYN_LENGTH /* @min:%2elength */]);\r\n                }\r\n                else {\r\n                    response && _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, response);\r\n                }\r\n            }\r\n            function _doSend(sendInterface, payload, isAsync, markAsSent) {\r\n                if (markAsSent === void 0) { markAsSent = true; }\r\n                var onComplete = function (status, headers, response) {\r\n                    return _getOnComplete(payload, status, headers, response);\r\n                };\r\n                var payloadData = _getPayload(payload);\r\n                var sendPostFunc = sendInterface && sendInterface.sendPOST;\r\n                if (sendPostFunc && payloadData) {\r\n                    // ***********************************************************************************************\r\n                    // mark payload as sent at the beginning of calling each send function\r\n                    if (markAsSent) {\r\n                        _self._buffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](payload);\r\n                    }\r\n                    return sendPostFunc(payloadData, onComplete, !isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            function _getPayload(payload) {\r\n                var _a;\r\n                if (isArray(payload) && payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var batch = _self[_DYN__BUFFER /* @min:%2e_buffer */].batchPayloads(payload);\r\n                    var headers = _getHeaders();\r\n                    var payloadData = (_a = {},\r\n                        _a[_DYN_DATA /* @min:data */] = batch,\r\n                        _a.urlString = _endpointUrl,\r\n                        _a.headers = headers,\r\n                        _a.disableXhrSync = _disableXhr,\r\n                        _a.disableFetchKeepAlive = !_fetchKeepAlive,\r\n                        _a[_DYN_ORI_PAYLOAD /* @min:oriPayload */] = payload,\r\n                        _a);\r\n                    return payloadData;\r\n                }\r\n                return null;\r\n            }\r\n            function _getHeaders() {\r\n                try {\r\n                    var headers = _headers || {};\r\n                    if (isInternalApplicationInsightsEndpoint(_endpointUrl)) {\r\n                        headers[RequestHeaders[6 /* eRequestHeaders.sdkContextHeader */]] = RequestHeaders[7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */];\r\n                    }\r\n                    return headers;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _checkMaxSize(incomingPayload) {\r\n                var incomingSize = incomingPayload ? incomingPayload[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n                if ((_self[_DYN__BUFFER /* @min:%2e_buffer */].size() + incomingSize) > _maxBatchSizeInBytes) {\r\n                    if (!_offlineListener || _offlineListener.isOnline()) { // only trigger send when currently online\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 10 /* SendRequestReason.MaxBatchSize */);\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _checkResponsStatus(status, payload, responseUrl, countOfItemsInPayload, errorMessage, res) {\r\n                var response = null;\r\n                if (!_self._appId) {\r\n                    response = parseResponse(res);\r\n                    if (response && response.appId) {\r\n                        _self._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((status < 200 || status >= 300) && status !== 0) {\r\n                    // Update End Point url if permanent redirect or moved permanently\r\n                    // Updates the end point url before retry\r\n                    if (status === 301 || status === 307 || status === 308) {\r\n                        if (!_checkAndUpdateEndPointUrl(responseUrl)) {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (_offlineListener && !_offlineListener.isOnline()) { // offline\r\n                        // Note: Don't check for status == 0, since adblock gives this code\r\n                        if (!_isRetryDisabled) {\r\n                            var offlineBackOffMultiplier = 10; // arbritrary number\r\n                            _resendPayload(payload, offlineBackOffMultiplier);\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". Offline - Response Code: \".concat(status, \". Offline status: \").concat(!_offlineListener.isOnline(), \". Will retry to send \").concat(payload.length, \" items.\"));\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (!_isRetryDisabled && _isRetriable(status)) {\r\n                        _resendPayload(payload);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" +\r\n                            \"Response code \" + status + \". Will retry to send \" + payload[_DYN_LENGTH /* @min:%2elength */] + \" items.\");\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                    }\r\n                }\r\n                else {\r\n                    // check if the xhr's responseURL or fetch's response.url is same as endpoint url\r\n                    // TODO after 10 redirects force send telemetry with 'redirect=false' as query parameter.\r\n                    _checkAndUpdateEndPointUrl(responseUrl);\r\n                    if (status === 206) {\r\n                        if (!response) {\r\n                            response = parseResponse(res);\r\n                        }\r\n                        if (response && !_isRetryDisabled) {\r\n                            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, response);\r\n                        }\r\n                        else {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _consecutiveErrors = 0;\r\n                        _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n            function _checkAndUpdateEndPointUrl(responseUrl) {\r\n                // Maximum stamp specific redirects allowed(uncomment this when breeze is ready with not allowing redirects feature)\r\n                if (_stamp_specific_redirects >= 10) {\r\n                    //  _self._senderConfig.endpointUrl = () => Sender._getDefaultAppInsightsChannelConfig().endpointUrl()+\"/?redirect=false\";\r\n                    //  _stamp_specific_redirects = 0;\r\n                    return false;\r\n                }\r\n                if (!isNullOrUndefined(responseUrl) && responseUrl !== \"\") {\r\n                    if (responseUrl !== _endpointUrl) {\r\n                        _endpointUrl = responseUrl;\r\n                        ++_stamp_specific_redirects;\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _doUnloadSend(payload, isAsync) {\r\n                if (_syncUnloadSender) {\r\n                    // We are unloading so always call the sender with sync set to false\r\n                    _syncUnloadSender(payload, false);\r\n                }\r\n                else {\r\n                    // Fallback to the previous beacon Sender (which causes a CORB warning on chrome now)\r\n                    var beaconInst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([3 /* TransportType.Beacon */], true);\r\n                    return _doSend(beaconInst, payload, isAsync);\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                var internalPayload = payload;\r\n                var data = internalPayload && internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                if (!_disableBeaconSplit) {\r\n                    // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                    var droppedPayload = [];\r\n                    for (var lp = 0; lp < data[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        var thePayload = data[lp];\r\n                        var arr = [thePayload];\r\n                        var item = _getPayload(arr);\r\n                        if (!canSend(item, onComplete)) {\r\n                            // Can't send anymore, so split the batch and drop the rest\r\n                            droppedPayload[_DYN_PUSH /* @min:%2epush */](thePayload);\r\n                        }\r\n                        else {\r\n                            _self._onSuccess(arr, arr[_DYN_LENGTH /* @min:%2elength */]);\r\n                        }\r\n                    }\r\n                    if (droppedPayload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _fallbackSend && _fallbackSend(droppedPayload, true);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                    }\r\n                }\r\n                else {\r\n                    _fallbackSend && _fallbackSend(data, true);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                }\r\n            }\r\n            function _isStringArr(arr) {\r\n                try {\r\n                    if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        return (isString(arr[0]));\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    //TODO: log, sender use IInternalStorageItem instead of string since 3.1.3\r\n                }\r\n                return null;\r\n            }\r\n            function _fetchKeepAliveSender(payload, isAsync) {\r\n                var transport = null;\r\n                if (isArray(payload)) {\r\n                    var payloadSize = payload[_DYN_LENGTH /* @min:%2elength */];\r\n                    for (var lp = 0; lp < payload[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        payloadSize += payload[lp].item[_DYN_LENGTH /* @min:%2elength */];\r\n                    }\r\n                    var syncFetchPayload = _sendPostMgr.getSyncFetchPayload();\r\n                    if ((syncFetchPayload + payloadSize) <= FetchSyncRequestSizeLimitBytes) {\r\n                        transport = 2 /* TransportType.Fetch */;\r\n                    }\r\n                    else if (isBeaconsSupported()) {\r\n                        // Fallback to beacon sender as we at least get told which events can't be scheduled\r\n                        transport = 3 /* TransportType.Beacon */;\r\n                    }\r\n                    else {\r\n                        // Payload is going to be too big so just try and send via XHR\r\n                        transport = 1 /* TransportType.Xhr */;\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n                    }\r\n                    var inst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([transport], true);\r\n                    return _doSend(inst, payload, isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n             * @param payload\r\n             */\r\n            function _resendPayload(payload, linearFactor) {\r\n                if (linearFactor === void 0) { linearFactor = 1; }\r\n                if (!payload || payload[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    return;\r\n                }\r\n                var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n                _consecutiveErrors++;\r\n                for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                    var item = payload_1[_i];\r\n                    item.cnt = item.cnt || 0; // to make sure we have cnt for each payload\r\n                    item.cnt++; // when resend, increase cnt\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](item);\r\n                }\r\n                // setup timer\r\n                _setRetryTime(linearFactor);\r\n                _setupTimer();\r\n            }\r\n            /**\r\n             * Calculates the time to wait before retrying in case of an error based on\r\n             * http://en.wikipedia.org/wiki/Exponential_backoff\r\n             */\r\n            function _setRetryTime(linearFactor) {\r\n                var SlotDelayInSeconds = 10;\r\n                var delayInSeconds;\r\n                if (_consecutiveErrors <= 1) {\r\n                    delayInSeconds = SlotDelayInSeconds;\r\n                }\r\n                else {\r\n                    var backOffSlot = (Math.pow(2, _consecutiveErrors) - 1) / 2;\r\n                    // tslint:disable-next-line:insecure-random\r\n                    var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                    backOffDelay = linearFactor * backOffDelay;\r\n                    delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n                }\r\n                // TODO: Log the backoff time like the C# version does.\r\n                var retryAfterTimeSpan = dateNow() + (delayInSeconds * 1000);\r\n                // TODO: Log the retry at time like the C# version does.\r\n                _retryAt = retryAfterTimeSpan;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers actually sending the data.\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && !_paused) {\r\n                    var retryInterval = _retryAt ? Math.max(0, _retryAt - dateNow()) : 0;\r\n                    var timerValue = Math.max(_maxBatchInterval, retryInterval);\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 1 /* SendRequestReason.NormalSchedule */);\r\n                    }, timerValue);\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryAt = null;\r\n            }\r\n            /**\r\n             * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n             * @param statusCode\r\n             */\r\n            function _isRetriable(statusCode) {\r\n                // retryCodes = [] means should not retry\r\n                if (!isNullOrUndefined(_retryCodes)) {\r\n                    return _retryCodes[_DYN_LENGTH /* @min:%2elength */] && _retryCodes.indexOf(statusCode) > -1;\r\n                }\r\n                return statusCode === 401 // Unauthorized\r\n                    // Removing as private links can return a 403 which causes excessive retries and session storage usage\r\n                    // || statusCode === 403 // Forbidden\r\n                    || statusCode === 408 // Timeout\r\n                    || statusCode === 429 // Too many requests.\r\n                    || statusCode === 500 // Internal server error.\r\n                    || statusCode === 502 // Bad Gateway.\r\n                    || statusCode === 503 // Service unavailable.\r\n                    || statusCode === 504; // Gateway timeout.\r\n            }\r\n            // Using function lookups for backward compatibility as the getNotifyMgr() did not exist until after v2.5.6\r\n            function _getNotifyMgr() {\r\n                var func = \"getNotifyMgr\";\r\n                if (_self.core[func]) {\r\n                    return _self.core[func]();\r\n                }\r\n                // using _self.core['_notificationManager'] for backward compatibility\r\n                return _self.core[\"_notificationManager\"];\r\n            }\r\n            function _notifySendRequest(sendRequest, isAsync) {\r\n                var manager = _getNotifyMgr();\r\n                if (manager && manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */]) {\r\n                    try {\r\n                        manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendRequest, isAsync);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            }\r\n            /**\r\n             * Validate UUID Format\r\n             * Specs taken from https://tools.ietf.org/html/rfc4122 and breeze repo\r\n             */\r\n            function _validateInstrumentationKey(instrumentationKey, config) {\r\n                var disableValidation = config.disableInstrumentationKeyValidation;\r\n                var disableIKeyValidationFlag = isNullOrUndefined(disableValidation) ? false : disableValidation;\r\n                if (disableIKeyValidationFlag) {\r\n                    return true;\r\n                }\r\n                var UUID_Regex = \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";\r\n                var regexp = new RegExp(UUID_Regex);\r\n                return regexp.test(instrumentationKey);\r\n            }\r\n            function _initDefaults() {\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _self[_DYN__BUFFER /* @min:%2e_buffer */] = null;\r\n                _self._appId = null;\r\n                _self._sample = null;\r\n                _headers = {};\r\n                _offlineListener = null;\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = null;\r\n                _paused = false;\r\n                _timeoutHandle = null;\r\n                _serializer = null;\r\n                _stamp_specific_redirects = 0;\r\n                _syncFetchPayload = 0;\r\n                _syncUnloadSender = null;\r\n                _evtNamespace = null;\r\n                _endpointUrl = null;\r\n                _orgEndpointUrl = null;\r\n                _maxBatchSizeInBytes = 0;\r\n                _beaconSupported = false;\r\n                _customHeaders = null;\r\n                _disableTelemetry = false;\r\n                _instrumentationKey = null;\r\n                _convertUndefined = UNDEFINED_VALUE;\r\n                _isRetryDisabled = false;\r\n                _sessionStorageUsed = null;\r\n                _namePrefix = UNDEFINED_VALUE;\r\n                _disableXhr = false;\r\n                _fetchKeepAlive = false;\r\n                _disableBeaconSplit = false;\r\n                _xhrSend = null;\r\n                _fallbackSend = null;\r\n                _sendPostMgr = null;\r\n                objDefine(_self, \"_senderConfig\", {\r\n                    g: function () {\r\n                        return objExtend({}, defaultAppInsightsChannelConfig);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger, convertUndefined) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !isNullOrUndefined(iKey)) {\r\n            envelope = __assign(__assign({}, orig), { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        var creator = EnvelopeTypeCreator[envelope.baseType] || EventEnvelopeCreator;\r\n        return creator(logger, envelope, convertUndefined);\r\n    };\r\n// Removed Stub for Sender.prototype.pause.\r\n// Removed Stub for Sender.prototype.resume.\r\n// Removed Stub for Sender.prototype.flush.\r\n// Removed Stub for Sender.prototype.onunloadFlush.\r\n// Removed Stub for Sender.prototype.initialize.\r\n// Removed Stub for Sender.prototype.processTelemetry.\r\n// Removed Stub for Sender.prototype._xhrReadyStateChange.\r\n// Removed Stub for Sender.prototype.triggerSend.\r\n// Removed Stub for Sender.prototype._onError.\r\n// Removed Stub for Sender.prototype._onPartialSuccess.\r\n// Removed Stub for Sender.prototype._onSuccess.\r\n// Removed Stub for Sender.prototype._xdrOnLoad.\r\n// Removed Stub for Sender.prototype.addHeader.\r\n// Removed Stub for Sender.prototype.isCompletelyIdle.\r\n// Removed Stub for Sender.prototype.getOfflineSupport.\r\n    return Sender;\r\n}(BaseTelemetryPlugin));\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, getJSON, isArray, isFunction, isObject, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SERIALIZE, _DYN_STRINGIFY, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            /**\r\n             * Serializes the current object to a JSON string.\r\n             */\r\n            _self[_DYN_SERIALIZE /* @min:%2eserialize */] = function (input) {\r\n                var output = _serializeObject(input, \"root\");\r\n                try {\r\n                    return getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](output);\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                }\r\n            };\r\n            function _serializeObject(source, name) {\r\n                var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n                var output = {};\r\n                if (!source) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (source[circularReferenceCheck]) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 50 /* _eInternalMessageId.CircularReferenceDetected */, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (!source.aiDataContract) {\r\n                    // special case for measurements/properties/tags\r\n                    if (name === \"measurements\") {\r\n                        output = _serializeStringMap(source, \"number\", name);\r\n                    }\r\n                    else if (name === \"properties\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (name === \"tags\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (isArray(source)) {\r\n                        output = _serializeArray(source, name);\r\n                    }\r\n                    else {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                        try {\r\n                            // verify that the object can be stringified\r\n                            getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](source);\r\n                            output = source;\r\n                        }\r\n                        catch (e) {\r\n                            // if serialization fails return an empty string\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                        }\r\n                    }\r\n                    return output;\r\n                }\r\n                source[circularReferenceCheck] = true;\r\n                objForEachKey(source.aiDataContract, function (field, contract) {\r\n                    var isRequired = (isFunction(contract)) ? (contract() & 1 /* FieldType.Required */) : (contract & 1 /* FieldType.Required */);\r\n                    var isHidden = (isFunction(contract)) ? (contract() & 4 /* FieldType.Hidden */) : (contract & 4 /* FieldType.Hidden */);\r\n                    var isArray = contract & 2 /* FieldType.Array */;\r\n                    var isPresent = source[field] !== undefined;\r\n                    var isObj = isObject(source[field]) && source[field] !== null;\r\n                    if (isRequired && !isPresent && !isArray) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 24 /* _eInternalMessageId.MissingRequiredFieldSpecification */, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                        // If not in debug mode, continue and hope the error is permissible\r\n                    }\r\n                    else if (!isHidden) { // Don't serialize hidden fields\r\n                        var value = void 0;\r\n                        if (isObj) {\r\n                            if (isArray) {\r\n                                // special case; recurse on each object in the source array\r\n                                value = _serializeArray(source[field], field);\r\n                            }\r\n                            else {\r\n                                // recurse on the source object in this field\r\n                                value = _serializeObject(source[field], field);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // assign the source field to the output even if undefined or required\r\n                            value = source[field];\r\n                        }\r\n                        // only emit this field if the value is defined\r\n                        if (value !== undefined) {\r\n                            output[field] = value;\r\n                        }\r\n                    }\r\n                });\r\n                delete source[circularReferenceCheck];\r\n                return output;\r\n            }\r\n            function _serializeArray(sources, name) {\r\n                var output;\r\n                if (!!sources) {\r\n                    if (!isArray(sources)) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 54 /* _eInternalMessageId.ItemNotInArray */, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                    }\r\n                    else {\r\n                        output = [];\r\n                        for (var i = 0; i < sources[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                            var source = sources[i];\r\n                            var item = _serializeObject(source, name + \"[\" + i + \"]\");\r\n                            output[_DYN_PUSH /* @min:%2epush */](item);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            function _serializeStringMap(map, expectedType, name) {\r\n                var output;\r\n                if (map) {\r\n                    output = {};\r\n                    objForEachKey(map, function (field, value) {\r\n                        if (expectedType === \"string\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else if (!value[_DYN_TO_STRING /* @min:%2etoString */]) {\r\n                                output[field] = \"invalid field: toString() is not defined.\";\r\n                            }\r\n                            else {\r\n                                output[field] = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            }\r\n                        }\r\n                        else if (expectedType === \"number\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else {\r\n                                var num = parseFloat(value);\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                        else {\r\n                            output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, output[field], null, true);\r\n                        }\r\n                    });\r\n                }\r\n                return output;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.serialize.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_CONCAT, _DYN_LENGTH } from \"../../__DynamicConstants\";\r\n// (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\nvar MIN_INPUT_LENGTH = 8;\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input[_DYN_LENGTH /* @min:%2elength */] < MIN_INPUT_LENGTH) {\r\n            input = input[_DYN_CONCAT /* @min:%2econcat */](input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ContextTagKeys } from \"@microsoft/applicationinsights-common\";\r\nimport { _DYN_GET_HASH_CODE_SCORE, _DYN_GET_SAMPLING_SCORE, _DYN_TAGS, _DYN_TRACE_ID } from \"../../__DynamicConstants\";\r\nimport { HashCodeScoreGenerator } from \"./HashCodeScoreGenerator\";\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        var _self = this;\r\n        var hashCodeGenerator = new HashCodeScoreGenerator();\r\n        var keys = new ContextTagKeys();\r\n        _self[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */] = function (item) {\r\n            var score = 0;\r\n            if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.userId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.userId]);\r\n            }\r\n            else if (item.ext && item.ext.user && item.ext.user.id) {\r\n                score = hashCodeGenerator[_DYN_GET_HASH_CODE_SCORE /* @min:%2egetHashCodeScore */](item.ext.user.id);\r\n            }\r\n            else if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.operationId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.operationId]);\r\n            }\r\n            else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n                score = hashCodeGenerator.getHashCodeScore(item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n            }\r\n            else {\r\n                // tslint:disable-next-line:insecure-random\r\n                score = (Math.random() * 100);\r\n            }\r\n            return score;\r\n        };\r\n    }\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { Metric } from \"@microsoft/applicationinsights-common\";\r\nimport { safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_DATA_TYPE, _DYN_GET_SAMPLING_SCORE, _DYN_SAMPLE_RATE } from \"../__DynamicConstants\";\r\nimport { SamplingScoreGenerator } from \"./SamplingScoreGenerators/SamplingScoreGenerator\";\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        var _logger = logger || safeGetLogger(null);\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            _logger.throwInternal(2 /* eLoggingSeverity.WARNING */, 58 /* _eInternalMessageId.SampleRateOutOfRange */, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            sampleRate = 100;\r\n        }\r\n        this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */]; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */](envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map"],"names":["strShimFunction","strShimObject","strShimUndefined","strShimPrototype","ObjClass","Object","ObjProto","_pureAssign","func1","func2","_pureRef","value","name","UNDEF_VALUE","undefined","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","StrCls","String","StrProto","MathCls","Math","ArrCls","Array","ArrProto","ArrSlice","safe","func","argArray","v","apply","this","e","safeGet","cb","defValue","result","_createIs","theType","_createObjIs","theName","objToString","call","isUndefined","isNullOrUndefined","isStrictNullOrUndefined","isDefined","arg","isString","isFunction","isObject","isArray","isNumber","isBoolean","isError","isPromiseLike","then","isTruthy","objGetOwnPropertyDescriptor","objHasOwnProperty","obj","prop","hasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","theObject","callbackfn","thisArg","propMap","c","w","g","s","_createProp","desc","l","get","set","newValue","key","objDefineProp","objDefine","target","propDesc","_createKeyValueMap","values","keyType","valueType","completeFn","writable","theMap","_assignMapValue","enumerable","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stack","message","JSON","stringify","replace","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objAssign","objKeys","objDeepFreeze","objFreeze","objGetPrototypeOf","createEnum","createEnumKeyMap","createSimpleMap","mapClass","createTypeMap","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","match","matchAll","search","species","split","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","globalThis","self","window","global","_getGlobalConfig","gbl","_unwrapFunction","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theArgs","theFunc","arguments","mathMax","strSlice","strSubstring","strSubstr","polyStrSubstr","start","length","_polySymbols","_wellKnownSymbolCache","_globalLazyTestHooks","UNIQUE_REGISTRY_ID","_globalSymbolRegistry","gblCfg","gblSym","k","polyNewSymbol","description","theSymbol","toString","polySymbolFor","newSymbol_1","regId_1","registry","polyGetKnownSymbol","knownName","_initTestHooks","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","lzy","getGlobal","useCached","getInst","getWindow","getDocument","hasWindow","hasNavigator","getNavigator","_symbol","_symbolFor","_iterSymbol$1","isNode","process","versions","node","_initSymbol","_getSymbolKey","hasSymbol","getSymbol","getKnownSymbol","noPoly","sym","newSymbol","symbolFor","isIterator","next","isIterable","iterForOf","iter","err","iterResult","count","done","failed","throw","return","fnApply","fn","arrAppend","elms","push","elm","arrForEach","theArray","len","idx","arrIndexOf","arrMap","arrSlice","end","_isProtoArray","objCreate","polyObjCreate","type","tempFunc","objSetPrototypeOf","proto","d","b","_a","_createCustomError","__","_setName","baseClass","createCustomError","constructCb","errorBase","theBaseClass","Error","orgName","captureFn","captureStackTrace","_this","orgProto","_self","utcNow","Date","now","polyUtcNow","getTime","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","polyStrTrim","strTrim","isPlainObject","Function","ex","strIndexOf","REF","UNREF","HAS_REF","ENABLED","_createTimerHandler","startTimer","refreshFn","cancelFn","theTimerHandler","ref","timerId","_unref","_cancel","_refresh","cancel","refresh","h","dn","_createTimeoutWith","overrideFn","isArr","setFn","setTimeout","clearFn","clearTimeout","timerFn","handler","scheduleTimeout","callback","timeout","strHasOwnProperty","__objAssignFnImpl","t","i","n","p","__assignFn","extendStaticsFn","__proto__","__extendsFn","constructor","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynClassNamePrefix","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","curProto","newProto","_forEachProp","props","name_1","lp","_isDynamicCandidate","skipOwn","_throwTypeError","_getInstanceFuncs","thisTarget","instFuncs","_hasVisited","_getBaseFuncs","classProto","useBaseInst","_instFuncProxy","funcHost","instFuncTable","baseFuncs","baseProto","visited","_getInstFunc","currentDynProtoProxy","instFunc","canAddInst","objProto","protoFunc","_getProtoFunc","_populatePrototype","className","baseInstFuncs","setInstanceFunc","instFuncs_1","dynProtoProxy","_checkPrototype","thisProto","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","options","perfOptions","aggregationErrorType","createEnumStyle","createValueMap","ActiveStatus","NONE","PENDING","INACTIVE","ACTIVE","_DYN_TO_LOWER_CASE","_DYN_BLK_VAL","_DYN_LENGTH","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_LOGGER","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_HDLR","_DYN_CANCEL","_DYN_INITIALIZE","_DYN_IDENTIFIER","_DYN_IS_INITIALIZED","_DYN_VALUE","_DYN_GET_PLUGIN","_DYN_NAME","_DYN_TIME","_DYN_PROCESS_NEXT","_DYN_GET_PROCESS_TEL_CONT2","_DYN_UNLOAD","_DYN_LOGGING_LEVEL_CONSOL4","_DYN_CREATE_NEW","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_MESSAGE","_DYN_IS_ASYNC","_DYN_DIAG_LOG","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_PROTOCOL","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_LOG_INTERNAL_MESSAGE","_DYN_TYPE","_DYN_HANDLER","_DYN_STATUS","_DYN_GET_RESPONSE_HEADER","_DYN_GET_ALL_RESPONSE_HEA5","_DYN_IS_CHILD_EVT","_DYN_DATA","_DYN_GET_CTX","_DYN_SET_CTX","_DYN_COMPLETE","_DYN_ITEMS_RECEIVED","_DYN_URL_STRING","_DYN_SEND_POST","_DYN_HEADERS","_DYN_TIMEOUT","_DYN_SET_REQUEST_HEADER","throwAggregationError","sourceErrors","args","errors","theMessage","srcError","concat","STR_PROMISE","REJECTED","doAwaitResponse","doAwait","status","rejected","reason","resolveFn","rejectFn","finallyFn","doFinally","finally","_hasInitEvent","STRING_STATES","DISPATCH_EVENT","_hasInitEventFn","doc","evt","createEvent","initEvent","emitEvent","evtName","populateEvent","useNewEvent","theEvt","Event","theConsole","_hasPromiseRejectionEvent","_promiseCls","_promiseCreator","NODE_UNHANDLED_REJECTION","UNHANDLED_REJECTION","toLowerCase","_unhandledRejectionTimeout","dumpFnObj","_createPromise","newPromise","processor","executor","_settledValue","_thePromise","additionalArgs","_state","_hasResolved","_queue","_handled","_unHandledRejectionHandler","_then","onResolved","onRejected","resolve","reject","_processQueue","_strState","pending","slice","_createSettleIfFn","newState","allowState","theValue","_notifyUnhandledRejection","emit","catch","onFinally","thenFinally","catchFinally","_rejectFn","syncItemProcessor","timeoutItemProcessor","callbackTimeout","createAsyncPromise","createNativePromise","PrmCls","thePromise","createPromise","UNDEFINED_VALUE","STR_EMPTY","STR_CORE","STR_DISABLED","STR_EXTENSION_CONFIG","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_GET_PERF_MGR","STR_NOT_DYNAMIC_ERROR","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotNullOrUndefined","normalizeJsName","_all","letter","toUpperCase","strContains","toISOString","date","getExceptionName","setValue","field","valChk","srcChk","_createProxyFunction","source","srcFunc","src","originalArguments","proxyFunctionAs","overwriteTarget","createClassFromInterface","defaults","optimizeObject","ObjAssign","objExtend","obj1","obj2","obj3","obj4","obj5","obj6","extended","argLen","deep","isNewArray","clone","isArgArray","isArgObj","getResponseText","xhr","responseText","formatErrorMessageXdr","xdr","formatErrorMessageXhr","response","prependTransports","theTransports","newTransports","strDisabledPropertyName","strWithCredentials","strTimeout","openXhr","method","urlString","withCredentials","disabled","isSync","_wrapSetXhrProp","XMLHttpRequest","open","convertAllHeadersToMap","headersString","headers","headerEntry","header","indexOf","substring","_appendHeader","theHeaders","STR_KILL_DURATION_HEADER","STR_KILL_DURATION_SECONDS_HEADER","STR_TIME_DELTA_HEADER","_getAllResponseHeaders","isOneDs","strDocumentMode","strLocation","strConsole","strJSON","strCrypto","strMsCrypto","strMsie","strTrident","strXMLHttpRequest","_isTrident","_navUserAgentCheck","_enableMocks","_useXDomainRequest","_beaconsSupported","_hasProperty","property","supported","getLocation","checkForMock","mockLocation","location","getConsole","console","hasJSON","getJSON","getCrypto","getMsCrypto","isIE","nav","userAgent","getIEVersion","userAgentStr","ua","navigator_1","max","parseInt","tridentVer","isBeaconsSupported","sendBeacon","isFetchSupported","withKeepAlive","isSupported","request","useXDomainRequest","XDomainRequest","isXhrSupported","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","_mwcSeed","seedValue","_autoSeedMwc","random","random32","signed","getRandomValues","Uint32Array","mwcRandom32","floor","newId","maxLength","number","chars","base64chars","version","instanceName","_dataUid","_canAcceptData","_getCache","data","theCache","id","createUniqueNamespace","includeVersion","createElmNodeData","accept","addDefault","kill","_isConfigDefaults","isVal","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","cfg","_resolveDefaultValue","newValue_1","_applyDefaultValue","defaultValue","isValid","mergeDf","reference","readOnly","blkDynamicValue","mrg","usingDefault","cfgValue","dfName","dfValue","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_cfgDeepCopy","target_1","getDynamicConfigHandler","blockDynamicConversion","_canMakeDynamic","getFunc","state","blkVal","throwInvalidAccess","arrayMethodsToPatch","_throwDynamicError","logger","_patchArray","orgMethod","_i","_makeDynamicObject","_getOwnPropGetter","_createDynamicProperty","detail","trk","clr","checkDynamic","isObjectOrArray","_getProperty","activeHandler","act","chng","add","ro","upd","newIsObjectOrArray","isReferenced","rf","_setDynamicProperty","hdlr","getter","valueState","_setDynamicPropertyState","flags","isDynamic","inPlace","rdOnly","blkProp","symPrefix","symPostfix","_createState","cfgHandler","theState","dynamicPropertySymbol","uid","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","prevWatcher","bind","setDf","_notifyWatchers","notifyHandlers","watcherFailures_1","use","details","_createAndUseHandler","configHandler","rm","_createDynamicHandler","newTarget","defaultValues","_block","allowUpdate","prevUpd","_logInvalidAccess","createDynamicConfig","config","defaultConfig","onConfigChange","runTargetUnload","isAsync","DisabledPropertyName","_stringToBoolOrDefault","cfgDfValidate","validator","fallBackName","cfgDfBoolean","_aiNamespace","_getExtensionNamespace","getDebugExt","ns","disableDbgExt","STR_WARN_TO_CONSOLE","AiNonUserActionablePrefix","AiUserActionablePrefix","AIInternalMessagePrefix","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","text","_logToConsole","logFunc","_InternalLogMessage","msgId","msg","isUserAct","properties","strProps","diagnosticText","dataType","safeGetLogger","core","DiagnosticLogger","identifier","queue","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","throttleLimitMessage","throttleMessage","logMessage","messageKey","_debugExtMsg","errorToConsole","dbgExt","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","__ieDyn","_getLogger","_throwInternal","_warnToConsole","strExecutionContextKey","strParentContextKey","strChildrenContextKey","PerfEvent","payloadDetails","theDetails_1","childTime","childEvts","childEvt","exTime","ParentContextKey","ChildrenContextKey","doPerfActiveKey","doPerf","mgrSource","getSource","perfMgr","children","perfEvt","currentActive","create","fire","pluginStateData","_getPluginState","plugin","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_getNextProxyStart","proxy","startAt","createTelemetryProxyChain","_createInternalContext","telemetryChain","_nextProxy","_onComplete","context","_next","onComplete","nextProxy","completeDetails","ctx","diagLog","getCfg","getExtCfg","newConfig","_getExtCfg","getConfig","extConfig","rootConfig","hasNext","getNext","setNext","nextPlugin","iterate","that","createIfMissing","extCfg","idCfg","createProcessTelemetryContext","internalContext","env","plugins","createProcessTelemetryUnloadContext","unloadState","createProcessTelemetryUpdateContext","updateState","lastProxy_1","firstProxy","thePlugin","newProxy","createTelemetryPluginProxy","_setNext","hasProcessTelemetry","hasSetNext","chainId","proxyChain","getPlugin","processTelemetry","itemCtx","_processChain","pluginState","item","unload","unloadCtx","pluginCore","hasRun","update","updateCtx","_id","processPluginFn","hasRunContext","nextId","error","hasNextRun","createUnloadHandlerContainer","handlers","run","createUnloadHookContainer","_hooks","oldHooks","remove","hooks","strGetPlugin","BaseTelemetryPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","_hookContainer","_getTelCtx","currentCtx","rootCtx","_setDefaults","pluginChain","_initDefaults","extensions","unloadDone","theUnloadCtx","theUnloadState","_unloadCallback","updateDone","theUpdateCtx","_doUpdate","_updateCallback","setInitialized","isInitialized","parseResponse","parse","itemsAccepted","itemsReceived","STR_NO_RESPONSE_BODY","_noResponseQs","STR_POST_METHOD","SenderPostManager","_enableSendPromise","_isInitialized","_diagLog","_isOneDs","_onCompleteFuncs","_disableCredentials","_fetchCredentials","_fallbackInst","_disableXhr","_disableBeacon","_disableBeaconSync","_disableFetchKeepAlive","_addNoResponse","_timeoutWrapper","_syncFetchPayload","_base","_sendCredentials","_onError","_doOnComplete","_onNoPayloadUrl","oncomplete","_doBeaconSend","payload","url","plainTextBatch","Blob","_beaconSender","sync","onRetry","beaconOnRetry","_xhrSender","resolveFunc","rejectFunc","endPointUrl","disableXhrSync","_doOnReadyFunc","onReadyFunc","xhrOnComplete","headerName","onreadystatechange","readyState","onload","onerror","event","ontimeout","send","_doFetchSender","batch","requestHeaders","Headers","batchLength","ignoreResponse","responseHandled","body","append","init","credentials","keepalive","Request","_handleError","res","_onFetchComplete","onCompleteFunc","fetchOnComplete","fetch","response_1","ok","resp","statusText","_xdrSender","_window","hostingProtocol","onloadFunc","xdrOnComplete","onprogress","endpoint","lastIndexOf","endpointUrl","SetConfig","location_1","senderOnCompleteCallBack","disableCredentials","fetchCredentials","enableSendPromise","disableXhr","disableBeacon","disableBeaconSync","timeWrapper","addNoResponse","disableFetchKeepAlive","sendPOST","protocol","getSyncFetchPayload","getSenderInst","transports","_getSenderInterface","syncSupport","transportType","sendPostFunc","_transport","_isSync","getFallbackInst","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","eventName","evtNamespace","theNamespace_1","parsedEvent","exec","sort","join","_getRegisteredEvents","aiEvts","_doDetach","handlerRef","useCapture","_doAttach","_doUnregister","events","unRegFn","theEvent","capture","_unregisterEvents","eventCache","evtType","mergeEvtNamespace","theNamespace","namespaces","eventOn","registeredEvent","guid","eventOff","evtName_1","found_1","regEvent","SampleRate","ProcessLegacy","HttpMethod","DEFAULT_BREEZE_ENDPOINT","DEFAULT_BREEZE_PATH","strNotSpecified","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","traceStateHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","_DYN_TO_STRING","_DYN_REMOVE_ITEM","_DYN_COUNT","_DYN_STRINGIFY","_DYN_PATHNAME","_DYN_EXCEPTIONS","_DYN_PARSED_STACK","_DYN_PROPERTIES","_DYN_MEASUREMENTS","_DYN_SIZE_IN_BYTES","_DYN_TYPE_NAME","_DYN_SEVERITY_LEVEL","_DYN_PROBLEM_GROUP","_DYN_IS_MANUAL","_DYN__CREATE_FROM_INTERFA1","_DYN_ASSEMBLY","_DYN_FILE_NAME","_DYN_HAS_FULL_STACK","_DYN_LEVEL","_DYN_METHOD","_DYN_LINE","_DYN_DURATION","_DYN_RECEIVED_RESPONSE","dataSanitizeKeyAndAddUniqueness","map","origLength","dataSanitizeKey","uniqueField","dsPadNumber","nameTrunc","dataSanitizeString","valueTrunc","dataSanitizeUrl","dataSanitizeInput","dataSanitizeMessage","messageTrunc","dataSanitizeException","exception","exceptionTrunc","dataSanitizeProperties","tempProps_1","dataSanitizeMeasurements","measurements","tempMeasurements_1","measure","dataSanitizeId","input","_msgId","inputTrunc","num","_document","_htmlAnchorIdx","_htmlAnchorElement","urlParseUrl","anchorIdx","anchorCache","tempAnchor","createElement","host","urlParseHost","href","inclPort","fullHost","urlParseFullHost","port","_internalEndpoints","isInternalApplicationInsightsEndpoint","AjaxHelperParseDependencyPath","absoluteUrl","commandName","parsedUrl","pathName","pathname","StorageType","LocalStorage","SessionStorage","_canUseSessionStorage","_storagePrefix","_getVerifiedStorageObject","storageType","storage","getGlobalInst","fail","setItem","getItem","_getSessionStorageObject","utlCanUseSessionStorage","utlSetStoragePrefix","storagePrefix","reset","utlGetSessionStorage","utlSetSessionStorage","utlRemoveSessionStorage","Envelope","ver","sampleRate","tags","time","aiDataContract","iKey","envelopeType","NoMethod","strError","strStack","strStackDetails","strErrorSrc","strMessage","strDescription","_stringify","convertToString","_formatMessage","errorType","evtMessage","_isExceptionDetailsInternal","_isExceptionInternal","_isStackDetails","_convertStackObj","errorStack","items","_getOperaStack","errorMessage","lines","entry","_getStackFromErrorObj","errorObj","_formatStackTrace","stackDetails","_parseStack","frames","parsedStack","level_1","totalSizeInBytes_1","frame","theFrame","_StackFrame","regex","test","parsedFrame","left","right","size","acceptedLeft","acceptedRight","splice","_getErrorType","typeName","results","_formatErrorCode","Exception","severityLevel","exceptions","_ExceptionDetails","CreateAutoException","lineNumber","columnNumber","errorSrc","CreateFromInterface","__assign","prototype","toInterface","_b","problemGroup","isManual","exceptionDetailsInterface","CreateSimpleException","assembly","fileName","line","formatError","outerId","hasFullStack","sourceFrame","level","matches","sizeInBytes","baseSize","DataPoint","kind","min","stdDev","Metric","metrics","dataPoint","isNaN","strEmpty","msToTimeSpan","totalms","sec","round","hour","days","ms","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","correlationContext","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","Trace","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","Data","baseType","baseData","_aiNameFunc","baseName","aiName","_aiApplication","_aiDevice","_aiLocation","_aiOperation","_aiSession","_aiUser","_aiCloud","_aiInternal","ContextTagKeys","_super","__extends","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","CtxTagKeys","_disableEvents","createOfflineListener","parentEvtNamespace","_navigator","_isListening","listenerList","rState","uState","onLine","_currentState","calCurrentState","_evtNamespace","_enableEvents","ononline","enabled","_setOnline","_setOffline","listnerNoticeCheck","offlineState","isOnline","isListening","win","addListener","index","setOnlineState","BreezeChannelIdentifier","STR_DURATION","_DYN_TAGS","_DYN_DEVICE_TYPE","_DYN_TRACE_ID","_DYN_DATA_TYPE","_DYN_ENVELOPE_TYPE","_DYN__GET","_DYN_ENQUEUE","_DYN_EVENTS_LIMIT_IN_MEM","_DYN_ITEM","_DYN_EMIT_LINE_DELIMITED_0","_DYN_CLEAR","_DYN_MARK_AS_SENT","_DYN_CLEAR_SENT","_DYN_BUFFER_OVERRIDE","_DYN__BUFFER__KEY","_DYN__SENT__BUFFER__KEY","_DYN_CONCAT","_DYN__MAX__BUFFER__SIZE","_DYN_TRIGGER_SEND","_DYN__SENDER","_DYN_CUSTOM_HEADERS","_DYN_MAX_BATCH_SIZE_IN_BY1","_DYN_ONUNLOAD_DISABLE_BEA2","_DYN_IS_BEACON_API_DISABL3","_DYN_ALWAYS_USE_XHR_OVERR4","_DYN_DISABLE_XHR","_DYN_ENABLE_SESSION_STORA5","_DYN__BUFFER","_DYN_ONUNLOAD_DISABLE_FET6","_DYN_DISABLE_SEND_BEACON_7","_DYN_INSTRUMENTATION_KEY","_DYN_ENABLE_SEND_PROMISE","_DYN_GET_SENDER_INST","_DYN_UNLOAD_TRANSPORTS","_DYN_CONVERT_UNDEFINED","_DYN_MAX_BATCH_INTERVAL","_DYN_SERIALIZE","_DYN__ON_ERROR","_DYN__ON_PARTIAL_SUCCESS","_DYN__ON_SUCCESS","_DYN_ITEMS_ACCEPTED","_DYN_ORI_PAYLOAD","_DYN_BASE_TYPE","_DYN_SAMPLE_RATE","_DYN_EVENTS_SEND_REQUEST","_DYN_GET_SAMPLING_SCORE","_DYN_GET_HASH_CODE_SCORE","strBaseType","strBaseData","strProperties","strTrue","_setValueIf","_extractPartAExtensions","envTags","itmExt","ext","itmTags","extUser","user","extApp","authId","localId","app","extDevice","sesId","device","web","deviceClass","ip","model","extOs","browserLang","browserVer","browser","envProps","envBaseData","envData","domain","screenRes","userConsent","os","extTrace","osVer","trace","tgs","parentID","tg","theTags","EnvelopeCreator","Version","_extractPropsAndMeasurements","_convertPropsUndefinedToCustomDefinedValue","customUndefinedValue","_createEnvelope","telemetryItem","envelope","startTime","iKeyNoDashes","EnvelopeCreatorInit","DependencyEnvelopeCreator","customMeasurements","customProperties","bd","remoteDepData","responseCode","EventEnvelopeCreator","eventData","ExceptionEnvelopeCreator","exData","MetricEnvelopeCreator","baseMetricData","average","sampleCount","PageViewEnvelopeCreator","currentContextId","uri","pageViewData","refUri","pageType","isLoggedIn","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","BaseSendBuffer","_buffer","_bufferFullMessageSent","_maxRetryCnt","maxRetryCnt","_set","buffer","cnt","getItems","batchPayloads","payloads","payloadStr_1","newLogger","canUseSessionStorage","newBuffer","SessionStorageSendBuffer","ArraySendBuffer","PREVIOUS_KEYS","_namePrefix","namePrefix","bufferItems","_getBuffer","itemsInSentBuffer","previousItems","_getItemsFromPreviousKey","prefixEvents","_getPreviousEvents","notDeliveredItems","_removePayloadsFromBuffer","remaining","payloadStr","_getBufferBase","bufferJson","buffer_1","_setBuffer","prefixedKey","transFormedItems_1","BUFFER_KEY","sentElements","unsentItems","sentItems","VERSION","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","Serializer","_serializeObject","circularReferenceCheck","output","contract","isRequired","isHidden","isPresent","isObj","_serializeArray","_serializeStringMap","sources","expectedType","parseFloat","MIN_INPUT_LENGTH","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","hash","charCodeAt","abs","SamplingScoreGenerator","hashCodeGenerator","keys","telemetryTrace","Sample","_logger","throwInternal","samplingRate","samplingScoreGenerator","isSampledIn","samplingPercentage","EMPTY_STR","FetchSyncRequestSizeLimitBytes","_getResponseText","isOverrideFn","httpXHROverride","defaultAppInsightsChannelConfig","disableTelemetry","isRetryDisabled","_chkSampling","retryCodes","EnvelopeTypeCreator","Sender","_consecutiveErrors","_retryAt","_paused","_timeoutHandle","_serializer","_stamp_specific_redirects","_headers","_syncUnloadSender","_offlineListener","_endpointUrl","_orgEndpointUrl","_maxBatchSizeInBytes","_beaconSupported","_beaconOnUnloadSupported","_beaconNormalSupported","_customHeaders","_disableTelemetry","_instrumentationKey","_convertUndefined","_isRetryDisabled","_maxBatchInterval","_sessionStorageUsed","_bufferOverrideUsed","_alwaysUseCustomSend","_fetchKeepAlive","_xhrSend","_fallbackSend","_disableBeaconSplit","_sendPostMgr","_retryCodes","priority","_xdrOnLoad","_xhrReadyStateChange","countOfItemsInPayload","_checkResponsStatus","responseURL","_getPayloadArr","arr","_validate","diagLogger","_sample","_getEnvelope","defaultEnvelopeIkey","aiEnvelope","constructEnvelope","doNotSendItem","callBack","_serialize","rlt","valid","_batch","_createPayload","_getHeaders","_doSend","sendInterface","markAsSent","payloadData","_getPayload","_onSuccess","_checkMaxSize","incomingPayload","incomingSize","responseUrl","_appId","appId","_checkAndUpdateEndPointUrl","_resendPayload","_isRetriable","_doUnloadSend","_isStringArr","_fetchKeepAliveSender","transport","payloadSize","linearFactor","payload_1","delayInSeconds","backOffDelay","pow","retryAfterTimeSpan","dateNow","_setupTimer","retryInterval","_clearScheduledTimer","statusCode","_notifySendRequest","sendRequest","manager","pause","resume","flush","sendReason","onunloadFlush","addHeader","_addHook","senderConfig","bufferOverride","activeStatus","customHeader","shouldUpdate","instrumentationKey","disableValidation","disableInstrumentationKeyValidation","sendPostConfig","onCompleteFuncs","resValue","canSend","_onBeaconRetry","droppedPayload","thePayload","_getSendPostMgrConfig","customInterface","httpInterface","syncInterface","xhrInterface","syncTransports","filter","payloadItem","processNext","isCompletelyIdle","async","forcedSender","ieVer","getOfflineSupport","getUrl","createPayload","shouldProcess","_doTeardown","_onPartialSuccess","retry","errors_1","reverse","extracted","orig","convertUndefined"],"mappings":"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","x_google_ignoreList":[1,3,8]}
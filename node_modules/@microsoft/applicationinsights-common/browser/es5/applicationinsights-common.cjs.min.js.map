{"version":3,"file":"applicationinsights-common.cjs.min.js","sources":["../../../../common/temp/node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/AggregationError.js","../../../AppInsightsCore/dist-es5/__DynamicConstants.js","../../../../tools/shims/dist-es5/Constants.js","../../../../common/temp/node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","../../../../tools/shims/dist-es5/TsLibShims.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/InternalConstants.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/HelperFuncs.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/EnvUtils.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/RandomHelper.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/DataCacheHelper.js","../../../AppInsightsCore/dist-es5/Config/ConfigDefaults.js","../../../AppInsightsCore/dist-es5/Config/DynamicSupport.js","../../../AppInsightsCore/dist-es5/Config/DynamicProperty.js","../../../AppInsightsCore/dist-es5/Config/DynamicState.js","../../../AppInsightsCore/dist-es5/Config/DynamicConfig.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/DiagnosticLogger.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/CoreUtils.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/W3cTraceParent.js","../../../AppInsightsCore/dist-es5/JavaScriptSDK/EventHelpers.js","../../dist-es5/Constants.js","../../dist-es5/RequestResponseHeaders.js","../../dist-es5/__DynamicConstants.js","../../dist-es5/Telemetry/Common/DataSanitizer.js","../../dist-es5/UrlHelperFuncs.js","../../dist-es5/Util.js","../../dist-es5/Enums.js","../../dist-es5/StorageHelperFuncs.js","../../dist-es5/ThrottleMgr.js","../../dist-es5/ConnectionStringParser.js","../../dist-es5/Telemetry/Common/Envelope.js","../../dist-es5/Telemetry/Event.js","../../dist-es5/Telemetry/Exception.js","../../dist-es5/Telemetry/Common/DataPoint.js","../../dist-es5/Telemetry/Metric.js","../../dist-es5/HelperFuncs.js","../../dist-es5/Telemetry/PageView.js","../../dist-es5/Telemetry/RemoteDependencyData.js","../../dist-es5/Telemetry/Trace.js","../../dist-es5/Telemetry/PageViewPerformance.js","../../dist-es5/Telemetry/Common/Data.js","../../dist-es5/Interfaces/Contracts/SeverityLevel.js","../../dist-es5/Interfaces/IConfig.js","../../dist-es5/Interfaces/Contracts/ContextTagKeys.js","../../dist-es5/TelemetryItemCreator.js","../../dist-es5/Interfaces/PartAExtensions.js","../../dist-es5/DomHelperFuncs.js","../../dist-es5/Offline.js","../../dist-es5/applicationinsights-common.js"],"sourcesContent":["/*! https://github.com/nevware21/ts-utils v0.11.3 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1;\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key, writable);\n        _assignMapValue(theMap, value, valueType ? value : key, writable);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: !!writable\n    });\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump && propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \")) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                objDeepFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto && clsProto[funcName];\n    return function (thisArg) {\n        var theFunc = (thisArg && thisArg[funcName]) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        (!cachedValue || _globalLazyTestHooks.lzy) && (cachedValue = createCachedValue(safe(getFn, theArgs).v));\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) && (_cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE));\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl = (!_cachedGlobal || useCached === false) ? getGlobal(useCached) : _cachedGlobal.v;\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        return getWindow();\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : null;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray && theArray[\"slice\"]) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = _iterSymbol.v && theArgs[_iterSymbol.v];\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString;\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = false;\n    if (value && theType === OBJECT) {\n        isPlain = isPlainObject(value);\n    }\n    else {\n        isPrim = value === NULL_VALUE || isPrimitiveType(theType);\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_perf || _globalLazyTestHooks.lzy) && (_perf = createCachedValue(safe((getInst), [\"performance\"]).v));\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        isDone = isDone || (ctx.n ? ctx.n(arguments) : true);\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step || ((start <= end) ? 1 : -1);\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = false;\n        if (theStep > 0) {\n            isDone = nextValue > end;\n        }\n        else {\n            isDone = nextValue < end;\n        }\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter && splitter[getKnownSymbol(9 )];\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : null));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = !isUndefined(length) && length < value[LENGTH] ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN__INACTIVE = \"INACTIVE\"; // Count: 3\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 5\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.1';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { random32 } from \"./RandomHelper\";\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nexport function newGuid() {\r\n    var uuid = generateW3CId();\r\n    return strSubstring(uuid, 0, 8) + \"-\" + strSubstring(uuid, 8, 12) + \"-\" + strSubstring(uuid, 12, 16) + \"-\" + strSubstring(uuid, 16, 20) + \"-\" + strSubstring(uuid, 20);\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value[_DYN_LENGTH /* @min:%2elength */];\r\n        var start = len - search[_DYN_LENGTH /* @min:%2elength */];\r\n        return strSubstring(value, start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = STR_EMPTY, tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return strSubstr(oct, 0, 8) + strSubstr(oct, 9, 4) + \"4\" + strSubstr(oct, 13, 3) + clockSequenceHi + strSubstr(oct, 16, 3) + strSubstr(oct, 19, 12);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, isArray, isString, strLeft, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_ATTRIBUTE, _DYN_LENGTH, _DYN_PUSH, _DYN_SPAN_ID, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_VERSION } from \"../__DynamicConstants\";\r\nimport { generateW3CId } from \"./CoreUtils\";\r\nimport { findMetaTag, findNamedServerTiming } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// using {0,16} for leading and trailing whitespace just to constrain the possible runtime of a random string\r\nvar TRACE_PARENT_REGEX = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})(-[^\\s]{1,64})?$/i;\r\nvar DEFAULT_VERSION = \"00\";\r\nvar INVALID_VERSION = \"ff\";\r\nvar INVALID_TRACE_ID = \"00000000000000000000000000000000\";\r\nvar INVALID_SPAN_ID = \"0000000000000000\";\r\nvar SAMPLED_FLAG = 0x01;\r\nfunction _isValid(value, len, invalidValue) {\r\n    if (value && value[_DYN_LENGTH /* @min:%2elength */] === len && value !== invalidValue) {\r\n        return !!value.match(/^[\\da-f]*$/i);\r\n    }\r\n    return false;\r\n}\r\nfunction _formatValue(value, len, defValue) {\r\n    if (_isValid(value, len)) {\r\n        return value;\r\n    }\r\n    return defValue;\r\n}\r\nfunction _formatFlags(value) {\r\n    if (isNaN(value) || value < 0 || value > 255) {\r\n        value = 0x01;\r\n    }\r\n    var result = value.toString(16);\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < 2) {\r\n        result = \"0\" + result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new ITraceParent instance using the provided values.\r\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\r\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\r\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\r\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\r\n * @returns\r\n */\r\nexport function createTraceParent(traceId, spanId, flags, version) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = _isValid(version, 2, INVALID_VERSION) ? version : DEFAULT_VERSION,\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = isValidTraceId(traceId) ? traceId : generateW3CId(),\r\n        _a[_DYN_SPAN_ID /* @min:spanId */] = isValidSpanId(spanId) ? spanId : strLeft(generateW3CId(), 16),\r\n        _a.traceFlags = flags >= 0 && flags <= 0xFF ? flags : 1,\r\n        _a;\r\n}\r\n/**\r\n * Attempt to parse the provided string as a W3C TraceParent header value (https://www.w3.org/TR/trace-context/#traceparent-header)\r\n *\r\n * @param value - The value to be parsed\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function parseTraceParent(value, selectIdx) {\r\n    var _a;\r\n    if (!value) {\r\n        // Don't pass a null/undefined or empty string\r\n        return null;\r\n    }\r\n    if (isArray(value)) {\r\n        // The value may have been encoded on the page into an array so handle this automatically\r\n        value = value[0] || \"\";\r\n    }\r\n    if (!value || !isString(value) || value[_DYN_LENGTH /* @min:%2elength */] > 8192) {\r\n        // limit potential processing based on total length\r\n        return null;\r\n    }\r\n    if (value.indexOf(\",\") !== -1) {\r\n        var values = value[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        value = values[selectIdx > 0 && values[_DYN_LENGTH /* @min:%2elength */] > selectIdx ? selectIdx : 0];\r\n    }\r\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\r\n    var match = TRACE_PARENT_REGEX.exec(strTrim(value));\r\n    if (!match || // No match\r\n        match[1] === INVALID_VERSION || // version ff is forbidden\r\n        match[2] === INVALID_TRACE_ID || // All zeros is considered to be invalid\r\n        match[3] === INVALID_SPAN_ID) { // All zeros is considered to be invalid\r\n        return null;\r\n    }\r\n    return _a = {\r\n            version: (match[1] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            traceId: (match[2] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            spanId: (match[3] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()\r\n        },\r\n        _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = parseInt(match[4], 16),\r\n        _a;\r\n}\r\n/**\r\n * Is the provided W3c Trace Id a valid string representation, it must be a 32-character string\r\n * of lowercase hexadecimal characters for example, 4bf92f3577b34da6a3ce929d0e0e4736.\r\n * If all characters as zero (00000000000000000000000000000000) it will be considered an invalid value.\r\n * @param value - The W3c trace Id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidTraceId(value) {\r\n    return _isValid(value, 32, INVALID_TRACE_ID);\r\n}\r\n/**\r\n * Is the provided W3c span id (aka. parent id) a valid string representation, it must be a 16-character\r\n * string of lowercase hexadecimal characters, for example, 00f067aa0ba902b7.\r\n * If all characters are zero (0000000000000000) this is considered an invalid value.\r\n * @param value - The W3c span id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidSpanId(value) {\r\n    return _isValid(value, 16, INVALID_SPAN_ID);\r\n}\r\n/**\r\n * Validates that the provided ITraceParent instance conforms to the currently supported specifications\r\n * @param value\r\n * @returns\r\n */\r\nexport function isValidTraceParent(value) {\r\n    if (!value ||\r\n        !_isValid(value[_DYN_VERSION /* @min:%2eversion */], 2, INVALID_VERSION) ||\r\n        !_isValid(value[_DYN_TRACE_ID /* @min:%2etraceId */], 32, INVALID_TRACE_ID) ||\r\n        !_isValid(value[_DYN_SPAN_ID /* @min:%2espanId */], 16, INVALID_SPAN_ID) ||\r\n        !_isValid(_formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]), 2)) {\r\n        // Each known field must contain a valid value\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Is the parsed traceParent indicating that the trace is currently sampled.\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function isSampledFlag(value) {\r\n    if (isValidTraceParent(value)) {\r\n        return (value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] & SAMPLED_FLAG) === SAMPLED_FLAG;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Format the ITraceParent value as a string using the supported and know version formats.\r\n * So even if the passed traceParent is a later version the string value returned from this\r\n * function will convert it to only the known version formats.\r\n * This currently only supports version \"00\" and invalid \"ff\"\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function formatTraceParent(value) {\r\n    if (value) {\r\n        // Special Note: This only supports formatting as version 00, future versions should encode any known supported version\r\n        // So parsing a future version will populate the correct version value but reformatting will reduce it to version 00.\r\n        var flags = _formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]);\r\n        if (!_isValid(flags, 2)) {\r\n            flags = \"01\";\r\n        }\r\n        var version = value[_DYN_VERSION /* @min:%2eversion */] || DEFAULT_VERSION;\r\n        if (version !== \"00\" && version !== \"ff\") {\r\n            // Reduce version to \"00\"\r\n            version = DEFAULT_VERSION;\r\n        }\r\n        // Format as version 00\r\n        return \"\".concat(version.toLowerCase(), \"-\").concat(_formatValue(value.traceId, 32, INVALID_TRACE_ID).toLowerCase(), \"-\").concat(_formatValue(value.spanId, 16, INVALID_SPAN_ID).toLowerCase(), \"-\").concat(flags.toLowerCase());\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function findW3cTraceParent(selectIdx) {\r\n    var name = \"traceparent\";\r\n    var traceParent = parseTraceParent(findMetaTag(name), selectIdx);\r\n    if (!traceParent) {\r\n        traceParent = parseTraceParent(findNamedServerTiming(name), selectIdx);\r\n    }\r\n    return traceParent;\r\n}\r\n/**\r\n * Find all script tags in the provided document and return the information about them.\r\n * @param doc\r\n * @returns\r\n */\r\nexport function findAllScripts(doc) {\r\n    var scripts = doc.getElementsByTagName(\"script\");\r\n    var result = [];\r\n    arrForEach(scripts, function (script) {\r\n        var src = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"src\");\r\n        if (src) {\r\n            var crossOrigin = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"crossorigin\");\r\n            var async = script.hasAttribute(\"async\") === true;\r\n            var defer = script.hasAttribute(\"defer\") === true;\r\n            var referrerPolicy = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"referrerpolicy\");\r\n            var info = { url: src };\r\n            if (crossOrigin) {\r\n                info.crossOrigin = crossOrigin;\r\n            }\r\n            if (async) {\r\n                info.async = async;\r\n            }\r\n            if (defer) {\r\n                info.defer = defer;\r\n            }\r\n            if (referrerPolicy) {\r\n                info.referrerPolicy = referrerPolicy;\r\n            }\r\n            result[_DYN_PUSH /* @min:%2epush */](info);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//# sourceMappingURL=W3cTraceParent.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nexport var RequestHeaders = createValueMap({\r\n    requestContextHeader: [0 /* eRequestHeaders.requestContextHeader */, \"Request-Context\"],\r\n    requestContextTargetKey: [1 /* eRequestHeaders.requestContextTargetKey */, \"appId\"],\r\n    requestContextAppIdFormat: [2 /* eRequestHeaders.requestContextAppIdFormat */, \"appId=cid-v1:\"],\r\n    requestIdHeader: [3 /* eRequestHeaders.requestIdHeader */, \"Request-Id\"],\r\n    traceParentHeader: [4 /* eRequestHeaders.traceParentHeader */, \"traceparent\"],\r\n    traceStateHeader: [5 /* eRequestHeaders.traceStateHeader */, \"tracestate\"],\r\n    sdkContextHeader: [6 /* eRequestHeaders.sdkContextHeader */, \"Sdk-Context\"],\r\n    sdkContextHeaderAppIdRequest: [7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */, \"appId\"],\r\n    requestContextHeaderLowerCase: [8 /* eRequestHeaders.requestContextHeaderLowerCase */, \"request-context\"]\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_LENGTH = \"length\"; // Count: 41\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 6\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 9\r\nexport var _DYN_PUSH = \"push\"; // Count: 5\r\nexport var _DYN_REMOVE_ITEM = \"removeItem\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 10\r\nexport var _DYN_COUNT = \"count\"; // Count: 8\r\nexport var _DYN_PRE_TRIGGER_DATE = \"preTriggerDate\"; // Count: 4\r\nexport var _DYN_DISABLED = \"disabled\"; // Count: 3\r\nexport var _DYN_INTERVAL = \"interval\"; // Count: 3\r\nexport var _DYN_DAYS_OF_MONTH = \"daysOfMonth\"; // Count: 3\r\nexport var _DYN_DATE = \"date\"; // Count: 5\r\nexport var _DYN_GET_UTCDATE = \"getUTCDate\"; // Count: 3\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 4\r\nexport var _DYN_CORRELATION_HEADER_E0 = \"correlationHeaderExcludePatterns\"; // Count: 2\r\nexport var _DYN_EXTENSION_CONFIG = \"extensionConfig\"; // Count: 4\r\nexport var _DYN_EXCEPTIONS = \"exceptions\"; // Count: 6\r\nexport var _DYN_PARSED_STACK = \"parsedStack\"; // Count: 13\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 9\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 9\r\nexport var _DYN_SIZE_IN_BYTES = \"sizeInBytes\"; // Count: 11\r\nexport var _DYN_TYPE_NAME = \"typeName\"; // Count: 11\r\nexport var _DYN_SEVERITY_LEVEL = \"severityLevel\"; // Count: 5\r\nexport var _DYN_PROBLEM_GROUP = \"problemGroup\"; // Count: 3\r\nexport var _DYN_IS_MANUAL = \"isManual\"; // Count: 3\r\nexport var _DYN__CREATE_FROM_INTERFA1 = \"CreateFromInterface\"; // Count: 2\r\nexport var _DYN_ASSEMBLY = \"assembly\"; // Count: 7\r\nexport var _DYN_FILE_NAME = \"fileName\"; // Count: 8\r\nexport var _DYN_HAS_FULL_STACK = \"hasFullStack\"; // Count: 6\r\nexport var _DYN_LEVEL = \"level\"; // Count: 5\r\nexport var _DYN_METHOD = \"method\"; // Count: 7\r\nexport var _DYN_LINE = \"line\"; // Count: 6\r\nexport var _DYN_DURATION = \"duration\"; // Count: 4\r\nexport var _DYN_RECEIVED_RESPONSE = \"receivedResponse\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, getJSON, hasJSON, isObject, objForEachKey, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { asString, strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_STRINGIFY, _DYN_TO_STRING } from \"../../__DynamicConstants\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key[_DYN_LENGTH /* @min:%2elength */];\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field[_DYN_LENGTH /* @min:%2elength */] !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = strSubstring(field, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(asString(name));\r\n        // truncate the string to 150 chars\r\n        if (name[_DYN_LENGTH /* @min:%2elength */] > 150 /* DataSanitizerValues.MAX_NAME_LENGTH */) {\r\n            nameTrunc = strSubstring(name, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 57 /* _eInternalMessageId.NameTooLong */, \"name is too long.  It has been truncated to \" + 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(asString(value));\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            valueTrunc = strSubstring(value, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 61 /* _eInternalMessageId.StringValueTooLong */, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* DataSanitizerValues.MAX_URL_LENGTH */, 66 /* _eInternalMessageId.UrlTooLong */);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = strSubstring(message, 0, 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 56 /* _eInternalMessageId.MessageTruncated */, \"message is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = strSubstring(value, 0, 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 52 /* _eInternalMessageId.ExceptionTruncated */, \"exception is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* DataSanitizerValues.MAX_ID_LENGTH */, 69 /* _eInternalMessageId.IdTooLong */)[_DYN_TO_STRING /* @min:%2etoString */]() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(asString(input));\r\n        if (input[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            inputTrunc = strSubstring(input, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return strSubstr(s, s[_DYN_LENGTH /* @min:%2elength */] - 3);\r\n}\r\n//# sourceMappingURL=DataSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PATHNAME, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _document = getDocument() || {};\r\nvar _htmlAnchorIdx = 0;\r\n// Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\nvar _htmlAnchorElement = [null, null, null, null, null];\r\nexport function urlParseUrl(url) {\r\n    var anchorIdx = _htmlAnchorIdx;\r\n    var anchorCache = _htmlAnchorElement;\r\n    var tempAnchor = anchorCache[anchorIdx];\r\n    if (!_document.createElement) {\r\n        // Always create the temp instance if createElement is not available\r\n        tempAnchor = { host: urlParseHost(url, true) };\r\n    }\r\n    else if (!anchorCache[anchorIdx]) {\r\n        // Create and cache the unattached anchor instance\r\n        tempAnchor = anchorCache[anchorIdx] = _document.createElement(\"a\");\r\n    }\r\n    tempAnchor.href = url;\r\n    // Move the cache index forward\r\n    anchorIdx++;\r\n    if (anchorIdx >= anchorCache[_DYN_LENGTH /* @min:%2elength */]) {\r\n        anchorIdx = 0;\r\n    }\r\n    _htmlAnchorIdx = anchorIdx;\r\n    return tempAnchor;\r\n}\r\nexport function urlGetAbsoluteUrl(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a.href;\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetPathName(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a[_DYN_PATHNAME /* @min:%2epathname */];\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetCompleteUrl(method, absoluteUrl) {\r\n    if (method) {\r\n        return method.toUpperCase() + \" \" + absoluteUrl;\r\n    }\r\n    return absoluteUrl;\r\n}\r\n// Fallback method to grab host from url if document.createElement method is not available\r\nexport function urlParseHost(url, inclPort) {\r\n    var fullHost = urlParseFullHost(url, inclPort) || \"\";\r\n    if (fullHost) {\r\n        var match = fullHost.match(/(www\\d{0,5}\\.)?([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 3 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            return match[2] + (match[3] || \"\");\r\n        }\r\n    }\r\n    return fullHost;\r\n}\r\nexport function urlParseFullHost(url, inclPort) {\r\n    var result = null;\r\n    if (url) {\r\n        var match = url.match(/(\\w{1,150}):\\/\\/([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 2 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            result = match[2] || \"\";\r\n            if (inclPort && match[_DYN_LENGTH /* @min:%2elength */] > 2) {\r\n                var protocol = (match[1] || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                var port = match[3] || \"\";\r\n                // IE includes the standard port so pass it off if it's the same as the protocol\r\n                if (protocol === \"http\" && port === \":80\") {\r\n                    port = \"\";\r\n                }\r\n                else if (protocol === \"https\" && port === \":443\") {\r\n                    port = \"\";\r\n                }\r\n                result += port;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=UrlHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dateNow, getPerformance, isNullOrUndefined, isValidSpanId, isValidTraceId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH } from \"./Constants\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { urlParseFullHost, urlParseUrl } from \"./UrlHelperFuncs\";\r\nimport { _DYN_CORRELATION_HEADER_E0, _DYN_LENGTH, _DYN_NAME, _DYN_PATHNAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\n// listing only non-geo specific locations\r\nvar _internalEndpoints = [\r\n    DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH,\r\n    \"https://breeze.aimon.applicationinsights.io\" + DEFAULT_BREEZE_PATH,\r\n    \"https://dc-int.services.visualstudio.com\" + DEFAULT_BREEZE_PATH\r\n];\r\nvar _correlationIdPrefix = \"cid-v1:\";\r\nexport function isInternalApplicationInsightsEndpoint(endpointUrl) {\r\n    return arrIndexOf(_internalEndpoints, endpointUrl[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) !== -1;\r\n}\r\nexport function correlationIdSetPrefix(prefix) {\r\n    _correlationIdPrefix = prefix;\r\n}\r\nexport function correlationIdGetPrefix() {\r\n    return _correlationIdPrefix;\r\n}\r\n/**\r\n * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n */\r\nexport function correlationIdCanIncludeCorrelationHeader(config, requestUrl, currentHost) {\r\n    if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n        return false;\r\n    }\r\n    if (config && config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */]) {\r\n        for (var i = 0; i < config.correlationHeaderExcludePatterns[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */][i].test(requestUrl)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    var requestHost = urlParseUrl(requestUrl).host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    if (requestHost && (strIndexOf(requestHost, \":443\") !== -1 || strIndexOf(requestHost, \":80\") !== -1)) {\r\n        // [Bug #1260] IE can include the port even for http and https URLs so if present\r\n        // try and parse it to remove if it matches the default protocol port\r\n        requestHost = (urlParseFullHost(requestUrl, true) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    }\r\n    if ((!config || !config.enableCorsCorrelation) && (requestHost && requestHost !== currentHost)) {\r\n        return false;\r\n    }\r\n    var includedDomains = config && config.correlationHeaderDomains;\r\n    if (includedDomains) {\r\n        var matchExists_1;\r\n        arrForEach(includedDomains, function (domain) {\r\n            var regex = new RegExp(domain.toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n            matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n        });\r\n        if (!matchExists_1) {\r\n            return false;\r\n        }\r\n    }\r\n    var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n    if (!excludedDomains || excludedDomains[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < excludedDomains[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n        if (regex.test(requestHost)) {\r\n            return false;\r\n        }\r\n    }\r\n    // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n    // Previously we always returned false for a falsy requestHost\r\n    return requestHost && requestHost[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\n/**\r\n * Combines target appId and target role name from response header.\r\n */\r\nexport function correlationIdGetCorrelationContext(responseHeader) {\r\n    if (responseHeader) {\r\n        var correlationId = correlationIdGetCorrelationContextValue(responseHeader, RequestHeaders[1 /* eRequestHeaders.requestContextTargetKey */]);\r\n        if (correlationId && correlationId !== _correlationIdPrefix) {\r\n            return correlationId;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets key from correlation response header\r\n */\r\nexport function correlationIdGetCorrelationContextValue(responseHeader, key) {\r\n    if (responseHeader) {\r\n        var keyValues = responseHeader[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        for (var i = 0; i < keyValues[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            var keyValue = keyValues[i][_DYN_SPLIT /* @min:%2esplit */](\"=\");\r\n            if (keyValue[_DYN_LENGTH /* @min:%2elength */] === 2 && keyValue[0] === key) {\r\n                return keyValue[1];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {\r\n    var target, name = commandName, data = commandName;\r\n    if (absoluteUrl && absoluteUrl[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        var parsedUrl = urlParseUrl(absoluteUrl);\r\n        target = parsedUrl.host;\r\n        if (!name) {\r\n            if (parsedUrl[_DYN_PATHNAME /* @min:%2epathname */] != null) {\r\n                var pathName = (parsedUrl.pathname[_DYN_LENGTH /* @min:%2elength */] === 0) ? \"/\" : parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                if (pathName.charAt(0) !== \"/\") {\r\n                    pathName = \"/\" + pathName;\r\n                }\r\n                data = parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                name = dataSanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n            }\r\n            else {\r\n                name = dataSanitizeString(logger, absoluteUrl);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        target = commandName;\r\n        name = commandName;\r\n    }\r\n    return {\r\n        target: target,\r\n        name: name,\r\n        data: data\r\n    };\r\n}\r\nexport function dateTimeUtilsNow() {\r\n    // returns the window or webworker performance object\r\n    var perf = getPerformance();\r\n    if (perf && perf.now && perf.timing) {\r\n        var now = perf.now() + perf.timing.navigationStart;\r\n        // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n        if (now > 0) {\r\n            return now;\r\n        }\r\n    }\r\n    return dateNow();\r\n}\r\nexport function dateTimeUtilsDuration(start, end) {\r\n    var result = null;\r\n    if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {\r\n        result = end - start;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param telemetryTrace - The telemetryTrace instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the telemetryTrace or temporary object\r\n */\r\nexport function createDistributedTraceContextFromTrace(telemetryTrace, parentCtx) {\r\n    var trace = telemetryTrace || {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceID;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceID = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentID;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentID = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Util.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\nexport var StorageType = createEnumStyle({\r\n    LocalStorage: 0 /* eStorageType.LocalStorage */,\r\n    SessionStorage: 1 /* eStorageType.SessionStorage */\r\n});\r\nexport var DistributedTracingModes = createEnumStyle({\r\n    AI: 0 /* eDistributedTracingModes.AI */,\r\n    AI_AND_W3C: 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    W3C: 2 /* eDistributedTracingModes.W3C */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nimport { _DYN_PUSH, _DYN_REMOVE_ITEM, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\nvar _storagePrefix = \"\";\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType - Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = (new Date)[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        var name_1 = _storagePrefix + uid;\r\n        storage.setItem(name_1, uid);\r\n        var fail = storage.getItem(name_1) !== uid;\r\n        storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name_1);\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Disables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\nexport function utlSetStoragePrefix(storagePrefix) {\r\n    _storagePrefix = storagePrefix || \"\";\r\n}\r\n/**\r\n * Re-enables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlEnableStorage() {\r\n    _canUseLocalStorage = utlCanUseLocalStorage(true);\r\n    _canUseSessionStorage = utlCanUseSessionStorage(true);\r\n}\r\n/**\r\n * Returns whether LocalStorage can be used, if the reset parameter is passed a true this will override\r\n * any previous disable calls.\r\n * @param reset - Should the usage be reset and determined only based on whether LocalStorage is available\r\n */\r\nexport function utlCanUseLocalStorage(reset) {\r\n    if (reset || _canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 1 /* _eInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 3 /* _eInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 5 /* _eInternalMessageId.BrowserFailedRemovalFromLocalStorage */, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage(reset) {\r\n    if (reset || _canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys[_DYN_PUSH /* @min:%2epush */](key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 2 /* _eInternalMessageId.BrowserCannotReadSessionStorage */, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 4 /* _eInternalMessageId.BrowserCannotWriteSessionStorage */, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 6 /* _eInternalMessageId.BrowserFailedRemovalFromSessionStorage */, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { _throwInternal, arrIndexOf, isNotNullOrUndefined, isNullOrUndefined, onConfigChange, randomValue, safeGetLogger, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { arrForEach, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage } from \"./StorageHelperFuncs\";\r\nimport { _DYN_COUNT, _DYN_DATE, _DYN_DAYS_OF_MONTH, _DYN_DISABLED, _DYN_GET_UTCDATE, _DYN_INTERVAL, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PRE_TRIGGER_DATE, _DYN_PUSH, _DYN_STRINGIFY } from \"./__DynamicConstants\";\r\nvar THROTTLE_STORAGE_PREFIX = \"appInsightsThrottle\";\r\nvar ThrottleMgr = /** @class */ (function () {\r\n    function ThrottleMgr(core, namePrefix) {\r\n        var _self = this;\r\n        var _canUseLocalStorage;\r\n        var _logger;\r\n        var _config;\r\n        var _localStorageObj;\r\n        var _isTriggered; //_isTriggered is to make sure that we only trigger throttle once a day\r\n        var _namePrefix;\r\n        var _queue;\r\n        var _isReady = false;\r\n        var _isSpecificDaysGiven = false;\r\n        _initConfig();\r\n        // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n        _self[\"_getDbgPlgTargets\"] = function () {\r\n            return [_queue];\r\n        };\r\n        _self.getConfig = function () {\r\n            return _config;\r\n        };\r\n        /**\r\n         * Check if it is the correct day to send message.\r\n         * If _isTriggered is true, even if canThrottle returns true, message will not be sent,\r\n         * because we only allow triggering sendMessage() once a day.\r\n         * @returns if the current date is the valid date to send message\r\n         */\r\n        _self.canThrottle = function (msgId) {\r\n            var localObj = _getLocalStorageObjByKey(msgId);\r\n            var cfg = _getCfgByKey(msgId);\r\n            return _canThrottle(cfg, _canUseLocalStorage, localObj);\r\n        };\r\n        /**\r\n         * Check if throttle is triggered on current day(UTC)\r\n         * if canThrottle returns false, isTriggered will return false\r\n         * @returns if throttle is triggered on current day(UTC)\r\n         */\r\n        _self.isTriggered = function (msgId) {\r\n            return _isTrigger(msgId);\r\n        };\r\n        /**\r\n         * Before isReady set to true, all message will be stored in queue.\r\n         * Message will only be sent out after isReady set to true.\r\n         * Initial and default value: false\r\n         * @returns isReady state\r\n         */\r\n        _self.isReady = function () {\r\n            return _isReady;\r\n        };\r\n        /**\r\n         * Flush all message with given message key in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flush = function (msgId) {\r\n            try {\r\n                var queue = _getQueueByKey(msgId);\r\n                if (queue && queue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var items = queue.slice(0);\r\n                    _queue[msgId] = [];\r\n                    arrForEach(items, function (item) {\r\n                        _flushMessage(item.msgID, item[_DYN_MESSAGE /* @min:%2emessage */], item.severity, false);\r\n                    });\r\n                    return true;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Flush all message in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flushAll = function () {\r\n            try {\r\n                if (_queue) {\r\n                    var result_1 = true;\r\n                    objForEachKey(_queue, function (key) {\r\n                        var isFlushed = _self.flush(parseInt(key));\r\n                        result_1 = result_1 && isFlushed;\r\n                    });\r\n                    return result_1;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Set isReady State\r\n         * if isReady set to true, message queue will be flushed automatically.\r\n         * @param isReady isReady State\r\n         * @pa\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.onReadyState = function (isReady, flushAll) {\r\n            if (flushAll === void 0) { flushAll = true; }\r\n            _isReady = isNullOrUndefined(isReady) ? true : isReady;\r\n            if (_isReady && flushAll) {\r\n                return _self.flushAll();\r\n            }\r\n            return null;\r\n        };\r\n        _self.sendMessage = function (msgID, message, severity) {\r\n            return _flushMessage(msgID, message, severity, true);\r\n        };\r\n        function _flushMessage(msgID, message, severity, saveUnsentMsg) {\r\n            if (_isReady) {\r\n                var isSampledIn = _canSampledIn(msgID);\r\n                if (!isSampledIn) {\r\n                    return;\r\n                }\r\n                var cfg = _getCfgByKey(msgID);\r\n                var localStorageObj = _getLocalStorageObjByKey(msgID);\r\n                var canThrottle = _canThrottle(cfg, _canUseLocalStorage, localStorageObj);\r\n                var throttled = false;\r\n                var number = 0;\r\n                var isTriggered = _isTrigger(msgID);\r\n                try {\r\n                    if (canThrottle && !isTriggered) {\r\n                        number = Math.min(cfg.limit.maxSendNumber, localStorageObj[_DYN_COUNT /* @min:%2ecount */] + 1);\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] = 0;\r\n                        throttled = true;\r\n                        _isTriggered[msgID] = true;\r\n                        localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */] = new Date();\r\n                    }\r\n                    else {\r\n                        _isTriggered[msgID] = canThrottle;\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] += 1;\r\n                    }\r\n                    var localStorageName = _getLocalStorageName(msgID);\r\n                    _resetLocalStorage(_logger, localStorageName, localStorageObj);\r\n                    for (var i = 0; i < number; i++) {\r\n                        _sendMessage(msgID, _logger, message, severity);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return {\r\n                    isThrottled: throttled,\r\n                    throttleNum: number\r\n                };\r\n            }\r\n            else {\r\n                if (!!saveUnsentMsg) {\r\n                    var queue = _getQueueByKey(msgID);\r\n                    queue[_DYN_PUSH /* @min:%2epush */]({\r\n                        msgID: msgID,\r\n                        message: message,\r\n                        severity: severity\r\n                    });\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        function _initConfig() {\r\n            _logger = safeGetLogger(core);\r\n            _isTriggered = {};\r\n            _localStorageObj = {};\r\n            _queue = {};\r\n            _config = {};\r\n            _setCfgByKey(109 /* _eInternalMessageId.DefaultThrottleMsgKey */);\r\n            _namePrefix = isNotNullOrUndefined(namePrefix) ? namePrefix : \"\";\r\n            core.addUnloadHook(onConfigChange(core.config, function (details) {\r\n                var coreConfig = details.cfg;\r\n                _canUseLocalStorage = utlCanUseLocalStorage();\r\n                var configMgr = coreConfig.throttleMgrCfg || {};\r\n                objForEachKey(configMgr, function (key, cfg) {\r\n                    _setCfgByKey(parseInt(key), cfg);\r\n                });\r\n            }));\r\n        }\r\n        function _getCfgByKey(msgID) {\r\n            return _config[msgID] || _config[109 /* _eInternalMessageId.DefaultThrottleMsgKey */];\r\n        }\r\n        function _setCfgByKey(msgID, config) {\r\n            var _a, _b;\r\n            try {\r\n                var cfg = config || {};\r\n                var curCfg = {};\r\n                curCfg[_DYN_DISABLED /* @min:%2edisabled */] = !!cfg[_DYN_DISABLED /* @min:%2edisabled */];\r\n                var configInterval = cfg[_DYN_INTERVAL /* @min:%2einterval */] || {};\r\n                _isSpecificDaysGiven = (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth) && (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth[_DYN_LENGTH /* @min:%2elength */]) > 0;\r\n                curCfg[_DYN_INTERVAL /* @min:%2einterval */] = _getIntervalConfig(configInterval);\r\n                var limit = {\r\n                    samplingRate: ((_a = cfg.limit) === null || _a === void 0 ? void 0 : _a.samplingRate) || 100,\r\n                    // dafault: every time sent only 1 event\r\n                    maxSendNumber: ((_b = cfg.limit) === null || _b === void 0 ? void 0 : _b.maxSendNumber) || 1\r\n                };\r\n                curCfg.limit = limit;\r\n                _config[msgID] = curCfg;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n        }\r\n        function _getIntervalConfig(interval) {\r\n            interval = interval || {};\r\n            var monthInterval = interval === null || interval === void 0 ? void 0 : interval.monthInterval;\r\n            var dayInterval = interval === null || interval === void 0 ? void 0 : interval.dayInterval;\r\n            // default: send data every 3 month each year\r\n            if (isNullOrUndefined(monthInterval) && isNullOrUndefined(dayInterval)) {\r\n                interval.monthInterval = 3;\r\n                if (!_isSpecificDaysGiven) {\r\n                    // default: send data on 28th\r\n                    interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */] = [28];\r\n                    _isSpecificDaysGiven = true;\r\n                }\r\n            }\r\n            interval = {\r\n                // dafault: sent every three months\r\n                monthInterval: interval === null || interval === void 0 ? void 0 : interval.monthInterval,\r\n                dayInterval: interval === null || interval === void 0 ? void 0 : interval.dayInterval,\r\n                daysOfMonth: interval === null || interval === void 0 ? void 0 : interval.daysOfMonth\r\n            };\r\n            return interval;\r\n        }\r\n        function _canThrottle(config, canUseLocalStorage, localStorageObj) {\r\n            if (config && !config[_DYN_DISABLED /* @min:%2edisabled */] && canUseLocalStorage && isNotNullOrUndefined(localStorageObj)) {\r\n                var curDate = _getThrottleDate();\r\n                var date = localStorageObj[_DYN_DATE /* @min:%2edate */];\r\n                var interval = config[_DYN_INTERVAL /* @min:%2einterval */];\r\n                var monthCheck = 1;\r\n                if (interval === null || interval === void 0 ? void 0 : interval.monthInterval) {\r\n                    var monthExpand = (curDate.getUTCFullYear() - date.getUTCFullYear()) * 12 + curDate.getUTCMonth() - date.getUTCMonth();\r\n                    monthCheck = _checkInterval(interval.monthInterval, 0, monthExpand);\r\n                }\r\n                var dayCheck = 1;\r\n                if (_isSpecificDaysGiven) {\r\n                    dayCheck = arrIndexOf(interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */], curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]());\r\n                }\r\n                else if (interval === null || interval === void 0 ? void 0 : interval.dayInterval) {\r\n                    var daySpan = Math.floor((curDate.getTime() - date.getTime()) / 86400000);\r\n                    dayCheck = _checkInterval(interval.dayInterval, 0, daySpan);\r\n                }\r\n                return monthCheck >= 0 && dayCheck >= 0;\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageName(msgKey, prefix) {\r\n            var fix = isNotNullOrUndefined(prefix) ? prefix : \"\";\r\n            if (msgKey) {\r\n                return THROTTLE_STORAGE_PREFIX + fix + \"-\" + msgKey;\r\n            }\r\n            return null;\r\n        }\r\n        // returns if throttle is triggered on current Date\r\n        function _isTriggeredOnCurDate(preTriggerDate) {\r\n            try {\r\n                if (preTriggerDate) {\r\n                    var curDate = new Date();\r\n                    return preTriggerDate.getUTCFullYear() === curDate.getUTCFullYear() &&\r\n                        preTriggerDate.getUTCMonth() === curDate.getUTCMonth() &&\r\n                        preTriggerDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]() === curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        // transfer local storage string value to object that identifies start date, current count and preTriggerDate\r\n        function _getLocalStorageObj(value, logger, storageName) {\r\n            try {\r\n                var storageObj = {\r\n                    date: _getThrottleDate(),\r\n                    count: 0\r\n                };\r\n                if (value) {\r\n                    var obj = JSON.parse(value);\r\n                    var curObj = {\r\n                        date: _getThrottleDate(obj[_DYN_DATE /* @min:%2edate */]) || storageObj[_DYN_DATE /* @min:%2edate */],\r\n                        count: obj[_DYN_COUNT /* @min:%2ecount */] || storageObj[_DYN_COUNT /* @min:%2ecount */],\r\n                        preTriggerDate: obj.preTriggerDate ? _getThrottleDate(obj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]) : undefined\r\n                    };\r\n                    return curObj;\r\n                }\r\n                else {\r\n                    _resetLocalStorage(logger, storageName, storageObj);\r\n                    return storageObj;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        // if datestr is not defined, current date will be returned\r\n        function _getThrottleDate(dateStr) {\r\n            // if new Date() can't be created through the provided dateStr, null will be returned.\r\n            try {\r\n                if (dateStr) {\r\n                    var date = new Date(dateStr);\r\n                    //make sure it is a valid Date Object\r\n                    if (!isNaN(date.getDate())) {\r\n                        return date;\r\n                    }\r\n                }\r\n                else {\r\n                    return new Date();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _resetLocalStorage(logger, storageName, obj) {\r\n            try {\r\n                return utlSetLocalStorage(logger, storageName, strTrim(JSON[_DYN_STRINGIFY /* @min:%2estringify */](obj)));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _checkInterval(interval, start, current) {\r\n            if (interval <= 0) {\r\n                return 1;\r\n            }\r\n            // count from start year\r\n            return (current >= start) && (current - start) % interval == 0 ? Math.floor((current - start) / interval) + 1 : -1;\r\n        }\r\n        function _sendMessage(msgID, logger, message, severity) {\r\n            _throwInternal(logger, severity || 1 /* eLoggingSeverity.CRITICAL */, msgID, message);\r\n        }\r\n        // NOTE: config.limit.samplingRate is set to 4 decimal places,\r\n        // so config.limit.samplingRate = 1 means 0.0001%\r\n        function _canSampledIn(msgID) {\r\n            try {\r\n                var cfg = _getCfgByKey(msgID);\r\n                return randomValue(1000000) <= cfg.limit.samplingRate;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageObjByKey(key) {\r\n            try {\r\n                var curObj = _localStorageObj[key];\r\n                if (!curObj) {\r\n                    var localStorageName = _getLocalStorageName(key, _namePrefix);\r\n                    curObj = _getLocalStorageObj(utlGetLocalStorage(_logger, localStorageName), _logger, localStorageName);\r\n                    _localStorageObj[key] = curObj;\r\n                }\r\n                return _localStorageObj[key];\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _isTrigger(key) {\r\n            var isTrigger = _isTriggered[key];\r\n            if (isNullOrUndefined(isTrigger)) {\r\n                isTrigger = false;\r\n                var localStorageObj = _getLocalStorageObjByKey(key);\r\n                if (localStorageObj) {\r\n                    isTrigger = _isTriggeredOnCurDate(localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]);\r\n                }\r\n                _isTriggered[key] = isTrigger;\r\n            }\r\n            return _isTriggered[key];\r\n        }\r\n        function _getQueueByKey(key) {\r\n            _queue = _queue || {};\r\n            if (isNullOrUndefined(_queue[key])) {\r\n                _queue[key] = [];\r\n            }\r\n            return _queue[key];\r\n        }\r\n    }\r\n    return ThrottleMgr;\r\n}());\r\nexport { ThrottleMgr };\r\n//# sourceMappingURL=ThrottleMgr.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrReduce, objKeys, strEndsWith } from \"@microsoft/applicationinsights-core-js\";\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { _DYN_INGESTIONENDPOINT, _DYN_LENGTH, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _FIELDS_SEPARATOR = \";\";\r\nvar _FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\nexport function parseConnectionString(connectionString) {\r\n    if (!connectionString) {\r\n        return {};\r\n    }\r\n    var kvPairs = connectionString[_DYN_SPLIT /* @min:%2esplit */](_FIELDS_SEPARATOR);\r\n    var result = arrReduce(kvPairs, function (fields, kv) {\r\n        var kvParts = kv[_DYN_SPLIT /* @min:%2esplit */](_FIELD_KEY_VALUE_SEPARATOR);\r\n        if (kvParts[_DYN_LENGTH /* @min:%2elength */] === 2) { // only save fields with valid formats\r\n            var key = kvParts[0][_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            var value = kvParts[1];\r\n            fields[key] = value;\r\n        }\r\n        return fields;\r\n    }, {});\r\n    if (objKeys(result)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // this is a valid connection string, so parse the results\r\n        if (result.endpointsuffix) {\r\n            // apply the default endpoints\r\n            var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n        }\r\n        // apply user override endpoint or the default endpoints\r\n        result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || DEFAULT_BREEZE_ENDPOINT;\r\n        if (strEndsWith(result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */], \"/\")) {\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */].slice(0, -1);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport var ConnectionStringParser = {\r\n    parse: parseConnectionString\r\n};\r\n//# sourceMappingURL=ConnectionStringParser.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strNotSpecified } from \"../../Constants\";\r\nimport { _DYN_NAME } from \"../../__DynamicConstants\";\r\nimport { dataSanitizeString } from \"./DataSanitizer\";\r\nvar Envelope = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = this;\r\n        var _self = this;\r\n        _self.ver = 1;\r\n        _self.sampleRate = 100.0;\r\n        _self.tags = {};\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self.data = data;\r\n        _self.time = toISOString(new Date());\r\n        _self.aiDataContract = {\r\n            time: 1 /* FieldType.Required */,\r\n            iKey: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? 4 /* FieldType.Hidden */ : 1 /* FieldType.Required */;\r\n            },\r\n            tags: 1 /* FieldType.Required */,\r\n            data: 1 /* FieldType.Required */\r\n        };\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}());\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, arrMap, isArray, isError, isFunction, isNullOrUndefined, isObject, isString, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getWindow, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_ASSEMBLY, _DYN_EXCEPTIONS, _DYN_FILE_NAME, _DYN_HAS_FULL_STACK, _DYN_IS_MANUAL, _DYN_LENGTH, _DYN_LEVEL, _DYN_LINE, _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_METHOD, _DYN_NAME, _DYN_PARSED_STACK, _DYN_PROBLEM_GROUP, _DYN_PROPERTIES, _DYN_PUSH, _DYN_SEVERITY_LEVEL, _DYN_SIZE_IN_BYTES, _DYN_SPLIT, _DYN_STRINGIFY, _DYN_TO_STRING, _DYN_TYPE_NAME, _DYN__CREATE_FROM_INTERFA1 } from \"../__DynamicConstants\";\r\nimport { dataSanitizeException, dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar NoMethod = \"<no_method>\";\r\nvar strError = \"error\";\r\nvar strStack = \"stack\";\r\nvar strStackDetails = \"stackDetails\";\r\nvar strErrorSrc = \"errorSrc\";\r\nvar strMessage = \"message\";\r\nvar strDescription = \"description\";\r\nfunction _stringify(value, convertToString) {\r\n    var result = value;\r\n    if (result && !isString(result)) {\r\n        if (JSON && JSON[_DYN_STRINGIFY /* @min:%2estringify */]) {\r\n            result = JSON[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            if (convertToString && (!result || result === \"{}\")) {\r\n                if (isFunction(value[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n                    result = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                }\r\n                else {\r\n                    result = \"\" + value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = \"\" + value + \" - (Missing JSON.stringify)\";\r\n        }\r\n    }\r\n    return result || \"\";\r\n}\r\nfunction _formatMessage(theEvent, errorType) {\r\n    var evtMessage = theEvent;\r\n    if (theEvent) {\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;\r\n        }\r\n        // Make sure the message is a string\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            // tslint:disable-next-line: prefer-conditional-expression\r\n            evtMessage = _stringify(evtMessage, true);\r\n        }\r\n        if (theEvent[\"filename\"]) {\r\n            // Looks like an event object with filename\r\n            evtMessage = evtMessage + \" @\" + (theEvent[\"filename\"] || \"\") + \":\" + (theEvent[\"lineno\"] || \"?\") + \":\" + (theEvent[\"colno\"] || \"?\");\r\n        }\r\n    }\r\n    // Automatically add the error type to the message if it does already appear to be present\r\n    if (errorType && errorType !== \"String\" && errorType !== \"Object\" && errorType !== \"Error\" && strIndexOf(evtMessage || \"\", errorType) === -1) {\r\n        evtMessage = errorType + \": \" + evtMessage;\r\n    }\r\n    return evtMessage || \"\";\r\n}\r\nfunction _isExceptionDetailsInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return \"hasFullStack\" in value && \"typeName\" in value;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isStackDetails(details) {\r\n    return details && details.src && isString(details.src) && details.obj && isArray(details.obj);\r\n}\r\nfunction _convertStackObj(errorStack) {\r\n    var src = errorStack || \"\";\r\n    if (!isString(src)) {\r\n        if (isString(src[strStack])) {\r\n            src = src[strStack];\r\n        }\r\n        else {\r\n            src = \"\" + src;\r\n        }\r\n    }\r\n    var items = src[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    return {\r\n        src: src,\r\n        obj: items\r\n    };\r\n}\r\nfunction _getOperaStack(errorMessage) {\r\n    var stack = [];\r\n    var lines = errorMessage[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    for (var lp = 0; lp < lines[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        var entry = lines[lp];\r\n        if (lines[lp + 1]) {\r\n            entry += \"@\" + lines[lp + 1];\r\n            lp++;\r\n        }\r\n        stack[_DYN_PUSH /* @min:%2epush */](entry);\r\n    }\r\n    return {\r\n        src: errorMessage,\r\n        obj: stack\r\n    };\r\n}\r\nfunction _getStackFromErrorObj(errorObj) {\r\n    var details = null;\r\n    if (errorObj) {\r\n        try {\r\n            /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot\r\n            notation for undefined objects and we don't want to loose the error from being reported */\r\n            if (errorObj[strStack]) {\r\n                // Chrome/Firefox\r\n                details = _convertStackObj(errorObj[strStack]);\r\n            }\r\n            else if (errorObj[strError] && errorObj[strError][strStack]) {\r\n                // Edge error event provides the stack and error object\r\n                details = _convertStackObj(errorObj[strError][strStack]);\r\n            }\r\n            else if (errorObj[\"exception\"] && errorObj.exception[strStack]) {\r\n                details = _convertStackObj(errorObj.exception[strStack]);\r\n            }\r\n            else if (_isStackDetails(errorObj)) {\r\n                details = errorObj;\r\n            }\r\n            else if (_isStackDetails(errorObj[strStackDetails])) {\r\n                details = errorObj[strStackDetails];\r\n            }\r\n            else if (getWindow() && getWindow()[\"opera\"] && errorObj[strMessage]) {\r\n                // Opera\r\n                details = _getOperaStack(errorObj[_DYN_MESSAGE /* @min:%2emessage */]);\r\n            }\r\n            else if (errorObj[\"reason\"] && errorObj.reason[strStack]) {\r\n                // UnhandledPromiseRejection\r\n                details = _convertStackObj(errorObj.reason[strStack]);\r\n            }\r\n            else if (isString(errorObj)) {\r\n                details = _convertStackObj(errorObj);\r\n            }\r\n            else {\r\n                var evtMessage = errorObj[strMessage] || errorObj[strDescription] || \"\";\r\n                if (isString(errorObj[strErrorSrc])) {\r\n                    if (evtMessage) {\r\n                        evtMessage += \"\\n\";\r\n                    }\r\n                    evtMessage += \" from \" + errorObj[strErrorSrc];\r\n                }\r\n                if (evtMessage) {\r\n                    details = _convertStackObj(evtMessage);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // something unexpected happened so to avoid failing to report any error lets swallow the exception\r\n            // and fallback to the callee/caller method\r\n            details = _convertStackObj(e);\r\n        }\r\n    }\r\n    return details || {\r\n        src: \"\",\r\n        obj: null\r\n    };\r\n}\r\nfunction _formatStackTrace(stackDetails) {\r\n    var stack = \"\";\r\n    if (stackDetails) {\r\n        if (stackDetails.obj) {\r\n            arrForEach(stackDetails.obj, function (entry) {\r\n                stack += entry + \"\\n\";\r\n            });\r\n        }\r\n        else {\r\n            stack = stackDetails.src || \"\";\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nfunction _parseStack(stack) {\r\n    var parsedStack;\r\n    var frames = stack.obj;\r\n    if (frames && frames[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        parsedStack = [];\r\n        var level_1 = 0;\r\n        var totalSizeInBytes_1 = 0;\r\n        arrForEach(frames, function (frame) {\r\n            var theFrame = frame[_DYN_TO_STRING /* @min:%2etoString */]();\r\n            if (_StackFrame.regex.test(theFrame)) {\r\n                var parsedFrame = new _StackFrame(theFrame, level_1++);\r\n                totalSizeInBytes_1 += parsedFrame[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                parsedStack[_DYN_PUSH /* @min:%2epush */](parsedFrame);\r\n            }\r\n        });\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        var exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {\r\n            var left = 0;\r\n            var right = parsedStack[_DYN_LENGTH /* @min:%2elength */] - 1;\r\n            var size = 0;\r\n            var acceptedLeft = left;\r\n            var acceptedRight = right;\r\n            while (left < right) {\r\n                // check size\r\n                var lSize = parsedStack[left][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                var rSize = parsedStack[right][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                size += lSize + rSize;\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    var howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n    return parsedStack;\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType[_DYN_NAME /* @min:%2ename */] || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,200})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor[_DYN_TO_STRING /* @min:%2etoString */]());\r\n                typeName = (results && results[_DYN_LENGTH /* @min:%2elength */] > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\n/**\r\n * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.\r\n * @param errorObj - The supplied errorObj\r\n */\r\nexport function _formatErrorCode(errorObj) {\r\n    if (errorObj) {\r\n        try {\r\n            if (!isString(errorObj)) {\r\n                var errorType = _getErrorType(errorObj);\r\n                var result = _stringify(errorObj, false);\r\n                if (!result || result === \"{}\") {\r\n                    if (errorObj[strError]) {\r\n                        // Looks like an MS Error Event\r\n                        errorObj = errorObj[strError];\r\n                        errorType = _getErrorType(errorObj);\r\n                    }\r\n                    result = _stringify(errorObj, true);\r\n                }\r\n                if (strIndexOf(result, errorType) !== 0 && errorType !== \"String\") {\r\n                    return errorType + \":\" + result;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n        }\r\n    }\r\n    // Fallback to just letting the object format itself into a string\r\n    return \"\" + (errorObj || \"\");\r\n}\r\nvar Exception = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            exceptions: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n        if (!_isExceptionInternal(exception)) {\r\n            if (!properties) {\r\n                properties = {};\r\n            }\r\n            if (id) {\r\n                properties.id = id;\r\n            }\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = [new _ExceptionDetails(logger, exception, properties)];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n            }\r\n            if (id) {\r\n                _self.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */] || [];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = exception[_DYN_PROPERTIES /* @min:%2eproperties */];\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = exception[_DYN_MEASUREMENTS /* @min:%2emeasurements */];\r\n            if (exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */]) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */];\r\n            }\r\n            if (exception.id) {\r\n                _self.id = exception.id;\r\n                exception[_DYN_PROPERTIES /* @min:%2eproperties */].id = exception.id;\r\n            }\r\n            if (exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */]) {\r\n                _self[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */] = exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */];\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!isNullOrUndefined(exception[_DYN_IS_MANUAL /* @min:%2eisManual */])) {\r\n                _self[_DYN_IS_MANUAL /* @min:%2eisManual */] = exception[_DYN_IS_MANUAL /* @min:%2eisManual */];\r\n            }\r\n        }\r\n    }\r\n    Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {\r\n        var _a;\r\n        var errorType = _getErrorType(error || evt || message);\r\n        return _a = {},\r\n            _a[_DYN_MESSAGE /* @min:message */] = _formatMessage(message, errorType),\r\n            _a.url = url,\r\n            _a.lineNumber = lineNumber,\r\n            _a.columnNumber = columnNumber,\r\n            _a.error = _formatErrorCode(error || evt || message),\r\n            _a.evt = _formatErrorCode(evt || message),\r\n            _a[_DYN_TYPE_NAME /* @min:typeName */] = errorType,\r\n            _a.stackDetails = _getStackFromErrorObj(stack || error || evt),\r\n            _a.errorSrc = errorSrc,\r\n            _a;\r\n    };\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */]\r\n            && arrMap(exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */], function (ex) { return _ExceptionDetails[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign(__assign({}, exception), { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a;\r\n        var _b = this, exceptions = _b.exceptions, properties = _b.properties, measurements = _b.measurements, severityLevel = _b.severityLevel, problemGroup = _b.problemGroup, id = _b.id, isManual = _b.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return _a = {\r\n                ver: \"4.0\"\r\n            },\r\n            _a[_DYN_EXCEPTIONS /* @min:exceptions */] = exceptionDetailsInterface,\r\n            _a.severityLevel = severityLevel,\r\n            _a.properties = properties,\r\n            _a.measurements = measurements,\r\n            _a.problemGroup = problemGroup,\r\n            _a.id = id,\r\n            _a.isManual = isManual,\r\n            _a;\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        var _a;\r\n        return {\r\n            exceptions: [\r\n                (_a = {},\r\n                    _a[_DYN_HAS_FULL_STACK /* @min:hasFullStack */] = true,\r\n                    _a.message = message,\r\n                    _a.stack = details,\r\n                    _a.typeName = typeName,\r\n                    _a)\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    Exception.formatError = _formatErrorCode;\r\n    return Exception;\r\n}());\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function () {\r\n    function _ExceptionDetails(logger, exception, properties) {\r\n        this.aiDataContract = {\r\n            id: 0 /* FieldType.Default */,\r\n            outerId: 0 /* FieldType.Default */,\r\n            typeName: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            hasFullStack: 0 /* FieldType.Default */,\r\n            stack: 0 /* FieldType.Default */,\r\n            parsedStack: 2 /* FieldType.Array */\r\n        };\r\n        var _self = this;\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            var evt = error && error.evt;\r\n            if (!isError(error)) {\r\n                error = error[strError] || evt || error;\r\n            }\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, _formatMessage(exception || error, _self[_DYN_TYPE_NAME /* @min:%2etypeName */])) || strNotSpecified;\r\n            var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = _parseStack(stack);\r\n            // after parsedStack is inited, iterate over each frame object, sanitize its assembly field\r\n            if (isArray(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */])) {\r\n                arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) {\r\n                    frame[_DYN_ASSEMBLY /* @min:%2eassembly */] = dataSanitizeString(logger, frame[_DYN_ASSEMBLY /* @min:%2eassembly */]);\r\n                    frame[_DYN_FILE_NAME /* @min:%2efileName */] = dataSanitizeString(logger, frame[_DYN_FILE_NAME /* @min:%2efileName */]);\r\n                });\r\n            }\r\n            _self[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));\r\n            _self.hasFullStack = isArray(_self.parsedStack) && _self.parsedStack[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n            if (properties) {\r\n                properties[_DYN_TYPE_NAME /* @min:%2etypeName */] = properties[_DYN_TYPE_NAME /* @min:%2etypeName */] || _self[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = exception[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = exception[_DYN_MESSAGE /* @min:%2emessage */];\r\n            _self[strStack] = exception[strStack];\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] || [];\r\n            _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */] = exception[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */];\r\n        }\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var _a;\r\n        var _self = this;\r\n        var parsedStack = _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = (_a = {\r\n                id: _self.id,\r\n                outerId: _self.outerId,\r\n                typeName: _self[_DYN_TYPE_NAME /* @min:%2etypeName */],\r\n                message: _self[_DYN_MESSAGE /* @min:%2emessage */],\r\n                hasFullStack: _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */],\r\n                stack: _self[strStack]\r\n            },\r\n            _a[_DYN_PARSED_STACK /* @min:parsedStack */] = parsedStack || undefined,\r\n            _a);\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return _StackFrame[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](frame); }))\r\n            || exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */];\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign(__assign({}, exception), { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    return _ExceptionDetails;\r\n}());\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function () {\r\n    function _StackFrame(sourceFrame, level) {\r\n        this.aiDataContract = {\r\n            level: 1 /* FieldType.Required */,\r\n            method: 1 /* FieldType.Required */,\r\n            assembly: 0 /* FieldType.Default */,\r\n            fileName: 0 /* FieldType.Default */,\r\n            line: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        // Not converting this to isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = level;\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = NoMethod;\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = strTrim(frame);\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = \"\";\r\n            _self[_DYN_LINE /* @min:%2eline */] = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches[_DYN_LENGTH /* @min:%2elength */] >= 5) {\r\n                _self[_DYN_METHOD /* @min:%2emethod */] = strTrim(matches[2]) || _self[_DYN_METHOD /* @min:%2emethod */];\r\n                _self[_DYN_FILE_NAME /* @min:%2efileName */] = strTrim(matches[4]);\r\n                _self[_DYN_LINE /* @min:%2eline */] = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = sourceFrame[_DYN_LEVEL /* @min:%2elevel */];\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = sourceFrame[_DYN_METHOD /* @min:%2emethod */];\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = sourceFrame[_DYN_ASSEMBLY /* @min:%2eassembly */];\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = sourceFrame[_DYN_FILE_NAME /* @min:%2efileName */];\r\n            _self[_DYN_LINE /* @min:%2eline */] = sourceFrame[_DYN_LINE /* @min:%2eline */];\r\n            _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        }\r\n        _self.sizeInBytes += _self.method[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.fileName[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.assembly[_DYN_LENGTH /* @min:%2elength */];\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] += _StackFrame.baseSize;\r\n        _self.sizeInBytes += _self.level.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.line.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        var _self = this;\r\n        return {\r\n            level: _self[_DYN_LEVEL /* @min:%2elevel */],\r\n            method: _self[_DYN_METHOD /* @min:%2emethod */],\r\n            assembly: _self[_DYN_ASSEMBLY /* @min:%2eassembly */],\r\n            fileName: _self[_DYN_FILE_NAME /* @min:%2efileName */],\r\n            line: _self[_DYN_LINE /* @min:%2eline */]\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?[\\s]{0,50}([^\\@\\()]+?)[\\s]{0,50}(\\@|\\()([^\\(\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            name: 1 /* FieldType.Required */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 1 /* FieldType.Required */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */\r\n        };\r\n        /**\r\n         * Metric type. Single measurement or the aggregated value.\r\n         */\r\n        this.kind = 0 /* DataPointType.Measurement */;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_COUNT, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { DataPoint } from \"./Common/DataPoint\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Metric = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            metrics: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        var dataPoint = new DataPoint();\r\n        dataPoint[_DYN_COUNT /* @min:%2ecount */] = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        dataPoint.value = value;\r\n        dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;\r\n        _self.metrics = [dataPoint];\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}());\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar strEmpty = \"\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString()[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = strEmpty + totalms % 1000;\r\n    var sec = strEmpty + Math.floor(totalms / 1000) % 60;\r\n    var min = strEmpty + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = strEmpty + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms[_DYN_LENGTH /* @min:%2elength */] === 1 ? \"00\" + ms : ms[_DYN_LENGTH /* @min:%2elength */] === 2 ? \"0\" + ms : ms;\r\n    sec = sec[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + sec : sec;\r\n    min = min[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + min : min;\r\n    hour = hour[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : strEmpty) + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageView = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            id: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = dataSanitizeId(logger, id);\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(durationMs);\r\n        }\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}());\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { AjaxHelperParseDependencyPath } from \"../Util\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar RemoteDependencyData = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        this.aiDataContract = {\r\n            id: 1 /* FieldType.Required */,\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            resultCode: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            success: 0 /* FieldType.Default */,\r\n            data: 0 /* FieldType.Default */,\r\n            target: 0 /* FieldType.Default */,\r\n            type: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 0 /* FieldType.Default */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */,\r\n            dependencyKind: 0 /* FieldType.Default */,\r\n            dependencySource: 0 /* FieldType.Default */,\r\n            commandName: 0 /* FieldType.Default */,\r\n            dependencyTypeName: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = id;\r\n        _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(value);\r\n        _self.success = success;\r\n        _self.resultCode = resultCode + \"\";\r\n        _self.type = dataSanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _self.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _self.target = dataSanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _self.target = \"\".concat(_self.target, \" | \").concat(correlationContext);\r\n        }\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, dependencyFields[_DYN_NAME /* @min:%2ename */]);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}());\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties } from \"./Common/DataSanitizer\";\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        message = message || strNotSpecified;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, message);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n        }\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES, _DYN_RECEIVED_RESPONSE } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageViewPerformance = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            perfTotal: 0 /* FieldType.Default */,\r\n            networkConnect: 0 /* FieldType.Default */,\r\n            sentRequest: 0 /* FieldType.Default */,\r\n            receivedResponse: 0 /* FieldType.Default */,\r\n            domProcessing: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _self.domProcessing = cs4BaseData.domProcessing;\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = cs4BaseData[_DYN_DURATION /* @min:%2eduration */];\r\n            _self.networkConnect = cs4BaseData.networkConnect;\r\n            _self.perfTotal = cs4BaseData.perfTotal;\r\n            _self[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */] = cs4BaseData[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */];\r\n            _self.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}());\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Data = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            baseType: 1 /* FieldType.Required */,\r\n            baseData: 1 /* FieldType.Required */\r\n        };\r\n        this.baseType = baseType;\r\n        this.baseData = data;\r\n    }\r\n    return Data;\r\n}());\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel = createEnumStyle({\r\n    Verbose: 0 /* eSeverityLevel.Verbose */,\r\n    Information: 1 /* eSeverityLevel.Information */,\r\n    Warning: 2 /* eSeverityLevel.Warning */,\r\n    Error: 3 /* eSeverityLevel.Error */,\r\n    Critical: 4 /* eSeverityLevel.Critical */\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isNullOrUndefined } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_EXTENSION_CONFIG } from \"../__DynamicConstants\";\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config[_DYN_EXTENSION_CONFIG /* @min:%2eextensionConfig */] && config[_DYN_EXTENSION_CONFIG /* @min:%2eextensionConfig */][identifier] && !isNullOrUndefined(config[_DYN_EXTENSION_CONFIG /* @min:%2eextensionConfig */][identifier][field])) {\r\n            configValue = config[_DYN_EXTENSION_CONFIG /* @min:%2eextensionConfig */][identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { createClassFromInterface } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _aiNameFunc(baseName) {\r\n    var aiName = \"ai.\" + baseName + \".\";\r\n    return function (name) {\r\n        return aiName + name;\r\n    };\r\n}\r\nvar _aiApplication = _aiNameFunc(\"application\");\r\nvar _aiDevice = _aiNameFunc(\"device\");\r\nvar _aiLocation = _aiNameFunc(\"location\");\r\nvar _aiOperation = _aiNameFunc(\"operation\");\r\nvar _aiSession = _aiNameFunc(\"session\");\r\nvar _aiUser = _aiNameFunc(\"user\");\r\nvar _aiCloud = _aiNameFunc(\"cloud\");\r\nvar _aiInternal = _aiNameFunc(\"internal\");\r\nvar ContextTagKeys = /** @class */ (function (_super) {\r\n    __extends(ContextTagKeys, _super);\r\n    function ContextTagKeys() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return ContextTagKeys;\r\n}(createClassFromInterface({\r\n    applicationVersion: _aiApplication(\"ver\"),\r\n    applicationBuild: _aiApplication(\"build\"),\r\n    applicationTypeId: _aiApplication(\"typeId\"),\r\n    applicationId: _aiApplication(\"applicationId\"),\r\n    applicationLayer: _aiApplication(\"layer\"),\r\n    deviceId: _aiDevice(\"id\"),\r\n    deviceIp: _aiDevice(\"ip\"),\r\n    deviceLanguage: _aiDevice(\"language\"),\r\n    deviceLocale: _aiDevice(\"locale\"),\r\n    deviceModel: _aiDevice(\"model\"),\r\n    deviceFriendlyName: _aiDevice(\"friendlyName\"),\r\n    deviceNetwork: _aiDevice(\"network\"),\r\n    deviceNetworkName: _aiDevice(\"networkName\"),\r\n    deviceOEMName: _aiDevice(\"oemName\"),\r\n    deviceOS: _aiDevice(\"os\"),\r\n    deviceOSVersion: _aiDevice(\"osVersion\"),\r\n    deviceRoleInstance: _aiDevice(\"roleInstance\"),\r\n    deviceRoleName: _aiDevice(\"roleName\"),\r\n    deviceScreenResolution: _aiDevice(\"screenResolution\"),\r\n    deviceType: _aiDevice(\"type\"),\r\n    deviceMachineName: _aiDevice(\"machineName\"),\r\n    deviceVMName: _aiDevice(\"vmName\"),\r\n    deviceBrowser: _aiDevice(\"browser\"),\r\n    deviceBrowserVersion: _aiDevice(\"browserVersion\"),\r\n    locationIp: _aiLocation(\"ip\"),\r\n    locationCountry: _aiLocation(\"country\"),\r\n    locationProvince: _aiLocation(\"province\"),\r\n    locationCity: _aiLocation(\"city\"),\r\n    operationId: _aiOperation(\"id\"),\r\n    operationName: _aiOperation(\"name\"),\r\n    operationParentId: _aiOperation(\"parentId\"),\r\n    operationRootId: _aiOperation(\"rootId\"),\r\n    operationSyntheticSource: _aiOperation(\"syntheticSource\"),\r\n    operationCorrelationVector: _aiOperation(\"correlationVector\"),\r\n    sessionId: _aiSession(\"id\"),\r\n    sessionIsFirst: _aiSession(\"isFirst\"),\r\n    sessionIsNew: _aiSession(\"isNew\"),\r\n    userAccountAcquisitionDate: _aiUser(\"accountAcquisitionDate\"),\r\n    userAccountId: _aiUser(\"accountId\"),\r\n    userAgent: _aiUser(\"userAgent\"),\r\n    userId: _aiUser(\"id\"),\r\n    userStoreRegion: _aiUser(\"storeRegion\"),\r\n    userAuthUserId: _aiUser(\"authUserId\"),\r\n    userAnonymousUserAcquisitionDate: _aiUser(\"anonUserAcquisitionDate\"),\r\n    userAuthenticatedUserAcquisitionDate: _aiUser(\"authUserAcquisitionDate\"),\r\n    cloudName: _aiCloud(\"name\"),\r\n    cloudRole: _aiCloud(\"role\"),\r\n    cloudRoleVer: _aiCloud(\"roleVer\"),\r\n    cloudRoleInstance: _aiCloud(\"roleInstance\"),\r\n    cloudEnvironment: _aiCloud(\"environment\"),\r\n    cloudLocation: _aiCloud(\"location\"),\r\n    cloudDeploymentUnit: _aiCloud(\"deploymentUnit\"),\r\n    internalNodeName: _aiInternal(\"nodeName\"),\r\n    internalSdkVersion: _aiInternal(\"sdkVersion\"),\r\n    internalAgentVersion: _aiInternal(\"agentVersion\"),\r\n    internalSnippet: _aiInternal(\"snippet\"),\r\n    internalSdkSrc: _aiInternal(\"sdkSrc\")\r\n})));\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isNullOrUndefined, objForEachKey, throwError, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIkey, strNotSpecified } from \"./Constants\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { _DYN_NAME } from \"./__DynamicConstants\";\r\n/**\r\n * Create a telemetry item that the 1DS channel understands\r\n * @param item - domain specific properties; part B\r\n * @param baseType - telemetry item type. ie PageViewData\r\n * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n * @param customProperties - user defined custom properties; part C\r\n * @param systemProperties - system properties that are added to the context; part A\r\n * @returns ITelemetryItem that is sent to channel\r\n */\r\nexport function createTelemetryItem(item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n    var _a;\r\n    envelopeName = dataSanitizeString(logger, envelopeName) || strNotSpecified;\r\n    if (isNullOrUndefined(item) ||\r\n        isNullOrUndefined(baseType) ||\r\n        isNullOrUndefined(envelopeName)) {\r\n        throwError(\"Input doesn't contain all required fields\");\r\n    }\r\n    var iKey = \"\";\r\n    if (item[strIkey]) {\r\n        iKey = item[strIkey];\r\n        delete item[strIkey];\r\n    }\r\n    var telemetryItem = (_a = {},\r\n        _a[_DYN_NAME /* @min:name */] = envelopeName,\r\n        _a.time = toISOString(new Date()),\r\n        _a.iKey = iKey,\r\n        _a.ext = systemProperties ? systemProperties : {},\r\n        _a.tags = [],\r\n        _a.data = {},\r\n        _a.baseType = baseType,\r\n        _a.baseData = item // Part B\r\n    ,\r\n        _a);\r\n    // Part C\r\n    if (!isNullOrUndefined(customProperties)) {\r\n        objForEachKey(customProperties, function (prop, value) {\r\n            telemetryItem.data[prop] = value;\r\n        });\r\n    }\r\n    return telemetryItem;\r\n}\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item - domain specific properties; part B\r\n     * @param baseType - telemetry item type. ie PageViewData\r\n     * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties - user defined custom properties; part C\r\n     * @param systemProperties - system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = createTelemetryItem;\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { ContextTagKeys } from \"./Contracts/ContextTagKeys\";\r\nexport var Extensions = {\r\n    UserExt: \"user\",\r\n    DeviceExt: \"device\",\r\n    TraceExt: \"trace\",\r\n    WebExt: \"web\",\r\n    AppExt: \"app\",\r\n    OSExt: \"os\",\r\n    SessionExt: \"ses\",\r\n    SDKExt: \"sdk\"\r\n};\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isFunction } from \"@microsoft/applicationinsights-core-js\";\r\nexport function createDomEvent(eventName) {\r\n    var event = null;\r\n    if (isFunction(Event)) { // Use Event constructor when available\r\n        event = new Event(eventName);\r\n    }\r\n    else { // Event has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n    }\r\n    return event;\r\n}\r\n//# sourceMappingURL=DomHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_PUSH } from \"./__DynamicConstants\";\r\nfunction _disableEvents(target, evtNamespace) {\r\n    eventOff(target, null, null, evtNamespace);\r\n}\r\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\r\nexport function createOfflineListener(parentEvtNamespace) {\r\n    var _document = getDocument();\r\n    var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\r\n    var _isListening = false;\r\n    var listenerList = [];\r\n    // Set the initial state\r\n    // rState is changed by the browser, both via events and when we check the navigator.onLine property\r\n    var rState = 1 /* eOfflineValue.Online */;\r\n    if (_navigator && !isNullOrUndefined(_navigator.onLine) && !_navigator.onLine) { // navigator.onLine is undefined in react-native\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n    }\r\n    // ustate is changed by the user calling setOnlineState\r\n    var uState = 0 /* eOfflineValue.Unknown */;\r\n    // current state would be updated each time rState or uState is changed\r\n    // it is a resolved value of rState and uState\r\n    var _currentState = calCurrentState();\r\n    var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\r\n    try {\r\n        if (_enableEvents(getWindow())) {\r\n            _isListening = true;\r\n        }\r\n        if (_document) {\r\n            // Also attach to the document.body or document\r\n            var target = _document.body || _document;\r\n            if (target.ononline) {\r\n                if (_enableEvents(target)) {\r\n                    _isListening = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this makes react-native less angry\r\n        _isListening = false;\r\n    }\r\n    function _enableEvents(target) {\r\n        var enabled = false;\r\n        if (target) {\r\n            enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\r\n            if (enabled) {\r\n                eventOn(target, \"offline\", _setOffline, _evtNamespace);\r\n            }\r\n        }\r\n        return enabled;\r\n    }\r\n    function _isOnline() {\r\n        return _currentState;\r\n    }\r\n    function calCurrentState() {\r\n        if (uState === 2 /* eOfflineValue.Offline */ || rState === 2 /* eOfflineValue.Offline */) {\r\n            return false;\r\n        }\r\n        return true; // if both unknown, then we assume the network is good\r\n    }\r\n    function listnerNoticeCheck() {\r\n        // we were offline and are now online or we were online and now offline\r\n        var newState = calCurrentState();\r\n        if (_currentState !== newState) {\r\n            _currentState = newState; // use the resolved state to update\r\n            // send all the callbacks with the current state\r\n            arrForEach(listenerList, function (callback) {\r\n                var offlineState = {\r\n                    isOnline: _currentState,\r\n                    rState: rState,\r\n                    uState: uState\r\n                };\r\n                try {\r\n                    callback(offlineState);\r\n                }\r\n                catch (e) {\r\n                    // Do nothing, just making sure we run all of the callbacks\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function setOnlineState(newState) {\r\n        uState = newState;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOnline() {\r\n        rState = 1 /* eOfflineValue.Online */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOffline() {\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _unload() {\r\n        var win = getWindow();\r\n        if (win && _isListening) {\r\n            _disableEvents(win, _evtNamespace);\r\n            if (_document) {\r\n                // Also attach to the document.body or document\r\n                var target = _document.body || _document;\r\n                if (!isUndefined(target.ononline)) {\r\n                    _disableEvents(target, _evtNamespace);\r\n                }\r\n            }\r\n            _isListening = false;\r\n        }\r\n    }\r\n    function addListener(callback) {\r\n        listenerList[_DYN_PUSH /* @min:%2epush */](callback);\r\n        // Define rm as an instance of IUnloadHook\r\n        return {\r\n            rm: function () {\r\n                var index = listenerList.indexOf(callback);\r\n                if (index > -1) {\r\n                    return listenerList.splice(index, 1);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    return {\r\n        isOnline: _isOnline,\r\n        isListening: function () { return _isListening; },\r\n        unload: _unload,\r\n        addListener: addListener,\r\n        setOnlineState: setOnlineState\r\n    };\r\n}\r\n//# sourceMappingURL=Offline.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent, findAllScripts } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map"],"names":["_pureAssign","func1","func2","_pureRef","value","name","UNDEF_VALUE","undefined","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","ObjClass","Object","ObjProto","StrCls","String","StrProto","MathCls","Math","ArrCls","Array","ArrProto","ArrSlice","safe","func","argArray","v","apply","this","e","_createIs","theType","_createObjIs","theName","objToString","call","isUndefined","isNullOrUndefined","isDefined","arg","isString","isFunction","isObject","isArray","isError","objGetOwnPropertyDescriptor","objHasOwnProperty","obj","prop","hasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","theObject","callbackfn","thisArg","propMap","c","w","g","s","_createProp","desc","l","get","set","newValue","key","objDefineProp","objDefine","target","propDesc","_createKeyValueMap","values","keyType","valueType","completeFn","writable","theMap","_assignMapValue","enumerable","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stack","message","JSON","stringify","replace","throwError","Error","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objAssign","objKeys","objFreeze","objGetPrototypeOf","createEnum","createSimpleMap","mapClass","createTypeMap","_globalCfg","GLOBAL_CONFIG_KEY","_getGlobalValue","result","globalThis","self","window","global","_getGlobalConfig","gbl","_unwrapFunction","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theArgs","theFunc","arguments","mathMax","strSlice","strSubstring","strSubstr","polyStrSubstr","start","length","strLeft","count","_polySymbols","_globalLazyTestHooks","UNIQUE_REGISTRY_ID","_globalSymbolRegistry","gblCfg","gblSym","k","polyNewSymbol","description","theSymbol","toString","polySymbolFor","newSymbol_1","regId_1","registry","_initTestHooks","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","lzy","getGlobal","useCached","getInst","getWindow","getDocument","hasWindow","hasNavigator","getNavigator","_symbol","_symbolFor","_initSymbol","_getSymbolKey","newSymbol","noPoly","sym","symbolFor","fnApply","fn","arrForEach","theArray","len","idx","_isProtoArray","arrIndexOf","arrMap","arrReduce","objCreate","polyObjCreate","type","tempFunc","objSetPrototypeOf","proto","d","b","_a","_createCustomError","__","_setName","baseClass","createCustomError","constructCb","errorBase","theBaseClass","orgName","captureFn","captureStackTrace","_this","orgProto","_self","utcNow","Date","now","polyUtcNow","getTime","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","_perf","polyStrTrim","strTrim","isPlainObject","Function","ex","getPerformance","strEndsWith","polyStrEndsWith","searchString","searchValue","end","strIndexOf","REF","UNREF","HAS_REF","ENABLED","_createTimerHandler","startTimer","refreshFn","cancelFn","theTimerHandler","ref","timerId","_unref","_cancel","_refresh","cancel","refresh","h","dn","_createTimeoutWith","overrideFn","isArr","setFn","setTimeout","clearFn","clearTimeout","timerFn","handler","scheduleTimeout","callback","timeout","aggregationErrorType","createEnumStyle","createValueMap","_DYN_TO_LOWER_CASE","_DYN_BLK_VAL","_DYN_LENGTH","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_LOGGER","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_HDLR","_DYN_CANCEL","_DYN_NAME","_DYN_UNLOAD","_DYN_VERSION","_DYN_LOGGING_LEVEL_CONSOL4","_DYN_MESSAGE_ID","_DYN_MESSAGE","_DYN_DIAG_LOG","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_LOG_INTERNAL_MESSAGE","_DYN_TYPE","_DYN_HANDLER","_DYN_TRACE_ID","_DYN_SPAN_ID","_DYN_TRACE_FLAGS","_DYN_GET_ATTRIBUTE","throwAggregationError","sourceErrors","args","errors","theMessage","srcError","concat","strShimFunction","strShimObject","strShimUndefined","strShimPrototype","strHasOwnProperty","__objAssignFnImpl","t","i","n","p","__assignFn","extendStaticsFn","__proto__","__extendsFn","constructor","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynClassNamePrefix","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","curProto","newProto","_forEachProp","props","name_1","push","lp","_isDynamicCandidate","skipOwn","_throwTypeError","_getInstanceFuncs","thisTarget","instFuncs","_hasVisited","_getBaseFuncs","classProto","useBaseInst","_instFuncProxy","funcHost","instFuncTable","baseFuncs","baseProto","visited","_getInstFunc","currentDynProtoProxy","instFunc","canAddInst","objProto","protoFunc","_getProtoFunc","_populatePrototype","className","baseInstFuncs","setInstanceFunc","instFuncs_1","dynProtoProxy","_checkPrototype","thisProto","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","options","perfOptions","UNDEFINED_VALUE","STR_EMPTY","STR_NOT_DYNAMIC_ERROR","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotNullOrUndefined","normalizeJsName","_all","letter","toUpperCase","match","strContains","search","toISOString","date","getExceptionName","createClassFromInterface","defaults","field","strConsole","strJSON","strCrypto","strMsCrypto","strMsie","strTrident","_isTrident","_navUserAgentCheck","_beaconsSupported","getConsole","console","hasJSON","getJSON","getCrypto","getMsCrypto","isIE","nav","userAgent","isBeaconsSupported","sendBeacon","_getNamedValue","findMetaTag","doc","querySelectorAll","content","findNamedServerTiming","perf","navPerf","getEntriesByType","serverTiming","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","_mwcSeed","seedValue","_autoSeedMwc","random","randomValue","maxValue","floor","random32","signed","getRandomValues","Uint32Array","mwcRandom32","newId","maxLength","number","chars","base64chars","version","instanceName","_dataUid","_canAcceptData","_getCache","data","theCache","id","createUniqueNamespace","includeVersion","createElmNodeData","accept","defValue","addDefault","kill","_isConfigDefaults","isVal","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","cfg","_resolveDefaultValue","newValue_1","theValue","_applyDefaultValue","defaultValue","isValid","mergeDf","reference","readOnly","blkDynamicValue","mrg","usingDefault","cfgValue","dfName","dfValue","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_cfgDeepCopy","source","target_1","getDynamicConfigHandler","blockDynamicConversion","_canMakeDynamic","getFunc","state","blkVal","throwInvalidAccess","arrayMethodsToPatch","_throwDynamicError","logger","_patchArray","method","orgMethod","_i","_makeDynamicObject","_getOwnPropGetter","_createDynamicProperty","detail","trk","clr","checkDynamic","isObjectOrArray","_getProperty","activeHandler","act","chng","add","ro","upd","newIsObjectOrArray","isReferenced","rf","_setDynamicProperty","hdlr","getter","valueState","_setDynamicPropertyState","flags","isDynamic","inPlace","rdOnly","blkProp","symPrefix","symPostfix","_createState","cfgHandler","theState","dynamicPropertySymbol","uid","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","prevWatcher","bind","setDf","_notifyWatchers","notifyHandlers","watcherFailures_1","use","details","_createAndUseHandler","configHandler","rm","_createDynamicHandler","newTarget","defaultValues","_block","allowUpdate","prevUpd","_logInvalidAccess","createDynamicConfig","config","defaultConfig","onConfigChange","_aiNamespace","_getExtensionNamespace","getDebugExt","ns","disableDbgExt","STR_WARN_TO_CONSOLE","AiNonUserActionablePrefix","AiUserActionablePrefix","AIInternalMessagePrefix","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","text","_logToConsole","logFunc","theConsole","_InternalLogMessage","msgId","msg","isUserAct","properties","strProps","diagnosticText","dataType","safeGetLogger","core","DiagnosticLogger","identifier","queue","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","throttleLimitMessage","throttleMessage","logMessage","messageKey","_debugExtMsg","errorToConsole","dbgExt","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","isAsync","__ieDyn","_getLogger","_throwInternal","generateW3CId","tmp","hexValues","oct","a","clockSequenceHi","TRACE_PARENT_REGEX","DEFAULT_VERSION","INVALID_VERSION","INVALID_TRACE_ID","INVALID_SPAN_ID","SAMPLED_FLAG","_isValid","invalidValue","_formatValue","_formatFlags","isNaN","createTraceParent","traceId","spanId","isValidTraceId","isValidSpanId","traceFlags","parseTraceParent","selectIdx","indexOf","exec","parseInt","isValidTraceParent","isSampledFlag","formatTraceParent","toLowerCase","findW3cTraceParent","findAllScripts","scripts","getElementsByTagName","script","crossOrigin","async","defer","src","hasAttribute","referrerPolicy","info","url","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","eventName","evtNamespace","theNamespace_1","parsedEvent","sort","join","_getRegisteredEvents","evtName","aiEvts","_doDetach","handlerRef","useCapture","_doAttach","_doUnregister","events","unRegFn","theEvent","capture","_unregisterEvents","eventCache","evtType","mergeEvtNamespace","theNamespace","namespaces","eventOn","registeredEvent","guid","eventOff","evtName_1","found_1","regEvent","DisabledPropertyName","SampleRate","ProcessLegacy","HttpMethod","DEFAULT_BREEZE_ENDPOINT","DEFAULT_BREEZE_PATH","strNotSpecified","strIkey","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","traceStateHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","_DYN_INGESTIONENDPOINT","_DYN_TO_STRING","_DYN_REMOVE_ITEM","_DYN_COUNT","_DYN_PRE_TRIGGER_DATE","_DYN_DISABLED","_DYN_INTERVAL","_DYN_DAYS_OF_MONTH","_DYN_DATE","_DYN_GET_UTCDATE","_DYN_STRINGIFY","_DYN_PATHNAME","_DYN_CORRELATION_HEADER_E0","_DYN_EXTENSION_CONFIG","_DYN_EXCEPTIONS","_DYN_PARSED_STACK","_DYN_PROPERTIES","_DYN_MEASUREMENTS","_DYN_SIZE_IN_BYTES","_DYN_TYPE_NAME","_DYN_SEVERITY_LEVEL","_DYN_PROBLEM_GROUP","_DYN_IS_MANUAL","_DYN__CREATE_FROM_INTERFA1","_DYN_ASSEMBLY","_DYN_FILE_NAME","_DYN_HAS_FULL_STACK","_DYN_LEVEL","_DYN_METHOD","_DYN_LINE","_DYN_DURATION","_DYN_RECEIVED_RESPONSE","dataSanitizeKeyAndAddUniqueness","map","origLength","dataSanitizeKey","uniqueField","dsPadNumber","nameTrunc","dataSanitizeString","valueTrunc","dataSanitizeUrl","dataSanitizeInput","dataSanitizeMessage","messageTrunc","dataSanitizeException","exception","exceptionTrunc","dataSanitizeProperties","tempProps_1","dataSanitizeMeasurements","measurements","tempMeasurements_1","measure","dataSanitizeId","input","_msgId","inputTrunc","num","_document","_htmlAnchorIdx","_htmlAnchorElement","urlParseUrl","anchorIdx","anchorCache","tempAnchor","createElement","host","urlParseHost","href","urlGetAbsoluteUrl","urlGetPathName","urlGetCompleteUrl","absoluteUrl","inclPort","fullHost","urlParseFullHost","protocol","port","_internalEndpoints","_correlationIdPrefix","isInternalApplicationInsightsEndpoint","endpointUrl","correlationIdSetPrefix","prefix","correlationIdGetPrefix","correlationIdCanIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","correlationHeaderExcludePatterns","test","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","domain","regex","RegExp","excludedDomains","correlationHeaderExcludedDomains","correlationIdGetCorrelationContext","responseHeader","correlationId","correlationIdGetCorrelationContextValue","keyValues","keyValue","AjaxHelperParseDependencyPath","commandName","parsedUrl","pathName","pathname","dateTimeUtilsNow","timing","navigationStart","dateNow","dateTimeUtilsDuration","createDistributedTraceContextFromTrace","telemetryTrace","parentCtx","trace","getName","setName","getTraceId","traceID","setTraceId","getSpanId","parentID","setSpanId","getTraceFlags","setTraceFlags","newTraceFlags","StorageType","LocalStorage","SessionStorage","DistributedTracingModes","AI","AI_AND_W3C","W3C","EventPersistence","Normal","Critical","_canUseLocalStorage","_canUseSessionStorage","_storagePrefix","_getLocalStorageObject","utlCanUseLocalStorage","_getVerifiedStorageObject","storageType","storage","getGlobalInst","fail","setItem","getItem","_getSessionStorageObject","utlCanUseSessionStorage","utlDisableStorage","utlSetStoragePrefix","storagePrefix","utlEnableStorage","reset","utlGetLocalStorage","utlSetLocalStorage","utlRemoveStorage","utlGetSessionStorageKeys","keys","utlGetSessionStorage","utlSetSessionStorage","utlRemoveSessionStorage","THROTTLE_STORAGE_PREFIX","ThrottleMgr","namePrefix","_logger","_config","_localStorageObj","_isTriggered","_namePrefix","_queue","_isReady","_isSpecificDaysGiven","_flushMessage","msgID","saveUnsentMsg","_getCfgByKey","limit","samplingRate","_canSampledIn","localStorageObj","_getLocalStorageObjByKey","canThrottle","_canThrottle","throttled","isTriggered","_isTrigger","min","maxSendNumber","localStorageName","_getLocalStorageName","_resetLocalStorage","isThrottled","throttleNum","_getQueueByKey","_setCfgByKey","_b","interval","monthInterval","dayInterval","curCfg","configInterval","daysOfMonth","canUseLocalStorage","monthCheck","dayCheck","curDate","_getThrottleDate","monthExpand","getUTCFullYear","getUTCMonth","_checkInterval","daySpan","msgKey","fix","dateStr","getDate","storageName","current","curObj","storageObj","parse","preTriggerDate","_getLocalStorageObj","isTrigger","_isTriggeredOnCurDate","addUnloadHook","coreConfig","throttleMgrCfg","getConfig","localObj","isReady","flush","items","slice","item","err","flushAll","result_1","isFlushed","onReadyState","sendMessage","_FIELDS_SEPARATOR","_FIELD_KEY_VALUE_SEPARATOR","parseConnectionString","connectionString","locationPrefix","kvPairs","fields","kv","kvParts","endpointsuffix","location","ConnectionStringParser","Envelope","ver","sampleRate","tags","time","aiDataContract","iKey","Event","envelopeType","NoMethod","strError","strStack","strStackDetails","strErrorSrc","strMessage","strDescription","_stringify","convertToString","_formatMessage","errorType","evtMessage","_isExceptionDetailsInternal","_isExceptionInternal","_isStackDetails","_convertStackObj","errorStack","_getOperaStack","errorMessage","lines","entry","_getStackFromErrorObj","errorObj","reason","_formatStackTrace","stackDetails","_parseStack","frames","parsedStack","level_1","totalSizeInBytes_1","frame","theFrame","_StackFrame","parsedFrame","left","right","size","acceptedLeft","acceptedRight","splice","_getErrorType","typeName","results","_formatErrorCode","Exception","severityLevel","exceptions","_ExceptionDetails","CreateAutoException","lineNumber","columnNumber","error","evt","errorSrc","CreateFromInterface","__assign","prototype","toInterface","problemGroup","isManual","exceptionDetailsInterface","CreateSimpleException","assembly","fileName","line","formatError","outerId","hasFullStack","sourceFrame","level","matches","sizeInBytes","baseSize","DataPoint","kind","max","stdDev","Metric","metrics","dataPoint","strEmpty","stringToBoolOrDefault","str","msToTimeSpan","totalms","sec","round","hour","days","ms","getExtensionByName","extensions","extension","isCrossOriginError","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","correlationContext","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","Trace","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","Data","baseType","baseData","SeverityLevel","Verbose","Information","Warning","ConfigurationManager","configValue","_aiNameFunc","baseName","aiName","_aiApplication","_aiDevice","_aiLocation","_aiOperation","_aiSession","_aiUser","_aiCloud","_aiInternal","ContextTagKeys","_super","__extends","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","createTelemetryItem","envelopeName","customProperties","systemProperties","telemetryItem","ext","TelemetryItemCreator","create","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys","createDomEvent","event","createEvent","initEvent","_disableEvents","createOfflineListener","parentEvtNamespace","_navigator","_isListening","listenerList","rState","uState","onLine","_currentState","calCurrentState","_evtNamespace","_enableEvents","body","ononline","enabled","_setOnline","_setOffline","listnerNoticeCheck","newState","offlineState","isOnline","isListening","unload","win","addListener","index","setOnlineState","PropertiesPluginIdentifier","BreezeChannelIdentifier","AnalyticsPluginIdentifier"],"mappings":"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","x_google_ignoreList":[0,5]}
{"version":3,"file":"ai.clck.3.min.js","sources":["../../../../tools/shims/dist-es5/Constants.js","../../../../common/temp/node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","../../../../tools/shims/dist-es5/TsLibShims.js","../../../../common/temp/node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","../../../../shared/AppInsightsCore/dist-es5/__DynamicConstants.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/AggregationError.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/InternalConstants.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/HelperFuncs.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/EnvUtils.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/RandomHelper.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DataCacheHelper.js","../../../../shared/AppInsightsCore/dist-es5/Config/ConfigDefaults.js","../../../../shared/AppInsightsCore/dist-es5/Config/DynamicSupport.js","../../../../shared/AppInsightsCore/dist-es5/Config/DynamicProperty.js","../../../../shared/AppInsightsCore/dist-es5/Config/DynamicState.js","../../../../shared/AppInsightsCore/dist-es5/Config/DynamicConfig.js","../../../../shared/AppInsightsCore/dist-es5/Config/ConfigDefaultHelpers.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DiagnosticLogger.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/PerfManager.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/TelemetryHelpers.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/UnloadHookContainer.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","../../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/EventHelpers.js","../../../../shared/AppInsightsCommon/dist-es5/Constants.js","../../dist-es5/__DynamicConstants.js","../../dist-es5/common/Utils.js","../../dist-es5/DataCollector.js","../../dist-es5/events/WebEvent.js","../../dist-es5/events/PageAction.js","../../dist-es5/Enums.js","../../dist-es5/handlers/AutoCaptureHandler.js","../../dist-es5/handlers/DomContentHandler.js","../../dist-es5/ClickAnalyticsPlugin.js","../../../../shared/AppInsightsCommon/dist-es5/applicationinsights-common.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","/*! https://github.com/nevware21/ts-utils v0.11.3 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1;\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key, writable);\n        _assignMapValue(theMap, value, valueType ? value : key, writable);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: !!writable\n    });\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump && propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \")) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                objDeepFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto && clsProto[funcName];\n    return function (thisArg) {\n        var theFunc = (thisArg && thisArg[funcName]) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        (!cachedValue || _globalLazyTestHooks.lzy) && (cachedValue = createCachedValue(safe(getFn, theArgs).v));\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) && (_cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE));\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl = (!_cachedGlobal || useCached === false) ? getGlobal(useCached) : _cachedGlobal.v;\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        return getWindow();\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : null;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray && theArray[\"slice\"]) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = _iterSymbol.v && theArgs[_iterSymbol.v];\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString;\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = false;\n    if (value && theType === OBJECT) {\n        isPlain = isPlainObject(value);\n    }\n    else {\n        isPrim = value === NULL_VALUE || isPrimitiveType(theType);\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_perf || _globalLazyTestHooks.lzy) && (_perf = createCachedValue(safe((getInst), [\"performance\"]).v));\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        isDone = isDone || (ctx.n ? ctx.n(arguments) : true);\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step || ((start <= end) ? 1 : -1);\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = false;\n        if (theStep > 0) {\n            isDone = nextValue > end;\n        }\n        else {\n            isDone = nextValue < end;\n        }\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter && splitter[getKnownSymbol(9 )];\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : null));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = !isUndefined(length) && length < value[LENGTH] ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN__INACTIVE = \"INACTIVE\"; // Count: 3\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 5\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.1';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = true,\r\n        _a.v = defaultValue,\r\n        _a;\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = utcNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_DF, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_INDEX_OF = \"indexOf\"; // Count: 9\r\nexport var _DYN_LENGTH = \"length\"; // Count: 6\r\nexport var _DYN_TRACK_PAGE_ACTION = \"trackPageAction\"; // Count: 4\r\nexport var _DYN_PAGE_ACTION_PAGE_TAG0 = \"pageActionPageTags\"; // Count: 2\r\nexport var _DYN__DO_UNLOAD = \"_doUnload\"; // Count: 3\r\nexport var _DYN_PAGE_NAME = \"pageName\"; // Count: 10\r\nexport var _DYN_CONTENT_NAME = \"contentName\"; // Count: 13\r\nexport var _DYN_REQUEST_URI = \"requestUri\"; // Count: 4\r\nexport var _DYN_PAGE_TYPE = \"pageType\"; // Count: 7\r\nexport var _DYN_USE_DEFAULT_CONTENT_1 = \"useDefaultContentNameOrId\"; // Count: 5\r\nexport var _DYN_CAPTURE_ALL_META_DAT2 = \"captureAllMetaDataContent\"; // Count: 3\r\nexport var _DYN_META_DATA_PREFIX = \"metaDataPrefix\"; // Count: 3\r\nexport var _DYN_PARENT_DATA_TAG = \"parentDataTag\"; // Count: 4\r\nexport var _DYN_BEHAVIOR_VALIDATOR = \"behaviorValidator\"; // Count: 2\r\nexport var _DYN_DEFAULT_RIGHT_CLICK_3 = \"defaultRightClickBhvr\"; // Count: 2\r\nexport var _DYN_TAG_NAME = \"tagName\"; // Count: 4\r\nexport var _DYN_TO_UPPER_CASE = \"toUpperCase\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 3\r\nexport var _DYN_ADD_EVENT_LISTENER = \"addEventListener\"; // Count: 2\r\nexport var _DYN_CORE_DATA = \"coreData\"; // Count: 4\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 6\r\nexport var _DYN_PARENT_NODE = \"parentNode\"; // Count: 3\r\nexport var _DYN_CUSTOM_DATA_PREFIX = \"customDataPrefix\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 8\r\nexport var _DYN_DATA = \"data\"; // Count: 15\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 4\r\nexport var _DYN_ACTION_TYPE = \"actionType\"; // Count: 9\r\nexport var _DYN_BEHAVIOR = \"behavior\"; // Count: 7\r\nexport var _DYN_CLICK_COORDINATES = \"clickCoordinates\"; // Count: 2\r\nexport var _DYN_CONTENT = \"content\"; // Count: 4\r\nexport var _DYN_REF_URI = \"refUri\"; // Count: 4\r\nexport var _DYN_PARENT_ID = \"parentId\"; // Count: 3\r\nexport var _DYN_CAPTURE_PAGE_ACTION = \"capturePageAction\"; // Count: 2\r\nexport var _DYN_SET_COMMON_PROPERTIE4 = \"setCommonProperties\"; // Count: 2\r\nexport var _DYN_GET_ELEMENT_CONTENT = \"getElementContent\"; // Count: 2\r\nexport var _DYN__GET_VALID_BEHAVIOR = \"_getValidBehavior\"; // Count: 3\r\nexport var _DYN__TRACE_LOGGER = \"_traceLogger\"; // Count: 3\r\nexport var _DYN_CLICK_COORDINATE_X = \"clickCoordinateX\"; // Count: 3\r\nexport var _DYN_CLICK_COORDINATE_Y = \"clickCoordinateY\"; // Count: 3\r\nexport var _DYN__CONFIG = \"_config\"; // Count: 9\r\nexport var _DYN_DATA_TAGS = \"dataTags\"; // Count: 6\r\nexport var _DYN__PAGE_TAGS = \"_pageTags\"; // Count: 6\r\nexport var _DYN__PAGE_TAGS_CALLBACK = \"_pageTagsCallback\"; // Count: 3\r\nexport var _DYN__META_TAGS = \"_metaTags\"; // Count: 6\r\nexport var _DYN_SET_BASIC_PROPERTIES = \"setBasicProperties\"; // Count: 2\r\nexport var _DYN__PAGE_TYPE_META_TAG = \"_pageTypeMetaTag\"; // Count: 3\r\nexport var _DYN__BEHAVIOR_META_TAG = \"_behaviorMetaTag\"; // Count: 3\r\nexport var _DYN_PARENT_ELEMENT = \"parentElement\"; // Count: 3\r\nexport var _DYN_ATTRIBUTES = \"attributes\"; // Count: 4\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n* File containing utility functions.\r\n*/\r\nimport { arrForEach, isNullOrUndefined } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_GET_ATTRIBUTE, _DYN_INDEX_OF, _DYN_PARENT_NODE } from \"../__DynamicConstants\";\r\nexport var DEFAULT_DONOT_TRACK_TAG = \"ai-dnt\";\r\nexport var DEFAULT_AI_BLOB_ATTRIBUTE_TAG = \"ai-blob\";\r\nexport var DEFAULT_DATA_PREFIX = \"data-\";\r\n/**\r\n * Finds attributes in overrideConfig which are invalid or should be objects\r\n * and deletes them. useful in override config\r\n * @param overrideConfig - override config object\r\n * @param attributeNamesExpectedObjects - attributes that should be objects in override config object\r\n */\r\nexport function removeNonObjectsAndInvalidElements(overrideConfig, attributeNamesExpectedObjects) {\r\n    removeInvalidElements(overrideConfig);\r\n    arrForEach(attributeNamesExpectedObjects, function (i) {\r\n        var objectName = attributeNamesExpectedObjects[i];\r\n        if (typeof overrideConfig[objectName] === \"object\") {\r\n            removeInvalidElements(overrideConfig[objectName]);\r\n        }\r\n        else {\r\n            delete overrideConfig[objectName];\r\n        }\r\n    });\r\n}\r\n/**\r\n * Finds attributes in object which are invalid\r\n * and deletes them. useful in override config\r\n * @param object - Input object\r\n */\r\nexport function removeInvalidElements(object) {\r\n    /// Because the config object 'callback' contains only functions,\r\n    /// when it is stringified it returns the empty object. This explains\r\n    /// the workaround regarding 'callback'\r\n    for (var property in object) {\r\n        if (!isValueAssigned(object[property]) ||\r\n            (JSON.stringify(object[property]) === \"{}\" && (property !== \"callback\"))) {\r\n            delete object[property];\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks if value is assigned to the given param.\r\n * @param value - The token from which the tenant id is to be extracted.\r\n * @returns True/false denoting if value is assigned to the param.\r\n */\r\nexport function isValueAssigned(value) {\r\n    /// <summary> takes a value and checks for undefined, null and empty string </summary>\r\n    /// <param type=\"any\"> value to be tested </param>\r\n    /// <returns> true if value is null undefined or emptyString </returns>\r\n    return !(isNullOrUndefined(value) || value === \"\");\r\n}\r\n/**\r\n * Determines whether an event is a right click or not\r\n * @param evt - Mouse event\r\n * @returns true if the event is a right click\r\n */\r\nexport function isRightClick(evt) {\r\n    try {\r\n        if (\"which\" in evt) { // Chrome, FF, ...\r\n            return (evt.which === 3);\r\n        }\r\n        else if (\"button\" in evt) { // IE, ...\r\n            return (evt.button === 2);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n}\r\n/**\r\n * Determines whether an event is a left click or not\r\n * @param evt - Mouse event\r\n * @returns true if the event is a left click\r\n */\r\nexport function isLeftClick(evt) {\r\n    try {\r\n        if (\"which\" in evt) { // Chrome, FF, ...\r\n            return (evt.which === 1);\r\n        }\r\n        else if (\"button\" in evt) { // IE, ...\r\n            return (evt.button === 1);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n}\r\n/**\r\n * Determines whether an event is a middle click or not\r\n * @param evt - Mouse event\r\n * @returns true if the event is a middle click\r\n */\r\nexport function isMiddleClick(evt) {\r\n    try {\r\n        if (\"which\" in evt) { // Chrome, FF, ...\r\n            return (evt.which === 2);\r\n        }\r\n        else if (\"button\" in evt) { // IE, ...\r\n            return (evt.button === 4);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n}\r\n/**\r\n *  Determines whether an event is a keyboard enter or not\r\n * @param evt - Keyboard event\r\n * @returns true if the event is a keyboard enter\r\n */\r\nexport function isKeyboardEnter(evt) {\r\n    try {\r\n        if (\"keyCode\" in evt) { // Chrome, FF, ...\r\n            return (evt.keyCode === 13);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n}\r\n/**\r\n *  Determines whether an event is a keyboard space or not\r\n * @param evt - Keyboard event\r\n * @returns true if the event is a space enter\r\n */\r\nexport function isKeyboardSpace(evt) {\r\n    try {\r\n        if (\"keyCode\" in evt) { // Chrome, FF, ...\r\n            return (evt.keyCode === 32);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n}\r\n/**\r\n *  Determines whether the elemt have a DNT(Do Not Track) tag\r\n * @param element - DOM element\r\n * @param doNotTrackFieldName - DOM element\r\n * @returns true if the element must not be tarcked\r\n */\r\nexport function isElementDnt(element, doNotTrackFieldName) {\r\n    var dntElement = findClosestByAttribute(element, doNotTrackFieldName);\r\n    if (!isValueAssigned(dntElement)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Walks up DOM tree to find element with attribute\r\n * @param el - DOM element\r\n * @param attribute - Attribute name\r\n * @returns Dom element which contains attribute\r\n */\r\nexport function findClosestByAttribute(el, attribute) {\r\n    return walkUpDomChainWithElementValidation(el, isAttributeInElement, attribute);\r\n}\r\n/**\r\n * checks if attribute is in element.\r\n * method checks for empty string, in case the attribute is set but no value is assigned to it\r\n * @param element - DOM element\r\n * @param attributeToLookFor - Attribute name\r\n * @returns true if attribute is in element, even if empty string\r\n */\r\nexport function isAttributeInElement(element, attributeToLookFor) {\r\n    var value = element[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](attributeToLookFor);\r\n    return isValueAssigned(value);\r\n}\r\n/**\r\n * Walks up DOM tree to find element which matches validationMethod\r\n * @param el - DOM element\r\n * @param validationMethod - DOM element validation method\r\n * @param validationMethodParam - DOM element validation method parameters\r\n * @returns Dom element which is an anchor\r\n */\r\nexport function walkUpDomChainWithElementValidation(el, validationMethod, validationMethodParam) {\r\n    var element = el;\r\n    if (element) {\r\n        while (!validationMethod(element, validationMethodParam)) {\r\n            element = element[_DYN_PARENT_NODE /* @min:%2eparentNode */];\r\n            if (!element || !(element[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */])) {\r\n                return null;\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n}\r\n/**\r\n * Determine if DOM element is an anchor\r\n * @param element - DOM element\r\n * @returns Is element an anchor\r\n */\r\nexport function isElementAnAnchor(element) {\r\n    return element.nodeName === \"A\";\r\n}\r\n/**\r\n * Walks up DOM tree to find anchor element\r\n * @param element - DOM element\r\n * @returns Dom element which is an anchor\r\n */\r\nexport function findClosestAnchor(element) {\r\n    /// <summary> Walks up DOM tree to find anchor element </summary>\r\n    /// <param type='object'> DOM element </param>\r\n    /// <returns> Dom element which is an anchor</returns>\r\n    return walkUpDomChainWithElementValidation(element, isElementAnAnchor);\r\n}\r\n/**\r\n * Returns the specified field and also removes the property from the object if exists.\r\n * @param obj - Input object\r\n * @param fieldName - >Name of the field/property to be extracted\r\n * @returns Value of the specified tag\r\n */\r\nexport function extractFieldFromObject(obj, fieldName) {\r\n    var fieldValue;\r\n    if (obj && obj[fieldName]) {\r\n        fieldValue = obj[fieldName];\r\n        delete obj[fieldName];\r\n    }\r\n    return fieldValue;\r\n}\r\n/**\r\n *  Adds surrounding square brackets to the passed in text\r\n * @param str - Input string\r\n * @returns String with surrounding brackets\r\n */\r\nexport function bracketIt(str) {\r\n    /// <summary>\r\n    ///  Adds surrounding square brackets to the passed in text\r\n    /// </summary>\r\n    return \"[\" + str + \"]\";\r\n}\r\nexport function validateContentNamePrefix(config, defaultDataPrefix) {\r\n    return isValueAssigned(config.dataTags.customDataPrefix) && (config.dataTags.customDataPrefix[_DYN_INDEX_OF /* @min:%2eindexOf */](defaultDataPrefix) === 0);\r\n}\r\nexport function BehaviorMapValidator(map) {\r\n    return function (key) { return map[key] || \"\"; };\r\n}\r\nexport function BehaviorValueValidator(behaviorArray) {\r\n    return function (key) {\r\n        var result;\r\n        arrForEach(behaviorArray, function (value) {\r\n            if (value === key) {\r\n                result = value;\r\n                return -1;\r\n            }\r\n        });\r\n        return result || \"\";\r\n    };\r\n}\r\nexport function BehaviorEnumValidator(enumObj) {\r\n    return function (key) { return enumObj[key] || \"\"; };\r\n}\r\n//# sourceMappingURL=Utils.js.map","/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n*/\r\nimport { getDocument, getLocation, getWindow, hasDocument, isFunction } from \"@microsoft/applicationinsights-core-js\";\r\nimport { scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ADD_EVENT_LISTENER, _DYN_CORE_DATA, _DYN_LENGTH, _DYN_PAGE_NAME, _DYN_PATHNAME, _DYN_REQUEST_URI, _DYN_TAG_NAME, _DYN_TO_UPPER_CASE } from \"./__DynamicConstants\";\r\nimport { findClosestAnchor, isValueAssigned } from \"./common/Utils\";\r\nvar clickCaptureInputTypes = { BUTTON: true, CHECKBOX: true, RADIO: true, RESET: true, SUBMIT: true };\r\n/**\r\n * Get Image href of a given HTMLImageElement\r\n * @param element - An html image element\r\n * @returns Href value.\r\n */\r\nexport function getImageHref(element) {\r\n    var temp = element;\r\n    if (temp) {\r\n        var parent = findClosestAnchor(temp);\r\n        if (parent[_DYN_LENGTH /* @min:%2elength */] === 1) {\r\n            var firstParent = parent[0];\r\n            if (firstParent.href) {\r\n                return firstParent.href;\r\n            }\r\n            else if (firstParent.src) {\r\n                return (firstParent.src);\r\n            }\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Get click target\r\n * @returns Click target URI\r\n */\r\nexport function getClickTarget(element) {\r\n    var clickTarget = \"\";\r\n    switch (element[_DYN_TAG_NAME /* @min:%2etagName */]) {\r\n        case \"A\":\r\n        case \"AREA\":\r\n            clickTarget = element.href || \"\";\r\n            break;\r\n        case \"IMG\":\r\n            clickTarget = getImageHref(element);\r\n            break;\r\n        case \"INPUT\":\r\n            var type = element.type;\r\n            if (type && (clickCaptureInputTypes[type[_DYN_TO_UPPER_CASE /* @min:%2etoUpperCase */]()])) {\r\n                var loc = getLocation() || {};\r\n                if (element.form) {\r\n                    clickTarget = element.form.action || (loc[_DYN_PATHNAME /* @min:%2epathname */] || \"\");\r\n                }\r\n                else {\r\n                    clickTarget = loc[_DYN_PATHNAME /* @min:%2epathname */] || \"\";\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return clickTarget;\r\n}\r\n/**\r\n * Execute callback when DOM finish loading\r\n */\r\nexport function onDomLoaded(callback) {\r\n    onDomReadyDo(function () {\r\n        if (hasDocument() && getDocument().readyState === \"complete\") {\r\n            callback();\r\n        }\r\n        else {\r\n            var win = getWindow();\r\n            if (win) {\r\n                if (win[_DYN_ADD_EVENT_LISTENER /* @min:%2eaddEventListener */]) {\r\n                    win[_DYN_ADD_EVENT_LISTENER /* @min:%2eaddEventListener */](\"load\", function () {\r\n                        callback();\r\n                    }); // NB **not** 'onload'\r\n                }\r\n                else if (win.attachEvent) {\r\n                    win.attachEvent(\"onload\", function () {\r\n                        callback();\r\n                    }); // IE8\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n// use smallest domready ever for IE8. When IE8 is deprecated, use addEventListener('DomContentLoaded')\r\nfunction onDomReadyDo(f) {\r\n    /// <summary> fires function f on domRead </summary>\r\n    /// <param type='function'>function to call on domRead</param>\r\n    var doc = getDocument() || {};\r\n    /in/.test(doc.readyState) ? scheduleTimeout(function () {\r\n        onDomReadyDo(f);\r\n    }, 100) : f.call();\r\n}\r\n/**\r\n * Gets the pageName from the DOM or by calling a override if set.\r\n * @param config - configuration object\r\n * @returns Page name.\r\n */\r\nexport function getPageName(config, overrideValues) {\r\n    /// <summary>\r\n    ///  Gets the pageName from the DOM or by calling a override if set.\r\n    /// </summary>\r\n    if (overrideValues && overrideValues[_DYN_PAGE_NAME /* @min:%2epageName */]) {\r\n        return overrideValues[_DYN_PAGE_NAME /* @min:%2epageName */];\r\n    }\r\n    else if (config.callback && isFunction(config.callback[_DYN_PAGE_NAME /* @min:%2epageName */])) {\r\n        return config.callback[_DYN_PAGE_NAME /* @min:%2epageName */]();\r\n    }\r\n    else if (config.coreData && config.coreData[_DYN_PAGE_NAME /* @min:%2epageName */]) {\r\n        return config.coreData[_DYN_PAGE_NAME /* @min:%2epageName */];\r\n    }\r\n    else {\r\n        var doc = getDocument();\r\n        return doc && doc.title || \"\";\r\n    }\r\n}\r\n/**\r\n * Sanitize URL values\r\n * @param config - Configuration\r\n * @param location - window.location or document.location\r\n * @returns Flag indicating if an element is market PII.\r\n */\r\nexport function sanitizeUrl(config, location) {\r\n    if (!location) {\r\n        return null;\r\n    }\r\n    var url = location.protocol + \"//\" + (location.hostname || location.host) + // location.hostname is not supported on Opera and Opera for Android\r\n        (isValueAssigned(location.port) ? \":\" + location.port : \"\") +\r\n        location[_DYN_PATHNAME /* @min:%2epathname */];\r\n    if (!!config.urlCollectHash) { // false by default\r\n        url += (isValueAssigned(location.hash) ? location.hash : \"\");\r\n    }\r\n    if (!!config.urlCollectQuery) { // false by default\r\n        url += (isValueAssigned(location.search) ? location.search : \"\");\r\n    }\r\n    return url;\r\n}\r\n/**\r\n * Get URI, sanitize the value if configured on\r\n * @param config - Configuration\r\n * @param location - window.location or document.location\r\n * @returns Flag indicating if an element is market PII.\r\n */\r\nexport function getUri(config, location) {\r\n    if (config.coreData && config.coreData[_DYN_REQUEST_URI /* @min:%2erequestUri */] && config[_DYN_CORE_DATA /* @min:%2ecoreData */][_DYN_REQUEST_URI /* @min:%2erequestUri */] !== \"\") {\r\n        return config.coreData[_DYN_REQUEST_URI /* @min:%2erequestUri */];\r\n    }\r\n    return sanitizeUrl(config, location);\r\n}\r\n//# sourceMappingURL=DataCollector.js.map","/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { getLocation, hasWindow, objExtend } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getPageName, getUri } from \"../DataCollector\";\r\nimport { _DYN_BEHAVIOR, _DYN_BEHAVIOR_VALIDATOR, _DYN_CORE_DATA, _DYN_NAME, _DYN_PAGE_NAME, _DYN_PAGE_TYPE, _DYN_PROPERTIES, _DYN_SET_BASIC_PROPERTIES, _DYN_SET_COMMON_PROPERTIE4, _DYN__BEHAVIOR_META_TAG, _DYN__CONFIG, _DYN__DO_UNLOAD, _DYN__GET_VALID_BEHAVIOR, _DYN__META_TAGS, _DYN__PAGE_TAGS, _DYN__PAGE_TAGS_CALLBACK, _DYN__PAGE_TYPE_META_TAG, _DYN__TRACE_LOGGER } from \"../__DynamicConstants\";\r\nimport { isValueAssigned } from \"../common/Utils\";\r\nvar WebEvent = /** @class */ (function () {\r\n    /**\r\n     * @param clickAnalyticsPlugin - Click Analytics plugin instance\r\n     * @param config - ClickAnalytics configuration object\r\n     * @param contentHandler - Content handler\r\n     * @param id - Id object\r\n     * @param pageTagsCallback - callback methods to get pageTags value\r\n     * @param metaTags - Meta tags\r\n     * @param traceLogger - Trace logger to log to console.\r\n     */\r\n    function WebEvent(clickAnalyticsPlugin, config, contentHandler, pageTagsCallback, metaTags, traceLogger) {\r\n        dynamicProto(WebEvent, this, function (_self) {\r\n            _initDefaults();\r\n            function _initDefaults() {\r\n                _self[_DYN__PAGE_TAGS /* @min:%2e_pageTags */] = {};\r\n                _self._clickAnalyticsPlugin = clickAnalyticsPlugin;\r\n                _self[_DYN__CONFIG /* @min:%2e_config */] = config;\r\n                _self._contentHandler = contentHandler;\r\n                _self[_DYN__PAGE_TAGS_CALLBACK /* @min:%2e_pageTagsCallback */] = pageTagsCallback;\r\n                _self[_DYN__META_TAGS /* @min:%2e_metaTags */] = metaTags;\r\n                _self[_DYN__TRACE_LOGGER /* @min:%2e_traceLogger */] = traceLogger;\r\n            }\r\n            _self[_DYN_SET_BASIC_PROPERTIES /* @min:%2esetBasicProperties */] = function (event, overrideValues) {\r\n                if (!isValueAssigned(event[_DYN_NAME /* @min:%2ename */])) {\r\n                    event[_DYN_PAGE_NAME /* @min:%2epageName */] = getPageName(_self[_DYN__CONFIG /* @min:%2e_config */], overrideValues);\r\n                }\r\n                if (!isValueAssigned(event.uri) && hasWindow()) {\r\n                    event.uri = getUri(_self[_DYN__CONFIG /* @min:%2e_config */], getLocation());\r\n                }\r\n            };\r\n            /**\r\n             * Sets common properties for events that are based on the WebEvent schema.\r\n             * @param event - The event\r\n             */\r\n            _self[_DYN_SET_COMMON_PROPERTIE4 /* @min:%2esetCommonProperties */] = function (event, overrideValues) {\r\n                _self[_DYN_SET_BASIC_PROPERTIES /* @min:%2esetBasicProperties */](event, overrideValues);\r\n                _self._setPageTags(event, overrideValues);\r\n                // extract specific meta tags out of the pageTags.metaTags collection.  These will go into assigned first class fields in the event.\r\n                // the rest will go into pageTags.metaTags collection as is.\r\n                _self._pageTypeMetaTag = _getMetaData(_self._metaTags, _self._config[_DYN_CORE_DATA /* @min:%2ecoreData */], \"pageType\");\r\n                _self._behaviorMetaTag = _getMetaData(_self._metaTags, _self._config[_DYN_CORE_DATA /* @min:%2ecoreData */], \"behavior\");\r\n                if (isValueAssigned(overrideValues[_DYN_PAGE_TYPE /* @min:%2epageType */])) {\r\n                    event[_DYN_PAGE_TYPE /* @min:%2epageType */] = overrideValues[_DYN_PAGE_TYPE /* @min:%2epageType */];\r\n                }\r\n                // Only assign if not overriden and meta data is available\r\n                if (isValueAssigned(_self._pageTypeMetaTag) && !isValueAssigned(event[_DYN_PAGE_TYPE /* @min:%2epageType */])) {\r\n                    event[_DYN_PAGE_TYPE /* @min:%2epageType */] = _self[_DYN__PAGE_TYPE_META_TAG /* @min:%2e_pageTypeMetaTag */];\r\n                }\r\n            };\r\n            /**\r\n             * Sets pageTags.\r\n             * @param event - The event\r\n             */\r\n            _self._setPageTags = function (event, overrideValues) {\r\n                // Prepare the pageTags object that is mostly the same for all events.  Event specific pageTags will be added inside event constructors.\r\n                if (_self[_DYN__PAGE_TAGS_CALLBACK /* @min:%2e_pageTagsCallback */]) {\r\n                    _self[_DYN__PAGE_TAGS /* @min:%2e_pageTags */] = objExtend(true, _self[_DYN__PAGE_TAGS /* @min:%2e_pageTags */], _self[_DYN__PAGE_TAGS_CALLBACK /* @min:%2e_pageTagsCallback */]());\r\n                }\r\n                if (isValueAssigned(overrideValues.pageTags)) {\r\n                    _self[_DYN__PAGE_TAGS /* @min:%2e_pageTags */] = objExtend(true, _self[_DYN__PAGE_TAGS /* @min:%2e_pageTags */], overrideValues.pageTags);\r\n                }\r\n                // If metadata is present add it to pageTags property\r\n                if (_self[_DYN__META_TAGS /* @min:%2e_metaTags */]) {\r\n                    _self[_DYN__PAGE_TAGS /* @min:%2e_pageTags */].metaTags = {};\r\n                    // Remove not supported meta data in pageTags.metaTags\r\n                    for (var metaTag in _self[_DYN__META_TAGS /* @min:%2e_metaTags */]) {\r\n                        if (metaTag != \"behavior\" && metaTag != \"market\" && metaTag != \"pageType\") {\r\n                            _self[_DYN__PAGE_TAGS /* @min:%2e_pageTags */].metaTags[metaTag] = _self[_DYN__META_TAGS /* @min:%2e_metaTags */][metaTag];\r\n                        }\r\n                    }\r\n                }\r\n                // All metadata tags that must be saved as properties have been extracted at this point.  Assign pageTags as is.\r\n                event[_DYN_PROPERTIES /* @min:%2eproperties */] = event[_DYN_PROPERTIES /* @min:%2eproperties */] || {};\r\n                event[_DYN_PROPERTIES /* @min:%2eproperties */][\"pageTags\"] = _self[_DYN__PAGE_TAGS /* @min:%2e_pageTags */];\r\n            };\r\n            _self._getBehavior = function (overrideValues) {\r\n                var behavior;\r\n                // If override specified\r\n                if (overrideValues && isValueAssigned(overrideValues[_DYN_BEHAVIOR /* @min:%2ebehavior */])) {\r\n                    behavior = overrideValues[_DYN_BEHAVIOR /* @min:%2ebehavior */];\r\n                }\r\n                else if (isValueAssigned(_self[_DYN__BEHAVIOR_META_TAG /* @min:%2e_behaviorMetaTag */])) {\r\n                    // If behavior meta tag available\r\n                    behavior = _self[_DYN__BEHAVIOR_META_TAG /* @min:%2e_behaviorMetaTag */];\r\n                }\r\n                return _self[_DYN__GET_VALID_BEHAVIOR /* @min:%2e_getValidBehavior */](behavior);\r\n            };\r\n            _self[_DYN__GET_VALID_BEHAVIOR /* @min:%2e_getValidBehavior */] = function (behavior) {\r\n                return _self._config[_DYN_BEHAVIOR_VALIDATOR /* @min:%2ebehaviorValidator */](behavior);\r\n            };\r\n            _self[_DYN__DO_UNLOAD /* @min:%2e_doUnload */] = function (unloadCtx, unloadState, asyncCallback) {\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * Get the specified metadata value from the collection\r\n             * If overrideValue is specified in the config that takes precedence.\r\n             * @param metaTags - Meta data.\r\n             * @param coreData - Coredata values from configuration.\r\n             * @param metaTagName - Name of the metaTag to get.\r\n             * @returns Meta data value\r\n             */\r\n            function _getMetaData(metaTags, coreData, metaTagName) {\r\n                if (coreData && coreData[metaTagName]) {\r\n                    return coreData[metaTagName];\r\n                }\r\n                if (metaTags) {\r\n                    return metaTags[metaTagName];\r\n                }\r\n                return \"\";\r\n            }\r\n        });\r\n    }\r\n    // Fill common PartB fields\r\n// Removed Stub for WebEvent.prototype.setBasicProperties.\r\n// Removed Stub for WebEvent.prototype.setCommonProperties.\r\n// Removed Stub for WebEvent.prototype._doUnload.\r\n// Removed Stub for WebEvent.prototype._setPageTags.\r\n// Removed Stub for WebEvent.prototype._getBehavior.\r\n// Removed Stub for WebEvent.prototype._getValidBehavior.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    WebEvent.__ieDyn=1;\n\n    return WebEvent;\r\n}());\r\nexport { WebEvent };\r\n//# sourceMappingURL=WebEvent.js.map","/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n*/\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { strNotSpecified } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, getPerformance, objExtend, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getClickTarget } from \"../DataCollector\";\r\nimport { _DYN_ACTION_TYPE, _DYN_BEHAVIOR, _DYN_CAPTURE_PAGE_ACTION, _DYN_CLICK_COORDINATES, _DYN_CLICK_COORDINATE_X, _DYN_CLICK_COORDINATE_Y, _DYN_CONTENT, _DYN_CONTENT_NAME, _DYN_CORE_DATA, _DYN_DATA, _DYN_DATA_TAGS, _DYN_DEFAULT_RIGHT_CLICK_3, _DYN_GET_ELEMENT_CONTENT, _DYN_NAME, _DYN_PAGE_NAME, _DYN_PAGE_TYPE, _DYN_PARENT_DATA_TAG, _DYN_PARENT_ID, _DYN_PROPERTIES, _DYN_REF_URI, _DYN_SET_COMMON_PROPERTIE4, _DYN_TRACK_PAGE_ACTION, _DYN__CONFIG, _DYN__GET_VALID_BEHAVIOR, _DYN__TRACE_LOGGER } from \"../__DynamicConstants\";\r\nimport { bracketIt, extractFieldFromObject, isValueAssigned } from \"../common/Utils\";\r\nimport { WebEvent } from \"./WebEvent\";\r\nvar PageAction = /** @class */ (function (_super) {\r\n    __extends(PageAction, _super);\r\n    function PageAction(clickAnalyticsPlugin, config, contentHandler, pageTagsCallback, metaTags, traceLogger) {\r\n        var _this = _super.call(this, clickAnalyticsPlugin, config, contentHandler, pageTagsCallback, metaTags, traceLogger) || this;\r\n        dynamicProto(PageAction, _this, function (_self, _base) {\r\n            _self[_DYN_TRACK_PAGE_ACTION /* @min:%2etrackPageAction */] = function (pageActionEvent, properties) {\r\n                // Get part A properties\r\n                var ext = {};\r\n                ext[\"web\"] = {};\r\n                var event = {\r\n                    name: \"Microsoft.ApplicationInsights.{0}.Event\",\r\n                    baseType: \"EventData\",\r\n                    ext: ext,\r\n                    data: {},\r\n                    baseData: {}\r\n                };\r\n                _populateEventDataIfPresent(event.baseData, \"name\", pageActionEvent[_DYN_NAME /* @min:%2ename */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"baseTypeSource\", \"ClickEvent\");\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"uri\", pageActionEvent.uri);\r\n                _populateEventDataIfPresent(event.data, \"pageType\", pageActionEvent[_DYN_PAGE_TYPE /* @min:%2epageType */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"properties\", pageActionEvent[_DYN_PROPERTIES /* @min:%2eproperties */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"actionType\", pageActionEvent[_DYN_ACTION_TYPE /* @min:%2eactionType */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"behavior\", pageActionEvent[_DYN_BEHAVIOR /* @min:%2ebehavior */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"clickCoordinates\", pageActionEvent[_DYN_CLICK_COORDINATES /* @min:%2eclickCoordinates */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"content\", pageActionEvent[_DYN_CONTENT /* @min:%2econtent */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"targetUri\", pageActionEvent.targetUri);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"timeToAction\", pageActionEvent.timeToAction);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"refUri\", pageActionEvent[_DYN_REF_URI /* @min:%2erefUri */]);\r\n                _populateEventDataIfPresent(event.data, \"pageName\", pageActionEvent[_DYN_PAGE_NAME /* @min:%2epageName */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"parentId\", pageActionEvent[_DYN_PARENT_ID /* @min:%2eparentId */]);\r\n                if (properties) {\r\n                    objForEachKey(properties, function (property, value) {\r\n                        if (!event[_DYN_DATA /* @min:%2edata */][property]) {\r\n                            _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], property, value);\r\n                        }\r\n                    });\r\n                }\r\n                _self._clickAnalyticsPlugin.core.track(event);\r\n            };\r\n            /**\r\n             * API to create and send a populated PageAction event\r\n             * @param element - DOM element\r\n             * @param overrideValues - PageAction overrides\r\n             * @param customProperties - Custom properties(Part C)\r\n             * @param isRightClick - Flag for mouse right clicks\r\n             */\r\n            _self[_DYN_CAPTURE_PAGE_ACTION /* @min:%2ecapturePageAction */] = function (element, overrideValues, customProperties, isRightClick) {\r\n                overrideValues = !isValueAssigned(overrideValues) ? {} : overrideValues;\r\n                var pageActionEvent = { name: \"\" };\r\n                var pageActionProperties = isValueAssigned(customProperties) ? customProperties : {};\r\n                _self[_DYN_SET_COMMON_PROPERTIE4 /* @min:%2esetCommonProperties */](pageActionEvent, overrideValues);\r\n                pageActionEvent[_DYN_BEHAVIOR /* @min:%2ebehavior */] = _self._getBehavior(overrideValues);\r\n                // element in scope is needed for below properties.  We cannot pass element into the plugin call chain.\r\n                // process them here.\r\n                var elementContent = {};\r\n                if (isRightClick) {\r\n                    // Default behavior for righ click\r\n                    pageActionEvent.behavior = _self._config[_DYN_DEFAULT_RIGHT_CLICK_3 /* @min:%2edefaultRightClickBhvr */];\r\n                }\r\n                // Fill PartB\r\n                if (element) {\r\n                    pageActionEvent.targetUri = getClickTarget(element);\r\n                    elementContent = _self._contentHandler[_DYN_GET_ELEMENT_CONTENT /* @min:%2egetElementContent */](element); // collect id,cn tags\r\n                    // if the element has a data-*-bhvr attrib defined, use it.\r\n                    if (elementContent.bhvr && !isValueAssigned(overrideValues[_DYN_BEHAVIOR /* @min:%2ebehavior */])) {\r\n                        var currentBehavior = extractFieldFromObject(elementContent, \"bhvr\");\r\n                        pageActionEvent[_DYN_BEHAVIOR /* @min:%2ebehavior */] = _self[_DYN__GET_VALID_BEHAVIOR /* @min:%2e_getValidBehavior */](currentBehavior);\r\n                    }\r\n                    // Validate to ensure the minimum required field 'contentName' or 'id' is present. However,\r\n                    // requiring these fields would result in majority of adopter's content from being collected.\r\n                    // Just throw a warning and continue collection.\r\n                    if (!isValueAssigned(elementContent.id) && !isValueAssigned(elementContent[_DYN_CONTENT_NAME /* @min:%2econtentName */])) {\r\n                        _throwInternal(_self[_DYN__TRACE_LOGGER /* @min:%2e_traceLogger */], 2 /* eLoggingSeverity.WARNING */, 102 /* _eInternalMessageId.InvalidContentBlob */, \"Missing attributes id or contentName in click event. Click event information will still be collected!\");\r\n                    }\r\n                }\r\n                pageActionEvent.name = elementContent.id || elementContent[_DYN_CONTENT_NAME /* @min:%2econtentName */] || strNotSpecified;\r\n                pageActionEvent[_DYN_PARENT_ID /* @min:%2eparentId */] = elementContent.parentid || elementContent.parentName || strNotSpecified;\r\n                if (isValueAssigned(overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */])) {\r\n                    pageActionEvent[_DYN_ACTION_TYPE /* @min:%2eactionType */] = overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */];\r\n                }\r\n                if (isValueAssigned(overrideValues[_DYN_CLICK_COORDINATE_X /* @min:%2eclickCoordinateX */]) && isValueAssigned(overrideValues[_DYN_CLICK_COORDINATE_Y /* @min:%2eclickCoordinateY */])) {\r\n                    pageActionEvent[_DYN_CLICK_COORDINATES /* @min:%2eclickCoordinates */] = overrideValues[_DYN_CLICK_COORDINATE_X /* @min:%2eclickCoordinateX */] + \"X\" + overrideValues[_DYN_CLICK_COORDINATE_Y /* @min:%2eclickCoordinateY */];\r\n                }\r\n                _sanitizePageActionEventContent(elementContent);\r\n                pageActionEvent[_DYN_CONTENT /* @min:%2econtent */] = bracketIt(JSON.stringify(objExtend(elementContent, overrideValues && overrideValues.contentTags ? overrideValues.contentTags : {})));\r\n                pageActionEvent.timeToAction = _getTimeToClick();\r\n                pageActionEvent.refUri = isValueAssigned(overrideValues.refUri) ? overrideValues.refUri : _self._config[_DYN_CORE_DATA /* @min:%2ecoreData */].referrerUri;\r\n                if (_isUndefinedEvent(pageActionEvent)) {\r\n                    return;\r\n                }\r\n                _self[_DYN_TRACK_PAGE_ACTION /* @min:%2etrackPageAction */](pageActionEvent, pageActionProperties);\r\n            };\r\n            // capture performance data into PageTags\r\n            function _getTimeToClick() {\r\n                var perf = getPerformance();\r\n                if (perf && perf.timing) {\r\n                    var isNavigationStart = perf.timing.navigationStart;\r\n                    if (isNavigationStart && isNavigationStart !== 0) {\r\n                        return new Date().getTime() - isNavigationStart;\r\n                    }\r\n                }\r\n                return -1;\r\n            }\r\n            function _populateEventDataIfPresent(obj, property, value) {\r\n                if (isValueAssigned(value)) {\r\n                    obj[property] = value;\r\n                }\r\n            }\r\n            function _sanitizePageActionEventContent(pageActionContent) {\r\n                if (pageActionContent) {\r\n                    delete pageActionContent.id;\r\n                    delete pageActionContent.parentid;\r\n                    delete pageActionContent.parentname;\r\n                    if (_self._config && _self._config.dataTags && isValueAssigned(_self._config.dataTags[_DYN_PARENT_DATA_TAG /* @min:%2eparentDataTag */])) {\r\n                        delete pageActionContent[_self[_DYN__CONFIG /* @min:%2e_config */][_DYN_DATA_TAGS /* @min:%2edataTags */].parentDataTag];\r\n                    }\r\n                }\r\n            }\r\n            function _isUndefinedEvent(pageActionEvent) {\r\n                if (_self[_DYN__CONFIG /* @min:%2e_config */].dropInvalidEvents) {\r\n                    if (pageActionEvent[_DYN_NAME /* @min:%2ename */] === strNotSpecified\r\n                        && pageActionEvent[_DYN_PARENT_ID /* @min:%2eparentId */] === strNotSpecified\r\n                        && pageActionEvent[_DYN_CONTENT /* @min:%2econtent */] === \"[{}]\") {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for PageAction.prototype.trackPageAction.\r\n// Removed Stub for PageAction.prototype.capturePageAction.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageAction.__ieDyn=1;\n\n    return PageAction;\r\n}(WebEvent));\r\nexport { PageAction };\r\n//# sourceMappingURL=PageAction.js.map","/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n*/\r\nexport var ActionType = {\r\n    CLICKLEFT: \"CL\",\r\n    CLICKRIGHT: \"CR\",\r\n    CLICKMIDDLE: \"CM\",\r\n    SCROLL: \"S\",\r\n    ZOOM: \"Z\",\r\n    RESIZE: \"R\",\r\n    KEYBOARDENTER: \"KE\",\r\n    KEYBOARDSPACE: \"KS\",\r\n    OTHER: \"O\"\r\n};\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createUniqueNamespace, eventOff, eventOn, getDocument, getWindow, isNullOrUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ActionType } from \"../Enums\";\r\nimport { _DYN_ACTION_TYPE, _DYN_CAPTURE_PAGE_ACTION, _DYN_CLICK_COORDINATE_X, _DYN_CLICK_COORDINATE_Y, _DYN_CUSTOM_DATA_PREFIX, _DYN_DATA_TAGS, _DYN_INDEX_OF, _DYN_PARENT_NODE, _DYN_TAG_NAME, _DYN_TO_UPPER_CASE, _DYN__CONFIG, _DYN__DO_UNLOAD } from \"../__DynamicConstants\";\r\nimport { isElementDnt, isKeyboardEnter, isKeyboardSpace, isLeftClick, isMiddleClick, isRightClick } from \"../common/Utils\";\r\nvar clickCaptureInputTypes = { BUTTON: true, CHECKBOX: true, RADIO: true, RESET: true, SUBMIT: true };\r\nvar AutoCaptureHandler = /** @class */ (function () {\r\n    /**\r\n     * @param analyticsPlugin - WebAnalytics plugin\r\n     * @param traceLogger - Trace logger to log to console.\r\n     */\r\n    function AutoCaptureHandler(_analyticsPlugin, _config, _pageAction, _traceLogger) {\r\n        this._analyticsPlugin = _analyticsPlugin;\r\n        this._config = _config;\r\n        this._pageAction = _pageAction;\r\n        this._traceLogger = _traceLogger;\r\n        var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"AutoCaptureHandler\"), _analyticsPlugin._evtNamespace);\r\n        dynamicProto(AutoCaptureHandler, this, function (_self) {\r\n            _self.click = function () {\r\n                var win = getWindow();\r\n                var doc = getDocument();\r\n                if (win) {\r\n                    // IE9 onwards addEventListener is available, 'click' event captures mouse click. mousedown works on other browsers\r\n                    var event_1 = (navigator.appVersion[_DYN_INDEX_OF /* @min:%2eindexOf */](\"MSIE\") !== -1) ? \"click\" : \"mousedown\";\r\n                    eventOn(win, event_1, _processClick, _evtNamespace);\r\n                    eventOn(win, \"keyup\", _processClick, _evtNamespace);\r\n                }\r\n                else if (doc) {\r\n                    // IE8 and below doesn't have addEventListener so it will use attachEvent\r\n                    // attaching to window does not work in IE8\r\n                    eventOn(doc, \"click\", _processClick, _evtNamespace);\r\n                    eventOn(doc, \"keyup\", _processClick, _evtNamespace);\r\n                }\r\n            };\r\n            _self[_DYN__DO_UNLOAD /* @min:%2e_doUnload */] = function (unloadCtx, unloadState, asyncCallback) {\r\n                eventOff(getWindow(), null, null, _evtNamespace);\r\n                eventOff(getDocument(), null, null, _evtNamespace);\r\n            };\r\n            function _capturePageAction(element, overrideValues, customProperties, isRightClick) {\r\n                var donotTrackTag = _self._config.dataTags[_DYN_CUSTOM_DATA_PREFIX /* @min:%2ecustomDataPrefix */] + _self[_DYN__CONFIG /* @min:%2e_config */][_DYN_DATA_TAGS /* @min:%2edataTags */].dntDataTag;\r\n                if (!isElementDnt(element, donotTrackTag)) {\r\n                    _self._pageAction[_DYN_CAPTURE_PAGE_ACTION /* @min:%2ecapturePageAction */](element, overrideValues, customProperties, isRightClick);\r\n                }\r\n            }\r\n            // Process click event\r\n            function _processClick(clickEvent) {\r\n                var _a;\r\n                var clickCaptureElements = { A: true, BUTTON: true, AREA: true, INPUT: true };\r\n                var win = getWindow();\r\n                if (isNullOrUndefined(clickEvent) && win) {\r\n                    clickEvent = win.event; // IE 8 does not pass the event\r\n                }\r\n                if (clickEvent) {\r\n                    var element = clickEvent.srcElement || clickEvent.target;\r\n                    // populate overrideValues\r\n                    var overrideValues = (_a = {},\r\n                        _a[_DYN_CLICK_COORDINATE_X /* @min:clickCoordinateX */] = clickEvent.pageX,\r\n                        _a[_DYN_CLICK_COORDINATE_Y /* @min:clickCoordinateY */] = clickEvent.pageY,\r\n                        _a);\r\n                    var isRightClickObj = isRightClick(clickEvent);\r\n                    if (isRightClickObj) {\r\n                        overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */] = ActionType.CLICKRIGHT;\r\n                    }\r\n                    else if (isLeftClick(clickEvent)) {\r\n                        overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */] = ActionType.CLICKLEFT;\r\n                    }\r\n                    else if (isKeyboardEnter(clickEvent)) {\r\n                        overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */] = ActionType.KEYBOARDENTER;\r\n                    }\r\n                    else if (isKeyboardSpace(clickEvent)) {\r\n                        overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */] = ActionType.KEYBOARDSPACE;\r\n                    }\r\n                    else if (isMiddleClick(clickEvent)) {\r\n                        overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */] = ActionType.CLICKMIDDLE;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    while (element && element[_DYN_TAG_NAME /* @min:%2etagName */]) {\r\n                        // control property will be available for <label> elements with 'for' attribute, only use it when is a\r\n                        // valid JSLL capture element to avoid infinite loops\r\n                        if (element.control && clickCaptureElements[element.control[_DYN_TAG_NAME /* @min:%2etagName */][_DYN_TO_UPPER_CASE /* @min:%2etoUpperCase */]()]) {\r\n                            element = element.control;\r\n                        }\r\n                        var tagNameUpperCased = element[_DYN_TAG_NAME /* @min:%2etagName */][_DYN_TO_UPPER_CASE /* @min:%2etoUpperCase */]();\r\n                        if (!clickCaptureElements[tagNameUpperCased]) {\r\n                            element = element.parentElement || element[_DYN_PARENT_NODE /* @min:%2eparentNode */];\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            // Check allowed INPUT types\r\n                            var sendEvent = tagNameUpperCased === \"INPUT\" ? clickCaptureInputTypes[element.type[_DYN_TO_UPPER_CASE /* @min:%2etoUpperCase */]()] : true;\r\n                            if (sendEvent) {\r\n                                _capturePageAction(element, overrideValues, {}, isRightClickObj);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // handle automatic event firing on user click\r\n// Removed Stub for AutoCaptureHandler.prototype.click.\r\n// Removed Stub for AutoCaptureHandler.prototype._doUnload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AutoCaptureHandler.__ieDyn=1;\n\n    return AutoCaptureHandler;\r\n}());\r\nexport { AutoCaptureHandler };\r\n//# sourceMappingURL=AutoCaptureHandler.js.map","/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, getDocument, hasDocument, isNullOrUndefined, objExtend } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ATTRIBUTES, _DYN_CAPTURE_ALL_META_DAT2, _DYN_CONTENT, _DYN_CONTENT_NAME, _DYN_CUSTOM_DATA_PREFIX, _DYN_DATA_TAGS, _DYN_GET_ATTRIBUTE, _DYN_GET_ELEMENT_CONTENT, _DYN_INDEX_OF, _DYN_LENGTH, _DYN_META_DATA_PREFIX, _DYN_NAME, _DYN_PARENT_DATA_TAG, _DYN_PARENT_ELEMENT, _DYN_PARENT_NODE, _DYN_TAG_NAME, _DYN_USE_DEFAULT_CONTENT_1, _DYN__CONFIG, _DYN__TRACE_LOGGER } from \"../__DynamicConstants\";\r\nimport { isValueAssigned, removeInvalidElements, walkUpDomChainWithElementValidation } from \"../common/Utils\";\r\nvar MAX_CONTENTNAME_LENGTH = 200;\r\nvar DomContentHandler = /** @class */ (function () {\r\n    /**\r\n     * @param config - ClickAnalytics configuration object\r\n     * @param traceLogger - Trace logger to log to console.\r\n     */\r\n    function DomContentHandler(_config, _traceLogger) {\r\n        this._config = _config;\r\n        this._traceLogger = _traceLogger;\r\n        dynamicProto(DomContentHandler, this, function (_self) {\r\n            _self.getMetadata = function () {\r\n                var dataTags = (_self[_DYN__CONFIG /* @min:%2e_config */] || {})[_DYN_DATA_TAGS /* @min:%2edataTags */];\r\n                var metaTags = {};\r\n                if (hasDocument()) {\r\n                    metaTags = isValueAssigned(dataTags.metaDataPrefix) ? _getMetaDataFromDOM(dataTags[_DYN_CAPTURE_ALL_META_DAT2 /* @min:%2ecaptureAllMetaDataContent */], dataTags[_DYN_META_DATA_PREFIX /* @min:%2emetaDataPrefix */], false) :\r\n                        _getMetaDataFromDOM(dataTags[_DYN_CAPTURE_ALL_META_DAT2 /* @min:%2ecaptureAllMetaDataContent */], \"\", false);\r\n                }\r\n                return metaTags;\r\n            };\r\n            _self[_DYN_GET_ELEMENT_CONTENT /* @min:%2egetElementContent */] = function (element) {\r\n                if (!element) {\r\n                    return {};\r\n                }\r\n                var dataTags = (_self[_DYN__CONFIG /* @min:%2e_config */] || {})[_DYN_DATA_TAGS /* @min:%2edataTags */];\r\n                var elementContent = {};\r\n                var biBlobValue;\r\n                var parentDataTagPrefix;\r\n                var dataTagPrefix = dataTags[_DYN_CUSTOM_DATA_PREFIX /* @min:%2ecustomDataPrefix */];\r\n                var aiBlobAttributeTag = dataTagPrefix + dataTags.aiBlobAttributeTag;\r\n                if (isValueAssigned(dataTags[_DYN_PARENT_DATA_TAG /* @min:%2eparentDataTag */])) {\r\n                    parentDataTagPrefix = dataTagPrefix + dataTags[_DYN_PARENT_DATA_TAG /* @min:%2eparentDataTag */];\r\n                }\r\n                if (!_isTracked(element, dataTagPrefix, aiBlobAttributeTag)) {\r\n                    // capture blob from element or hierarchy\r\n                    biBlobValue = element[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](aiBlobAttributeTag);\r\n                    if (biBlobValue) {\r\n                        try {\r\n                            elementContent = JSON.parse(biBlobValue);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_self[_DYN__TRACE_LOGGER /* @min:%2e_traceLogger */], 1 /* eLoggingSeverity.CRITICAL */, 101 /* _eInternalMessageId.CannotParseAiBlobValue */, \"Can not parse \" + biBlobValue);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // traverse up the DOM to find the closest parent with data-* tag defined\r\n                        //contentElement = walkUpDomChainWithElementValidation(element, _self._isTracked, dataTagPrefix);\r\n                        elementContent = objExtend(elementContent, _populateElementContent(element, dataTagPrefix, parentDataTagPrefix, aiBlobAttributeTag));\r\n                    }\r\n                }\r\n                else {\r\n                    elementContent = objExtend(elementContent, _populateElementContentwithDataTag(element, dataTagPrefix, parentDataTagPrefix, aiBlobAttributeTag));\r\n                }\r\n                removeInvalidElements(elementContent);\r\n                if (parentDataTagPrefix) {\r\n                    elementContent = objExtend(elementContent, _getParentDetails(element, elementContent, dataTagPrefix, aiBlobAttributeTag));\r\n                }\r\n                return elementContent;\r\n            };\r\n            /**\r\n             * Capture current level Element content\r\n             */\r\n            function _captureElementContentWithDataTag(contentElement, elementContent, dataTagPrefix) {\r\n                for (var i = 0, attrib; i < contentElement.attributes[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                    attrib = contentElement[_DYN_ATTRIBUTES /* @min:%2eattributes */][i];\r\n                    if (attrib.name[_DYN_INDEX_OF /* @min:%2eindexOf */](dataTagPrefix) !== 0) {\r\n                        continue;\r\n                    }\r\n                    var attribName = attrib[_DYN_NAME /* @min:%2ename */].replace(dataTagPrefix, \"\");\r\n                    elementContent[attribName] = attrib.value;\r\n                }\r\n            }\r\n            /**\r\n             * Walk Up the DOM to capture Element content\r\n             */\r\n            function _walkUpDomChainCaptureData(el, elementContent, dataTagPrefix, parentDataTagPrefix, aiBlobAttributeTag) {\r\n                var element = el;\r\n                var parentDataTagFound = false;\r\n                var elementLevelFlag = false; // Use this flag to capture 'id' only at the incoming html element level.\r\n                while (!isNullOrUndefined(element) && !isNullOrUndefined(element[_DYN_ATTRIBUTES /* @min:%2eattributes */])) {\r\n                    var attributes = element[_DYN_ATTRIBUTES /* @min:%2eattributes */];\r\n                    for (var i = 0; i < attributes[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                        var attrib = attributes[i];\r\n                        if (attrib.name[_DYN_INDEX_OF /* @min:%2eindexOf */](dataTagPrefix) !== 0) {\r\n                            continue;\r\n                        }\r\n                        if (attrib.name[_DYN_INDEX_OF /* @min:%2eindexOf */](parentDataTagPrefix) === 0) {\r\n                            parentDataTagFound = true;\r\n                        }\r\n                        // Todo handle blob data\r\n                        if (attrib.name[_DYN_INDEX_OF /* @min:%2eindexOf */](aiBlobAttributeTag) === 0) {\r\n                            continue;\r\n                        }\r\n                        var attribName = attrib[_DYN_NAME /* @min:%2ename */].replace(dataTagPrefix, \"\");\r\n                        if (elementLevelFlag && attribName === \"id\") {\r\n                            continue; // skip capturing id if not at the first level.\r\n                        }\r\n                        if (!isValueAssigned(elementContent[attribName])) {\r\n                            elementContent[attribName] = attrib.value;\r\n                        }\r\n                    }\r\n                    // break after current level;\r\n                    if (parentDataTagFound) {\r\n                        break;\r\n                    }\r\n                    elementLevelFlag = true; // after the initial level set this flag to true.\r\n                    element = element[_DYN_PARENT_NODE /* @min:%2eparentNode */];\r\n                }\r\n            }\r\n            /**\r\n             * Capture Element content along with Data Tag attributes and values\r\n             */\r\n            function _populateElementContent(element, dataTagPrefix, parentDataTagPrefix, aiBlobAttributeTag) {\r\n                var elementContent = {};\r\n                if (!element) {\r\n                    return elementContent;\r\n                }\r\n                var htmlContent = _getHtmlIdAndContentName(element);\r\n                elementContent = {\r\n                    id: htmlContent.id || \"\",\r\n                    contentName: htmlContent[_DYN_CONTENT_NAME /* @min:%2econtentName */] || \"\"\r\n                };\r\n                if (isValueAssigned(parentDataTagPrefix)) {\r\n                    _walkUpDomChainCaptureData(element, elementContent, dataTagPrefix, parentDataTagPrefix, aiBlobAttributeTag);\r\n                }\r\n                // Validate to ensure the minimum required field 'id' or 'contentName' is present.\r\n                // The content schema defines id, aN and sN as required fields.  However,\r\n                // requiring these fields would result in majority of adopter's content from being collected.\r\n                // Just throw a warning and continue collection.\r\n                if (!elementContent.id && !elementContent[_DYN_CONTENT_NAME /* @min:%2econtentName */]) {\r\n                    _throwInternal(_traceLogger, 2 /* eLoggingSeverity.WARNING */, 102 /* _eInternalMessageId.InvalidContentBlob */, \"Invalid content blob.  Missing required attributes (id, contentName. \" +\r\n                        \" Content information will still be collected!\");\r\n                }\r\n                return elementContent;\r\n            }\r\n            /**\r\n             * Capture Element content along with Data Tag attributes and values\r\n             */\r\n            function _populateElementContentwithDataTag(element, dataTagPrefix, parentDataTagPrefix, aiBlobAttributeTag) {\r\n                var dataTags = (_self[_DYN__CONFIG /* @min:%2e_config */] || {})[_DYN_DATA_TAGS /* @min:%2edataTags */];\r\n                var elementContent = {};\r\n                if (!element) {\r\n                    return elementContent;\r\n                }\r\n                var htmlContent = _getHtmlIdAndContentName(element);\r\n                if (isValueAssigned(parentDataTagPrefix)) {\r\n                    _walkUpDomChainCaptureData(element, elementContent, dataTagPrefix, parentDataTagPrefix, aiBlobAttributeTag);\r\n                }\r\n                else {\r\n                    _captureElementContentWithDataTag(element, elementContent, dataTagPrefix);\r\n                }\r\n                if (dataTags[_DYN_USE_DEFAULT_CONTENT_1 /* @min:%2euseDefaultContentNameOrId */]) {\r\n                    if (!isValueAssigned(elementContent.id)) {\r\n                        elementContent.id = htmlContent.id || \"\";\r\n                    }\r\n                    elementContent[_DYN_CONTENT_NAME /* @min:%2econtentName */] = htmlContent[_DYN_CONTENT_NAME /* @min:%2econtentName */] || \"\";\r\n                }\r\n                // Validate to ensure the minimum required field 'id' or 'contentName' is present.\r\n                // The content schema defines id, aN and sN as required fields.  However,\r\n                // requiring these fields would result in majority of adopter's content from being collected.\r\n                // Just throw a warning and continue collection.\r\n                if (!elementContent.id && !elementContent[_DYN_CONTENT_NAME /* @min:%2econtentName */]) {\r\n                    _throwInternal(_traceLogger, 2 /* eLoggingSeverity.WARNING */, 102 /* _eInternalMessageId.InvalidContentBlob */, \"Invalid content blob.  Missing required attributes (id, contentName. \" +\r\n                        \" Content information will still be collected!\");\r\n                }\r\n                return elementContent;\r\n            }\r\n            /**\r\n             * Retrieve a specified metadata tag value from the DOM.\r\n             * @param captureAllMetaDataContent - Flag to capture all metadata content\r\n             * @param prefix - Prefix to search the metatags with.\r\n             * @param removePrefix - Specifies if the prefix must be excluded from key names in the returned collection.\r\n             * @returns Metadata collection/property bag\r\n             */\r\n            function _getMetaDataFromDOM(captureAllMetaDataContent, prefix, removePrefix) {\r\n                var metaElements;\r\n                var metaData = {};\r\n                if (hasDocument()) {\r\n                    metaElements = getDocument().querySelectorAll(\"meta\");\r\n                    for (var i = 0; i < metaElements[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                        var meta = metaElements[i];\r\n                        if (meta[_DYN_NAME /* @min:%2ename */]) {\r\n                            if (captureAllMetaDataContent || meta.name[_DYN_INDEX_OF /* @min:%2eindexOf */](prefix) === 0) {\r\n                                var name_1 = removePrefix ? meta[_DYN_NAME /* @min:%2ename */].replace(prefix, \"\") : meta[_DYN_NAME /* @min:%2ename */];\r\n                                metaData[name_1] = meta[_DYN_CONTENT /* @min:%2econtent */];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return metaData;\r\n            }\r\n            /**\r\n             * Gets the default content name.\r\n             * @param element - An html element\r\n             * @param useDefaultContentNameOrId - Flag indicating if an element is market PII.\r\n             * @returns Content name\r\n             */\r\n            function _getDefaultContentName(element, useDefaultContentName) {\r\n                if (useDefaultContentName === false || !element[_DYN_TAG_NAME /* @min:%2etagName */]) {\r\n                    return \"\";\r\n                }\r\n                var doc = getDocument() || {};\r\n                var contentName;\r\n                switch (element[_DYN_TAG_NAME /* @min:%2etagName */]) {\r\n                    case \"A\":\r\n                        contentName = doc.all ? element.innerText || element.innerHTML : element.text || element.innerHTML;\r\n                        break;\r\n                    case \"IMG\":\r\n                    case \"AREA\":\r\n                        contentName = element.alt;\r\n                        break;\r\n                    default:\r\n                        contentName = element.value || element[_DYN_NAME /* @min:%2ename */] || element.alt || element.innerText || element.id;\r\n                }\r\n                return strSubstring(contentName, 0, MAX_CONTENTNAME_LENGTH);\r\n            }\r\n            /**\r\n             * Check if the user wants to track the element, which means if the element has any tags with data-* or customDataPrefix\r\n             * @param element - An html element\r\n             * @returns true if any data-* exist, otherwise return false\r\n             */\r\n            function _isTracked(element, dataTag, aiBlobAttributeTag) {\r\n                var attrs = element[_DYN_ATTRIBUTES /* @min:%2eattributes */];\r\n                var dataTagFound = false;\r\n                for (var i = 0; i < attrs[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                    var attributeName = attrs[i][_DYN_NAME /* @min:%2ename */];\r\n                    if (attributeName === aiBlobAttributeTag) {\r\n                        // ignore if the attribute name is equal to aiBlobAttributeTag\r\n                        return false;\r\n                    }\r\n                    else if (attributeName[_DYN_INDEX_OF /* @min:%2eindexOf */](dataTag) === 0) {\r\n                        dataTagFound = true;\r\n                    }\r\n                }\r\n                return dataTagFound;\r\n            }\r\n            function _getHtmlIdAndContentName(element) {\r\n                var _a;\r\n                var dataTags = (_self[_DYN__CONFIG /* @min:%2e_config */] || {})[_DYN_DATA_TAGS /* @min:%2edataTags */];\r\n                var callback = (_self[_DYN__CONFIG /* @min:%2e_config */] || {}).callback;\r\n                var htmlContent = {};\r\n                if (!element) {\r\n                    return htmlContent;\r\n                }\r\n                if (dataTags[_DYN_USE_DEFAULT_CONTENT_1 /* @min:%2euseDefaultContentNameOrId */]) {\r\n                    var customizedContentName = callback[_DYN_CONTENT_NAME /* @min:%2econtentName */] ? callback[_DYN_CONTENT_NAME /* @min:%2econtentName */](element, dataTags[_DYN_USE_DEFAULT_CONTENT_1 /* @min:%2euseDefaultContentNameOrId */]) : \"\";\r\n                    var defaultContentName = _getDefaultContentName(element, dataTags[_DYN_USE_DEFAULT_CONTENT_1 /* @min:%2euseDefaultContentNameOrId */]);\r\n                    htmlContent = (_a = {\r\n                            id: element.id\r\n                        },\r\n                        _a[_DYN_CONTENT_NAME /* @min:contentName */] = customizedContentName || defaultContentName || element[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"alt\"),\r\n                        _a);\r\n                }\r\n                return htmlContent;\r\n            }\r\n            /**\r\n            * Computes the parentId of a given element.\r\n            * @param element - An html element\r\n            * @returns An object containing the closest parentId , can be empty if nothing was found\r\n            */\r\n            function _getParentDetails(element, elementContent, dataTagPrefix, aiBlobAttributeTag) {\r\n                var parentId = elementContent[\"parentid\"];\r\n                var parentName = elementContent[\"parentname\"];\r\n                var parentInfo = {};\r\n                if (parentId || parentName || !element) {\r\n                    return parentInfo;\r\n                }\r\n                return _populateParentInfo(element, dataTagPrefix, aiBlobAttributeTag);\r\n            }\r\n            /**\r\n            * Check if parent info already set up, if so take and put into content, if not walk up the DOM to find correct info\r\n            * @param element - An html element that the user wants to track\r\n            * @returns An object containing the parent info, can be empty if nothing was found\r\n            */\r\n            function _populateParentInfo(element, dataTagPrefix, aiBlobAttributeTag) {\r\n                var parentInfo = {};\r\n                var parentId;\r\n                // if the user does not set up parent info, walk to the DOM, find the closest parent element (with tags) and populate the info\r\n                var closestParentElement = walkUpDomChainWithElementValidation(element[_DYN_PARENT_ELEMENT /* @min:%2eparentElement */], _isTracked, dataTagPrefix);\r\n                if (closestParentElement) {\r\n                    var dataAttr = closestParentElement[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](aiBlobAttributeTag) || element[aiBlobAttributeTag];\r\n                    if (dataAttr) {\r\n                        try {\r\n                            var telemetryObject = JSON.parse(dataAttr);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_traceLogger, 1 /* eLoggingSeverity.CRITICAL */, 101 /* _eInternalMessageId.CannotParseAiBlobValue */, \"Can not parse \" + dataAttr);\r\n                        }\r\n                        if (telemetryObject) {\r\n                            parentId = telemetryObject.id;\r\n                        }\r\n                    }\r\n                    else {\r\n                        parentId = closestParentElement[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](dataTagPrefix + \"id\");\r\n                    }\r\n                }\r\n                if (parentId) {\r\n                    parentInfo[\"parentid\"] = parentId;\r\n                }\r\n                else {\r\n                    var htmlContent = _getHtmlIdAndContentName(element[_DYN_PARENT_ELEMENT /* @min:%2eparentElement */]);\r\n                    parentInfo[\"parentid\"] = htmlContent.id;\r\n                    parentInfo[\"parentname\"] = htmlContent[_DYN_CONTENT_NAME /* @min:%2econtentName */];\r\n                }\r\n                return parentInfo;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DomContentHandler.prototype.getMetadata.\r\n// Removed Stub for DomContentHandler.prototype.getElementContent.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DomContentHandler.__ieDyn=1;\n\n    return DomContentHandler;\r\n}());\r\nexport { DomContentHandler };\r\n//# sourceMappingURL=DomContentHandler.js.map","/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n*/\r\nvar _a, _b, _c, _d;\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, _throwInternal, arrForEach, cfgDfFunc, cfgDfMerge, cfgDfString, cfgDfValidate, createProcessTelemetryContext, dumpObj, getExceptionName, isNullOrUndefined, onConfigChange, throwError, unloadComponents } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getDocument, hasDocument, objDeepFreeze, strSubstring, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BEHAVIOR_VALIDATOR, _DYN_CAPTURE_ALL_META_DAT2, _DYN_CONTENT_NAME, _DYN_DEFAULT_RIGHT_CLICK_3, _DYN_INDEX_OF, _DYN_LENGTH, _DYN_META_DATA_PREFIX, _DYN_PAGE_ACTION_PAGE_TAG0, _DYN_PAGE_NAME, _DYN_PAGE_TYPE, _DYN_PARENT_DATA_TAG, _DYN_REQUEST_URI, _DYN_TRACK_PAGE_ACTION, _DYN_USE_DEFAULT_CONTENT_1, _DYN__DO_UNLOAD } from \"./__DynamicConstants\";\r\nimport { BehaviorEnumValidator, BehaviorMapValidator, BehaviorValueValidator, DEFAULT_AI_BLOB_ATTRIBUTE_TAG, DEFAULT_DATA_PREFIX, DEFAULT_DONOT_TRACK_TAG } from \"./common/Utils\";\r\nimport { PageAction } from \"./events/PageAction\";\r\nimport { AutoCaptureHandler } from \"./handlers/AutoCaptureHandler\";\r\nimport { DomContentHandler } from \"./handlers/DomContentHandler\";\r\nexport { BehaviorMapValidator, BehaviorValueValidator, BehaviorEnumValidator };\r\nvar defaultValues = objDeepFreeze((_a = {\r\n        autoCapture: true,\r\n        callback: cfgDfMerge((_b = {},\r\n            _b[_DYN_PAGE_ACTION_PAGE_TAG0 /* @min:pageActionPageTags */] = cfgDfFunc(),\r\n            _b[_DYN_PAGE_NAME /* @min:pageName */] = cfgDfFunc(),\r\n            _b[_DYN_CONTENT_NAME /* @min:contentName */] = cfgDfFunc(),\r\n            _b)),\r\n        pageTags: {},\r\n        coreData: cfgDfMerge((_c = {\r\n                referrerUri: hasDocument() ? getDocument().referrer : \"\"\r\n            },\r\n            _c[_DYN_REQUEST_URI /* @min:requestUri */] = cfgDfString(),\r\n            _c[_DYN_PAGE_NAME /* @min:pageName */] = cfgDfString(),\r\n            _c[_DYN_PAGE_TYPE /* @min:pageType */] = cfgDfString(),\r\n            _c)),\r\n        dataTags: cfgDfMerge((_d = {},\r\n            _d[_DYN_USE_DEFAULT_CONTENT_1 /* @min:useDefaultContentNameOrId */] = false,\r\n            _d.aiBlobAttributeTag = DEFAULT_AI_BLOB_ATTRIBUTE_TAG,\r\n            _d.customDataPrefix = cfgDfValidate(_dataPrefixChk, DEFAULT_DATA_PREFIX),\r\n            _d[_DYN_CAPTURE_ALL_META_DAT2 /* @min:captureAllMetaDataContent */] = false,\r\n            _d.dntDataTag = DEFAULT_DONOT_TRACK_TAG,\r\n            _d[_DYN_META_DATA_PREFIX /* @min:metaDataPrefix */] = cfgDfString(),\r\n            _d[_DYN_PARENT_DATA_TAG /* @min:parentDataTag */] = cfgDfString(),\r\n            _d))\r\n    },\r\n    _a[_DYN_BEHAVIOR_VALIDATOR /* @min:behaviorValidator */] = cfgDfFunc(function (key) { return key || \"\"; }),\r\n    _a[_DYN_DEFAULT_RIGHT_CLICK_3 /* @min:defaultRightClickBhvr */] = cfgDfString(),\r\n    _a.dropInvalidEvents = false,\r\n    _a.urlCollectHash = false,\r\n    _a.urlCollectQuery = false,\r\n    _a));\r\nfunction _dataPrefixChk(val) {\r\n    return val && val[_DYN_INDEX_OF /* @min:%2eindexOf */](DEFAULT_DATA_PREFIX) === 0;\r\n}\r\nvar ClickAnalyticsPlugin = /** @class */ (function (_super) {\r\n    __extends(ClickAnalyticsPlugin, _super);\r\n    function ClickAnalyticsPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"ClickAnalyticsPlugin\";\r\n        _this.priority = 181;\r\n        var _config;\r\n        var _pageAction;\r\n        var _autoCaptureHandler;\r\n        var _contentHandler;\r\n        var _autoCapture;\r\n        dynamicProto(ClickAnalyticsPlugin, _this, function (_self, _base) {\r\n            var _identifier = _self.identifier;\r\n            _initDefaults();\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                if (isNullOrUndefined(core)) {\r\n                    throwError(\"Error initializing\");\r\n                }\r\n                _super.prototype.initialize.call(_this, config, core, extensions, pluginChain);\r\n                _populateDefaults(config);\r\n                // Find the properties plugin.\r\n                var _propertiesExtension;\r\n                arrForEach(extensions, function (extension) {\r\n                    if (extension.identifier === PropertiesPluginIdentifier) {\r\n                        _propertiesExtension = extension;\r\n                    }\r\n                });\r\n                // Append Click Analytics Plugin Version to SDK version.\r\n                if (_propertiesExtension && _propertiesExtension.context && _propertiesExtension.context.internal) {\r\n                    var theVersion = _propertiesExtension.context.internal.sdkVersion;\r\n                    if (theVersion) {\r\n                        theVersion += \"_ClickPlugin\" + ClickAnalyticsPlugin.Version;\r\n                        if (theVersion[_DYN_LENGTH /* @min:%2elength */] > 64) {\r\n                            theVersion = strTrim(strSubstring(theVersion, 0, 64));\r\n                        }\r\n                        _propertiesExtension.context.internal.sdkVersion = theVersion;\r\n                    }\r\n                }\r\n            };\r\n            _self.processTelemetry = function (env, itemCtx) {\r\n                _self.processNext(env, itemCtx);\r\n            };\r\n            _self[_DYN_TRACK_PAGE_ACTION /* @min:%2etrackPageAction */] = function (pageAction, customProperties) {\r\n                try {\r\n                    _pageAction[_DYN_TRACK_PAGE_ACTION /* @min:%2etrackPageAction */](pageAction, customProperties);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(_self.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, 103 /* _eInternalMessageId.TrackPageActionEventFailed */, \"trackPageAction failed, page action event will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState, asyncCallback) {\r\n                return unloadComponents([\r\n                    _autoCaptureHandler,\r\n                    _contentHandler,\r\n                    _pageAction\r\n                ], unloadCtx, unloadState, function () {\r\n                    _initDefaults();\r\n                    asyncCallback && asyncCallback();\r\n                });\r\n            };\r\n            function _populateDefaults(config) {\r\n                var core = _self.core;\r\n                _self._addHook(onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    var _config = ctx.getExtCfg(_identifier, defaultValues);\r\n                    var logger = _self.diagLog();\r\n                    _contentHandler = new DomContentHandler(_config, logger);\r\n                    var metaTags = _contentHandler.getMetadata();\r\n                    _pageAction = new PageAction(_self, _config, _contentHandler, _config.callback[_DYN_PAGE_ACTION_PAGE_TAG0 /* @min:%2epageActionPageTags */], metaTags, logger);\r\n                    // Default to DOM autoCapture handler\r\n                    if (_autoCaptureHandler) {\r\n                        _autoCaptureHandler[_DYN__DO_UNLOAD /* @min:%2e_doUnload */]();\r\n                    }\r\n                    _autoCaptureHandler = new AutoCaptureHandler(_self, _config, _pageAction, logger);\r\n                    var autoCapture = !!_config.autoCapture;\r\n                    if (!_autoCapture && autoCapture) {\r\n                        _autoCaptureHandler.click();\r\n                    }\r\n                    _autoCapture = autoCapture;\r\n                }));\r\n            }\r\n            function _initDefaults() {\r\n                _config = null;\r\n                _pageAction = null;\r\n                _autoCaptureHandler = null;\r\n                _contentHandler = null;\r\n                _autoCapture = false;\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ClickAnalyticsPlugin.prototype.initialize.\r\n// Removed Stub for ClickAnalyticsPlugin.prototype.processTelemetry.\r\n// Removed Stub for ClickAnalyticsPlugin.prototype.trackPageAction.\r\n    ClickAnalyticsPlugin.Version = '3.3.1';\r\n    return ClickAnalyticsPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { ClickAnalyticsPlugin };\r\n//# sourceMappingURL=ClickAnalyticsPlugin.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent, findAllScripts } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map"],"names":["strShimObject","strShimUndefined","strShimPrototype","ObjClass","Object","_pureAssign","func1","func2","_pureRef","value","name","UNDEF_VALUE","undefined","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","ObjProto","StrCls","String","StrProto","ArrCls","Array","ArrProto","ArrSlice","safe","func","argArray","v","apply","this","e","_createIs","theType","_createObjIs","theName","call","isUndefined","isNullOrUndefined","isDefined","arg","isString","isFunction","isObject","isArray","isBoolean","isError","objGetOwnPropertyDescriptor","objHasOwnProperty","obj","prop","hasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","theObject","callbackfn","thisArg","propMap","c","w","g","s","objDefineProp","objDefine","target","key","propDesc","l","get","desc","set","newValue","_assignMapValue","theMap","writable","enumerable","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stack","message","JSON","stringify","replace","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objKeys","objFreeze","objGetPrototypeOf","createEnumKeyMap","values","completeFn","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","match","matchAll","search","species","split","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","result","globalThis","self","window","global","_getGlobalConfig","gbl","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theArgs","theFunc","arguments","_polySymbols","_wellKnownSymbolCache","_globalLazyTestHooks","strSubstring","polyNewSymbol","description","theSymbol","toString","_initTestHooks","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","lzy","getGlobal","useCached","getInst","getWindow","_symbol","_symbolFor","_iterSymbol$1","getDocument","getNavigator","_initSymbol","_getSymbolKey","gblSym","getKnownSymbol","noPoly","knownName","sym","newSymbol","symbolFor","gblCfg","k","newSymbol_1","regId_1","registry","length","isIterator","next","iterForOf","iter","err","iterResult","count","done","failed","throw","return","fnApply","fn","arrForEach","theArray","len","idx","_isProtoArray","arrIndexOf","objCreate","polyObjCreate","type","tempFunc","objSetPrototypeOf","proto","d","b","_a","_setName","baseClass","utcNow","Date","now","getTime","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","strTrim","isPlainObject","Function","ex","strIndexOf","UNREF","strHasOwnProperty","extendStaticsFn","__proto__","p","__extendsFn","__","constructor","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","n","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","curProto","newProto","_forEachProp","props","name_1","push","lp","_isDynamicCandidate","skipOwn","_throwTypeError","_hasVisited","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","options","thisTarget","instFuncs","baseInstFuncs","instFuncs_1","classProto","className","visited","thisProto","_checkPrototype","perfOptions","useBaseInst","setInstanceFunc","_instFuncProxy","funcHost","instFuncTable","baseFuncs","baseProto","_getBaseFuncs","dynProtoProxy","protoFunc","currentDynProtoProxy","instFunc","canAddInst","objProto","_getInstFunc","aggregationErrorType","_DYN_BLK_VAL","_DYN_LENGTH","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_LOGGER","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_HDLR","_DYN_IDENTIFIER","_DYN_IS_INITIALIZED","_DYN_GET_PLUGIN","_DYN_TIME","_DYN_PROCESS_NEXT","_DYN_CREATE_NEW","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_MESSAGE","_DYN_IS_ASYNC","_DYN_DIAG_LOG","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_TYPE","_DYN_HANDLER","_DYN_IS_CHILD_EVT","_DYN_GET_CTX","_DYN_SET_CTX","_DYN_COMPLETE","UNDEFINED_VALUE","STR_EMPTY","STR_CORE","STR_DISABLED","STR_EXTENSION_CONFIG","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_GET_PERF_MGR","STR_NOT_DYNAMIC_ERROR","rCamelCase","rNormalizeInvalid","rLeadingNumeric","normalizeJsName","_all","letter","toUpperCase","strContains","proxyFunctionAs","source","overwriteTarget","srcFunc","src","originalArguments","objExtend","extended","argLen","deep","isNewArray","clone","isArgArray","isArgObj","strLocation","strConsole","strJSON","_isTrident","_navUserAgentCheck","_enableMocks","getLocation","checkForMock","mockLocation","location","hasJSON","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","random32","signed","seedValue","getRandomValues","Uint32Array","nav","userAgent","Math","random","floor","version","instanceName","maxLength","number","chars","base64chars","newId","_dataUid","_canAcceptData","createUniqueNamespace","includeVersion","createElmNodeData","data","id","accept","defValue","addDefault","theCache","_getCache","kill","_isConfigDefaults","isVal","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","cfg","_applyDefaultValue","defaultValue","isValid","setFn","mergeDf","reference","readOnly","theValue","blkDynamicValue","mrg","ref","usingDefault","cfgValue","_resolveDefaultValue","newValue_1","dfName","dfValue","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_canMakeDynamic","getFunc","state","blkVal","throwInvalidAccess","arrayMethodsToPatch","_throwDynamicError","logger","concat","_getOwnPropGetter","_createDynamicProperty","detail","h","trk","handler","clr","checkDynamic","isObjectOrArray","_getProperty","_makeDynamicObject","activeHandler","act","chng","add","ro","upd","newIsObjectOrArray","isReferenced","rf","_setDynamicProperty","hdlr","getter","valueState","_setDynamicPropertyState","flags","isDynamic","inPlace","rdOnly","blkProp","blockDynamicConversion","method","orgMethod","args","_i","symPrefix","symPostfix","_createState","cfgHandler","theState","dynamicPropertySymbol","uid","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","callback","prevWatcher","bind","setDf","_notifyWatchers","theMessage","notifyHandlers","watcherFailures_1","sourceErrors","orgName","theBaseClass","Error","captureFn","captureStackTrace","_this","orgProto","_self","constructCb","errors","srcError","createCustomError","overrideFn","isArr","setTimeout","clearFn","clearTimeout","timerFn","dn","cancelFn","timerId","refreshFn","refresh","theTimerHandler","cancel","_cancel","_refresh","hasRef","_unref","scheduleTimeout","use","details","_createDynamicHandler","getDynamicConfigHandler","newTarget","_cfgDeepCopy","target_1","defaultValues","configHandler","rm","_block","allowUpdate","prevUpd","createDynamicConfig","config","defaultConfig","onConfigChange","cfgDfMerge","cfgDfFunc","cfgDfString","_aiNamespace","STR_WARN_TO_CONSOLE","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","text","_logToConsole","logFunc","theConsole","console","_InternalLogMessage","dataType","msgId","msg","isUserAct","properties","strProps","diagnosticText","safeGetLogger","core","DiagnosticLogger","__ieDyn","identifier","queue","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","throttleLimitMessage","throttleMessage","logMessage","messageKey","_debugExtMsg","errorToConsole","ns","dbgExt","disableDbgExt","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","isAsync","_throwInternal","strParentContextKey","strChildrenContextKey","PerfEvent","ParentContextKey","ChildrenContextKey","payloadDetails","theDetails_1","start","childTime","childEvts","childEvt","exTime","doPerfActiveKey","doPerf","mgrSource","getSource","perfMgr","children","perfEvt","currentActive","create","fire","pluginStateData","_getPluginState","plugin","unloadComponents","components","unloadCtx","unloadState","_doUnload","component","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_createInternalContext","telemetryChain","startAt","_nextProxy","_onComplete","context","proxy","createTelemetryProxyChain","_getNextProxyStart","_next","onComplete","nextProxy","completeDetails","ctx","diagLog","getCfg","getExtCfg","newConfig","_getExtCfg","field","getConfig","extConfig","rootConfig","hasNext","getNext","setNext","nextPlugin","iterate","cb","that","createIfMissing","extCfg","idCfg","createProcessTelemetryContext","internalContext","env","plugins","lastProxy_1","firstProxy","thePlugin","newProxy","createTelemetryPluginProxy","_setNext","hasProcessTelemetry","hasSetNext","chainId","proxyChain","getPlugin","processTelemetry","itemCtx","_processChain","pluginState","item","unload","pluginCore","hasRun","update","updateCtx","updateState","_id","processPluginFn","hasRunContext","nextId","error","hasNextRun","createUnloadHandlerContainer","handlers","run","createUnloadHookContainer","_hooks","oldHooks","remove","hooks","elms","elm","strGetPlugin","BaseTelemetryPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","_hookContainer","_getTelCtx","currentCtx","rootCtx","_setDefaults","pluginChain","_initDefaults","extensions","unloadDone","theUnloadCtx","theUnloadState","createProcessTelemetryUnloadContext","reason","_unloadCallback","updateDone","theUpdateCtx","createProcessTelemetryUpdateContext","_doUpdate","_updateCallback","setInitialized","isInitialized","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","eventName","evtNamespace","theNamespace_1","parsedEvent","exec","sort","join","_getRegisteredEvents","evtName","aiEvts","_doDetach","handlerRef","useCapture","_doUnregister","events","unRegFn","theEvent","capture","eventOn","registeredEvent","guid","eventOff","evtName_1","found_1","regEvent","eventCache","evtType","strNotSpecified","_DYN_INDEX_OF","_DYN_TRACK_PAGE_ACTION","_DYN_PAGE_ACTION_PAGE_TAG0","_DYN__DO_UNLOAD","_DYN_PAGE_NAME","_DYN_CONTENT_NAME","_DYN_REQUEST_URI","_DYN_PAGE_TYPE","_DYN_USE_DEFAULT_CONTENT_1","_DYN_CAPTURE_ALL_META_DAT2","_DYN_META_DATA_PREFIX","_DYN_PARENT_DATA_TAG","_DYN_BEHAVIOR_VALIDATOR","_DYN_DEFAULT_RIGHT_CLICK_3","_DYN_TAG_NAME","_DYN_TO_UPPER_CASE","_DYN_PATHNAME","_DYN_CORE_DATA","_DYN_GET_ATTRIBUTE","_DYN_PARENT_NODE","_DYN_CUSTOM_DATA_PREFIX","_DYN_NAME","_DYN_DATA","_DYN_PROPERTIES","_DYN_ACTION_TYPE","_DYN_BEHAVIOR","_DYN_CLICK_COORDINATES","_DYN_CONTENT","_DYN_PARENT_ID","_DYN_CAPTURE_PAGE_ACTION","_DYN_SET_COMMON_PROPERTIE4","_DYN_GET_ELEMENT_CONTENT","_DYN__GET_VALID_BEHAVIOR","_DYN__TRACE_LOGGER","_DYN_CLICK_COORDINATE_X","_DYN_CLICK_COORDINATE_Y","_DYN__CONFIG","_DYN_DATA_TAGS","_DYN__PAGE_TAGS","_DYN__PAGE_TAGS_CALLBACK","_DYN__META_TAGS","_DYN_SET_BASIC_PROPERTIES","_DYN__BEHAVIOR_META_TAG","_DYN_PARENT_ELEMENT","_DYN_ATTRIBUTES","isValueAssigned","isAttributeInElement","element","attributeToLookFor","walkUpDomChainWithElementValidation","el","validationMethod","validationMethodParam","isElementAnAnchor","nodeName","clickCaptureInputTypes","BUTTON","CHECKBOX","RADIO","RESET","SUBMIT","WebEvent","clickAnalyticsPlugin","contentHandler","pageTagsCallback","metaTags","traceLogger","_clickAnalyticsPlugin","_contentHandler","_getMetaData","coreData","metaTagName","event","overrideValues","doc","title","uri","url","protocol","hostname","host","port","urlCollectHash","hash","urlCollectQuery","getUri","_setPageTags","_pageTypeMetaTag","_metaTags","_config","_behaviorMetaTag","pageTags","metaTag","_getBehavior","behavior","asyncCallback","__extends","PageAction","_super","_base","_populateEventDataIfPresent","property","pageActionEvent","baseType","ext","web","baseData","targetUri","timeToAction","track","customProperties","isRightClick","fieldValue","pageActionProperties","elementContent","clickTarget","href","parent","firstParent","getImageHref","loc","form","action","getClickTarget","bhvr","fieldName","currentBehavior","parentid","parentName","pageActionContent","parentname","dataTags","parentDataTag","contentTags","refUri","referrerUri","dropInvalidEvents","AutoCaptureHandler","_analyticsPlugin","_pageAction","_traceLogger","theNamespace","namespaces","_evtNamespace","_processClick","clickEvent","clickCaptureElements","A","AREA","INPUT","win","srcElement","pageX","pageY","isRightClickObj","evt","which","button","isLeftClick","keyCode","isKeyboardEnter","isKeyboardSpace","isMiddleClick","tagNameUpperCased","control","dntDataTag","parentElement","click","navigator","appVersion","DomContentHandler","_walkUpDomChainCaptureData","dataTagPrefix","parentDataTagPrefix","aiBlobAttributeTag","parentDataTagFound","elementLevelFlag","attributes","i","attribName","attrib","_getMetaDataFromDOM","captureAllMetaDataContent","prefix","removePrefix","metaData","metaElements","querySelectorAll","meta","_isTracked","dataTag","attrs","dataTagFound","attributeName","_getHtmlIdAndContentName","defaultContentName","htmlContent","customizedContentName","contentName","all","innerText","innerHTML","alt","_getDefaultContentName","getMetadata","metaDataPrefix","_captureElementContentWithDataTag","contentElement","_populateElementContentwithDataTag","biBlobValue","parse","_populateElementContent","removeInvalidElements","parentId","_populateParentInfo","parentInfo","closestParentElement","dataAttr","telemetryObject","_getParentDetails","objDeepFreeze","autoCapture","_b","_c","referrer","_d","customDataPrefix","cfgDfValidate","val","ClickAnalyticsPlugin","Version","_autoCaptureHandler","_autoCapture","priority","_identifier","initialize","_propertiesExtension","prototype","_addHook","extension","internal","theVersion","sdkVersion","processNext","pageAction","exception","_doTeardown","enumObj","map","behaviorArray"],"mappings":"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","x_google_ignoreList":[1,3]}
{"version":3,"file":"ai.3.3.1.cjs.min.js","sources":["../../../common/temp/node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/AggregationError.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK.Enums/InitActiveStatusEnum.js","../../../shared/AppInsightsCore/dist-es5/__DynamicConstants.js","../../../tools/shims/dist-es5/Constants.js","../../../common/temp/node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","../../../tools/shims/dist-es5/TsLibShims.js","../../../common/temp/node_modules/@nevware21/ts-async/dist/es5/mod/ts-async.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/InternalConstants.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/HelperFuncs.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/EnvUtils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/RandomHelper.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DataCacheHelper.js","../../../shared/AppInsightsCore/dist-es5/Config/ConfigDefaults.js","../../../shared/AppInsightsCore/dist-es5/Config/DynamicSupport.js","../../../shared/AppInsightsCore/dist-es5/Config/DynamicProperty.js","../../../shared/AppInsightsCore/dist-es5/Config/DynamicState.js","../../../shared/AppInsightsCore/dist-es5/Config/DynamicConfig.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/AsyncUtils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/Constants.js","../../../shared/AppInsightsCore/dist-es5/Config/ConfigDefaultHelpers.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DiagnosticLogger.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/CookieMgr.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/NotificationManager.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/PerfManager.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/W3cTraceParent.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/TelemetryHelpers.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/UnloadHookContainer.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/TelemetryInitializerPlugin.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/AppInsightsCore.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/ResponseHelpers.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/SenderPostManager.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/EventHelpers.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/InstrumentHooks.js","../../../shared/AppInsightsCommon/dist-es5/Constants.js","../../../shared/AppInsightsCommon/dist-es5/RequestResponseHeaders.js","../../../shared/AppInsightsCommon/dist-es5/__DynamicConstants.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-es5/UrlHelperFuncs.js","../../../shared/AppInsightsCommon/dist-es5/Util.js","../../../shared/AppInsightsCommon/dist-es5/Enums.js","../../../shared/AppInsightsCommon/dist-es5/StorageHelperFuncs.js","../../../shared/AppInsightsCommon/dist-es5/ThrottleMgr.js","../../../shared/AppInsightsCommon/dist-es5/ConnectionStringParser.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-es5/HelperFuncs.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-es5/Interfaces/Contracts/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-es5/Interfaces/Contracts/ContextTagKeys.js","../../../shared/AppInsightsCommon/dist-es5/TelemetryItemCreator.js","../../../shared/AppInsightsCommon/dist-es5/Interfaces/PartAExtensions.js","../../../shared/AppInsightsCommon/dist-es5/DomHelperFuncs.js","../../../shared/AppInsightsCommon/dist-es5/Offline.js","../../../shared/AppInsightsCommon/dist-es5/applicationinsights-common.js","../../../extensions/applicationinsights-analytics-js/dist-es5/__DynamicConstants.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Telemetry/PageViewManager.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/AnalyticsPlugin.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Timing.js","../../../extensions/applicationinsights-cfgsync-js/dist-es5/__DynamicConstants.js","../../../extensions/applicationinsights-cfgsync-js/dist-es5/CfgSyncHelperFuncs.js","../../../extensions/applicationinsights-cfgsync-js/dist-es5/CfgSyncPlugin.js","../../../channels/applicationinsights-channel-js/dist-es5/InternalConstants.js","../../../channels/applicationinsights-channel-js/dist-es5/__DynamicConstants.js","../../../channels/applicationinsights-channel-js/dist-es5/EnvelopeCreator.js","../../../channels/applicationinsights-channel-js/dist-es5/SendBuffer.js","../../../channels/applicationinsights-channel-js/dist-es5/Sender.js","../../../channels/applicationinsights-channel-js/dist-es5/Serializer.js","../../../channels/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","../../../channels/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","../../../channels/applicationinsights-channel-js/dist-es5/TelemetryProcessors/Sample.js","../../../extensions/applicationinsights-dependencies-js/dist-es5/InternalConstants.js","../../../extensions/applicationinsights-dependencies-js/dist-es5/__DynamicConstants.js","../../../extensions/applicationinsights-dependencies-js/dist-es5/ajaxRecord.js","../../../extensions/applicationinsights-dependencies-js/dist-es5/ajax.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Application.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Device.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Internal.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Location.js","../../../extensions/applicationinsights-properties-js/dist-es5/__DynamicConstants.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Session.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/TelemetryTrace.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/User.js","../../../extensions/applicationinsights-properties-js/dist-es5/TelemetryContext.js","../../../extensions/applicationinsights-properties-js/dist-es5/PropertiesPlugin.js","../../dist-es5/AISku.js","../../dist-es5/InternalConstants.js","../../dist-es5/__DynamicConstants.js","../../dist-es5/ApplicationInsightsContainer.js","../../dist-es5/Init.js"],"sourcesContent":["/*! https://github.com/nevware21/ts-utils v0.11.3 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1;\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key, writable);\n        _assignMapValue(theMap, value, valueType ? value : key, writable);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: !!writable\n    });\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump && propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \")) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                objDeepFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto && clsProto[funcName];\n    return function (thisArg) {\n        var theFunc = (thisArg && thisArg[funcName]) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        (!cachedValue || _globalLazyTestHooks.lzy) && (cachedValue = createCachedValue(safe(getFn, theArgs).v));\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) && (_cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE));\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl = (!_cachedGlobal || useCached === false) ? getGlobal(useCached) : _cachedGlobal.v;\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        return getWindow();\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : null;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray && theArray[\"slice\"]) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = _iterSymbol.v && theArgs[_iterSymbol.v];\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString;\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = false;\n    if (value && theType === OBJECT) {\n        isPlain = isPlainObject(value);\n    }\n    else {\n        isPrim = value === NULL_VALUE || isPrimitiveType(theType);\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_perf || _globalLazyTestHooks.lzy) && (_perf = createCachedValue(safe((getInst), [\"performance\"]).v));\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        isDone = isDone || (ctx.n ? ctx.n(arguments) : true);\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step || ((start <= end) ? 1 : -1);\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = false;\n        if (theStep > 0) {\n            isDone = nextValue > end;\n        }\n        else {\n            isDone = nextValue < end;\n        }\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter && splitter[getKnownSymbol(9 )];\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : null));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = !isUndefined(length) && length < value[LENGTH] ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { createEnumStyle } from \"./EnumHelperFuncs\";\r\nexport var ActiveStatus = createEnumStyle({\r\n    NONE: 0 /* eActiveStatus.NONE */,\r\n    PENDING: 3 /* eActiveStatus.PENDING */,\r\n    INACTIVE: 1 /* eActiveStatus.INACTIVE */,\r\n    ACTIVE: 2 /* eActiveStatus.ACTIVE */\r\n});\r\n//# sourceMappingURL=InitActiveStatusEnum.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN__INACTIVE = \"INACTIVE\"; // Count: 3\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 5\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","/*!\n * NevWare21 Solutions LLC - ts-async, 0.5.2\n * https://github.com/nevware21/ts-async\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\nimport { isPromiseLike, objDefineProperties, getDocument, createCachedValue, safe, getInst, dumpObj, arrSlice, objDefineProp, hasSymbol, getKnownSymbol, isFunction, throwTypeError, iterForOf, scheduleTimeout, isNode, getWindow, getGlobal, objDefine, objToString, isUndefined, isArray, arrForEach, isIterable, createCustomError, isNumber, scheduleIdleCallback, utcNow, getLength, isIterator, fnCall, arrIndexOf } from '@nevware21/ts-utils';\n\nvar STR_PROMISE = \"Promise\";\nvar DONE = \"done\";\nvar VALUE = \"value\";\nvar RETURN = \"return\";\nvar REJECTED = \"rejected\";\n\nfunction doAwaitResponse(value, cb) {\n    return doAwait(value, function (value) {\n        return cb ? cb({\n            status: \"fulfilled\",\n            rejected: false,\n            value: value\n        }) : value;\n    }, function (reason) {\n        return cb ? cb({\n            status: REJECTED,\n            rejected: true,\n            reason: reason\n        }) : reason;\n    });\n}\nfunction doAwait(value, resolveFn, rejectFn, finallyFn) {\n    var result = value;\n    try {\n        if (isPromiseLike(value)) {\n            if (resolveFn || rejectFn) {\n                result = value.then(resolveFn, rejectFn);\n            }\n        }\n        else {\n            try {\n                if (resolveFn) {\n                    result = resolveFn(value);\n                }\n            }\n            catch (err) {\n                if (rejectFn) {\n                    result = rejectFn(err);\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n    }\n    finally {\n        if (finallyFn) {\n            doFinally(result, finallyFn);\n        }\n    }\n    return result;\n}\nfunction doFinally(value, finallyFn) {\n    var result = value;\n    if (finallyFn) {\n        if (isPromiseLike(value)) {\n            if (value.finally) {\n                result = value.finally(finallyFn);\n            }\n            else {\n                result = value.then(function (value) {\n                    finallyFn();\n                    return value;\n                }, function (reason) {\n                    finallyFn();\n                    throw reason;\n                });\n            }\n        }\n        else {\n            finallyFn();\n        }\n    }\n    return result;\n}\n\nvar _debugState;\nvar _debugResult;\nvar _debugHandled;\nvar _promiseDebugEnabled = false;\nfunction _addDebugState$1(thePromise, stateFn, resultFn, handledFn) {\n    _debugState = _debugState || { toString: function () { return \"[[PromiseState]]\"; } };\n    _debugResult = _debugResult || { toString: function () { return \"[[PromiseResult]]\"; } };\n    _debugHandled = _debugHandled || { toString: function () { return \"[[PromiseIsHandled]]\"; } };\n    var props = {};\n    props[_debugState] = { get: stateFn };\n    props[_debugResult] = { get: resultFn };\n    props[_debugHandled] = { get: handledFn };\n    objDefineProperties(thePromise, props);\n}\nfunction setPromiseDebugState(enabled, logger) {\n    _promiseDebugEnabled = enabled;\n}\n\nvar STRING_STATES =  [\n    \"pending\", \"resolving\", \"resolved\", REJECTED\n];\n\nvar DISPATCH_EVENT = \"dispatchEvent\";\nvar _hasInitEvent;\nfunction _hasInitEventFn(doc) {\n    var evt;\n    if (doc && doc.createEvent) {\n        evt = doc.createEvent(\"Event\");\n    }\n    return (!!evt && evt.initEvent);\n}\nfunction emitEvent(target, evtName, populateEvent, useNewEvent) {\n    var doc = getDocument();\n    !_hasInitEvent && (_hasInitEvent = createCachedValue(!!safe(_hasInitEventFn, [doc]).v));\n    var theEvt = _hasInitEvent.v ? doc.createEvent(\"Event\") : (useNewEvent ? new Event(evtName) : {});\n    populateEvent && populateEvent(theEvt);\n    if (_hasInitEvent.v) {\n        theEvt.initEvent(evtName, false, true);\n    }\n    if (theEvt && target[DISPATCH_EVENT]) {\n        target[DISPATCH_EVENT](theEvt);\n    }\n    else {\n        var handler = target[\"on\" + evtName];\n        if (handler) {\n            handler(theEvt);\n        }\n        else {\n            var theConsole = getInst(\"console\");\n            theConsole && (theConsole[\"error\"] || theConsole[\"log\"])(evtName, dumpObj(theEvt));\n        }\n    }\n}\n\nvar NODE_UNHANDLED_REJECTION = \"unhandledRejection\";\nvar UNHANDLED_REJECTION = NODE_UNHANDLED_REJECTION.toLowerCase();\nvar _currentPromiseId = [];\nvar _uniquePromiseId = 0;\nvar _unhandledRejectionTimeout = 10;\nvar _aggregationError;\nvar _hasPromiseRejectionEvent;\nfunction dumpFnObj(value) {\n    if (isFunction(value)) {\n        return value.toString();\n    }\n    return dumpObj(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAggregationError(values) {\n    !_aggregationError && (_aggregationError = createCachedValue(safe(getInst, [\"AggregationError\"]).v || createCustomError(\"AggregationError\", function (self, args) {\n        self.errors = args[0];\n    })));\n    return new _aggregationError.v(values);\n}\nfunction _createPromise(newPromise, processor, executor) {\n    var additionalArgs = arrSlice(arguments, 3);\n    var _state = 0 ;\n    var _hasResolved = false;\n    var _settledValue;\n    var _queue = [];\n    var _id = _uniquePromiseId++;\n    var _parentId = _currentPromiseId.length > 0 ? _currentPromiseId[_currentPromiseId.length - 1] : undefined;\n    var _handled = false;\n    var _unHandledRejectionHandler = null;\n    var _thePromise;\n    function _then(onResolved, onRejected) {\n        try {\n            _currentPromiseId.push(_id);\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            var thenPromise = newPromise(function (resolve, reject) {\n                _queue.push(function () {\n                    try {\n                        var handler = _state === 2  ? onResolved : onRejected;\n                        var value = isUndefined(handler) ? _settledValue : (isFunction(handler) ? handler(_settledValue) : handler);\n                        if (isPromiseLike(value)) {\n                            value.then(resolve, reject);\n                        }\n                        else if (handler) {\n                            resolve(value);\n                        }\n                        else if (_state === 3 ) {\n                            reject(value);\n                        }\n                        else {\n                            resolve(value);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n                if (_hasResolved) {\n                    _processQueue();\n                }\n            }, additionalArgs);\n            return thenPromise;\n        }\n        finally {\n            _currentPromiseId.pop();\n        }\n    }\n    function _catch(onRejected) {\n        return _then(undefined, onRejected);\n    }\n    function _finally(onFinally) {\n        var thenFinally = onFinally;\n        var catchFinally = onFinally;\n        if (isFunction(onFinally)) {\n            thenFinally = function (value) {\n                onFinally && onFinally();\n                return value;\n            };\n            catchFinally = function (reason) {\n                onFinally && onFinally();\n                throw reason;\n            };\n        }\n        return _then(thenFinally, catchFinally);\n    }\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    function _processQueue() {\n        if (_queue.length > 0) {\n            var pending = _queue.slice();\n            _queue = [];\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            processor(pending);\n        }\n    }\n    function _createSettleIfFn(newState, allowState) {\n        return function (theValue) {\n            if (_state === allowState) {\n                if (newState === 2  && isPromiseLike(theValue)) {\n                    _state = 1 ;\n                    theValue.then(_createSettleIfFn(2 , 1 ), _createSettleIfFn(3 , 1 ));\n                    return;\n                }\n                _state = newState;\n                _hasResolved = true;\n                _settledValue = theValue;\n                _processQueue();\n                if (!_handled && newState === 3  && !_unHandledRejectionHandler) {\n                    _unHandledRejectionHandler = scheduleTimeout(_notifyUnhandledRejection, _unhandledRejectionTimeout);\n                }\n            }\n        };\n    }\n    function _notifyUnhandledRejection() {\n        if (!_handled) {\n            _handled = true;\n            if (isNode()) {\n                process.emit(NODE_UNHANDLED_REJECTION, _settledValue, _thePromise);\n            }\n            else {\n                var gbl = getWindow() || getGlobal();\n                !_hasPromiseRejectionEvent && (_hasPromiseRejectionEvent = createCachedValue(safe((getInst), [STR_PROMISE + \"RejectionEvent\"]).v));\n                emitEvent(gbl, UNHANDLED_REJECTION, function (theEvt) {\n                    objDefine(theEvt, \"promise\", { g: function () { return _thePromise; } });\n                    theEvt.reason = _settledValue;\n                    return theEvt;\n                }, !!_hasPromiseRejectionEvent.v);\n            }\n        }\n    }\n    _thePromise = {\n        then: _then,\n        \"catch\": _catch,\n        finally: _finally\n    };\n    objDefineProp(_thePromise, \"state\", {\n        get: _strState\n    });\n    if (_promiseDebugEnabled) {\n        _addDebugState$1(_thePromise, _strState, function () { return objToString(_settledValue); }, function () { return _handled; });\n    }\n    if (hasSymbol()) {\n        _thePromise[getKnownSymbol(11 )] = \"IPromise\";\n    }\n    function _toString() {\n        return \"IPromise\" + (_promiseDebugEnabled ? \"[\" + _id + (!isUndefined(_parentId) ? (\":\" + _parentId) : \"\") + \"]\" : \"\") + \" \" + _strState() + (_hasResolved ? (\" - \" + dumpFnObj(_settledValue)) : \"\") + (\"\");\n    }\n    _thePromise.toString = _toString;\n    (function _initialize() {\n        if (!isFunction(executor)) {\n            throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpFnObj(executor));\n        }\n        var _rejectFn = _createSettleIfFn(3 , 0 );\n        try {\n            executor.call(_thePromise, _createSettleIfFn(2 , 0 ), _rejectFn);\n        }\n        catch (e) {\n            _rejectFn(e);\n        }\n    })();\n    return _thePromise;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllPromise(newPromise) {\n    return function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            try {\n                var values_1 = [];\n                var pending_1 = 1;\n                iterForOf(input, function (item, idx) {\n                    if (item) {\n                        pending_1++;\n                        doAwait(item, function (value) {\n                            values_1[idx] = value;\n                            if (--pending_1 === 0) {\n                                resolve(values_1);\n                            }\n                        }, reject);\n                    }\n                });\n                pending_1--;\n                if (pending_1 === 0) {\n                    resolve(values_1);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createResolvedPromise(newPromise) {\n    return function (value) {\n        var additionalArgs = arrSlice(arguments, 1);\n        if (isPromiseLike(value)) {\n            return value;\n        }\n        return newPromise(function (resolve) {\n            resolve(value);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRejectedPromise(newPromise) {\n    return function (reason) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (_resolve, reject) {\n            reject(reason);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllSettledPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var values = [];\n            var pending = 1;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (value.rejected) {\n                        values[idx] = {\n                            status: REJECTED,\n                            reason: value.reason\n                        };\n                    }\n                    else {\n                        values[idx] = {\n                            status: \"fulfilled\",\n                            value: value.value\n                        };\n                    }\n                    if (--pending === 0) {\n                        resolve(values);\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0) {\n                    resolve(values);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRacePromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var isDone = false;\n            function processItem(item) {\n                doAwaitResponse(item, function (value) {\n                    if (!isDone) {\n                        isDone = true;\n                        if (value.rejected) {\n                            reject(value.reason);\n                        }\n                        else {\n                            resolve(value.value);\n                        }\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAnyPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var theErros = [];\n            var pending = 1;\n            var isDone = false;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (!value.rejected) {\n                        isDone = true;\n                        resolve(value.value);\n                        return;\n                    }\n                    else {\n                        theErros[idx] = value.reason;\n                    }\n                    if (--pending === 0 && !isDone) {\n                        reject(_createAggregationError(theErros));\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0 && !isDone) {\n                    reject(_createAggregationError(theErros));\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n\nfunction syncItemProcessor(pending) {\n    arrForEach(pending, function (fn) {\n        try {\n            fn();\n        }\n        catch (e) {\n        }\n    });\n}\nfunction timeoutItemProcessor(timeout) {\n    var callbackTimeout = isNumber(timeout) ? timeout : 0;\n    return function (pending) {\n        scheduleTimeout(function () {\n            syncItemProcessor(pending);\n        }, callbackTimeout);\n    };\n}\nfunction idleItemProcessor(timeout) {\n    var options;\n    if (timeout >= 0) {\n        options = {\n            timeout: +timeout\n        };\n    }\n    return function (pending) {\n        scheduleIdleCallback(function (deadline) {\n            syncItemProcessor(pending);\n        }, options);\n    };\n}\n\nvar _allAsyncSettledCreator;\nvar _raceAsyncCreator;\nvar _anyAsyncCreator;\nfunction createAsyncPromise(executor, timeout) {\n    return _createPromise(createAsyncPromise, timeoutItemProcessor(timeout), executor, timeout);\n}\nvar createAsyncAllPromise = /*#__PURE__*/ _createAllPromise(createAsyncPromise);\nvar createAsyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createAsyncPromise);\nvar createAsyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createAsyncPromise);\nfunction createAsyncAllSettledPromise(input, timeout) {\n    !_allAsyncSettledCreator && (_allAsyncSettledCreator = _createAllSettledPromise(createAsyncPromise));\n    return _allAsyncSettledCreator.v(input, timeout);\n}\nfunction createAsyncRacePromise(values, timeout) {\n    !_raceAsyncCreator && (_raceAsyncCreator = _createRacePromise(createAsyncPromise));\n    return _raceAsyncCreator.v(values, timeout);\n}\nfunction createAsyncAnyPromise(values, timeout) {\n    !_anyAsyncCreator && (_anyAsyncCreator = _createAnyPromise(createAsyncPromise));\n    return _anyAsyncCreator.v(values, timeout);\n}\n\nvar _promiseCls;\nvar _allCreator;\nvar _allNativeSettledCreator;\nvar _raceNativeCreator;\nvar _anyNativeCreator;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createNativePromiseHelper(name, func) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    if (_promiseCls.v && _promiseCls.v[name]) {\n        return createCachedValue(function (input, timeout) {\n            return createNativePromise(function (resolve, reject) {\n                _promiseCls.v[name](input).then(resolve, reject);\n            });\n        });\n    }\n    return func();\n}\nfunction createNativePromise(executor, timeout) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    var PrmCls = _promiseCls.v;\n    if (!PrmCls) {\n        return createAsyncPromise(executor);\n    }\n    if (!isFunction(executor)) {\n        throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpObj(executor));\n    }\n    var _state = 0 ;\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    var thePromise = new PrmCls(function (resolve, reject) {\n        function _resolve(value) {\n            _state = 2 ;\n            resolve(value);\n        }\n        function _reject(reason) {\n            _state = 3 ;\n            reject(reason);\n        }\n        executor(_resolve, _reject);\n    });\n    objDefineProp(thePromise, \"state\", {\n        get: _strState\n    });\n    return thePromise;\n}\nfunction createNativeAllPromise(input, timeout) {\n    !_allCreator && (_allCreator = _createNativePromiseHelper(\"all\", function () { return createCachedValue(_createAllPromise(createNativePromise)); }));\n    return _allCreator.v(input, timeout);\n}\nvar createNativeResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createNativePromise);\nvar createNativeRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createNativePromise);\nfunction createNativeAllSettledPromise(input, timeout) {\n    !_allNativeSettledCreator && (_allNativeSettledCreator = _createNativePromiseHelper(\"allSettled\", function () { return _createAllSettledPromise(createNativePromise); }));\n    return _allNativeSettledCreator.v(input, timeout);\n}\nfunction createNativeRacePromise(values, timeout) {\n    !_raceNativeCreator && (_raceNativeCreator = _createNativePromiseHelper(\"race\", function () { return _createRacePromise(createNativePromise); }));\n    return _raceNativeCreator.v(values, timeout);\n}\nfunction createNativeAnyPromise(values, timeout) {\n    !_anyNativeCreator && (_anyNativeCreator = _createNativePromiseHelper(\"any\", function () { return _createAnyPromise(createNativePromise); }));\n    return _anyNativeCreator.v(values, timeout);\n}\n\nvar _allSyncSettledCreator;\nvar _raceSyncCreator;\nvar _anySyncCreator;\nfunction createSyncPromise(executor) {\n    return _createPromise(createSyncPromise, syncItemProcessor, executor);\n}\nvar createSyncAllPromise = /*#__PURE__*/ _createAllPromise(createSyncPromise);\nvar createSyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createSyncPromise);\nvar createSyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createSyncPromise);\nfunction createSyncAllSettledPromise(input, timeout) {\n    !_allSyncSettledCreator && (_allSyncSettledCreator = _createAllSettledPromise(createSyncPromise));\n    return _allSyncSettledCreator.v(input, timeout);\n}\nfunction createSyncRacePromise(values, timeout) {\n    !_raceSyncCreator && (_raceSyncCreator = _createRacePromise(createSyncPromise));\n    return _raceSyncCreator.v(values, timeout);\n}\nfunction createSyncAnyPromise(values, timeout) {\n    !_anySyncCreator && (_anySyncCreator = _createAnyPromise(createSyncPromise));\n    return _anySyncCreator.v(values, timeout);\n}\n\nvar _defaultIdleTimeout;\nvar _allIdleSettledCreator;\nvar _raceIdleCreator;\nvar _anyIdleCreator;\nfunction setDefaultIdlePromiseTimeout(idleDeadline) {\n    _defaultIdleTimeout = idleDeadline;\n}\nvar setDefaultIdleTimeout = ( setDefaultIdlePromiseTimeout);\nfunction createIdlePromise(executor, timeout) {\n    var theTimeout = isUndefined(timeout) ? _defaultIdleTimeout : timeout;\n    return _createPromise(createIdlePromise, idleItemProcessor(theTimeout), executor, theTimeout);\n}\nvar createIdleAllPromise = /*#__PURE__*/ _createAllPromise(createIdlePromise);\nvar createIdleResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createIdlePromise);\nvar createIdleRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createIdlePromise);\nfunction createIdleAllSettledPromise(input, timeout) {\n    !_allIdleSettledCreator && (_allIdleSettledCreator = _createAllSettledPromise(createIdlePromise));\n    return _allIdleSettledCreator.v(input, timeout);\n}\nfunction createIdleRacePromise(values, timeout) {\n    !_raceIdleCreator && (_raceIdleCreator = _createRacePromise(createIdlePromise));\n    return _raceIdleCreator.v(values, timeout);\n}\nfunction createIdleAnyPromise(values, timeout) {\n    !_anyIdleCreator && (_anyIdleCreator = _createAnyPromise(createIdlePromise));\n    return _anyIdleCreator.v(values, timeout);\n}\n\nvar _promiseCreator;\nvar _allSettledCreator;\nvar _raceCreator;\nvar _anyCreator;\nfunction setCreatePromiseImpl(creator) {\n    _promiseCreator = creator ? createCachedValue(creator) : null;\n}\nfunction createPromise(executor, timeout) {\n    !_promiseCreator && (_promiseCreator = createCachedValue(createNativePromise));\n    return _promiseCreator.v.call(this, executor, timeout);\n}\nvar createAllPromise = /*#__PURE__*/ _createAllPromise(createPromise);\nvar createResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createPromise);\nvar createRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createPromise);\nfunction createAllSettledPromise(input, timeout) {\n    !_allSettledCreator && (_allSettledCreator = _createAllSettledPromise(createPromise));\n    return _allSettledCreator.v(input, timeout);\n}\nfunction createRacePromise(values, timeout) {\n    !_raceCreator && (_raceCreator = _createRacePromise(createPromise));\n    return _raceCreator.v(values, timeout);\n}\nfunction createAnyPromise(values, timeout) {\n    !_anyCreator && (_anyCreator = _createAnyPromise(createPromise));\n    return _anyCreator.v(values, timeout);\n}\n\nfunction createTimeoutPromise(timeout, resolveReject, message) {\n    return createPromise(function (resolve, reject) {\n        scheduleTimeout(function () {\n            (resolveReject ? resolve : reject)(!isUndefined(message) ? message : \"Timeout of \" + timeout + \"ms exceeded\");\n        }, timeout);\n    });\n}\n\nfunction _doneChk(isDone, state, value, thisArg) {\n    var result = isDone;\n    state.res = value;\n    if (!result) {\n        if (state.isDone && isFunction(state.isDone)) {\n            return doAwait(state.isDone.call(thisArg, state), function (done) {\n                state.iter++;\n                return !!done;\n            });\n        }\n        else {\n            result = !!state.isDone;\n        }\n    }\n    state.iter++;\n    return result;\n}\nfunction doWhileAsync(callbackFn, isDoneFn, thisArg) {\n    var promise;\n    var resolve;\n    var reject = function (reason) {\n        isDone = true;\n        throw reason;\n    };\n    var isDone = false;\n    var state = {\n        st: utcNow(),\n        iter: 0,\n        isDone: isDoneFn || false\n    };\n    if (callbackFn) {\n        var _createPromise_1 = function () {\n            return createPromise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n        };\n        var _handleAsyncDone_1 = function (done) {\n            isDone = !!done;\n            if (!isDone) {\n                _processNext_1();\n            }\n            else {\n                resolve(state.res);\n            }\n        };\n        var _processNext_1 = function () {\n            while (!isDone) {\n                try {\n                    var cbResult = callbackFn.call(thisArg, state);\n                    if (isPromiseLike(cbResult)) {\n                        promise = promise || _createPromise_1();\n                        doAwait(cbResult, function (res) {\n                            try {\n                                doAwait(_doneChk(isDone, state, res, thisArg), _handleAsyncDone_1, reject);\n                            }\n                            catch (e) {\n                                reject(e);\n                            }\n                        }, reject);\n                        return promise;\n                    }\n                    else {\n                        var dnRes = _doneChk(isDone, state, cbResult, thisArg);\n                        if (isPromiseLike(dnRes)) {\n                            promise = promise || _createPromise_1();\n                            doAwait(dnRes, _handleAsyncDone_1, reject);\n                            return promise;\n                        }\n                        else {\n                            isDone = !!dnRes;\n                        }\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                    return promise;\n                }\n            }\n            if (isDone && resolve) {\n                resolve(state.res);\n            }\n            return promise || state.res;\n        };\n        return _processNext_1();\n    }\n}\n\nfunction arrForEachAsync(theArray, callbackFn, thisArg) {\n    if (theArray) {\n        var len_1 = getLength(theArray);\n        if (len_1) {\n            var isDone = function (state) {\n                if (state.iter >= len_1 || state.res === -1) {\n                    return true;\n                }\n            };\n            return doWhileAsync(function (state) {\n                var idx = state.iter;\n                if (idx in theArray) {\n                    return callbackFn.call(thisArg || theArray, theArray[idx], idx, theArray);\n                }\n            }, isDone);\n        }\n    }\n}\n\nvar _iterSymbol;\nvar _iterAsyncSymbol;\nfunction iterForOfAsync(iter, callbackFn, thisArg) {\n    var err;\n    var iterResult;\n    var theIter = iter;\n    function onFailed(failed) {\n        err = { e: failed };\n        if (theIter.throw) {\n            iterResult = null;\n            theIter.throw(err);\n        }\n        throw failed;\n    }\n    function onFinally() {\n        try {\n            if (iterResult && !iterResult[DONE]) {\n                theIter[RETURN] && theIter[RETURN](iterResult);\n            }\n        }\n        finally {\n            if (err) {\n                throw err.e;\n            }\n        }\n    }\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterAsyncSymbol && (_iterAsyncSymbol = createCachedValue(getKnownSymbol(0 )));\n            theIter = iter[_iterAsyncSymbol.v] ? iter[_iterAsyncSymbol.v]() : null;\n            if (!theIter) {\n                !_iterSymbol && (_iterSymbol = createCachedValue(getKnownSymbol(3 )));\n                theIter = iter[_iterSymbol.v] ? iter[_iterSymbol.v]() : null;\n            }\n        }\n        if (theIter && isIterator(theIter)) {\n            var result = void 0;\n            try {\n                result = doWhileAsync(function (state) {\n                    return doAwait(theIter.next(), function (res) {\n                        iterResult = res;\n                        if (!res[DONE]) {\n                            return fnCall(callbackFn, thisArg || theIter, iterResult[VALUE], state.iter, theIter);\n                        }\n                    }, function (reason) {\n                        state.isDone = true;\n                        onFailed(reason);\n                    });\n                }, function (state) {\n                    if (!iterResult || iterResult[DONE] || state.res === -1) {\n                        onFinally();\n                        return true;\n                    }\n                }, thisArg || theIter);\n                if (isPromiseLike(result)) {\n                    result = doFinally(result.catch(onFailed), onFinally);\n                }\n                return result;\n            }\n            catch (failed) {\n                onFailed(failed);\n            }\n            finally {\n                if (result && !isPromiseLike(result)) {\n                    onFinally();\n                }\n            }\n        }\n    }\n}\n\nvar REJECT = \"reject\";\nvar REJECTED_ERROR = \"Rejected\";\nvar _schedulerId = 0;\nvar _debugName;\nvar _debugIntState;\nvar _customErrors = {};\nfunction _rejectDone() {\n}\nfunction _createError(type, evt, message) {\n    !_customErrors[type] && (_customErrors[type] = createCustomError(type));\n    var now = utcNow();\n    return new (_customErrors[type])(\"Task [\".concat(evt.id, \"] \").concat(message || \"\", \"- \").concat((evt.st ? \"Running\" : \"Waiting\"), \": \").concat(_calcTime(now, evt.st || evt.cr)));\n}\nfunction _calcTime(now, start) {\n    return ((now - start) || \"0\") + \" ms\";\n}\nfunction _abortStaleTasks(taskQueue, staleTimeoutPeriod) {\n    var now = utcNow();\n    var expired = now - staleTimeoutPeriod;\n    arrForEach(taskQueue, function (evt) {\n        if (evt && !evt.rj && (evt.st && evt.st < expired) || (!evt.st && evt.cr && evt.cr < expired)) {\n            evt && evt[REJECT](evt.rj || _createError(\"Aborted\", evt, \"Stale \"));\n        }\n    });\n}\nfunction _removeTask(queue, taskDetail) {\n    var idx = arrIndexOf(queue, taskDetail);\n    if (idx !== -1) {\n        queue.splice(idx, 1);\n    }\n}\nfunction _addDebugState(theScheduler, nameFn, stateFn) {\n    _debugName = _debugName || { toString: function () { return \"[[SchedulerName]]\"; } };\n    _debugIntState = _debugIntState || { toString: function () { return \"[[SchedulerState]]\"; } };\n    objDefineProp(theScheduler, _debugName, { get: nameFn });\n    objDefineProp(theScheduler, _debugIntState, { get: stateFn });\n}\nfunction createTaskScheduler(newPromise, name) {\n    var _theTask;\n    var _running = [];\n    var _waiting = [];\n    var _staleTimeoutPeriod = 600000;\n    var _staleTimeoutCheckPeriod = _staleTimeoutPeriod / 10;\n    var _taskCount = 0;\n    var _schedulerName = (name ? (name + \".\") : \"\") + _schedulerId++;\n    var _blockedTimer;\n    newPromise = newPromise || createPromise;\n    var _startBlockedTimer = function () {\n        var hasTasks = (getLength(_running) + getLength(_waiting)) > 0;\n        if (_staleTimeoutPeriod > 0) {\n            if (!_blockedTimer) {\n                _blockedTimer = scheduleTimeout(function () {\n                    _abortStaleTasks(_running, _staleTimeoutPeriod);\n                    _abortStaleTasks(_waiting, _staleTimeoutPeriod);\n                    _blockedTimer && (_blockedTimer.enabled = ((getLength(_running) + getLength(_waiting)) > 0));\n                }, _staleTimeoutCheckPeriod);\n                _blockedTimer.unref();\n            }\n            _blockedTimer && (_blockedTimer.enabled = hasTasks);\n        }\n    };\n    var _queueTask = function (startAction, taskName, timeout) {\n        var _a;\n        var taskId = _schedulerName + \".\" + _taskCount++;\n        if (taskName) {\n            taskId += \"-(\" + taskName + \")\";\n        }\n        var newTask = (_a = {\n                id: taskId,\n                cr: utcNow(),\n                to: timeout\n            },\n            _a[REJECT] = function (reason) {\n                newTask.rj = reason || _createError(REJECTED_ERROR, newTask);\n                newTask[REJECT] = _rejectDone;\n            },\n            _a);\n        if (!_theTask) {\n            newTask.p = newPromise(_runTask(newTask, startAction));\n        }\n        else {\n            newTask.p = _waitForPreviousTask(newTask, _theTask, startAction);\n        }\n        _theTask = newTask;\n        return newTask.p;\n    };\n    var _runTask = function (taskDetail, startAction) {\n        taskDetail.st = utcNow();\n        _running.push(taskDetail);\n        _startBlockedTimer();\n        return function (onTaskResolve, onTaskReject) {\n            var _promiseReject = function (reason) {\n                taskDetail.rj = taskDetail.rj || reason || _createError(REJECTED_ERROR, taskDetail);\n                taskDetail[REJECT] = _rejectDone;\n                _doCleanup(taskDetail);\n                onTaskResolve = null;\n                onTaskReject && onTaskReject(reason);\n                onTaskReject = null;\n            };\n            var taskId = taskDetail.id;\n            if (taskDetail.rj) {\n                _promiseReject(taskDetail.rj);\n            }\n            else {\n                taskDetail[REJECT] = _promiseReject;\n                try {\n                    var startResult = startAction(taskId);\n                    if (taskDetail.to && isPromiseLike(startResult)) {\n                        taskDetail.t = scheduleTimeout(function () {\n                            _promiseReject(_createError(\"Timeout\", taskDetail));\n                        }, taskDetail.to);\n                    }\n                    doAwait(startResult, function (theResult) {\n                        _doCleanup(taskDetail);\n                        try {\n                            onTaskResolve && onTaskResolve(theResult);\n                        }\n                        catch (e) {\n                            onTaskReject && onTaskReject(e);\n                        }\n                        onTaskReject = null;\n                        onTaskResolve = null;\n                    }, _promiseReject);\n                }\n                catch (e) {\n                    _promiseReject(e);\n                }\n            }\n        };\n    };\n    var _waitForPreviousTask = function (taskDetail, prevTask, startAction) {\n        _waiting.push(taskDetail);\n        _startBlockedTimer();\n        return newPromise(function (onWaitResolve, onWaitReject) {\n            doAwaitResponse(prevTask.p, function () {\n                _removeTask(_waiting, taskDetail);\n                _runTask(taskDetail, startAction)(onWaitResolve, onWaitReject);\n            });\n        });\n    };\n    var _doCleanup = function (taskDetail) {\n        _removeTask(_running, taskDetail);\n        taskDetail.t && taskDetail.t.cancel();\n        taskDetail.t = null;\n        if (_theTask && _theTask === taskDetail) {\n            _theTask = null;\n            if (getLength(_running) + getLength(_waiting) === 0) {\n                _blockedTimer && _blockedTimer.cancel();\n                _blockedTimer = null;\n            }\n        }\n    };\n    var theScheduler = {\n        idle: true,\n        queue: _queueTask,\n        setStaleTimeout: function (staleTimeout, staleCheckPeriod) {\n            _blockedTimer && _blockedTimer.cancel();\n            _blockedTimer = null;\n            _staleTimeoutPeriod = staleTimeout;\n            _staleTimeoutCheckPeriod = staleCheckPeriod || staleTimeout / 10;\n            _startBlockedTimer();\n        }\n    };\n    objDefine(theScheduler, \"idle\", {\n        g: function () {\n            return getLength(_running) + getLength(_waiting) === 0;\n        }\n    });\n    _addDebugState(theScheduler, function () { return _schedulerName; }, function () {\n        return {\n            l: _theTask,\n            r: _running,\n            w: _waiting\n        };\n    });\n    return theScheduler;\n}\n\nvar toStringTagSymbol = getKnownSymbol(11 );\nvar PolyPromise = /*#__PURE__*/ (function () {\n    function PolyPromiseImpl(executor) {\n        this._$ = createAsyncPromise(executor);\n        if (toStringTagSymbol) {\n            this[toStringTagSymbol] = \"Promise\";\n        }\n        objDefineProp(this, \"state\", {\n            get: function () {\n                return this._$.state;\n            }\n        });\n    }\n    PolyPromiseImpl.all = createAsyncAllPromise;\n    PolyPromiseImpl.race = createAsyncRacePromise;\n    PolyPromiseImpl.any = createAsyncAnyPromise;\n    PolyPromiseImpl.reject = createAsyncRejectedPromise;\n    PolyPromiseImpl.resolve = createAsyncResolvedPromise;\n    PolyPromiseImpl.allSettled = createAsyncAllSettledPromise;\n    var theProto = PolyPromiseImpl.prototype;\n    theProto.then = function (onResolved, onRejected) {\n        return this._$.then(onResolved, onRejected);\n    };\n    theProto.catch = function (onRejected) {\n        return this._$.catch(onRejected);\n    };\n    theProto.finally = function (onfinally) {\n        return this._$.finally(onfinally);\n    };\n    return PolyPromiseImpl;\n}());\n\nexport { PolyPromise, arrForEachAsync, createAllPromise, createAllSettledPromise, createAnyPromise, createAsyncAllPromise, createAsyncAllSettledPromise, createAsyncAnyPromise, createAsyncPromise, createAsyncRacePromise, createAsyncRejectedPromise, createAsyncResolvedPromise, createIdleAllPromise, createIdleAllSettledPromise, createIdleAnyPromise, createIdlePromise, createIdleRacePromise, createIdleRejectedPromise, createIdleResolvedPromise, createNativeAllPromise, createNativeAllSettledPromise, createNativeAnyPromise, createNativePromise, createNativeRacePromise, createNativeRejectedPromise, createNativeResolvedPromise, createPromise, createRacePromise, createRejectedPromise, createResolvedPromise, createSyncAllPromise, createSyncAllSettledPromise, createSyncAnyPromise, createSyncPromise, createSyncRacePromise, createSyncRejectedPromise, createSyncResolvedPromise, createTaskScheduler, createTimeoutPromise, doAwait, doAwaitResponse, doFinally, doWhileAsync, iterForOfAsync, setCreatePromiseImpl, setDefaultIdlePromiseTimeout, setDefaultIdleTimeout, setPromiseDebugState };\n//# sourceMappingURL=ts-async.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.1';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrSlice, getLength } from \"@nevware21/ts-utils\";\r\nimport { _DYN_UNLOAD } from \"../__DynamicConstants\";\r\n/**\r\n * Run the unload function of the target object if it exists\r\n * @param target - The target object that contains the unload function\r\n * @param isAsync - The caller identifies whether it is expecting the operation to complete synchronously or asynchronously. Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @returns The result of the target function\r\n */\r\nexport function runTargetUnload(target, isAsync) {\r\n    if (target && target[_DYN_UNLOAD /* @min:%2eunload */]) {\r\n        return target[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n    }\r\n}\r\n/**\r\n * Call the unload function on all targets handling any returned [IPromise](https://nevware21.github.io/ts-async/typedoc/interfaces/IPromise.html)\r\n * / Promise before calling the next targets unload\r\n * @param targets - An array of the targets to unload\r\n * @param isAsync - The caller identifies whether it is expecting the operations to complete synchronously or asynchronously.  Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @param done - Optional callback function to call once all of the unload functions have been called.\r\n */\r\nexport function doUnloadAll(targets, isAsync, done) {\r\n    var result;\r\n    if (!done) {\r\n        result = createPromise(function (resolved) {\r\n            done = resolved;\r\n        });\r\n    }\r\n    if (targets && getLength(targets) > 0) {\r\n        doAwaitResponse(runTargetUnload(targets[0], isAsync), function () {\r\n            doUnloadAll(arrSlice(targets, 1), isAsync, done);\r\n        });\r\n    }\r\n    else {\r\n        done();\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=AsyncUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var ChannelControllerPriority = 500;\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n// export const SampleRate = \"sampleRate\";\r\n// export const ProcessLegacy = \"ProcessLegacy\";\r\n// export const HttpMethod = \"http.method\";\r\n// export const DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n// export const DEFAULT_BREEZE_PATH = \"/v2/track\";\r\n// export const strNotSpecified = \"not_specified\";\r\n// export const strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = true,\r\n        _a.v = defaultValue,\r\n        _a;\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { arrForEach, arrIndexOf, dumpObj, getDocument, getLazy, getNavigator, isArray, isFunction, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, strEndsWith, strIndexOf, strLeft, strSubstring, strTrim, utcNow } from \"@nevware21/ts-utils\";\r\nimport { cfgDfMerge } from \"../Config/ConfigDefaultHelpers\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ENABLED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROTOCOL, _DYN_SET_DF, _DYN_SPLIT, _DYN_UNLOAD, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getLocation, isIE } from \"./EnvUtils\";\r\nimport { getExceptionName, isNotNullOrUndefined, setValue, strContains } from \"./HelperFuncs\";\r\nimport { STR_DOMAIN, STR_EMPTY, STR_PATH, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc;\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n// // `isCookieUseDisabled` is deprecated, so explicitly casting as a key of IConfiguration to avoid typing error\r\n// // when both isCookieUseDisabled and disableCookiesUsage are used disableCookiesUsage will take precedent, which is\r\n// // why its listed first\r\n/**\r\n * Set the supported dynamic config values as undefined (or an empty object) so that\r\n * any listeners will be informed of any changes.\r\n * Explicitly NOT including the deprecated `isCookieUseDisabled` as we don't want to support\r\n * the v1 deprecated field as dynamic for updates\r\n */\r\nvar rootDefaultConfig = (_a = {\r\n        cookieCfg: cfgDfMerge((_b = {},\r\n            _b[STR_DOMAIN] = { fb: \"cookieDomain\", dfVal: isNotNullOrUndefined },\r\n            _b.path = { fb: \"cookiePath\", dfVal: isNotNullOrUndefined },\r\n            _b.enabled = UNDEFINED_VALUE,\r\n            _b.ignoreCookies = UNDEFINED_VALUE,\r\n            _b.blockedCookies = UNDEFINED_VALUE,\r\n            _b)),\r\n        cookieDomain: UNDEFINED_VALUE,\r\n        cookiePath: UNDEFINED_VALUE\r\n    },\r\n    _a[strDisableCookiesUsage] = UNDEFINED_VALUE,\r\n    _a);\r\nfunction _getDoc() {\r\n    !_doc && (_doc = getLazy(function () { return getDocument(); }));\r\n}\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nfunction _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _isIgnoredCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.ignoreCookies)) {\r\n        return arrIndexOf(cookieMgrCfg.ignoreCookies, name) !== -1;\r\n    }\r\n    return false;\r\n}\r\nfunction _isBlockedCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.blockedCookies)) {\r\n        if (arrIndexOf(cookieMgrCfg.blockedCookies, name) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return _isIgnoredCookie(cookieMgrCfg, name);\r\n}\r\nfunction _isCfgEnabled(rootConfig, cookieMgrConfig) {\r\n    var isCfgEnabled = cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */];\r\n    if (isNullOrUndefined(isCfgEnabled)) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        // This field is deprecated and dynamic updates will not be fully supported\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        // If this value is defined it takes precedent over the above\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        // Not setting the cookieMgrConfig.enabled as that will update (set) the global dynamic config\r\n        // So future \"updates\" then may not be as expected\r\n        isCfgEnabled = cookieEnabled;\r\n    }\r\n    return isCfgEnabled;\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core\r\n * @param config\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config.cookieCfg;\r\n        if (cookieCfg && cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {})[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var _a;\r\n    var cookieMgrConfig;\r\n    var _path;\r\n    var _domain;\r\n    var unloadHandler;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled;\r\n    var _getCookieFn;\r\n    var _setCookieFn;\r\n    var _delCookieFn;\r\n    // Make sure the root config is dynamic as it may be the global config\r\n    rootConfig = createDynamicConfig(rootConfig || _globalCookieConfig, null, logger).cfg;\r\n    // Will get recalled if the referenced configuration is changed\r\n    unloadHandler = onConfigChange(rootConfig, function (details) {\r\n        // Make sure the root config has all of the the defaults to the root config to ensure they are dynamic\r\n        details[_DYN_SET_DF /* @min:%2esetDf */](details.cfg, rootDefaultConfig);\r\n        // Create and apply the defaults to the cookieCfg element\r\n        cookieMgrConfig = details.ref(details.cfg, \"cookieCfg\"); // details.setDf(details.cfg.cookieCfg, defaultConfig);\r\n        _path = cookieMgrConfig[STR_PATH /* @min:%2epath */] || \"/\";\r\n        _domain = cookieMgrConfig[STR_DOMAIN /* @min:%2edomain */];\r\n        // Explicitly checking against false, so that setting to undefined will === true\r\n        _enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false;\r\n        _getCookieFn = cookieMgrConfig.getCookie || _getCookieValue;\r\n        _setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n        _delCookieFn = cookieMgrConfig.delCookie || _setCookieValue;\r\n    }, logger);\r\n    var cookieMgr = (_a = {\r\n            isEnabled: function () {\r\n                var enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false && _enabled && areCookiesSupported(logger);\r\n                // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n                // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n                var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n                if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                    // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                    // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                    enabled = _isMgrEnabled(gblManager);\r\n                }\r\n                return enabled;\r\n            },\r\n            setEnabled: function (value) {\r\n                // Explicitly checking against false, so that setting to undefined will === true\r\n                _enabled = value !== false;\r\n                cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */] = value;\r\n            },\r\n            set: function (name, value, maxAgeSec, domain, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr) && !_isBlockedCookie(cookieMgrConfig, name)) {\r\n                    var values = {};\r\n                    var theValue = strTrim(value || STR_EMPTY);\r\n                    var idx = strIndexOf(theValue, \";\");\r\n                    if (idx !== -1) {\r\n                        theValue = strTrim(strLeft(value, idx));\r\n                        values = _extractParts(strSubstring(value, idx + 1));\r\n                    }\r\n                    // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                    setValue(values, STR_DOMAIN, domain || _domain, isTruthy, isUndefined);\r\n                    if (!isNullOrUndefined(maxAgeSec)) {\r\n                        var _isIE = isIE();\r\n                        if (isUndefined(values[strExpires])) {\r\n                            var nowMs = utcNow();\r\n                            // Only add expires if not already present\r\n                            var expireMs = nowMs + (maxAgeSec * 1000);\r\n                            // Sanity check, if zero or -ve then ignore\r\n                            if (expireMs > 0) {\r\n                                var expiry = new Date();\r\n                                expiry.setTime(expireMs);\r\n                                setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || STR_EMPTY, isTruthy);\r\n                            }\r\n                        }\r\n                        if (!_isIE) {\r\n                            // Only replace if not already present\r\n                            setValue(values, \"max-age\", STR_EMPTY + maxAgeSec, null, isUndefined);\r\n                        }\r\n                    }\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1[_DYN_PROTOCOL /* @min:%2eprotocol */] === \"https:\") {\r\n                        setValue(values, \"secure\", null, null, isUndefined);\r\n                        // Only set same site if not also secure\r\n                        if (_allowUaSameSite === null) {\r\n                            _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {})[_DYN_USER_AGENT /* @min:%2euserAgent */]);\r\n                        }\r\n                        if (_allowUaSameSite) {\r\n                            setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                        }\r\n                    }\r\n                    setValue(values, STR_PATH, path || _path, null, isUndefined);\r\n                    //let setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                    _setCookieFn(name, _formatCookieValue(theValue, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            },\r\n            get: function (name) {\r\n                var value = STR_EMPTY;\r\n                if (_isMgrEnabled(cookieMgr) && !_isIgnoredCookie(cookieMgrConfig, name)) {\r\n                    value = _getCookieFn(name);\r\n                }\r\n                return value;\r\n            },\r\n            del: function (name, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr)) {\r\n                    // Only remove the cookie if the manager and cookie support has not been disabled\r\n                    result = cookieMgr.purge(name, path);\r\n                }\r\n                return result;\r\n            },\r\n            purge: function (name, path) {\r\n                var _a;\r\n                var result = false;\r\n                if (areCookiesSupported(logger)) {\r\n                    // Setting the expiration date in the past immediately removes the cookie\r\n                    var values = (_a = {},\r\n                        _a[STR_PATH] = path ? path : \"/\",\r\n                        _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                        _a);\r\n                    if (!isIE()) {\r\n                        // Set max age to expire now\r\n                        values[\"max-age\"] = \"0\";\r\n                    }\r\n                    // let delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                    _delCookieFn(name, _formatCookieValue(STR_EMPTY, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        _a[_DYN_UNLOAD /* @min:unload */] = function (isAsync) {\r\n            unloadHandler && unloadHandler.rm();\r\n            unloadHandler = null;\r\n        },\r\n        _a);\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        !_doc && _getDoc();\r\n        try {\r\n            var doc = _doc.v || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 68 /* _eInternalMessageId.CannotAccessCookie */, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue[_DYN_LENGTH /* @min:%2elength */]) {\r\n        var parts = strTrim(theValue)[_DYN_SPLIT /* @min:%2esplit */](\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || STR_EMPTY);\r\n            if (thePart) {\r\n                var idx = strIndexOf(thePart, \"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(strLeft(thePart, idx))] = strTrim(strSubstring(thePart, idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || STR_EMPTY;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : STR_EMPTY);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = STR_EMPTY;\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        var theCookie = _doc.v[strCookie] || STR_EMPTY;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || STR_EMPTY);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        _doc.v[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, objDefine, safe, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_DATA, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SPLICE, _DYN_UNLOAD, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_OFFLINE_DROP, STR_OFFLINE_SENT, STR_OFFLINE_STORE, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar defaultValues = {\r\n    perfEvtsSendAll: false\r\n};\r\nfunction _runScheduledListeners(asyncNotifications) {\r\n    asyncNotifications.h = null;\r\n    var callbacks = asyncNotifications.cb;\r\n    asyncNotifications.cb = [];\r\n    arrForEach(callbacks, function (cb) {\r\n        // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n        safe(cb.fn, [cb.arg]);\r\n    });\r\n}\r\n// This function is used to combine the logic of running the listeners and handling the async notifications so that they don't\r\n// create multiple timers if there are multiple async listeners.\r\nfunction _runListeners(listeners, name, asyncNotifications, callback) {\r\n    arrForEach(listeners, function (listener) {\r\n        if (listener && listener[name]) {\r\n            if (asyncNotifications) {\r\n                // Schedule the callback to be called after the current call stack has cleared.\r\n                asyncNotifications.cb[_DYN_PUSH /* @min:%2epush */]({\r\n                    fn: callback,\r\n                    arg: listener\r\n                });\r\n                asyncNotifications.h = asyncNotifications.h || scheduleTimeout(_runScheduledListeners, 0, asyncNotifications);\r\n            }\r\n            else {\r\n                // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n                safe(callback, [listener]);\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var perfEvtsSendAll;\r\n        var unloadHandler;\r\n        var _listeners = [];\r\n        var _asyncNotifications = {\r\n            h: null,\r\n            cb: []\r\n        };\r\n        var cfgHandler = createDynamicConfig(config, defaultValues);\r\n        unloadHandler = cfgHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n            perfEvtsSendAll = !!details.cfg.perfEvtsSendAll;\r\n        });\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            objDefine(_self, \"listeners\", {\r\n                g: function () { return _listeners; }\r\n            });\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _listeners[_DYN_PUSH /* @min:%2epush */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - AWTNotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                var index = arrIndexOf(_listeners, listener);\r\n                while (index > -1) {\r\n                    _listeners[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                    index = arrIndexOf(_listeners, listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param events - The array of events that have been sent.\r\n             */\r\n            _self[STR_EVENTS_SENT /* @min:%2eeventsSent */] = function (events) {\r\n                _runListeners(_listeners, STR_EVENTS_SENT, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_SENT /* @min:%2eeventsSent */](events);\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param events - The array of events that have been discarded by the SDK.\r\n             * @param reason - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */] = function (events, reason) {\r\n                _runListeners(_listeners, STR_EVENTS_DISCARDED, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */](events, reason);\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param sendReason - The reason why the event batch is being sent.\r\n             * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */] = function (sendReason, isAsync) {\r\n                _runListeners(_listeners, STR_EVENTS_SEND_REQUEST, isAsync ? _asyncNotifications : null, function (listener) {\r\n                    listener[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendReason, isAsync);\r\n                });\r\n            };\r\n            _self[STR_PERF_EVENT /* @min:%2eperfEvent */] = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */]()) {\r\n                        _runListeners(_listeners, STR_PERF_EVENT, null, function (listener) {\r\n                            if (perfEvent[_DYN_IS_ASYNC /* @min:%2eisAsync */]) {\r\n                                scheduleTimeout(function () { return listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent); }, 0);\r\n                            }\r\n                            else {\r\n                                listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */] = function (events) {\r\n                if (events && events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_STORE, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */](events);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */] = function (batch) {\r\n                if (batch && batch[_DYN_DATA /* @min:%2edata */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_SENT, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */](batch);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */] = function (cnt, reason) {\r\n                if (cnt > 0) {\r\n                    var rn_1 = reason || 0; // default is unknown\r\n                    _runListeners(_listeners, STR_OFFLINE_DROP, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */](cnt, rn_1);\r\n                    });\r\n                }\r\n            };\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                var _finishUnload = function () {\r\n                    unloadHandler && unloadHandler.rm();\r\n                    unloadHandler = null;\r\n                    _listeners = [];\r\n                    // Clear any async listener\r\n                    _asyncNotifications.h && _asyncNotifications.h[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                    _asyncNotifications.h = null;\r\n                    _asyncNotifications.cb = [];\r\n                };\r\n                var waiting;\r\n                _runListeners(_listeners, \"unload\", null, function (listener) {\r\n                    var asyncUnload = listener[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n                    if (asyncUnload) {\r\n                        if (!waiting) {\r\n                            waiting = [];\r\n                        }\r\n                        waiting[_DYN_PUSH /* @min:%2epush */](asyncUnload);\r\n                    }\r\n                });\r\n                if (waiting) {\r\n                    return createPromise(function (resolve) {\r\n                        return doAwaitResponse(createAllPromise(waiting), function () {\r\n                            _finishUnload();\r\n                            resolve();\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    _finishUnload();\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for NotificationManager.prototype.addNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.removeNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.eventsSent.\r\n// Removed Stub for NotificationManager.prototype.eventsDiscarded.\r\n// Removed Stub for NotificationManager.prototype.eventsSendRequest.\r\n// Removed Stub for NotificationManager.prototype.perfEvent.\r\n// Removed Stub for NotificationManager.prototype.unload.\r\n// Removed Stub for NotificationManager.prototype.offlineEventsStored.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchSent.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchDrop.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    NotificationManager.__ieDyn=1;\n\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = utcNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { random32 } from \"./RandomHelper\";\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nexport function newGuid() {\r\n    var uuid = generateW3CId();\r\n    return strSubstring(uuid, 0, 8) + \"-\" + strSubstring(uuid, 8, 12) + \"-\" + strSubstring(uuid, 12, 16) + \"-\" + strSubstring(uuid, 16, 20) + \"-\" + strSubstring(uuid, 20);\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value[_DYN_LENGTH /* @min:%2elength */];\r\n        var start = len - search[_DYN_LENGTH /* @min:%2elength */];\r\n        return strSubstring(value, start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = STR_EMPTY, tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return strSubstr(oct, 0, 8) + strSubstr(oct, 9, 4) + \"4\" + strSubstr(oct, 13, 3) + clockSequenceHi + strSubstr(oct, 16, 3) + strSubstr(oct, 19, 12);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, isArray, isString, strLeft, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_ATTRIBUTE, _DYN_LENGTH, _DYN_PUSH, _DYN_SPAN_ID, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_VERSION } from \"../__DynamicConstants\";\r\nimport { generateW3CId } from \"./CoreUtils\";\r\nimport { findMetaTag, findNamedServerTiming } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// using {0,16} for leading and trailing whitespace just to constrain the possible runtime of a random string\r\nvar TRACE_PARENT_REGEX = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})(-[^\\s]{1,64})?$/i;\r\nvar DEFAULT_VERSION = \"00\";\r\nvar INVALID_VERSION = \"ff\";\r\nvar INVALID_TRACE_ID = \"00000000000000000000000000000000\";\r\nvar INVALID_SPAN_ID = \"0000000000000000\";\r\nvar SAMPLED_FLAG = 0x01;\r\nfunction _isValid(value, len, invalidValue) {\r\n    if (value && value[_DYN_LENGTH /* @min:%2elength */] === len && value !== invalidValue) {\r\n        return !!value.match(/^[\\da-f]*$/i);\r\n    }\r\n    return false;\r\n}\r\nfunction _formatValue(value, len, defValue) {\r\n    if (_isValid(value, len)) {\r\n        return value;\r\n    }\r\n    return defValue;\r\n}\r\nfunction _formatFlags(value) {\r\n    if (isNaN(value) || value < 0 || value > 255) {\r\n        value = 0x01;\r\n    }\r\n    var result = value.toString(16);\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < 2) {\r\n        result = \"0\" + result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new ITraceParent instance using the provided values.\r\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\r\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\r\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\r\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\r\n * @returns\r\n */\r\nexport function createTraceParent(traceId, spanId, flags, version) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = _isValid(version, 2, INVALID_VERSION) ? version : DEFAULT_VERSION,\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = isValidTraceId(traceId) ? traceId : generateW3CId(),\r\n        _a[_DYN_SPAN_ID /* @min:spanId */] = isValidSpanId(spanId) ? spanId : strLeft(generateW3CId(), 16),\r\n        _a.traceFlags = flags >= 0 && flags <= 0xFF ? flags : 1,\r\n        _a;\r\n}\r\n/**\r\n * Attempt to parse the provided string as a W3C TraceParent header value (https://www.w3.org/TR/trace-context/#traceparent-header)\r\n *\r\n * @param value - The value to be parsed\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function parseTraceParent(value, selectIdx) {\r\n    var _a;\r\n    if (!value) {\r\n        // Don't pass a null/undefined or empty string\r\n        return null;\r\n    }\r\n    if (isArray(value)) {\r\n        // The value may have been encoded on the page into an array so handle this automatically\r\n        value = value[0] || \"\";\r\n    }\r\n    if (!value || !isString(value) || value[_DYN_LENGTH /* @min:%2elength */] > 8192) {\r\n        // limit potential processing based on total length\r\n        return null;\r\n    }\r\n    if (value.indexOf(\",\") !== -1) {\r\n        var values = value[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        value = values[selectIdx > 0 && values[_DYN_LENGTH /* @min:%2elength */] > selectIdx ? selectIdx : 0];\r\n    }\r\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\r\n    var match = TRACE_PARENT_REGEX.exec(strTrim(value));\r\n    if (!match || // No match\r\n        match[1] === INVALID_VERSION || // version ff is forbidden\r\n        match[2] === INVALID_TRACE_ID || // All zeros is considered to be invalid\r\n        match[3] === INVALID_SPAN_ID) { // All zeros is considered to be invalid\r\n        return null;\r\n    }\r\n    return _a = {\r\n            version: (match[1] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            traceId: (match[2] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            spanId: (match[3] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()\r\n        },\r\n        _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = parseInt(match[4], 16),\r\n        _a;\r\n}\r\n/**\r\n * Is the provided W3c Trace Id a valid string representation, it must be a 32-character string\r\n * of lowercase hexadecimal characters for example, 4bf92f3577b34da6a3ce929d0e0e4736.\r\n * If all characters as zero (00000000000000000000000000000000) it will be considered an invalid value.\r\n * @param value - The W3c trace Id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidTraceId(value) {\r\n    return _isValid(value, 32, INVALID_TRACE_ID);\r\n}\r\n/**\r\n * Is the provided W3c span id (aka. parent id) a valid string representation, it must be a 16-character\r\n * string of lowercase hexadecimal characters, for example, 00f067aa0ba902b7.\r\n * If all characters are zero (0000000000000000) this is considered an invalid value.\r\n * @param value - The W3c span id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidSpanId(value) {\r\n    return _isValid(value, 16, INVALID_SPAN_ID);\r\n}\r\n/**\r\n * Validates that the provided ITraceParent instance conforms to the currently supported specifications\r\n * @param value\r\n * @returns\r\n */\r\nexport function isValidTraceParent(value) {\r\n    if (!value ||\r\n        !_isValid(value[_DYN_VERSION /* @min:%2eversion */], 2, INVALID_VERSION) ||\r\n        !_isValid(value[_DYN_TRACE_ID /* @min:%2etraceId */], 32, INVALID_TRACE_ID) ||\r\n        !_isValid(value[_DYN_SPAN_ID /* @min:%2espanId */], 16, INVALID_SPAN_ID) ||\r\n        !_isValid(_formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]), 2)) {\r\n        // Each known field must contain a valid value\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Is the parsed traceParent indicating that the trace is currently sampled.\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function isSampledFlag(value) {\r\n    if (isValidTraceParent(value)) {\r\n        return (value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] & SAMPLED_FLAG) === SAMPLED_FLAG;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Format the ITraceParent value as a string using the supported and know version formats.\r\n * So even if the passed traceParent is a later version the string value returned from this\r\n * function will convert it to only the known version formats.\r\n * This currently only supports version \"00\" and invalid \"ff\"\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function formatTraceParent(value) {\r\n    if (value) {\r\n        // Special Note: This only supports formatting as version 00, future versions should encode any known supported version\r\n        // So parsing a future version will populate the correct version value but reformatting will reduce it to version 00.\r\n        var flags = _formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]);\r\n        if (!_isValid(flags, 2)) {\r\n            flags = \"01\";\r\n        }\r\n        var version = value[_DYN_VERSION /* @min:%2eversion */] || DEFAULT_VERSION;\r\n        if (version !== \"00\" && version !== \"ff\") {\r\n            // Reduce version to \"00\"\r\n            version = DEFAULT_VERSION;\r\n        }\r\n        // Format as version 00\r\n        return \"\".concat(version.toLowerCase(), \"-\").concat(_formatValue(value.traceId, 32, INVALID_TRACE_ID).toLowerCase(), \"-\").concat(_formatValue(value.spanId, 16, INVALID_SPAN_ID).toLowerCase(), \"-\").concat(flags.toLowerCase());\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function findW3cTraceParent(selectIdx) {\r\n    var name = \"traceparent\";\r\n    var traceParent = parseTraceParent(findMetaTag(name), selectIdx);\r\n    if (!traceParent) {\r\n        traceParent = parseTraceParent(findNamedServerTiming(name), selectIdx);\r\n    }\r\n    return traceParent;\r\n}\r\n/**\r\n * Find all script tags in the provided document and return the information about them.\r\n * @param doc\r\n * @returns\r\n */\r\nexport function findAllScripts(doc) {\r\n    var scripts = doc.getElementsByTagName(\"script\");\r\n    var result = [];\r\n    arrForEach(scripts, function (script) {\r\n        var src = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"src\");\r\n        if (src) {\r\n            var crossOrigin = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"crossorigin\");\r\n            var async = script.hasAttribute(\"async\") === true;\r\n            var defer = script.hasAttribute(\"defer\") === true;\r\n            var referrerPolicy = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"referrerpolicy\");\r\n            var info = { url: src };\r\n            if (crossOrigin) {\r\n                info.crossOrigin = crossOrigin;\r\n            }\r\n            if (async) {\r\n                info.async = async;\r\n            }\r\n            if (defer) {\r\n                info.defer = defer;\r\n            }\r\n            if (referrerPolicy) {\r\n                info.referrerPolicy = referrerPolicy;\r\n            }\r\n            result[_DYN_PUSH /* @min:%2epush */](info);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//# sourceMappingURL=W3cTraceParent.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_DF, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \r\n// \r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nfunction _addInitializer(_initializers, id, telemetryInitializer) {\r\n    var theInitializer = {\r\n        id: id,\r\n        fn: telemetryInitializer\r\n    };\r\n    arrAppend(_initializers, theInitializer);\r\n    var handler = {\r\n        remove: function () {\r\n            arrForEach(_initializers, function (initializer, idx) {\r\n                if (initializer.id === theInitializer.id) {\r\n                    _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return handler;\r\n}\r\nfunction _runInitializers(_initializers, item, logger) {\r\n    var doNotSendItem = false;\r\n    var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n    for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n        var telemetryInitializer = _initializers[i];\r\n        if (telemetryInitializer) {\r\n            try {\r\n                if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                    doNotSendItem = true;\r\n                    break;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // log error but dont stop executing rest of the telemetry initializers\r\n                // doNotSendItem = true;\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Telemetry initializer failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n            }\r\n        }\r\n    }\r\n    return !doNotSendItem;\r\n}\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                return _addInitializer(_initializers, _id++, telemetryInitializer);\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                if (_runInitializers(_initializers, item, itemCtx ? itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]() : _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]())) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryInitializerPlugin.__ieDyn=1;\n\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport { __spreadArrayFn as __spreadArray } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllSettledPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrAppend, arrForEach, arrIndexOf, createTimeout, deepExtend, hasDocument, isFunction, isNullOrUndefined, isPlainObject, isPromiseLike, objDeepFreeze, objDefine, objForEachKey, objFreeze, objHasOwn, scheduleTimeout, throwError } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { ActiveStatus } from \"../JavaScriptSDK.Enums/InitActiveStatusEnum\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_CREATE_NEW, _DYN_ENABLED, _DYN_GET_NOTIFY_MGR, _DYN_GET_PLUGIN, _DYN_GET_PROCESS_TEL_CONT2, _DYN_IDENTIFIER, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_I_KEY, _DYN_LENGTH, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_NAME, _DYN_NOTIFY, _DYN_ON_COMPLETE, _DYN_POLL_INTERNAL_LOGS, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SET_DF, _DYN_SPLICE, _DYN_STOP_POLLING_INTERNA3, _DYN_TEARDOWN, _DYN_TIME, _DYN_UNLOAD, _DYN_VALUE, _DYN_VERSION, _DYN_WATCH, _DYN__INACTIVE } from \"../__DynamicConstants\";\r\nimport { doUnloadAll, runTargetUnload } from \"./AsyncUtils\";\r\nimport { ChannelControllerPriority } from \"./Constants\";\r\nimport { createCookieMgr } from \"./CookieMgr\";\r\nimport { createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { getDebugListener } from \"./DbgExtensionUtils\";\r\nimport { DiagnosticLogger, _InternalLogMessage, _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getSetValue, isNotNullOrUndefined, proxyFunctionAs, proxyFunctions, toISOString } from \"./HelperFuncs\";\r\nimport { STR_CHANNELS, STR_CORE, STR_CREATE_PERF_MGR, STR_DISABLED, STR_EMPTY, STR_EVENTS_DISCARDED, STR_EXTENSIONS, STR_EXTENSION_CONFIG, STR_GET_PERF_MGR, STR_PRIORITY, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { PerfManager, doPerf, getGblPerfMgr } from \"./PerfManager\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext, createTelemetryProxyChain } from \"./ProcessTelemetryContext\";\r\nimport { _getPluginState, createDistributedTraceContext, initializePlugins, sortPlugins } from \"./TelemetryHelpers\";\r\nimport { TelemetryInitializerPlugin } from \"./TelemetryInitializerPlugin\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strValidationError = \"Plugins must provide initialize method\";\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar strSdkUnloadingError = \"SDK is still unloading...\";\r\nvar strSdkNotInitialized = \"SDK is not initialized\";\r\nvar maxInitQueueSize = 100;\r\nvar maxInitTimeout = 50000;\r\n// const strPluginUnloadFailed = \"Failed to unload plugin\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze((_a = {\r\n        cookieCfg: {}\r\n    },\r\n    _a[STR_EXTENSIONS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_CHANNELS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_EXTENSION_CONFIG] = { ref: true, v: {} },\r\n    _a[STR_CREATE_PERF_MGR] = UNDEFINED_VALUE,\r\n    _a.loggingLevelConsole = 0 /* eLoggingSeverity.DISABLED */,\r\n    _a.diagnosticLogInterval = UNDEFINED_VALUE,\r\n    _a));\r\n/**\r\n * Helper to create the default performance manager\r\n * @param core\r\n * @param notificationMgr\r\n */\r\nfunction _createPerfManager(core, notificationMgr) {\r\n    return new PerfManager(notificationMgr);\r\n}\r\nfunction _validateExtensions(logger, channelPriority, allExtensions) {\r\n    var _a;\r\n    // Concat all available extensions\r\n    var coreExtensions = [];\r\n    var channels = [];\r\n    // Check if any two extensions have the same priority, then warn to console\r\n    // And extract the local extensions from the\r\n    var extPriorities = {};\r\n    // Extension validation\r\n    arrForEach(allExtensions, function (ext) {\r\n        // Check for ext.initialize\r\n        if (isNullOrUndefined(ext) || isNullOrUndefined(ext[_DYN_INITIALIZE /* @min:%2einitialize */])) {\r\n            throwError(strValidationError);\r\n        }\r\n        var extPriority = ext[STR_PRIORITY /* @min:%2epriority */];\r\n        var identifier = ext[_DYN_IDENTIFIER /* @min:%2eidentifier */];\r\n        if (ext && extPriority) {\r\n            if (!isNullOrUndefined(extPriorities[extPriority])) {\r\n                _warnToConsole(logger, \"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n            }\r\n            else {\r\n                // set a value\r\n                extPriorities[extPriority] = identifier;\r\n            }\r\n        }\r\n        // Split extensions to core and channels\r\n        if (!extPriority || extPriority < channelPriority) {\r\n            // Add to core extension that will be managed by AppInsightsCore\r\n            coreExtensions[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n        else {\r\n            channels[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n    });\r\n    return _a = {},\r\n        _a[STR_CORE /* @min:core */] = coreExtensions,\r\n        _a[STR_CHANNELS /* @min:channels */] = channels,\r\n        _a;\r\n}\r\nfunction _isPluginPresent(thePlugin, plugins) {\r\n    var exists = false;\r\n    arrForEach(plugins, function (plugin) {\r\n        if (plugin === thePlugin) {\r\n            exists = true;\r\n            return -1;\r\n        }\r\n    });\r\n    return exists;\r\n}\r\nfunction _deepMergeConfig(details, target, newValues, merge) {\r\n    // Lets assign the new values to the existing config\r\n    if (newValues) {\r\n        objForEachKey(newValues, function (key, value) {\r\n            if (merge) {\r\n                if (isPlainObject(value) && isPlainObject(target[key])) {\r\n                    // The target is an object and it has a value\r\n                    _deepMergeConfig(details, target[key], value, merge);\r\n                }\r\n            }\r\n            if (merge && isPlainObject(value) && isPlainObject(target[key])) {\r\n                // The target is an object and it has a value\r\n                _deepMergeConfig(details, target[key], value, merge);\r\n            }\r\n            else {\r\n                // Just Assign (replace) and/or make the property dynamic\r\n                details.set(target, key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _findWatcher(listeners, newWatcher) {\r\n    var theListener = null;\r\n    var idx = -1;\r\n    arrForEach(listeners, function (listener, lp) {\r\n        if (listener.w === newWatcher) {\r\n            theListener = listener;\r\n            idx = lp;\r\n            return -1;\r\n        }\r\n    });\r\n    return { i: idx, l: theListener };\r\n}\r\nfunction _addDelayedCfgListener(listeners, newWatcher) {\r\n    var theListener = _findWatcher(listeners, newWatcher).l;\r\n    if (!theListener) {\r\n        theListener = {\r\n            w: newWatcher,\r\n            rm: function () {\r\n                var fnd = _findWatcher(listeners, newWatcher);\r\n                if (fnd.i !== -1) {\r\n                    listeners[_DYN_SPLICE /* @min:%2esplice */](fnd.i, 1);\r\n                }\r\n            }\r\n        };\r\n        listeners[_DYN_PUSH /* @min:%2epush */](theListener);\r\n    }\r\n    return theListener;\r\n}\r\nfunction _registerDelayedCfgListener(config, listeners, logger) {\r\n    arrForEach(listeners, function (listener) {\r\n        var unloadHdl = onConfigChange(config, listener.w, logger);\r\n        delete listener.w; // Clear the listener reference so it will get garbage collected.\r\n        // replace the remove function\r\n        listener.rm = function () {\r\n            unloadHdl.rm();\r\n        };\r\n    });\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _initDebugListener(configHandler, unloadContainer, notificationManager, debugListener) {\r\n    // Will get recalled if any referenced config values are changed\r\n    unloadContainer.add(configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n        var disableDbgExt = details.cfg.disableDbgExt;\r\n        if (disableDbgExt === true && debugListener) {\r\n            // Remove any previously loaded debug listener\r\n            notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](debugListener);\r\n            debugListener = null;\r\n        }\r\n        if (notificationManager && !debugListener && disableDbgExt !== true) {\r\n            debugListener = getDebugListener(details.cfg);\r\n            notificationManager[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](debugListener);\r\n        }\r\n    }));\r\n    return debugListener;\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _createUnloadHook(unloadHook) {\r\n    return objDefine({\r\n        rm: function () {\r\n            unloadHook.rm();\r\n        }\r\n    }, \"toJSON\", { v: function () { return \"aicore::onCfgChange<\" + JSON.stringify(unloadHook) + \">\"; } });\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _configHandler;\r\n        var _isInitialized;\r\n        var _logger;\r\n        var _eventQueue;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        var _cfgPerfManager;\r\n        var _cookieManager;\r\n        var _pluginChain;\r\n        var _configExtensions;\r\n        var _channelConfig;\r\n        var _channels;\r\n        var _isUnloading;\r\n        var _telemetryInitializerPlugin;\r\n        var _internalLogsEventName;\r\n        var _evtNamespace;\r\n        var _unloadHandlers;\r\n        var _hookContainer;\r\n        var _debugListener;\r\n        var _traceCtx;\r\n        var _instrumentationKey;\r\n        var _cfgListeners;\r\n        var _extensions;\r\n        var _pluginVersionStringArr;\r\n        var _pluginVersionString;\r\n        var _activeStatus; // to indicate if ikey or endpoint url promised is resolved or not\r\n        var _endpoint;\r\n        var _initInMemoMaxSize; // max event count limit during wait for init promises to be resolved\r\n        var _isStatusSet; // track if active status is set in case of init timeout and init promises setting the status twice\r\n        var _initTimer;\r\n        /**\r\n         * Internal log poller\r\n         */\r\n        var _internalLogPoller;\r\n        var _internalLogPollerListening;\r\n        var _forceStopInternalLogPoller;\r\n        dynamicProto(AppInsightsCore, this, function (_self) {\r\n            // Set the default values (also called during teardown)\r\n            _initDefaults();\r\n            // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_extensions, _eventQueue];\r\n            };\r\n            _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () { return _isInitialized; };\r\n            // since version 3.3.0\r\n            _self.activeStatus = function () { return _activeStatus; };\r\n            // since version 3.3.0\r\n            // internal\r\n            _self._setPendingStatus = function () {\r\n                _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n            };\r\n            // Creating the self.initialize = ()\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                if (_isUnloading) {\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                // Make sure core is only initialized once\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    throwError(\"Core cannot be initialized more than once\");\r\n                }\r\n                _configHandler = createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false);\r\n                // Re-assigning the local config property so we don't have any references to the passed value and it can be garbage collected\r\n                config = _configHandler.cfg;\r\n                // This will be \"re-run\" if the referenced config properties are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var rootCfg = details.cfg;\r\n                    var isPending = _activeStatus === 3 /* eActiveStatus.PENDING */;\r\n                    if (isPending) {\r\n                        // means waiting for previous promises to be resolved, won't apply new changes\r\n                        return;\r\n                    }\r\n                    _initInMemoMaxSize = rootCfg.initInMemoMaxSize || maxInitQueueSize;\r\n                    // app Insights core only handle ikey and endpointurl, aisku will handle cs\r\n                    var ikey = rootCfg[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    var endpointUrl = rootCfg.endpointUrl; // do not need to validate endpoint url, if it is null, default one will be set by sender\r\n                    if (isNullOrUndefined(ikey)) {\r\n                        _instrumentationKey = null;\r\n                        // if new ikey is null, set status to be inactive, all new events will be saved in memory or dropped\r\n                        _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                        var msg = \"Please provide instrumentation key\";\r\n                        if (!_isInitialized) {\r\n                            // only throw error during initialization\r\n                            throwError(msg);\r\n                        }\r\n                        else {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, msg);\r\n                            _releaseQueues();\r\n                        }\r\n                        return;\r\n                    }\r\n                    var promises = [];\r\n                    if (isPromiseLike(ikey)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](ikey);\r\n                        _instrumentationKey = null; // reset current local ikey variable (otherwise it will always be the previous ikeys if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string\r\n                        _instrumentationKey = ikey;\r\n                    }\r\n                    if (isPromiseLike(endpointUrl)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](endpointUrl);\r\n                        _endpoint = null; // reset current local endpoint variable (otherwise it will always be the previous urls if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string or null\r\n                        _endpoint = endpointUrl;\r\n                    }\r\n                    // at least have one promise\r\n                    if (promises[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        // reset to false for new dynamic changes\r\n                        _isStatusSet = false;\r\n                        _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n                        var initTimeout = isNotNullOrUndefined(rootCfg.initTimeOut) ? rootCfg.initTimeOut : maxInitTimeout; // rootCfg.initTimeOut could be 0\r\n                        var allPromises = createAllSettledPromise(promises);\r\n                        _initTimer = scheduleTimeout(function () {\r\n                            // set _isStatusSet to true\r\n                            // set active status\r\n                            // release queues\r\n                            _initTimer = null;\r\n                            if (!_isStatusSet) {\r\n                                _setStatus();\r\n                            }\r\n                        }, initTimeout);\r\n                        doAwaitResponse(allPromises, function (response) {\r\n                            try {\r\n                                if (_isStatusSet) {\r\n                                    // promises take too long to resolve, ignore them\r\n                                    // active status should be set by timeout already\r\n                                    return;\r\n                                }\r\n                                if (!response.rejected) {\r\n                                    var values = response[_DYN_VALUE /* @min:%2evalue */];\r\n                                    if (values && values[_DYN_LENGTH /* @min:%2elength */]) {\r\n                                        // ikey\r\n                                        var ikeyRes = values[0];\r\n                                        _instrumentationKey = ikeyRes && ikeyRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        // endpoint\r\n                                        if (values[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                                            var endpointRes = values[1];\r\n                                            _endpoint = endpointRes && endpointRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        }\r\n                                    }\r\n                                    if (_instrumentationKey) {\r\n                                        // if ikey is null, no need to trigger extra dynamic changes for extensions\r\n                                        config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = _instrumentationKey; // set config.instrumentationKey for extensions to consume\r\n                                        config.endpointUrl = _endpoint; // set config.endpointUrl for extensions to consume\r\n                                    }\r\n                                }\r\n                                // set _isStatusSet to true\r\n                                // set active status\r\n                                // release queues\r\n                                _setStatus();\r\n                            }\r\n                            catch (e) {\r\n                                if (!_isStatusSet) {\r\n                                    _setStatus();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        // means no promises\r\n                        _setStatus();\r\n                    }\r\n                    //_instrumentationKey = details.cfg.instrumentationKey;\r\n                    // Mark the extensionConfig and all first level keys as referenced\r\n                    // This is so that calls to getExtCfg() will always return the same object\r\n                    // Even when a user may \"re-assign\" the plugin properties (or it's unloaded/reloaded)\r\n                    var extCfg = details.ref(details.cfg, STR_EXTENSION_CONFIG);\r\n                    objForEachKey(extCfg, function (key) {\r\n                        details.ref(extCfg, key);\r\n                    });\r\n                }));\r\n                _notificationManager = notificationManager;\r\n                // Initialize the debug listener outside of the closure to reduce the retained memory footprint\r\n                _debugListener = _initDebugListener(_configHandler, _hookContainer, _notificationManager && _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */](), _debugListener);\r\n                _initPerfManager();\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = logger;\r\n                var cfgExtensions = config[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                // Extension validation\r\n                _configExtensions = [];\r\n                _configExtensions[_DYN_PUSH /* @min:%2epush */].apply(_configExtensions, __spreadArray(__spreadArray([], extensions, false), cfgExtensions, false));\r\n                _channelConfig = config[STR_CHANNELS /* @min:%2echannels */];\r\n                _initPluginChain(null);\r\n                if (!_channels || _channels[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    throwError(\"No \" + STR_CHANNELS + \" available\");\r\n                }\r\n                if (_channelConfig && _channelConfig[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                    var teeController = _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */](\"TeeChannelController\");\r\n                    if (!teeController || !teeController.plugin) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"TeeChannel required\");\r\n                    }\r\n                }\r\n                _registerDelayedCfgListener(config, _cfgListeners, _logger);\r\n                _cfgListeners = null;\r\n                _isInitialized = true;\r\n                if (_activeStatus === ActiveStatus.ACTIVE) {\r\n                    _releaseQueues();\r\n                }\r\n            };\r\n            _self.getChannels = function () {\r\n                var controls = [];\r\n                if (_channels) {\r\n                    arrForEach(_channels, function (channel) {\r\n                        controls[_DYN_PUSH /* @min:%2epush */](channel);\r\n                    });\r\n                }\r\n                return objFreeze(controls);\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */](), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throwError(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    if (!telemetryItem[_DYN_NAME /* @min:%2ename */] && isNullOrUndefined(telemetryItem[_DYN_NAME /* @min:%2ename */])) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        throwError(\"telemetry name required\");\r\n                    }\r\n                    // setup default iKey if not passed in\r\n                    telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] = telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                    // add default timestamp if not passed in\r\n                    telemetryItem[_DYN_TIME /* @min:%2etime */] = telemetryItem[_DYN_TIME /* @min:%2etime */] || toISOString(new Date());\r\n                    // Common Schema 4.0\r\n                    telemetryItem.ver = telemetryItem.ver || \"4.0\";\r\n                    if (!_isUnloading && _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]() && _activeStatus === ActiveStatus.ACTIVE) {\r\n                        // Process the telemetry plugin chain\r\n                        _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](telemetryItem);\r\n                    }\r\n                    else if (_activeStatus !== ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */]) {\r\n                        // Queue events until all extensions are initialized\r\n                        if (_eventQueue[_DYN_LENGTH /* @min:%2elength */] <= _initInMemoMaxSize) {\r\n                            // set limit, if full, stop adding new events\r\n                            _eventQueue[_DYN_PUSH /* @min:%2epush */](telemetryItem);\r\n                        }\r\n                    }\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            _self[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */] = _createTelCtx;\r\n            _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */] = function () {\r\n                if (!_notificationManager) {\r\n                    _notificationManager = new NotificationManager(_configHandler.cfg);\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param listener - An INotificationListener object.\r\n             */\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _self.getNotifyMgr()[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - INotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                if (_notificationManager) {\r\n                    _notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](listener);\r\n                }\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                if (!_cookieManager) {\r\n                    _cookieManager = createCookieMgr(_configHandler.cfg, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _cookieManager;\r\n            };\r\n            _self.setCookieMgr = function (cookieMgr) {\r\n                if (_cookieManager !== cookieMgr) {\r\n                    runTargetUnload(_cookieManager, false);\r\n                    _cookieManager = cookieMgr;\r\n                }\r\n            };\r\n            _self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */] = function () {\r\n                return _perfManager || _cfgPerfManager || getGblPerfMgr();\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_isInitialized && _eventQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var eventQueue = _eventQueue;\r\n                    _eventQueue = [];\r\n                    if (_activeStatus === 2 /* eActiveStatus.ACTIVE */) {\r\n                        arrForEach(eventQueue, function (event) {\r\n                            event[_DYN_I_KEY /* @min:%2eiKey */] = event[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                            _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](event);\r\n                        });\r\n                    }\r\n                    else {\r\n                        // new one for msg ikey\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"core init status is not active\");\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                _internalLogsEventName = eventName || null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                return _startLogPoller(true);\r\n            };\r\n            function _setStatus() {\r\n                _isStatusSet = true;\r\n                if (isNullOrUndefined(_instrumentationKey)) {\r\n                    _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 112 /* _eInternalMessageId.InitPromiseException */, \"ikey can't be resolved from promises\");\r\n                }\r\n                else {\r\n                    _activeStatus = ActiveStatus.ACTIVE;\r\n                }\r\n                _releaseQueues();\r\n            }\r\n            function _releaseQueues() {\r\n                if (_isInitialized) {\r\n                    _self.releaseQueue();\r\n                    _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n                }\r\n            }\r\n            function _startLogPoller(alwaysStart) {\r\n                if ((!_internalLogPoller || !_internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */]) && !_forceStopInternalLogPoller) {\r\n                    var shouldStart = alwaysStart || (_logger && _logger.queue[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                    if (shouldStart) {\r\n                        if (!_internalLogPollerListening) {\r\n                            _internalLogPollerListening = true;\r\n                            // listen for any configuration changes so that changes to the\r\n                            // interval will cause the timer to be re-initialized\r\n                            _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                                var interval = details.cfg.diagnosticLogInterval;\r\n                                if (!interval || !(interval > 0)) {\r\n                                    interval = 10000;\r\n                                }\r\n                                var isRunning = false;\r\n                                if (_internalLogPoller) {\r\n                                    // It was already created so remember it's running and cancel\r\n                                    isRunning = _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */];\r\n                                    _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                                }\r\n                                // Create / reconfigure\r\n                                _internalLogPoller = createTimeout(_flushInternalLogs, interval);\r\n                                _internalLogPoller.unref();\r\n                                // Restart if previously running\r\n                                _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = isRunning;\r\n                            }));\r\n                        }\r\n                        _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = true;\r\n                    }\r\n                }\r\n                return _internalLogPoller;\r\n            }\r\n            _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */] = function () {\r\n                _forceStopInternalLogPoller = true;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                _flushInternalLogs();\r\n            };\r\n            // Add addTelemetryInitializer\r\n            proxyFunctions(_self, function () { return _telemetryInitializerPlugin; }, [\"addTelemetryInitializer\"]);\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync, unloadComplete, cbTimeout) {\r\n                var _a;\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_isInitialized) {\r\n                    // The SDK is not initialized\r\n                    throwError(strSdkNotInitialized);\r\n                }\r\n                // Check if the SDK still unloading so throw\r\n                if (_isUnloading) {\r\n                    // The SDK is already unloading\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                var unloadState = (_a = {\r\n                        reason: 50 /* TelemetryUnloadReason.SdkUnload */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                    _a.flushComplete = false,\r\n                    _a);\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                var processUnloadCtx = createProcessTelemetryUnloadContext(_getPluginChain(), _self);\r\n                processUnloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                    _hookContainer.run(_self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                    // Run any \"unload\" functions for the _cookieManager, _notificationManager and _logger\r\n                    doUnloadAll([_cookieManager, _notificationManager, _logger], isAsync, function () {\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    });\r\n                }, _self);\r\n                function _doUnload(flushComplete) {\r\n                    unloadState.flushComplete = flushComplete;\r\n                    _isUnloading = true;\r\n                    // Run all of the unload handlers first (before unloading the plugins)\r\n                    _unloadHandlers.run(processUnloadCtx, unloadState);\r\n                    // Stop polling the internal logs\r\n                    _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */]();\r\n                    // Start unloading the components, from this point onwards the SDK should be considered to be in an unstable state\r\n                    processUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                _flushInternalLogs();\r\n                if (!_flushChannels(isAsync, _doUnload, 6 /* SendRequestReason.SdkUnload */, cbTimeout)) {\r\n                    _doUnload(false);\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */] = _getPlugin;\r\n            _self.addPlugin = function (plugin, replaceExisting, isAsync, addCb) {\r\n                if (!plugin) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(strValidationError);\r\n                    return;\r\n                }\r\n                var existingPlugin = _getPlugin(plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                if (existingPlugin && !replaceExisting) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(\"Plugin [\" + plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"] is already loaded!\");\r\n                    return;\r\n                }\r\n                var updateState = {\r\n                    reason: 16 /* TelemetryUpdateReason.PluginAdded */\r\n                };\r\n                function _addPlugin(removed) {\r\n                    _configExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                    updateState.added = [plugin];\r\n                    // Re-Initialize the plugin chain\r\n                    _initPluginChain(updateState);\r\n                    addCb && addCb(true);\r\n                }\r\n                if (existingPlugin) {\r\n                    var removedPlugins_1 = [existingPlugin.plugin];\r\n                    var unloadState = {\r\n                        reason: 2 /* TelemetryUnloadReason.PluginReplace */,\r\n                        isAsync: !!isAsync\r\n                    };\r\n                    _removePlugins(removedPlugins_1, unloadState, function (removed) {\r\n                        if (!removed) {\r\n                            // Previous plugin was successfully removed or was not installed\r\n                            addCb && addCb(false);\r\n                        }\r\n                        else {\r\n                            updateState.removed = removedPlugins_1;\r\n                            updateState.reason |= 32 /* TelemetryUpdateReason.PluginRemoved */;\r\n                            _addPlugin(true);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    _addPlugin(false);\r\n                }\r\n            };\r\n            _self.updateCfg = function (newConfig, mergeExisting) {\r\n                if (mergeExisting === void 0) { mergeExisting = true; }\r\n                var updateState;\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    updateState = {\r\n                        reason: 1 /* TelemetryUpdateReason.ConfigurationChanged */,\r\n                        cfg: _configHandler.cfg,\r\n                        oldCfg: deepExtend({}, _configHandler.cfg),\r\n                        newConfig: deepExtend({}, newConfig),\r\n                        merge: mergeExisting\r\n                    };\r\n                    newConfig = updateState.newConfig;\r\n                    var cfg = _configHandler.cfg;\r\n                    // replace the immutable (if initialized) values\r\n                    // We don't currently allow updating the extensions and channels via the update config\r\n                    // So overwriting any user provided values to reuse the existing values\r\n                    newConfig[STR_EXTENSIONS /* @min:%2eextensions */] = cfg[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                    newConfig[STR_CHANNELS /* @min:%2echannels */] = cfg[STR_CHANNELS /* @min:%2echannels */];\r\n                }\r\n                // Explicitly blocking any previous config watchers so that they don't get called because\r\n                // of this bulk update (Probably not necessary)\r\n                _configHandler._block(function (details) {\r\n                    // Lets assign the new values to the existing config either overwriting or re-assigning\r\n                    var theConfig = details.cfg;\r\n                    _deepMergeConfig(details, theConfig, newConfig, mergeExisting);\r\n                    if (!mergeExisting) {\r\n                        // Remove (unassign) the values \"missing\" from the newConfig and also not in the default config\r\n                        objForEachKey(theConfig, function (key) {\r\n                            if (!objHasOwn(newConfig, key)) {\r\n                                // Set the value to undefined\r\n                                details.set(theConfig, key, UNDEFINED_VALUE);\r\n                            }\r\n                        });\r\n                    }\r\n                    // Apply defaults to the new config\r\n                    details[_DYN_SET_DF /* @min:%2esetDf */](theConfig, defaultConfig);\r\n                }, true);\r\n                // Now execute all of the listeners (synchronously) so they update their values immediately\r\n                _configHandler[_DYN_NOTIFY /* @min:%2enotify */]();\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            };\r\n            _self.evtNamespace = function () {\r\n                return _evtNamespace;\r\n            };\r\n            _self.flush = _flushChannels;\r\n            _self.getTraceCtx = function (createNew) {\r\n                if (!_traceCtx) {\r\n                    _traceCtx = createDistributedTraceContext();\r\n                }\r\n                return _traceCtx;\r\n            };\r\n            _self.setTraceCtx = function (traceCtx) {\r\n                _traceCtx = traceCtx || null;\r\n            };\r\n            _self.addUnloadHook = _addUnloadHook;\r\n            // Create the addUnloadCb\r\n            proxyFunctionAs(_self, \"addUnloadCb\", function () { return _unloadHandlers; }, \"add\");\r\n            _self.onCfgChange = function (handler) {\r\n                var unloadHook;\r\n                if (!_isInitialized) {\r\n                    unloadHook = _addDelayedCfgListener(_cfgListeners, handler);\r\n                }\r\n                else {\r\n                    unloadHook = onConfigChange(_configHandler.cfg, handler, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _createUnloadHook(unloadHook);\r\n            };\r\n            _self.getWParam = function () {\r\n                return (hasDocument() || !!_configHandler.cfg.enableWParam) ? 0 : -1;\r\n            };\r\n            function _setPluginVersions() {\r\n                var thePlugins = {};\r\n                _pluginVersionStringArr = [];\r\n                var _addPluginVersions = function (plugins) {\r\n                    if (plugins) {\r\n                        arrForEach(plugins, function (plugin) {\r\n                            if (plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] && plugin[_DYN_VERSION /* @min:%2eversion */] && !thePlugins[plugin.identifier]) {\r\n                                var ver = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"=\" + plugin[_DYN_VERSION /* @min:%2eversion */];\r\n                                _pluginVersionStringArr[_DYN_PUSH /* @min:%2epush */](ver);\r\n                                thePlugins[plugin.identifier] = plugin;\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                _addPluginVersions(_channels);\r\n                if (_channelConfig) {\r\n                    arrForEach(_channelConfig, function (channels) {\r\n                        _addPluginVersions(channels);\r\n                    });\r\n                }\r\n                _addPluginVersions(_configExtensions);\r\n            }\r\n            function _initDefaults() {\r\n                _isInitialized = false;\r\n                // Use a default logger so initialization errors are not dropped on the floor with full logging\r\n                _configHandler = createDynamicConfig({}, defaultConfig, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                // Set the logging level to critical so that any critical initialization failures are displayed on the console\r\n                _configHandler.cfg[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */] = 1 /* eLoggingSeverity.CRITICAL */;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _configHandler.cfg; },\r\n                    s: function (newValue) {\r\n                        _self.updateCfg(newValue, false);\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionStringArr\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionStringArr) {\r\n                            _setPluginVersions();\r\n                        }\r\n                        return _pluginVersionStringArr;\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionString\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionString) {\r\n                            if (!_pluginVersionStringArr) {\r\n                                _setPluginVersions();\r\n                            }\r\n                            _pluginVersionString = _pluginVersionStringArr.join(\";\");\r\n                        }\r\n                        return _pluginVersionString || STR_EMPTY;\r\n                    }\r\n                });\r\n                objDefine(_self, \"logger\", {\r\n                    g: function () {\r\n                        if (!_logger) {\r\n                            _logger = new DiagnosticLogger(_configHandler.cfg);\r\n                            _configHandler[_DYN_LOGGER /* @min:%2elogger */] = _logger;\r\n                        }\r\n                        return _logger;\r\n                    },\r\n                    s: function (newLogger) {\r\n                        _configHandler[_DYN_LOGGER /* @min:%2elogger */] = newLogger;\r\n                        if (_logger !== newLogger) {\r\n                            runTargetUnload(_logger, false);\r\n                            _logger = newLogger;\r\n                        }\r\n                    }\r\n                });\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = new DiagnosticLogger(_configHandler.cfg);\r\n                _extensions = [];\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                _telemetryInitializerPlugin = new TelemetryInitializerPlugin();\r\n                _eventQueue = [];\r\n                runTargetUnload(_notificationManager, false);\r\n                _notificationManager = null;\r\n                _perfManager = null;\r\n                _cfgPerfManager = null;\r\n                runTargetUnload(_cookieManager, false);\r\n                _cookieManager = null;\r\n                _pluginChain = null;\r\n                _configExtensions = [];\r\n                _channelConfig = null;\r\n                _channels = null;\r\n                _isUnloading = false;\r\n                _internalLogsEventName = null;\r\n                _evtNamespace = createUniqueNamespace(\"AIBaseCore\", true);\r\n                _unloadHandlers = createUnloadHandlerContainer();\r\n                _traceCtx = null;\r\n                _instrumentationKey = null;\r\n                _hookContainer = createUnloadHookContainer();\r\n                _cfgListeners = [];\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller = null;\r\n                _internalLogPollerListening = false;\r\n                _activeStatus = 0 /* eActiveStatus.NONE */; // default is None\r\n                _endpoint = null;\r\n                _initInMemoMaxSize = null;\r\n                _isStatusSet = false;\r\n                _initTimer = null;\r\n            }\r\n            function _createTelCtx() {\r\n                var theCtx = createProcessTelemetryContext(_getPluginChain(), _configHandler.cfg, _self);\r\n                theCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                return theCtx;\r\n            }\r\n            // Initialize or Re-initialize the plugins\r\n            function _initPluginChain(updateState) {\r\n                // Extension validation\r\n                var theExtensions = _validateExtensions(_self[_DYN_LOGGER /* @min:%2elogger */], ChannelControllerPriority, _configExtensions);\r\n                _pluginChain = null;\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                // Get the primary channel queue and include as part of the normal extensions\r\n                _channels = (_channelConfig || [])[0] || [];\r\n                // Add any channels provided in the extensions and sort them\r\n                _channels = sortPlugins(arrAppend(_channels, theExtensions[STR_CHANNELS /* @min:%2echannels */]));\r\n                // Create an array of all extensions, including the _channels\r\n                var allExtensions = arrAppend(sortPlugins(theExtensions[STR_CORE /* @min:%2ecore */]), _channels);\r\n                // Required to allow plugins to call core.getPlugin() during their own initialization\r\n                _extensions = objFreeze(allExtensions);\r\n                // This has a side effect of adding the extensions passed during initialization\r\n                // into the config.extensions, so you can see all of the extensions loaded.\r\n                // This will also get updated by the addPlugin() and remove plugin code.\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                var rootCtx = _createTelCtx();\r\n                // Initializing the channels first\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    initializePlugins(rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels), allExtensions);\r\n                }\r\n                // Now initialize the normal extensions (explicitly not including the _channels as this can cause duplicate initialization)\r\n                initializePlugins(rootCtx, allExtensions);\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            }\r\n            function _getPlugin(pluginIdentifier) {\r\n                var theExt = null;\r\n                var thePlugin = null;\r\n                var channelHosts = [];\r\n                arrForEach(_extensions, function (ext) {\r\n                    if (ext[_DYN_IDENTIFIER /* @min:%2eidentifier */] === pluginIdentifier && ext !== _telemetryInitializerPlugin) {\r\n                        thePlugin = ext;\r\n                        return -1;\r\n                    }\r\n                    if (ext.getChannel) {\r\n                        channelHosts[_DYN_PUSH /* @min:%2epush */](ext);\r\n                    }\r\n                });\r\n                if (!thePlugin && channelHosts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(channelHosts, function (host) {\r\n                        thePlugin = host.getChannel(pluginIdentifier);\r\n                        if (!thePlugin) {\r\n                            return -1;\r\n                        }\r\n                    });\r\n                }\r\n                if (thePlugin) {\r\n                    theExt = {\r\n                        plugin: thePlugin,\r\n                        setEnabled: function (enabled) {\r\n                            _getPluginState(thePlugin)[STR_DISABLED] = !enabled;\r\n                        },\r\n                        isEnabled: function () {\r\n                            var pluginState = _getPluginState(thePlugin);\r\n                            return !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] && !pluginState[STR_DISABLED];\r\n                        },\r\n                        remove: function (isAsync, removeCb) {\r\n                            var _a;\r\n                            if (isAsync === void 0) { isAsync = true; }\r\n                            var pluginsToRemove = [thePlugin];\r\n                            var unloadState = (_a = {\r\n                                    reason: 1 /* TelemetryUnloadReason.PluginUnload */\r\n                                },\r\n                                _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                                _a);\r\n                            _removePlugins(pluginsToRemove, unloadState, function (removed) {\r\n                                if (removed) {\r\n                                    // Re-Initialize the plugin chain\r\n                                    _initPluginChain({\r\n                                        reason: 32 /* TelemetryUpdateReason.PluginRemoved */,\r\n                                        removed: pluginsToRemove\r\n                                    });\r\n                                }\r\n                                removeCb && removeCb(removed);\r\n                            });\r\n                        }\r\n                    };\r\n                }\r\n                return theExt;\r\n            }\r\n            function _getPluginChain() {\r\n                if (!_pluginChain) {\r\n                    // copy the collection of extensions\r\n                    var extensions = (_extensions || []).slice();\r\n                    // During add / remove this may get called again, so don't read if already present\r\n                    if (arrIndexOf(extensions, _telemetryInitializerPlugin) === -1) {\r\n                        extensions[_DYN_PUSH /* @min:%2epush */](_telemetryInitializerPlugin);\r\n                    }\r\n                    _pluginChain = createTelemetryProxyChain(sortPlugins(extensions), _configHandler.cfg, _self);\r\n                }\r\n                return _pluginChain;\r\n            }\r\n            function _removePlugins(thePlugins, unloadState, removeComplete) {\r\n                if (thePlugins && thePlugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var unloadChain = createTelemetryProxyChain(thePlugins, _configHandler.cfg, _self);\r\n                    var unloadCtx = createProcessTelemetryUnloadContext(unloadChain, _self);\r\n                    unloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                        var removed = false;\r\n                        // Remove the listed config extensions\r\n                        var newConfigExtensions = [];\r\n                        arrForEach(_configExtensions, function (plugin, idx) {\r\n                            if (!_isPluginPresent(plugin, thePlugins)) {\r\n                                newConfigExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                            }\r\n                            else {\r\n                                removed = true;\r\n                            }\r\n                        });\r\n                        _configExtensions = newConfigExtensions;\r\n                        _pluginVersionString = null;\r\n                        _pluginVersionStringArr = null;\r\n                        // Re-Create the channel config\r\n                        var newChannelConfig = [];\r\n                        if (_channelConfig) {\r\n                            arrForEach(_channelConfig, function (queue, idx) {\r\n                                var newQueue = [];\r\n                                arrForEach(queue, function (channel) {\r\n                                    if (!_isPluginPresent(channel, thePlugins)) {\r\n                                        newQueue[_DYN_PUSH /* @min:%2epush */](channel);\r\n                                    }\r\n                                    else {\r\n                                        removed = true;\r\n                                    }\r\n                                });\r\n                                newChannelConfig[_DYN_PUSH /* @min:%2epush */](newQueue);\r\n                            });\r\n                            _channelConfig = newChannelConfig;\r\n                        }\r\n                        removeComplete && removeComplete(removed);\r\n                        _startLogPoller();\r\n                    });\r\n                    unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                else {\r\n                    removeComplete(false);\r\n                }\r\n            }\r\n            function _flushInternalLogs() {\r\n                if (_logger && _logger.queue) {\r\n                    var queue = _logger.queue.slice(0);\r\n                    _logger.queue[_DYN_LENGTH /* @min:%2elength */] = 0;\r\n                    arrForEach(queue, function (logMessage) {\r\n                        var _a;\r\n                        var item = (_a = {},\r\n                            _a[_DYN_NAME /* @min:name */] = _internalLogsEventName ? _internalLogsEventName : \"InternalMessageId: \" + logMessage[_DYN_MESSAGE_ID /* @min:%2emessageId */],\r\n                            _a[_DYN_I_KEY /* @min:iKey */] = _instrumentationKey,\r\n                            _a[_DYN_TIME /* @min:time */] = toISOString(new Date()),\r\n                            _a.baseType = _InternalLogMessage.dataType,\r\n                            _a.baseData = { message: logMessage[_DYN_MESSAGE /* @min:%2emessage */] },\r\n                            _a);\r\n                        _self.track(item);\r\n                    });\r\n                }\r\n            }\r\n            function _flushChannels(isAsync, callBack, sendReason, cbTimeout) {\r\n                // Setting waiting to one so that we don't call the callBack until we finish iterating\r\n                var waiting = 1;\r\n                var doneIterating = false;\r\n                var cbTimer = null;\r\n                cbTimeout = cbTimeout || 5000;\r\n                function doCallback() {\r\n                    waiting--;\r\n                    if (doneIterating && waiting === 0) {\r\n                        cbTimer && cbTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                        cbTimer = null;\r\n                        callBack && callBack(doneIterating);\r\n                        callBack = null;\r\n                    }\r\n                }\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var flushCtx = _createTelCtx()[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels);\r\n                    flushCtx.iterate(function (plugin) {\r\n                        if (plugin.flush) {\r\n                            waiting++;\r\n                            var handled_1 = false;\r\n                            // Not all channels will call this callback for every scenario\r\n                            if (!plugin.flush(isAsync, function () {\r\n                                handled_1 = true;\r\n                                doCallback();\r\n                            }, sendReason)) {\r\n                                if (!handled_1) {\r\n                                    // If any channel doesn't return true and it didn't call the callback, then we should assume that the callback\r\n                                    // will never be called, so use a timeout to allow the channel(s) some time to \"finish\" before triggering any\r\n                                    // followup function (such as unloading)\r\n                                    if (isAsync && cbTimer == null) {\r\n                                        cbTimer = scheduleTimeout(function () {\r\n                                            cbTimer = null;\r\n                                            doCallback();\r\n                                        }, cbTimeout);\r\n                                    }\r\n                                    else {\r\n                                        doCallback();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                doneIterating = true;\r\n                doCallback();\r\n                return true;\r\n            }\r\n            function _initPerfManager() {\r\n                // Save the previous config based performance manager creator to avoid creating new perf manager instances if unchanged\r\n                var prevCfgPerfMgr;\r\n                // Will get recalled if any referenced config values are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var enablePerfMgr = details.cfg.enablePerfMgr;\r\n                    if (enablePerfMgr) {\r\n                        var createPerfMgr = details.cfg[STR_CREATE_PERF_MGR /* @min:%2ecreatePerfMgr */];\r\n                        if (prevCfgPerfMgr !== createPerfMgr) {\r\n                            if (!createPerfMgr) {\r\n                                createPerfMgr = _createPerfManager;\r\n                            }\r\n                            // Set the performance manager creation function if not defined\r\n                            getSetValue(details.cfg, STR_CREATE_PERF_MGR, createPerfMgr);\r\n                            prevCfgPerfMgr = createPerfMgr;\r\n                            // Remove any existing config based performance manager\r\n                            _cfgPerfManager = null;\r\n                        }\r\n                        // Only create the performance manager if it's not already created or manually set\r\n                        if (!_perfManager && !_cfgPerfManager && isFunction(createPerfMgr)) {\r\n                            // Create a new config based performance manager\r\n                            _cfgPerfManager = createPerfMgr(_self, _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]());\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Remove any existing config based performance manager\r\n                        _cfgPerfManager = null;\r\n                        // Clear the previous cached value so it can be GC'd\r\n                        prevCfgPerfMgr = null;\r\n                    }\r\n                }));\r\n            }\r\n            function _doUpdate(updateState) {\r\n                var updateCtx = createProcessTelemetryUpdateContext(_getPluginChain(), _self);\r\n                updateCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                if (!_self._updateHook || _self._updateHook(updateCtx, updateState) !== true) {\r\n                    updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n                }\r\n            }\r\n            function _logOrThrowError(message) {\r\n                var logger = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                if (logger) {\r\n                    // there should always be a logger\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, message);\r\n                    _startLogPoller();\r\n                }\r\n                else {\r\n                    throwError(message);\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]();\r\n                if (manager) {\r\n                    manager[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */]([telemetryItem], 2 /* eEventsDiscardedReason.InvalidEvent */);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _hookContainer.add(hooks);\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.getChannels.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.getProcessTelContext.\r\n// Removed Stub for AppInsightsCore.prototype.getNotifyMgr.\r\n// Removed Stub for AppInsightsCore.prototype.addNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.removeNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.getPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.eventCnt.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.addTelemetryInitializer.\r\n// Removed Stub for AppInsightsCore.prototype.unload.\r\n// Removed Stub for AppInsightsCore.prototype.getPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.addPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.updateCfg.\r\n// Removed Stub for AppInsightsCore.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsCore.prototype.flush.\r\n// Removed Stub for AppInsightsCore.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.setTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadHook.\r\n// Removed Stub for AppInsightsCore.prototype.onCfgChange.\r\n// Removed Stub for AppInsightsCore.prototype.activeStatus.\r\n// Removed Stub for AppInsightsCore.prototype._setPendingStatus.\r\n// Removed Stub for AppInsightsCore.prototype.releaseQueue.\r\n// Removed Stub for AppInsightsCore.prototype._updateHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_NAME } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getJSON } from \"./EnvUtils\";\r\n/**\r\n * Parses the response from the backend.\r\n * @param response - XMLHttpRequest or XDomainRequest response\r\n */\r\nexport function parseResponse(response, diagLog) {\r\n    try {\r\n        if (response && response !== \"\") {\r\n            var result = getJSON().parse(response);\r\n            if (result && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] >= result.itemsAccepted &&\r\n                result.itemsReceived - result.itemsAccepted === result.errors[_DYN_LENGTH /* @min:%2elength */]) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 43 /* _eInternalMessageId.InvalidBackendResponse */, \"Cannot parse the response. \" + (e[_DYN_NAME /* @min:%2ename */] || dumpObj(e)), {\r\n            response: response\r\n        });\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=ResponseHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, dumpObj, getNavigator, getWindow, isFunction, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DATA, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PROTOCOL, _DYN_REPLACE, _DYN_SEND_POST, _DYN_SET_REQUEST_HEADER, _DYN_STATUS, _DYN_TIMEOUT, _DYN_TO_LOWER_CASE, _DYN_URL_STRING, _DYN_VALUE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { DisabledPropertyName } from \"./Constants\";\r\nimport { _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getLocation, isBeaconsSupported, isFetchSupported, isXhrSupported, useXDomainRequest } from \"./EnvUtils\";\r\nimport { _getAllResponseHeaders, formatErrorMessageXdr, formatErrorMessageXhr, getResponseText, openXhr } from \"./HelperFuncs\";\r\nvar STR_EMPTY = \"\";\r\nvar STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar STR_POST_METHOD = \"POST\";\r\n/**\r\n * This Internal component\r\n * Manager SendPost functions\r\n * SendPostManger\r\n * @internal for internal use only\r\n */\r\nvar SenderPostManager = /** @class */ (function () {\r\n    function SenderPostManager() {\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _enableSendPromise;\r\n        var _isInitialized;\r\n        var _diagLog;\r\n        var _isOneDs;\r\n        var _onCompleteFuncs;\r\n        var _disableCredentials;\r\n        var _fetchCredentials;\r\n        var _fallbackInst;\r\n        var _disableXhr;\r\n        var _disableBeacon;\r\n        var _disableBeaconSync;\r\n        var _disableFetchKeepAlive;\r\n        var _addNoResponse;\r\n        var _timeoutWrapper;\r\n        dynamicProto(SenderPostManager, this, function (_self, _base) {\r\n            var _sendCredentials = true; // for 1ds\r\n            _initDefaults();\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, diagLog) {\r\n                _diagLog = diagLog;\r\n                if (_isInitialized) {\r\n                    _throwInternal(_diagLog, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _self.SetConfig(config);\r\n                _isInitialized = true;\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_isInitialized, _isOneDs, _disableCredentials, _enableSendPromise];\r\n            };\r\n            // This componet might get its config from sender, offline sender, 1ds post\r\n            // so set this function to mock dynamic changes\r\n            _self.SetConfig = function (config) {\r\n                try {\r\n                    _onCompleteFuncs = config.senderOnCompleteCallBack || {};\r\n                    _disableCredentials = !!config.disableCredentials;\r\n                    _fetchCredentials = config.fetchCredentials;\r\n                    _isOneDs = !!config.isOneDs;\r\n                    _enableSendPromise = !!config.enableSendPromise;\r\n                    _disableXhr = !!config.disableXhr;\r\n                    _disableBeacon = !!config.disableBeacon;\r\n                    _disableBeaconSync = !!config.disableBeaconSync;\r\n                    _timeoutWrapper = config.timeWrapper;\r\n                    _addNoResponse = !!config.addNoResponse;\r\n                    _disableFetchKeepAlive = !!config.disableFetchKeepAlive;\r\n                    _fallbackInst = { sendPOST: _xhrSender };\r\n                    if (!_isOneDs) {\r\n                        _sendCredentials = false; // for appInsights, set it to false always\r\n                    }\r\n                    if (_disableCredentials) {\r\n                        var location_1 = getLocation();\r\n                        if (location_1 && location_1.protocol && location_1.protocol[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"file:\") {\r\n                            // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            _sendCredentials = false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            };\r\n            _self.getSyncFetchPayload = function () {\r\n                return _syncFetchPayload;\r\n            };\r\n            _self.getSenderInst = function (transports, sync) {\r\n                if (transports && transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    return _getSenderInterface(transports, sync);\r\n                }\r\n                return null;\r\n            };\r\n            _self.getFallbackInst = function () {\r\n                return _fallbackInst;\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function (unloadCtx, unloadState) {\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(res, onComplete) {\r\n                _doOnComplete(onComplete, 200, {}, res);\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(message, onComplete) {\r\n                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _doOnComplete(onComplete, 400, {});\r\n            }\r\n            function _onNoPayloadUrl(onComplete) {\r\n                _onError(\"No endpoint url is provided for the batch\", onComplete);\r\n            }\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                var _a;\r\n                var transportType = 0 /* TransportType.NotSet */;\r\n                var sendPostFunc = null;\r\n                var lp = 0;\r\n                while (sendPostFunc == null && lp < transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    transportType = transports[lp];\r\n                    if (!_disableXhr && transportType === 1 /* TransportType.Xhr */) {\r\n                        if (useXDomainRequest()) {\r\n                            // IE 8 and 9\r\n                            sendPostFunc = _xdrSender;\r\n                        }\r\n                        else if (isXhrSupported()) {\r\n                            sendPostFunc = _xhrSender;\r\n                        }\r\n                    }\r\n                    else if (transportType === 2 /* TransportType.Fetch */ && isFetchSupported(syncSupport) && (!syncSupport || !_disableFetchKeepAlive)) {\r\n                        sendPostFunc = _doFetchSender;\r\n                    }\r\n                    else if (transportType === 3 /* TransportType.Beacon */ && isBeaconsSupported() && (syncSupport ? !_disableBeaconSync : !_disableBeacon)) {\r\n                        sendPostFunc = _beaconSender;\r\n                    }\r\n                    lp++;\r\n                }\r\n                if (sendPostFunc) {\r\n                    return _a = {\r\n                            _transport: transportType,\r\n                            _isSync: syncSupport\r\n                        },\r\n                        _a[_DYN_SEND_POST /* @min:sendPOST */] = sendPostFunc,\r\n                        _a;\r\n                }\r\n                return null;\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete && oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doBeaconSend(payload, oncomplete) {\r\n                var nav = getNavigator();\r\n                var url = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!url) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    // return true here, because we don't want to retry it with fallback sender\r\n                    return true;\r\n                }\r\n                url = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                var plainTextBatch = _isOneDs ? data : new Blob([data], { type: \"text/plain;charset=UTF-8\" });\r\n                // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                var queued = nav.sendBeacon(url, plainTextBatch);\r\n                return queued;\r\n            }\r\n            /**\r\n             * Send Beacon API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - not used\r\n             * Note: Beacon API does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _beaconSender(payload, oncomplete, sync) {\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                try {\r\n                    if (data) {\r\n                        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                        if (!_doBeaconSend(payload, oncomplete)) {\r\n                            var onRetry = _onCompleteFuncs && _onCompleteFuncs.beaconOnRetry;\r\n                            if (onRetry && isFunction(onRetry)) {\r\n                                onRetry(payload, oncomplete, _doBeaconSend);\r\n                            }\r\n                            else {\r\n                                _fallbackInst && _fallbackInst[_DYN_SEND_POST /* @min:%2esendPOST */](payload, oncomplete, true);\r\n                                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // if can send\r\n                            _onSuccess(STR_EMPTY, oncomplete);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _isOneDs && _warnToConsole(_diagLog, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(e));\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, STR_EMPTY);\r\n                }\r\n                return;\r\n            }\r\n            /**\r\n             * Send XMLHttpRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             */\r\n            function _xhrSender(payload, oncomplete, sync) {\r\n                //let  internalPayload = payload as IInternalPayloadData;\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (_isOneDs && sync && payload.disableXhrSync) {\r\n                    sync = false;\r\n                }\r\n                //const xhr = new XMLHttpRequest();\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                var xhr = openXhr(STR_POST_METHOD, endPointUrl, _sendCredentials, true, sync, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                if (!_isOneDs) {\r\n                    // application/json should NOT add to 1ds post by default\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](\"Content-type\", \"application/json\");\r\n                }\r\n                arrForEach(objKeys(headers), function (headerName) {\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](headerName, headers[headerName]);\r\n                });\r\n                xhr.onreadystatechange = function () {\r\n                    if (!_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                        if (xhr.readyState === 4) {\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }\r\n                };\r\n                xhr.onload = function () {\r\n                    if (_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                    }\r\n                };\r\n                function _doOnReadyFunc(xhr) {\r\n                    var onReadyFunc = _onCompleteFuncs && _onCompleteFuncs.xhrOnComplete;\r\n                    var onReadyFuncExist = onReadyFunc && isFunction(onReadyFunc);\r\n                    if (onReadyFuncExist) {\r\n                        onReadyFunc(xhr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        var response = getResponseText(xhr);\r\n                        _doOnComplete(oncomplete, xhr[_DYN_STATUS /* @min:%2estatus */], _getAllResponseHeaders(xhr, _isOneDs), response);\r\n                    }\r\n                }\r\n                xhr.onerror = function (event) {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 400, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    rejectFunc && rejectFunc(event);\r\n                };\r\n                xhr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 500, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    resolveFunc && resolveFunc(false);\r\n                };\r\n                xhr.send(payload[_DYN_DATA /* @min:%2edata */]);\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send fetch API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - For fetch this identifies whether we are \"unloading\" (false) or a normal request\r\n             */\r\n            function _doFetchSender(payload, oncomplete, sync) {\r\n                var _a;\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                var batch = payload[_DYN_DATA /* @min:%2edata */];\r\n                var plainTextBatch = _isOneDs ? batch : new Blob([batch], { type: \"application/json\" });\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var requestHeaders = new Headers();\r\n                var batchLength = batch[_DYN_LENGTH /* @min:%2elength */];\r\n                var ignoreResponse = false;\r\n                var responseHandled = false;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                //TODO: handle time out for 1ds\r\n                var init = (_a = {\r\n                        method: STR_POST_METHOD,\r\n                        body: plainTextBatch\r\n                    },\r\n                    _a[DisabledPropertyName] = true // Mark so we don't attempt to track this request\r\n                ,\r\n                    _a);\r\n                // Only add headers if there are headers to add, due to issue with some polyfills\r\n                if (payload.headers && objKeys(payload.headers)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(objKeys(headers), function (headerName) {\r\n                        requestHeaders.append(headerName, headers[headerName]);\r\n                    });\r\n                    init[_DYN_HEADERS /* @min:%2eheaders */] = requestHeaders;\r\n                }\r\n                if (_fetchCredentials) { // if user passed in this value via post channel (1ds), then use it\r\n                    init.credentials = _fetchCredentials;\r\n                }\r\n                else if (_sendCredentials && _isOneDs) {\r\n                    // for 1ds, Don't send credentials when URL is file://\r\n                    init.credentials = \"include\";\r\n                }\r\n                if (sync) {\r\n                    init.keepalive = true;\r\n                    _syncFetchPayload += batchLength;\r\n                    if (_isOneDs) {\r\n                        if (payload[\"_sendReason\"] === 2 /* SendRequestReason.Unload */) {\r\n                            // As a sync request (during unload), it is unlikely that we will get a chance to process the response so\r\n                            // just like beacon send assume that the events have been accepted and processed\r\n                            ignoreResponse = true;\r\n                            if (_addNoResponse) {\r\n                                endPointUrl += _noResponseQs;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // for appinsights, set to true for all sync request\r\n                        ignoreResponse = true;\r\n                    }\r\n                }\r\n                var request = new Request(endPointUrl, init);\r\n                try {\r\n                    // Also try and tag the request (just in case the value in init is not copied over)\r\n                    request[DisabledPropertyName] = true;\r\n                }\r\n                catch (e) {\r\n                    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n                    // cause the request to fail and we no telemetry would be sent\r\n                }\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                function _handleError(res) {\r\n                    // In case there is an error in the request. Set the status to 0 for 1ds and 400 for appInsights\r\n                    // so that the events can be retried later.\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, _isOneDs ? STR_EMPTY : res);\r\n                }\r\n                function _onFetchComplete(response, payload, value) {\r\n                    var status = response[_DYN_STATUS /* @min:%2estatus */];\r\n                    var onCompleteFunc = _onCompleteFuncs.fetchOnComplete;\r\n                    if (onCompleteFunc && isFunction(onCompleteFunc)) {\r\n                        onCompleteFunc(response, oncomplete, value || STR_EMPTY, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, status, {}, value || STR_EMPTY);\r\n                    }\r\n                }\r\n                try {\r\n                    doAwaitResponse(fetch(_isOneDs ? endPointUrl : request, _isOneDs ? init : null), function (result) {\r\n                        if (sync) {\r\n                            _syncFetchPayload -= batchLength;\r\n                            batchLength = 0;\r\n                        }\r\n                        if (!responseHandled) {\r\n                            responseHandled = true;\r\n                            if (!result.rejected) {\r\n                                var response_1 = result[_DYN_VALUE /* @min:%2evalue */];\r\n                                try {\r\n                                    /**\r\n                                     * The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.\r\n                                     * Instead, it will resolve normally (with ok status set to false), and it will only reject on network failure\r\n                                     * or if anything prevented the request from completing.\r\n                                     */\r\n                                    if (!_isOneDs && !response_1.ok) {\r\n                                        // this is for appInsights only\r\n                                        _handleError(response_1.statusText);\r\n                                        resolveFunc && resolveFunc(false);\r\n                                    }\r\n                                    else {\r\n                                        if (_isOneDs && !response_1.body) {\r\n                                            _onFetchComplete(response_1, null, STR_EMPTY);\r\n                                            resolveFunc && resolveFunc(true);\r\n                                        }\r\n                                        else {\r\n                                            doAwaitResponse(response_1.text(), function (resp) {\r\n                                                _onFetchComplete(response_1, payload, resp[_DYN_VALUE /* @min:%2evalue */]);\r\n                                                resolveFunc && resolveFunc(true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e) {\r\n                                    _handleError(dumpObj(e));\r\n                                    rejectFunc && rejectFunc(e);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _handleError(result.reason && result.reason[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                rejectFunc && rejectFunc(result.reason);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    if (!responseHandled) {\r\n                        _handleError(dumpObj(e));\r\n                        rejectFunc && rejectFunc(e);\r\n                    }\r\n                }\r\n                if (ignoreResponse && !responseHandled) {\r\n                    // Assume success during unload processing as we most likely won't get the response\r\n                    responseHandled = true;\r\n                    _doOnComplete(oncomplete, 200, {});\r\n                    resolveFunc && resolveFunc(true);\r\n                }\r\n                if (_isOneDs && !responseHandled && payload[_DYN_TIMEOUT /* @min:%2etimeout */] > 0) {\r\n                    // Simulate timeout\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        if (!responseHandled) {\r\n                            // Assume a 500 response (which will cause a retry)\r\n                            responseHandled = true;\r\n                            _doOnComplete(oncomplete, 500, {});\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                }\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send XDomainRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             *\r\n             * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n             * to maintain consistency with the xhrSender's contract\r\n             * Note: XDomainRequest does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _xdrSender(payload, oncomplete, sync) {\r\n                // It doesn't support custom headers, so no action is taken with current requestHeaders\r\n                var _window = getWindow();\r\n                var xdr = new XDomainRequest();\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                xdr.onload = function () {\r\n                    var response = getResponseText(xdr);\r\n                    var onloadFunc = _onCompleteFuncs && _onCompleteFuncs.xdrOnComplete;\r\n                    if (onloadFunc && isFunction(onloadFunc)) {\r\n                        onloadFunc(xdr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, 200, {}, response);\r\n                    }\r\n                };\r\n                xdr.onerror = function () {\r\n                    _doOnComplete(oncomplete, 400, {}, _isOneDs ? STR_EMPTY : formatErrorMessageXdr(xdr));\r\n                };\r\n                xdr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, 500, {});\r\n                };\r\n                xdr.onprogress = function () { };\r\n                // XDomainRequest requires the same protocol as the hosting page.\r\n                // If the protocol doesn't match, we can't send the telemetry :(.\r\n                var hostingProtocol = _window && _window.location && _window.location[_DYN_PROTOCOL /* @min:%2eprotocol */] || \"\";\r\n                var endpoint = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endpoint) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    return;\r\n                }\r\n                if (!_isOneDs && endpoint.lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                    var msg = \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\";\r\n                    _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + msg);\r\n                    _onError(msg, oncomplete);\r\n                    return;\r\n                }\r\n                var endpointUrl = _isOneDs ? endpoint : endpoint[_DYN_REPLACE /* @min:%2ereplace */](/^(https?:)/, \"\");\r\n                xdr.open(STR_POST_METHOD, endpointUrl);\r\n                if (payload[_DYN_TIMEOUT /* @min:%2etimeout */]) {\r\n                    xdr[_DYN_TIMEOUT /* @min:%2etimeout */] = payload[_DYN_TIMEOUT /* @min:%2etimeout */];\r\n                }\r\n                xdr.send(data);\r\n                if (_isOneDs && sync) {\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        xdr.send(data);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    xdr.send(data);\r\n                }\r\n            }\r\n            function _initDefaults() {\r\n                _syncFetchPayload = 0;\r\n                _isInitialized = false;\r\n                _enableSendPromise = false;\r\n                _diagLog = null;\r\n                _isOneDs = null;\r\n                _onCompleteFuncs = null;\r\n                _disableCredentials = null;\r\n                _fetchCredentials = null;\r\n                _fallbackInst = null;\r\n                _disableXhr = false;\r\n                _disableBeacon = false;\r\n                _disableBeaconSync = false;\r\n                _disableFetchKeepAlive = false;\r\n                _addNoResponse = false;\r\n                _timeoutWrapper = null;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SenderPostManager.prototype.initialize.\r\n// Removed Stub for SenderPostManager.prototype.getSyncFetchPayload.\r\n// Removed Stub for SenderPostManager.prototype.SetConfig.\r\n// Removed Stub for SenderPostManager.prototype.getSenderInst.\r\n// Removed Stub for SenderPostManager.prototype.getFallbackInst.\r\n// Removed Stub for SenderPostManager.prototype._doTeardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    SenderPostManager.__ieDyn=1;\n\n    return SenderPostManager;\r\n}());\r\nexport { SenderPostManager };\r\n//# sourceMappingURL=SenderPostManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n//  @skip-file-minify\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\nexport var LoggingSeverity = createEnumStyle({\r\n    DISABLED: 0 /* eLoggingSeverity.DISABLED */,\r\n    CRITICAL: 1 /* eLoggingSeverity.CRITICAL */,\r\n    WARNING: 2 /* eLoggingSeverity.WARNING */,\r\n    DEBUG: 3 /* eLoggingSeverity.DEBUG */\r\n});\r\n//# sourceMappingURL=LoggingEnums.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strShimFunction, strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\nimport { getInst, objHasOwnProperty } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SPLICE } from \"../__DynamicConstants\";\r\nimport { _getObjProto } from \"./HelperFuncs\";\r\nvar aiInstrumentHooks = \"_aiHooks\";\r\nvar cbNames = [\r\n    \"req\", \"rsp\", \"hkErr\", \"fnErr\"\r\n];\r\n/** @ignore */\r\nfunction _arrLoop(arr, fn) {\r\n    if (arr) {\r\n        for (var lp = 0; lp < arr[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            if (fn(arr[lp], lp)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _doCallbacks(hooks, callDetails, cbArgs, hookCtx, type) {\r\n    if (type >= 0 /* CallbackType.Request */ && type <= 2 /* CallbackType.HookError */) {\r\n        _arrLoop(hooks, function (hook, idx) {\r\n            var cbks = hook.cbks;\r\n            var cb = cbks[cbNames[type]];\r\n            if (cb) {\r\n                // Set the specific hook context implementation using a lazy creation pattern\r\n                callDetails.ctx = function () {\r\n                    var ctx = hookCtx[idx] = (hookCtx[idx] || {});\r\n                    return ctx;\r\n                };\r\n                try {\r\n                    cb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                }\r\n                catch (err) {\r\n                    var orgEx = callDetails.err;\r\n                    try {\r\n                        // Report Hook error via the callback\r\n                        var hookErrorCb = cbks[cbNames[2 /* CallbackType.HookError */]];\r\n                        if (hookErrorCb) {\r\n                            callDetails.err = err;\r\n                            hookErrorCb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // Not much we can do here -- swallowing the exception to avoid crashing the hosting app\r\n                    }\r\n                    finally {\r\n                        // restore the original exception (if any)\r\n                        callDetails.err = orgEx;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _createFunctionHook(aiHook) {\r\n    // Define a temporary method that queues-up a the real method call\r\n    return function () {\r\n        var _a;\r\n        var funcThis = this;\r\n        // Capture the original arguments passed to the method\r\n        var orgArgs = arguments;\r\n        var hooks = aiHook.h;\r\n        var funcArgs = (_a = {},\r\n            _a[_DYN_NAME /* @min:name */] = aiHook.n,\r\n            _a.inst = funcThis,\r\n            _a.ctx = null,\r\n            _a.set = _replaceArg,\r\n            _a);\r\n        var hookCtx = [];\r\n        var cbArgs = _createArgs([funcArgs], orgArgs);\r\n        funcArgs.evt = getInst(\"event\");\r\n        function _createArgs(target, theArgs) {\r\n            _arrLoop(theArgs, function (arg) {\r\n                target[_DYN_PUSH /* @min:%2epush */](arg);\r\n            });\r\n            return target;\r\n        }\r\n        function _replaceArg(idx, value) {\r\n            orgArgs = _createArgs([], orgArgs);\r\n            orgArgs[idx] = value;\r\n            cbArgs = _createArgs([funcArgs], orgArgs);\r\n        }\r\n        // Call the pre-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 0 /* CallbackType.Request */);\r\n        // Call the original function was called\r\n        var theFunc = aiHook.f;\r\n        if (theFunc) {\r\n            try {\r\n                funcArgs.rslt = theFunc[_DYN_APPLY /* @min:%2eapply */](funcThis, orgArgs);\r\n            }\r\n            catch (err) {\r\n                // Report the request callback\r\n                funcArgs.err = err;\r\n                _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 3 /* CallbackType.FunctionError */);\r\n                // rethrow the original exception so anyone listening for it can catch the exception\r\n                throw err;\r\n            }\r\n        }\r\n        // Call the post-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 1 /* CallbackType.Response */);\r\n        return funcArgs.rslt;\r\n    };\r\n}\r\n/** @ignore */\r\nfunction _getOwner(target, name, checkPrototype, checkParentProto) {\r\n    var owner = null;\r\n    if (target) {\r\n        if (objHasOwnProperty(target, name)) {\r\n            owner = target;\r\n        }\r\n        else if (checkPrototype) {\r\n            owner = _getOwner(_getObjProto(target), name, checkParentProto, false);\r\n        }\r\n    }\r\n    return owner;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProto(target, funcName, callbacks) {\r\n    if (target) {\r\n        return InstrumentFunc(target[strShimPrototype], funcName, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProtos(target, funcNames, callbacks) {\r\n    if (target) {\r\n        return InstrumentFuncs(target[strShimPrototype], funcNames, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\nfunction _createInstrumentHook(owner, funcName, fn, callbacks) {\r\n    var aiHook = fn && fn[aiInstrumentHooks];\r\n    if (!aiHook) {\r\n        // Only hook the function once\r\n        aiHook = {\r\n            i: 0,\r\n            n: funcName,\r\n            f: fn,\r\n            h: []\r\n        };\r\n        // Override (hook) the original function\r\n        var newFunc = _createFunctionHook(aiHook);\r\n        newFunc[aiInstrumentHooks] = aiHook; // Tag and store the function hooks\r\n        owner[funcName] = newFunc;\r\n    }\r\n    var theHook = {\r\n        // tslint:disable:object-literal-shorthand\r\n        id: aiHook.i,\r\n        cbks: callbacks,\r\n        rm: function () {\r\n            // DO NOT Use () => { shorthand for the function as the this gets replaced\r\n            // with the outer this and not the this for theHook instance.\r\n            var id = this.id;\r\n            _arrLoop(aiHook.h, function (hook, idx) {\r\n                if (hook.id === id) {\r\n                    aiHook.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return 1;\r\n                }\r\n            });\r\n        }\r\n        // tslint:enable:object-literal-shorthand\r\n    };\r\n    aiHook.i++;\r\n    aiHook.h[_DYN_PUSH /* @min:%2epush */](theHook);\r\n    return theHook;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    if (target && funcName && callbacks) {\r\n        var owner = _getOwner(target, funcName, checkPrototype, checkParentProto);\r\n        if (owner) {\r\n            var fn = owner[funcName];\r\n            if (typeof fn === strShimFunction) {\r\n                return _createInstrumentHook(owner, funcName, fn, callbacks);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFuncs(target, funcNames, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    var hooks = null;\r\n    _arrLoop(funcNames, function (funcName) {\r\n        var hook = InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto);\r\n        if (hook) {\r\n            if (!hooks) {\r\n                hooks = [];\r\n            }\r\n            hooks[_DYN_PUSH /* @min:%2epush */](hook);\r\n        }\r\n    });\r\n    return hooks;\r\n}\r\n/**\r\n * Add an instrumentation hook to the provided named \"event\" for the target class / object, this doesn't check whether the\r\n * named \"event\" is in fact a function and just assigns the instrumentation hook to the target[evtName]\r\n * @param target - The target object\r\n * @param evtName - The name of the event\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentEvent(target, evtName, callbacks, checkPrototype, checkParentProto) {\r\n    if (target && evtName && callbacks) {\r\n        var owner = _getOwner(target, evtName, checkPrototype, checkParentProto) || target;\r\n        if (owner) {\r\n            return _createInstrumentHook(owner, evtName, owner[evtName], callbacks);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=InstrumentHooks.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nexport var RequestHeaders = createValueMap({\r\n    requestContextHeader: [0 /* eRequestHeaders.requestContextHeader */, \"Request-Context\"],\r\n    requestContextTargetKey: [1 /* eRequestHeaders.requestContextTargetKey */, \"appId\"],\r\n    requestContextAppIdFormat: [2 /* eRequestHeaders.requestContextAppIdFormat */, \"appId=cid-v1:\"],\r\n    requestIdHeader: [3 /* eRequestHeaders.requestIdHeader */, \"Request-Id\"],\r\n    traceParentHeader: [4 /* eRequestHeaders.traceParentHeader */, \"traceparent\"],\r\n    traceStateHeader: [5 /* eRequestHeaders.traceStateHeader */, \"tracestate\"],\r\n    sdkContextHeader: [6 /* eRequestHeaders.sdkContextHeader */, \"Sdk-Context\"],\r\n    sdkContextHeaderAppIdRequest: [7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */, \"appId\"],\r\n    requestContextHeaderLowerCase: [8 /* eRequestHeaders.requestContextHeaderLowerCase */, \"request-context\"]\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_LENGTH = \"length\"; // Count: 41\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 6\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 9\r\nexport var _DYN_PUSH = \"push\"; // Count: 5\r\nexport var _DYN_REMOVE_ITEM = \"removeItem\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 10\r\nexport var _DYN_COUNT = \"count\"; // Count: 8\r\nexport var _DYN_PRE_TRIGGER_DATE = \"preTriggerDate\"; // Count: 4\r\nexport var _DYN_DISABLED = \"disabled\"; // Count: 3\r\nexport var _DYN_INTERVAL = \"interval\"; // Count: 3\r\nexport var _DYN_DAYS_OF_MONTH = \"daysOfMonth\"; // Count: 3\r\nexport var _DYN_DATE = \"date\"; // Count: 5\r\nexport var _DYN_GET_UTCDATE = \"getUTCDate\"; // Count: 3\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 4\r\nexport var _DYN_CORRELATION_HEADER_E0 = \"correlationHeaderExcludePatterns\"; // Count: 2\r\nexport var _DYN_EXTENSION_CONFIG = \"extensionConfig\"; // Count: 4\r\nexport var _DYN_EXCEPTIONS = \"exceptions\"; // Count: 6\r\nexport var _DYN_PARSED_STACK = \"parsedStack\"; // Count: 13\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 9\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 9\r\nexport var _DYN_SIZE_IN_BYTES = \"sizeInBytes\"; // Count: 11\r\nexport var _DYN_TYPE_NAME = \"typeName\"; // Count: 11\r\nexport var _DYN_SEVERITY_LEVEL = \"severityLevel\"; // Count: 5\r\nexport var _DYN_PROBLEM_GROUP = \"problemGroup\"; // Count: 3\r\nexport var _DYN_IS_MANUAL = \"isManual\"; // Count: 3\r\nexport var _DYN__CREATE_FROM_INTERFA1 = \"CreateFromInterface\"; // Count: 2\r\nexport var _DYN_ASSEMBLY = \"assembly\"; // Count: 7\r\nexport var _DYN_FILE_NAME = \"fileName\"; // Count: 8\r\nexport var _DYN_HAS_FULL_STACK = \"hasFullStack\"; // Count: 6\r\nexport var _DYN_LEVEL = \"level\"; // Count: 5\r\nexport var _DYN_METHOD = \"method\"; // Count: 7\r\nexport var _DYN_LINE = \"line\"; // Count: 6\r\nexport var _DYN_DURATION = \"duration\"; // Count: 4\r\nexport var _DYN_RECEIVED_RESPONSE = \"receivedResponse\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, getJSON, hasJSON, isObject, objForEachKey, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { asString, strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_STRINGIFY, _DYN_TO_STRING } from \"../../__DynamicConstants\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key[_DYN_LENGTH /* @min:%2elength */];\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field[_DYN_LENGTH /* @min:%2elength */] !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = strSubstring(field, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(asString(name));\r\n        // truncate the string to 150 chars\r\n        if (name[_DYN_LENGTH /* @min:%2elength */] > 150 /* DataSanitizerValues.MAX_NAME_LENGTH */) {\r\n            nameTrunc = strSubstring(name, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 57 /* _eInternalMessageId.NameTooLong */, \"name is too long.  It has been truncated to \" + 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(asString(value));\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            valueTrunc = strSubstring(value, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 61 /* _eInternalMessageId.StringValueTooLong */, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* DataSanitizerValues.MAX_URL_LENGTH */, 66 /* _eInternalMessageId.UrlTooLong */);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = strSubstring(message, 0, 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 56 /* _eInternalMessageId.MessageTruncated */, \"message is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = strSubstring(value, 0, 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 52 /* _eInternalMessageId.ExceptionTruncated */, \"exception is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* DataSanitizerValues.MAX_ID_LENGTH */, 69 /* _eInternalMessageId.IdTooLong */)[_DYN_TO_STRING /* @min:%2etoString */]() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(asString(input));\r\n        if (input[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            inputTrunc = strSubstring(input, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return strSubstr(s, s[_DYN_LENGTH /* @min:%2elength */] - 3);\r\n}\r\n//# sourceMappingURL=DataSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PATHNAME, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _document = getDocument() || {};\r\nvar _htmlAnchorIdx = 0;\r\n// Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\nvar _htmlAnchorElement = [null, null, null, null, null];\r\nexport function urlParseUrl(url) {\r\n    var anchorIdx = _htmlAnchorIdx;\r\n    var anchorCache = _htmlAnchorElement;\r\n    var tempAnchor = anchorCache[anchorIdx];\r\n    if (!_document.createElement) {\r\n        // Always create the temp instance if createElement is not available\r\n        tempAnchor = { host: urlParseHost(url, true) };\r\n    }\r\n    else if (!anchorCache[anchorIdx]) {\r\n        // Create and cache the unattached anchor instance\r\n        tempAnchor = anchorCache[anchorIdx] = _document.createElement(\"a\");\r\n    }\r\n    tempAnchor.href = url;\r\n    // Move the cache index forward\r\n    anchorIdx++;\r\n    if (anchorIdx >= anchorCache[_DYN_LENGTH /* @min:%2elength */]) {\r\n        anchorIdx = 0;\r\n    }\r\n    _htmlAnchorIdx = anchorIdx;\r\n    return tempAnchor;\r\n}\r\nexport function urlGetAbsoluteUrl(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a.href;\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetPathName(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a[_DYN_PATHNAME /* @min:%2epathname */];\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetCompleteUrl(method, absoluteUrl) {\r\n    if (method) {\r\n        return method.toUpperCase() + \" \" + absoluteUrl;\r\n    }\r\n    return absoluteUrl;\r\n}\r\n// Fallback method to grab host from url if document.createElement method is not available\r\nexport function urlParseHost(url, inclPort) {\r\n    var fullHost = urlParseFullHost(url, inclPort) || \"\";\r\n    if (fullHost) {\r\n        var match = fullHost.match(/(www\\d{0,5}\\.)?([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 3 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            return match[2] + (match[3] || \"\");\r\n        }\r\n    }\r\n    return fullHost;\r\n}\r\nexport function urlParseFullHost(url, inclPort) {\r\n    var result = null;\r\n    if (url) {\r\n        var match = url.match(/(\\w{1,150}):\\/\\/([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 2 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            result = match[2] || \"\";\r\n            if (inclPort && match[_DYN_LENGTH /* @min:%2elength */] > 2) {\r\n                var protocol = (match[1] || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                var port = match[3] || \"\";\r\n                // IE includes the standard port so pass it off if it's the same as the protocol\r\n                if (protocol === \"http\" && port === \":80\") {\r\n                    port = \"\";\r\n                }\r\n                else if (protocol === \"https\" && port === \":443\") {\r\n                    port = \"\";\r\n                }\r\n                result += port;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=UrlHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dateNow, getPerformance, isNullOrUndefined, isValidSpanId, isValidTraceId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH } from \"./Constants\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { urlParseFullHost, urlParseUrl } from \"./UrlHelperFuncs\";\r\nimport { _DYN_CORRELATION_HEADER_E0, _DYN_LENGTH, _DYN_NAME, _DYN_PATHNAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\n// listing only non-geo specific locations\r\nvar _internalEndpoints = [\r\n    DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH,\r\n    \"https://breeze.aimon.applicationinsights.io\" + DEFAULT_BREEZE_PATH,\r\n    \"https://dc-int.services.visualstudio.com\" + DEFAULT_BREEZE_PATH\r\n];\r\nvar _correlationIdPrefix = \"cid-v1:\";\r\nexport function isInternalApplicationInsightsEndpoint(endpointUrl) {\r\n    return arrIndexOf(_internalEndpoints, endpointUrl[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) !== -1;\r\n}\r\nexport function correlationIdSetPrefix(prefix) {\r\n    _correlationIdPrefix = prefix;\r\n}\r\nexport function correlationIdGetPrefix() {\r\n    return _correlationIdPrefix;\r\n}\r\n/**\r\n * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n */\r\nexport function correlationIdCanIncludeCorrelationHeader(config, requestUrl, currentHost) {\r\n    if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n        return false;\r\n    }\r\n    if (config && config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */]) {\r\n        for (var i = 0; i < config.correlationHeaderExcludePatterns[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */][i].test(requestUrl)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    var requestHost = urlParseUrl(requestUrl).host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    if (requestHost && (strIndexOf(requestHost, \":443\") !== -1 || strIndexOf(requestHost, \":80\") !== -1)) {\r\n        // [Bug #1260] IE can include the port even for http and https URLs so if present\r\n        // try and parse it to remove if it matches the default protocol port\r\n        requestHost = (urlParseFullHost(requestUrl, true) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    }\r\n    if ((!config || !config.enableCorsCorrelation) && (requestHost && requestHost !== currentHost)) {\r\n        return false;\r\n    }\r\n    var includedDomains = config && config.correlationHeaderDomains;\r\n    if (includedDomains) {\r\n        var matchExists_1;\r\n        arrForEach(includedDomains, function (domain) {\r\n            var regex = new RegExp(domain.toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n            matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n        });\r\n        if (!matchExists_1) {\r\n            return false;\r\n        }\r\n    }\r\n    var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n    if (!excludedDomains || excludedDomains[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < excludedDomains[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n        if (regex.test(requestHost)) {\r\n            return false;\r\n        }\r\n    }\r\n    // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n    // Previously we always returned false for a falsy requestHost\r\n    return requestHost && requestHost[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\n/**\r\n * Combines target appId and target role name from response header.\r\n */\r\nexport function correlationIdGetCorrelationContext(responseHeader) {\r\n    if (responseHeader) {\r\n        var correlationId = correlationIdGetCorrelationContextValue(responseHeader, RequestHeaders[1 /* eRequestHeaders.requestContextTargetKey */]);\r\n        if (correlationId && correlationId !== _correlationIdPrefix) {\r\n            return correlationId;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets key from correlation response header\r\n */\r\nexport function correlationIdGetCorrelationContextValue(responseHeader, key) {\r\n    if (responseHeader) {\r\n        var keyValues = responseHeader[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        for (var i = 0; i < keyValues[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            var keyValue = keyValues[i][_DYN_SPLIT /* @min:%2esplit */](\"=\");\r\n            if (keyValue[_DYN_LENGTH /* @min:%2elength */] === 2 && keyValue[0] === key) {\r\n                return keyValue[1];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {\r\n    var target, name = commandName, data = commandName;\r\n    if (absoluteUrl && absoluteUrl[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        var parsedUrl = urlParseUrl(absoluteUrl);\r\n        target = parsedUrl.host;\r\n        if (!name) {\r\n            if (parsedUrl[_DYN_PATHNAME /* @min:%2epathname */] != null) {\r\n                var pathName = (parsedUrl.pathname[_DYN_LENGTH /* @min:%2elength */] === 0) ? \"/\" : parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                if (pathName.charAt(0) !== \"/\") {\r\n                    pathName = \"/\" + pathName;\r\n                }\r\n                data = parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                name = dataSanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n            }\r\n            else {\r\n                name = dataSanitizeString(logger, absoluteUrl);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        target = commandName;\r\n        name = commandName;\r\n    }\r\n    return {\r\n        target: target,\r\n        name: name,\r\n        data: data\r\n    };\r\n}\r\nexport function dateTimeUtilsNow() {\r\n    // returns the window or webworker performance object\r\n    var perf = getPerformance();\r\n    if (perf && perf.now && perf.timing) {\r\n        var now = perf.now() + perf.timing.navigationStart;\r\n        // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n        if (now > 0) {\r\n            return now;\r\n        }\r\n    }\r\n    return dateNow();\r\n}\r\nexport function dateTimeUtilsDuration(start, end) {\r\n    var result = null;\r\n    if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {\r\n        result = end - start;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param telemetryTrace - The telemetryTrace instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the telemetryTrace or temporary object\r\n */\r\nexport function createDistributedTraceContextFromTrace(telemetryTrace, parentCtx) {\r\n    var trace = telemetryTrace || {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceID;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceID = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentID;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentID = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Util.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\nexport var StorageType = createEnumStyle({\r\n    LocalStorage: 0 /* eStorageType.LocalStorage */,\r\n    SessionStorage: 1 /* eStorageType.SessionStorage */\r\n});\r\nexport var DistributedTracingModes = createEnumStyle({\r\n    AI: 0 /* eDistributedTracingModes.AI */,\r\n    AI_AND_W3C: 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    W3C: 2 /* eDistributedTracingModes.W3C */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nimport { _DYN_PUSH, _DYN_REMOVE_ITEM, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\nvar _storagePrefix = \"\";\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType - Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = (new Date)[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        var name_1 = _storagePrefix + uid;\r\n        storage.setItem(name_1, uid);\r\n        var fail = storage.getItem(name_1) !== uid;\r\n        storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name_1);\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Disables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\nexport function utlSetStoragePrefix(storagePrefix) {\r\n    _storagePrefix = storagePrefix || \"\";\r\n}\r\n/**\r\n * Re-enables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlEnableStorage() {\r\n    _canUseLocalStorage = utlCanUseLocalStorage(true);\r\n    _canUseSessionStorage = utlCanUseSessionStorage(true);\r\n}\r\n/**\r\n * Returns whether LocalStorage can be used, if the reset parameter is passed a true this will override\r\n * any previous disable calls.\r\n * @param reset - Should the usage be reset and determined only based on whether LocalStorage is available\r\n */\r\nexport function utlCanUseLocalStorage(reset) {\r\n    if (reset || _canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 1 /* _eInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 3 /* _eInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 5 /* _eInternalMessageId.BrowserFailedRemovalFromLocalStorage */, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage(reset) {\r\n    if (reset || _canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys[_DYN_PUSH /* @min:%2epush */](key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 2 /* _eInternalMessageId.BrowserCannotReadSessionStorage */, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 4 /* _eInternalMessageId.BrowserCannotWriteSessionStorage */, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 6 /* _eInternalMessageId.BrowserFailedRemovalFromSessionStorage */, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { _throwInternal, arrIndexOf, isNotNullOrUndefined, isNullOrUndefined, onConfigChange, randomValue, safeGetLogger, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { arrForEach, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage } from \"./StorageHelperFuncs\";\r\nimport { _DYN_COUNT, _DYN_DATE, _DYN_DAYS_OF_MONTH, _DYN_DISABLED, _DYN_GET_UTCDATE, _DYN_INTERVAL, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PRE_TRIGGER_DATE, _DYN_PUSH, _DYN_STRINGIFY } from \"./__DynamicConstants\";\r\nvar THROTTLE_STORAGE_PREFIX = \"appInsightsThrottle\";\r\nvar ThrottleMgr = /** @class */ (function () {\r\n    function ThrottleMgr(core, namePrefix) {\r\n        var _self = this;\r\n        var _canUseLocalStorage;\r\n        var _logger;\r\n        var _config;\r\n        var _localStorageObj;\r\n        var _isTriggered; //_isTriggered is to make sure that we only trigger throttle once a day\r\n        var _namePrefix;\r\n        var _queue;\r\n        var _isReady = false;\r\n        var _isSpecificDaysGiven = false;\r\n        _initConfig();\r\n        // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n        _self[\"_getDbgPlgTargets\"] = function () {\r\n            return [_queue];\r\n        };\r\n        _self.getConfig = function () {\r\n            return _config;\r\n        };\r\n        /**\r\n         * Check if it is the correct day to send message.\r\n         * If _isTriggered is true, even if canThrottle returns true, message will not be sent,\r\n         * because we only allow triggering sendMessage() once a day.\r\n         * @returns if the current date is the valid date to send message\r\n         */\r\n        _self.canThrottle = function (msgId) {\r\n            var localObj = _getLocalStorageObjByKey(msgId);\r\n            var cfg = _getCfgByKey(msgId);\r\n            return _canThrottle(cfg, _canUseLocalStorage, localObj);\r\n        };\r\n        /**\r\n         * Check if throttle is triggered on current day(UTC)\r\n         * if canThrottle returns false, isTriggered will return false\r\n         * @returns if throttle is triggered on current day(UTC)\r\n         */\r\n        _self.isTriggered = function (msgId) {\r\n            return _isTrigger(msgId);\r\n        };\r\n        /**\r\n         * Before isReady set to true, all message will be stored in queue.\r\n         * Message will only be sent out after isReady set to true.\r\n         * Initial and default value: false\r\n         * @returns isReady state\r\n         */\r\n        _self.isReady = function () {\r\n            return _isReady;\r\n        };\r\n        /**\r\n         * Flush all message with given message key in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flush = function (msgId) {\r\n            try {\r\n                var queue = _getQueueByKey(msgId);\r\n                if (queue && queue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var items = queue.slice(0);\r\n                    _queue[msgId] = [];\r\n                    arrForEach(items, function (item) {\r\n                        _flushMessage(item.msgID, item[_DYN_MESSAGE /* @min:%2emessage */], item.severity, false);\r\n                    });\r\n                    return true;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Flush all message in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flushAll = function () {\r\n            try {\r\n                if (_queue) {\r\n                    var result_1 = true;\r\n                    objForEachKey(_queue, function (key) {\r\n                        var isFlushed = _self.flush(parseInt(key));\r\n                        result_1 = result_1 && isFlushed;\r\n                    });\r\n                    return result_1;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Set isReady State\r\n         * if isReady set to true, message queue will be flushed automatically.\r\n         * @param isReady isReady State\r\n         * @pa\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.onReadyState = function (isReady, flushAll) {\r\n            if (flushAll === void 0) { flushAll = true; }\r\n            _isReady = isNullOrUndefined(isReady) ? true : isReady;\r\n            if (_isReady && flushAll) {\r\n                return _self.flushAll();\r\n            }\r\n            return null;\r\n        };\r\n        _self.sendMessage = function (msgID, message, severity) {\r\n            return _flushMessage(msgID, message, severity, true);\r\n        };\r\n        function _flushMessage(msgID, message, severity, saveUnsentMsg) {\r\n            if (_isReady) {\r\n                var isSampledIn = _canSampledIn(msgID);\r\n                if (!isSampledIn) {\r\n                    return;\r\n                }\r\n                var cfg = _getCfgByKey(msgID);\r\n                var localStorageObj = _getLocalStorageObjByKey(msgID);\r\n                var canThrottle = _canThrottle(cfg, _canUseLocalStorage, localStorageObj);\r\n                var throttled = false;\r\n                var number = 0;\r\n                var isTriggered = _isTrigger(msgID);\r\n                try {\r\n                    if (canThrottle && !isTriggered) {\r\n                        number = Math.min(cfg.limit.maxSendNumber, localStorageObj[_DYN_COUNT /* @min:%2ecount */] + 1);\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] = 0;\r\n                        throttled = true;\r\n                        _isTriggered[msgID] = true;\r\n                        localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */] = new Date();\r\n                    }\r\n                    else {\r\n                        _isTriggered[msgID] = canThrottle;\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] += 1;\r\n                    }\r\n                    var localStorageName = _getLocalStorageName(msgID);\r\n                    _resetLocalStorage(_logger, localStorageName, localStorageObj);\r\n                    for (var i = 0; i < number; i++) {\r\n                        _sendMessage(msgID, _logger, message, severity);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return {\r\n                    isThrottled: throttled,\r\n                    throttleNum: number\r\n                };\r\n            }\r\n            else {\r\n                if (!!saveUnsentMsg) {\r\n                    var queue = _getQueueByKey(msgID);\r\n                    queue[_DYN_PUSH /* @min:%2epush */]({\r\n                        msgID: msgID,\r\n                        message: message,\r\n                        severity: severity\r\n                    });\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        function _initConfig() {\r\n            _logger = safeGetLogger(core);\r\n            _isTriggered = {};\r\n            _localStorageObj = {};\r\n            _queue = {};\r\n            _config = {};\r\n            _setCfgByKey(109 /* _eInternalMessageId.DefaultThrottleMsgKey */);\r\n            _namePrefix = isNotNullOrUndefined(namePrefix) ? namePrefix : \"\";\r\n            core.addUnloadHook(onConfigChange(core.config, function (details) {\r\n                var coreConfig = details.cfg;\r\n                _canUseLocalStorage = utlCanUseLocalStorage();\r\n                var configMgr = coreConfig.throttleMgrCfg || {};\r\n                objForEachKey(configMgr, function (key, cfg) {\r\n                    _setCfgByKey(parseInt(key), cfg);\r\n                });\r\n            }));\r\n        }\r\n        function _getCfgByKey(msgID) {\r\n            return _config[msgID] || _config[109 /* _eInternalMessageId.DefaultThrottleMsgKey */];\r\n        }\r\n        function _setCfgByKey(msgID, config) {\r\n            var _a, _b;\r\n            try {\r\n                var cfg = config || {};\r\n                var curCfg = {};\r\n                curCfg[_DYN_DISABLED /* @min:%2edisabled */] = !!cfg[_DYN_DISABLED /* @min:%2edisabled */];\r\n                var configInterval = cfg[_DYN_INTERVAL /* @min:%2einterval */] || {};\r\n                _isSpecificDaysGiven = (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth) && (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth[_DYN_LENGTH /* @min:%2elength */]) > 0;\r\n                curCfg[_DYN_INTERVAL /* @min:%2einterval */] = _getIntervalConfig(configInterval);\r\n                var limit = {\r\n                    samplingRate: ((_a = cfg.limit) === null || _a === void 0 ? void 0 : _a.samplingRate) || 100,\r\n                    // dafault: every time sent only 1 event\r\n                    maxSendNumber: ((_b = cfg.limit) === null || _b === void 0 ? void 0 : _b.maxSendNumber) || 1\r\n                };\r\n                curCfg.limit = limit;\r\n                _config[msgID] = curCfg;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n        }\r\n        function _getIntervalConfig(interval) {\r\n            interval = interval || {};\r\n            var monthInterval = interval === null || interval === void 0 ? void 0 : interval.monthInterval;\r\n            var dayInterval = interval === null || interval === void 0 ? void 0 : interval.dayInterval;\r\n            // default: send data every 3 month each year\r\n            if (isNullOrUndefined(monthInterval) && isNullOrUndefined(dayInterval)) {\r\n                interval.monthInterval = 3;\r\n                if (!_isSpecificDaysGiven) {\r\n                    // default: send data on 28th\r\n                    interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */] = [28];\r\n                    _isSpecificDaysGiven = true;\r\n                }\r\n            }\r\n            interval = {\r\n                // dafault: sent every three months\r\n                monthInterval: interval === null || interval === void 0 ? void 0 : interval.monthInterval,\r\n                dayInterval: interval === null || interval === void 0 ? void 0 : interval.dayInterval,\r\n                daysOfMonth: interval === null || interval === void 0 ? void 0 : interval.daysOfMonth\r\n            };\r\n            return interval;\r\n        }\r\n        function _canThrottle(config, canUseLocalStorage, localStorageObj) {\r\n            if (config && !config[_DYN_DISABLED /* @min:%2edisabled */] && canUseLocalStorage && isNotNullOrUndefined(localStorageObj)) {\r\n                var curDate = _getThrottleDate();\r\n                var date = localStorageObj[_DYN_DATE /* @min:%2edate */];\r\n                var interval = config[_DYN_INTERVAL /* @min:%2einterval */];\r\n                var monthCheck = 1;\r\n                if (interval === null || interval === void 0 ? void 0 : interval.monthInterval) {\r\n                    var monthExpand = (curDate.getUTCFullYear() - date.getUTCFullYear()) * 12 + curDate.getUTCMonth() - date.getUTCMonth();\r\n                    monthCheck = _checkInterval(interval.monthInterval, 0, monthExpand);\r\n                }\r\n                var dayCheck = 1;\r\n                if (_isSpecificDaysGiven) {\r\n                    dayCheck = arrIndexOf(interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */], curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]());\r\n                }\r\n                else if (interval === null || interval === void 0 ? void 0 : interval.dayInterval) {\r\n                    var daySpan = Math.floor((curDate.getTime() - date.getTime()) / 86400000);\r\n                    dayCheck = _checkInterval(interval.dayInterval, 0, daySpan);\r\n                }\r\n                return monthCheck >= 0 && dayCheck >= 0;\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageName(msgKey, prefix) {\r\n            var fix = isNotNullOrUndefined(prefix) ? prefix : \"\";\r\n            if (msgKey) {\r\n                return THROTTLE_STORAGE_PREFIX + fix + \"-\" + msgKey;\r\n            }\r\n            return null;\r\n        }\r\n        // returns if throttle is triggered on current Date\r\n        function _isTriggeredOnCurDate(preTriggerDate) {\r\n            try {\r\n                if (preTriggerDate) {\r\n                    var curDate = new Date();\r\n                    return preTriggerDate.getUTCFullYear() === curDate.getUTCFullYear() &&\r\n                        preTriggerDate.getUTCMonth() === curDate.getUTCMonth() &&\r\n                        preTriggerDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]() === curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        // transfer local storage string value to object that identifies start date, current count and preTriggerDate\r\n        function _getLocalStorageObj(value, logger, storageName) {\r\n            try {\r\n                var storageObj = {\r\n                    date: _getThrottleDate(),\r\n                    count: 0\r\n                };\r\n                if (value) {\r\n                    var obj = JSON.parse(value);\r\n                    var curObj = {\r\n                        date: _getThrottleDate(obj[_DYN_DATE /* @min:%2edate */]) || storageObj[_DYN_DATE /* @min:%2edate */],\r\n                        count: obj[_DYN_COUNT /* @min:%2ecount */] || storageObj[_DYN_COUNT /* @min:%2ecount */],\r\n                        preTriggerDate: obj.preTriggerDate ? _getThrottleDate(obj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]) : undefined\r\n                    };\r\n                    return curObj;\r\n                }\r\n                else {\r\n                    _resetLocalStorage(logger, storageName, storageObj);\r\n                    return storageObj;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        // if datestr is not defined, current date will be returned\r\n        function _getThrottleDate(dateStr) {\r\n            // if new Date() can't be created through the provided dateStr, null will be returned.\r\n            try {\r\n                if (dateStr) {\r\n                    var date = new Date(dateStr);\r\n                    //make sure it is a valid Date Object\r\n                    if (!isNaN(date.getDate())) {\r\n                        return date;\r\n                    }\r\n                }\r\n                else {\r\n                    return new Date();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _resetLocalStorage(logger, storageName, obj) {\r\n            try {\r\n                return utlSetLocalStorage(logger, storageName, strTrim(JSON[_DYN_STRINGIFY /* @min:%2estringify */](obj)));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _checkInterval(interval, start, current) {\r\n            if (interval <= 0) {\r\n                return 1;\r\n            }\r\n            // count from start year\r\n            return (current >= start) && (current - start) % interval == 0 ? Math.floor((current - start) / interval) + 1 : -1;\r\n        }\r\n        function _sendMessage(msgID, logger, message, severity) {\r\n            _throwInternal(logger, severity || 1 /* eLoggingSeverity.CRITICAL */, msgID, message);\r\n        }\r\n        // NOTE: config.limit.samplingRate is set to 4 decimal places,\r\n        // so config.limit.samplingRate = 1 means 0.0001%\r\n        function _canSampledIn(msgID) {\r\n            try {\r\n                var cfg = _getCfgByKey(msgID);\r\n                return randomValue(1000000) <= cfg.limit.samplingRate;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageObjByKey(key) {\r\n            try {\r\n                var curObj = _localStorageObj[key];\r\n                if (!curObj) {\r\n                    var localStorageName = _getLocalStorageName(key, _namePrefix);\r\n                    curObj = _getLocalStorageObj(utlGetLocalStorage(_logger, localStorageName), _logger, localStorageName);\r\n                    _localStorageObj[key] = curObj;\r\n                }\r\n                return _localStorageObj[key];\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _isTrigger(key) {\r\n            var isTrigger = _isTriggered[key];\r\n            if (isNullOrUndefined(isTrigger)) {\r\n                isTrigger = false;\r\n                var localStorageObj = _getLocalStorageObjByKey(key);\r\n                if (localStorageObj) {\r\n                    isTrigger = _isTriggeredOnCurDate(localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]);\r\n                }\r\n                _isTriggered[key] = isTrigger;\r\n            }\r\n            return _isTriggered[key];\r\n        }\r\n        function _getQueueByKey(key) {\r\n            _queue = _queue || {};\r\n            if (isNullOrUndefined(_queue[key])) {\r\n                _queue[key] = [];\r\n            }\r\n            return _queue[key];\r\n        }\r\n    }\r\n    return ThrottleMgr;\r\n}());\r\nexport { ThrottleMgr };\r\n//# sourceMappingURL=ThrottleMgr.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrReduce, objKeys, strEndsWith } from \"@microsoft/applicationinsights-core-js\";\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { _DYN_INGESTIONENDPOINT, _DYN_LENGTH, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _FIELDS_SEPARATOR = \";\";\r\nvar _FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\nexport function parseConnectionString(connectionString) {\r\n    if (!connectionString) {\r\n        return {};\r\n    }\r\n    var kvPairs = connectionString[_DYN_SPLIT /* @min:%2esplit */](_FIELDS_SEPARATOR);\r\n    var result = arrReduce(kvPairs, function (fields, kv) {\r\n        var kvParts = kv[_DYN_SPLIT /* @min:%2esplit */](_FIELD_KEY_VALUE_SEPARATOR);\r\n        if (kvParts[_DYN_LENGTH /* @min:%2elength */] === 2) { // only save fields with valid formats\r\n            var key = kvParts[0][_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            var value = kvParts[1];\r\n            fields[key] = value;\r\n        }\r\n        return fields;\r\n    }, {});\r\n    if (objKeys(result)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // this is a valid connection string, so parse the results\r\n        if (result.endpointsuffix) {\r\n            // apply the default endpoints\r\n            var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n        }\r\n        // apply user override endpoint or the default endpoints\r\n        result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || DEFAULT_BREEZE_ENDPOINT;\r\n        if (strEndsWith(result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */], \"/\")) {\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */].slice(0, -1);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport var ConnectionStringParser = {\r\n    parse: parseConnectionString\r\n};\r\n//# sourceMappingURL=ConnectionStringParser.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strNotSpecified } from \"../../Constants\";\r\nimport { _DYN_NAME } from \"../../__DynamicConstants\";\r\nimport { dataSanitizeString } from \"./DataSanitizer\";\r\nvar Envelope = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = this;\r\n        var _self = this;\r\n        _self.ver = 1;\r\n        _self.sampleRate = 100.0;\r\n        _self.tags = {};\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self.data = data;\r\n        _self.time = toISOString(new Date());\r\n        _self.aiDataContract = {\r\n            time: 1 /* FieldType.Required */,\r\n            iKey: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? 4 /* FieldType.Hidden */ : 1 /* FieldType.Required */;\r\n            },\r\n            tags: 1 /* FieldType.Required */,\r\n            data: 1 /* FieldType.Required */\r\n        };\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}());\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, arrMap, isArray, isError, isFunction, isNullOrUndefined, isObject, isString, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getWindow, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_ASSEMBLY, _DYN_EXCEPTIONS, _DYN_FILE_NAME, _DYN_HAS_FULL_STACK, _DYN_IS_MANUAL, _DYN_LENGTH, _DYN_LEVEL, _DYN_LINE, _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_METHOD, _DYN_NAME, _DYN_PARSED_STACK, _DYN_PROBLEM_GROUP, _DYN_PROPERTIES, _DYN_PUSH, _DYN_SEVERITY_LEVEL, _DYN_SIZE_IN_BYTES, _DYN_SPLIT, _DYN_STRINGIFY, _DYN_TO_STRING, _DYN_TYPE_NAME, _DYN__CREATE_FROM_INTERFA1 } from \"../__DynamicConstants\";\r\nimport { dataSanitizeException, dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar NoMethod = \"<no_method>\";\r\nvar strError = \"error\";\r\nvar strStack = \"stack\";\r\nvar strStackDetails = \"stackDetails\";\r\nvar strErrorSrc = \"errorSrc\";\r\nvar strMessage = \"message\";\r\nvar strDescription = \"description\";\r\nfunction _stringify(value, convertToString) {\r\n    var result = value;\r\n    if (result && !isString(result)) {\r\n        if (JSON && JSON[_DYN_STRINGIFY /* @min:%2estringify */]) {\r\n            result = JSON[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            if (convertToString && (!result || result === \"{}\")) {\r\n                if (isFunction(value[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n                    result = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                }\r\n                else {\r\n                    result = \"\" + value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = \"\" + value + \" - (Missing JSON.stringify)\";\r\n        }\r\n    }\r\n    return result || \"\";\r\n}\r\nfunction _formatMessage(theEvent, errorType) {\r\n    var evtMessage = theEvent;\r\n    if (theEvent) {\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;\r\n        }\r\n        // Make sure the message is a string\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            // tslint:disable-next-line: prefer-conditional-expression\r\n            evtMessage = _stringify(evtMessage, true);\r\n        }\r\n        if (theEvent[\"filename\"]) {\r\n            // Looks like an event object with filename\r\n            evtMessage = evtMessage + \" @\" + (theEvent[\"filename\"] || \"\") + \":\" + (theEvent[\"lineno\"] || \"?\") + \":\" + (theEvent[\"colno\"] || \"?\");\r\n        }\r\n    }\r\n    // Automatically add the error type to the message if it does already appear to be present\r\n    if (errorType && errorType !== \"String\" && errorType !== \"Object\" && errorType !== \"Error\" && strIndexOf(evtMessage || \"\", errorType) === -1) {\r\n        evtMessage = errorType + \": \" + evtMessage;\r\n    }\r\n    return evtMessage || \"\";\r\n}\r\nfunction _isExceptionDetailsInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return \"hasFullStack\" in value && \"typeName\" in value;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isStackDetails(details) {\r\n    return details && details.src && isString(details.src) && details.obj && isArray(details.obj);\r\n}\r\nfunction _convertStackObj(errorStack) {\r\n    var src = errorStack || \"\";\r\n    if (!isString(src)) {\r\n        if (isString(src[strStack])) {\r\n            src = src[strStack];\r\n        }\r\n        else {\r\n            src = \"\" + src;\r\n        }\r\n    }\r\n    var items = src[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    return {\r\n        src: src,\r\n        obj: items\r\n    };\r\n}\r\nfunction _getOperaStack(errorMessage) {\r\n    var stack = [];\r\n    var lines = errorMessage[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    for (var lp = 0; lp < lines[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        var entry = lines[lp];\r\n        if (lines[lp + 1]) {\r\n            entry += \"@\" + lines[lp + 1];\r\n            lp++;\r\n        }\r\n        stack[_DYN_PUSH /* @min:%2epush */](entry);\r\n    }\r\n    return {\r\n        src: errorMessage,\r\n        obj: stack\r\n    };\r\n}\r\nfunction _getStackFromErrorObj(errorObj) {\r\n    var details = null;\r\n    if (errorObj) {\r\n        try {\r\n            /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot\r\n            notation for undefined objects and we don't want to loose the error from being reported */\r\n            if (errorObj[strStack]) {\r\n                // Chrome/Firefox\r\n                details = _convertStackObj(errorObj[strStack]);\r\n            }\r\n            else if (errorObj[strError] && errorObj[strError][strStack]) {\r\n                // Edge error event provides the stack and error object\r\n                details = _convertStackObj(errorObj[strError][strStack]);\r\n            }\r\n            else if (errorObj[\"exception\"] && errorObj.exception[strStack]) {\r\n                details = _convertStackObj(errorObj.exception[strStack]);\r\n            }\r\n            else if (_isStackDetails(errorObj)) {\r\n                details = errorObj;\r\n            }\r\n            else if (_isStackDetails(errorObj[strStackDetails])) {\r\n                details = errorObj[strStackDetails];\r\n            }\r\n            else if (getWindow() && getWindow()[\"opera\"] && errorObj[strMessage]) {\r\n                // Opera\r\n                details = _getOperaStack(errorObj[_DYN_MESSAGE /* @min:%2emessage */]);\r\n            }\r\n            else if (errorObj[\"reason\"] && errorObj.reason[strStack]) {\r\n                // UnhandledPromiseRejection\r\n                details = _convertStackObj(errorObj.reason[strStack]);\r\n            }\r\n            else if (isString(errorObj)) {\r\n                details = _convertStackObj(errorObj);\r\n            }\r\n            else {\r\n                var evtMessage = errorObj[strMessage] || errorObj[strDescription] || \"\";\r\n                if (isString(errorObj[strErrorSrc])) {\r\n                    if (evtMessage) {\r\n                        evtMessage += \"\\n\";\r\n                    }\r\n                    evtMessage += \" from \" + errorObj[strErrorSrc];\r\n                }\r\n                if (evtMessage) {\r\n                    details = _convertStackObj(evtMessage);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // something unexpected happened so to avoid failing to report any error lets swallow the exception\r\n            // and fallback to the callee/caller method\r\n            details = _convertStackObj(e);\r\n        }\r\n    }\r\n    return details || {\r\n        src: \"\",\r\n        obj: null\r\n    };\r\n}\r\nfunction _formatStackTrace(stackDetails) {\r\n    var stack = \"\";\r\n    if (stackDetails) {\r\n        if (stackDetails.obj) {\r\n            arrForEach(stackDetails.obj, function (entry) {\r\n                stack += entry + \"\\n\";\r\n            });\r\n        }\r\n        else {\r\n            stack = stackDetails.src || \"\";\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nfunction _parseStack(stack) {\r\n    var parsedStack;\r\n    var frames = stack.obj;\r\n    if (frames && frames[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        parsedStack = [];\r\n        var level_1 = 0;\r\n        var totalSizeInBytes_1 = 0;\r\n        arrForEach(frames, function (frame) {\r\n            var theFrame = frame[_DYN_TO_STRING /* @min:%2etoString */]();\r\n            if (_StackFrame.regex.test(theFrame)) {\r\n                var parsedFrame = new _StackFrame(theFrame, level_1++);\r\n                totalSizeInBytes_1 += parsedFrame[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                parsedStack[_DYN_PUSH /* @min:%2epush */](parsedFrame);\r\n            }\r\n        });\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        var exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {\r\n            var left = 0;\r\n            var right = parsedStack[_DYN_LENGTH /* @min:%2elength */] - 1;\r\n            var size = 0;\r\n            var acceptedLeft = left;\r\n            var acceptedRight = right;\r\n            while (left < right) {\r\n                // check size\r\n                var lSize = parsedStack[left][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                var rSize = parsedStack[right][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                size += lSize + rSize;\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    var howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n    return parsedStack;\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType[_DYN_NAME /* @min:%2ename */] || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,200})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor[_DYN_TO_STRING /* @min:%2etoString */]());\r\n                typeName = (results && results[_DYN_LENGTH /* @min:%2elength */] > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\n/**\r\n * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.\r\n * @param errorObj - The supplied errorObj\r\n */\r\nexport function _formatErrorCode(errorObj) {\r\n    if (errorObj) {\r\n        try {\r\n            if (!isString(errorObj)) {\r\n                var errorType = _getErrorType(errorObj);\r\n                var result = _stringify(errorObj, false);\r\n                if (!result || result === \"{}\") {\r\n                    if (errorObj[strError]) {\r\n                        // Looks like an MS Error Event\r\n                        errorObj = errorObj[strError];\r\n                        errorType = _getErrorType(errorObj);\r\n                    }\r\n                    result = _stringify(errorObj, true);\r\n                }\r\n                if (strIndexOf(result, errorType) !== 0 && errorType !== \"String\") {\r\n                    return errorType + \":\" + result;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n        }\r\n    }\r\n    // Fallback to just letting the object format itself into a string\r\n    return \"\" + (errorObj || \"\");\r\n}\r\nvar Exception = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            exceptions: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n        if (!_isExceptionInternal(exception)) {\r\n            if (!properties) {\r\n                properties = {};\r\n            }\r\n            if (id) {\r\n                properties.id = id;\r\n            }\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = [new _ExceptionDetails(logger, exception, properties)];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n            }\r\n            if (id) {\r\n                _self.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */] || [];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = exception[_DYN_PROPERTIES /* @min:%2eproperties */];\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = exception[_DYN_MEASUREMENTS /* @min:%2emeasurements */];\r\n            if (exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */]) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */];\r\n            }\r\n            if (exception.id) {\r\n                _self.id = exception.id;\r\n                exception[_DYN_PROPERTIES /* @min:%2eproperties */].id = exception.id;\r\n            }\r\n            if (exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */]) {\r\n                _self[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */] = exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */];\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!isNullOrUndefined(exception[_DYN_IS_MANUAL /* @min:%2eisManual */])) {\r\n                _self[_DYN_IS_MANUAL /* @min:%2eisManual */] = exception[_DYN_IS_MANUAL /* @min:%2eisManual */];\r\n            }\r\n        }\r\n    }\r\n    Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {\r\n        var _a;\r\n        var errorType = _getErrorType(error || evt || message);\r\n        return _a = {},\r\n            _a[_DYN_MESSAGE /* @min:message */] = _formatMessage(message, errorType),\r\n            _a.url = url,\r\n            _a.lineNumber = lineNumber,\r\n            _a.columnNumber = columnNumber,\r\n            _a.error = _formatErrorCode(error || evt || message),\r\n            _a.evt = _formatErrorCode(evt || message),\r\n            _a[_DYN_TYPE_NAME /* @min:typeName */] = errorType,\r\n            _a.stackDetails = _getStackFromErrorObj(stack || error || evt),\r\n            _a.errorSrc = errorSrc,\r\n            _a;\r\n    };\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */]\r\n            && arrMap(exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */], function (ex) { return _ExceptionDetails[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign(__assign({}, exception), { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a;\r\n        var _b = this, exceptions = _b.exceptions, properties = _b.properties, measurements = _b.measurements, severityLevel = _b.severityLevel, problemGroup = _b.problemGroup, id = _b.id, isManual = _b.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return _a = {\r\n                ver: \"4.0\"\r\n            },\r\n            _a[_DYN_EXCEPTIONS /* @min:exceptions */] = exceptionDetailsInterface,\r\n            _a.severityLevel = severityLevel,\r\n            _a.properties = properties,\r\n            _a.measurements = measurements,\r\n            _a.problemGroup = problemGroup,\r\n            _a.id = id,\r\n            _a.isManual = isManual,\r\n            _a;\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        var _a;\r\n        return {\r\n            exceptions: [\r\n                (_a = {},\r\n                    _a[_DYN_HAS_FULL_STACK /* @min:hasFullStack */] = true,\r\n                    _a.message = message,\r\n                    _a.stack = details,\r\n                    _a.typeName = typeName,\r\n                    _a)\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    Exception.formatError = _formatErrorCode;\r\n    return Exception;\r\n}());\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function () {\r\n    function _ExceptionDetails(logger, exception, properties) {\r\n        this.aiDataContract = {\r\n            id: 0 /* FieldType.Default */,\r\n            outerId: 0 /* FieldType.Default */,\r\n            typeName: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            hasFullStack: 0 /* FieldType.Default */,\r\n            stack: 0 /* FieldType.Default */,\r\n            parsedStack: 2 /* FieldType.Array */\r\n        };\r\n        var _self = this;\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            var evt = error && error.evt;\r\n            if (!isError(error)) {\r\n                error = error[strError] || evt || error;\r\n            }\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, _formatMessage(exception || error, _self[_DYN_TYPE_NAME /* @min:%2etypeName */])) || strNotSpecified;\r\n            var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = _parseStack(stack);\r\n            // after parsedStack is inited, iterate over each frame object, sanitize its assembly field\r\n            if (isArray(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */])) {\r\n                arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) {\r\n                    frame[_DYN_ASSEMBLY /* @min:%2eassembly */] = dataSanitizeString(logger, frame[_DYN_ASSEMBLY /* @min:%2eassembly */]);\r\n                    frame[_DYN_FILE_NAME /* @min:%2efileName */] = dataSanitizeString(logger, frame[_DYN_FILE_NAME /* @min:%2efileName */]);\r\n                });\r\n            }\r\n            _self[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));\r\n            _self.hasFullStack = isArray(_self.parsedStack) && _self.parsedStack[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n            if (properties) {\r\n                properties[_DYN_TYPE_NAME /* @min:%2etypeName */] = properties[_DYN_TYPE_NAME /* @min:%2etypeName */] || _self[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = exception[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = exception[_DYN_MESSAGE /* @min:%2emessage */];\r\n            _self[strStack] = exception[strStack];\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] || [];\r\n            _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */] = exception[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */];\r\n        }\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var _a;\r\n        var _self = this;\r\n        var parsedStack = _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = (_a = {\r\n                id: _self.id,\r\n                outerId: _self.outerId,\r\n                typeName: _self[_DYN_TYPE_NAME /* @min:%2etypeName */],\r\n                message: _self[_DYN_MESSAGE /* @min:%2emessage */],\r\n                hasFullStack: _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */],\r\n                stack: _self[strStack]\r\n            },\r\n            _a[_DYN_PARSED_STACK /* @min:parsedStack */] = parsedStack || undefined,\r\n            _a);\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return _StackFrame[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](frame); }))\r\n            || exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */];\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign(__assign({}, exception), { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    return _ExceptionDetails;\r\n}());\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function () {\r\n    function _StackFrame(sourceFrame, level) {\r\n        this.aiDataContract = {\r\n            level: 1 /* FieldType.Required */,\r\n            method: 1 /* FieldType.Required */,\r\n            assembly: 0 /* FieldType.Default */,\r\n            fileName: 0 /* FieldType.Default */,\r\n            line: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        // Not converting this to isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = level;\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = NoMethod;\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = strTrim(frame);\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = \"\";\r\n            _self[_DYN_LINE /* @min:%2eline */] = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches[_DYN_LENGTH /* @min:%2elength */] >= 5) {\r\n                _self[_DYN_METHOD /* @min:%2emethod */] = strTrim(matches[2]) || _self[_DYN_METHOD /* @min:%2emethod */];\r\n                _self[_DYN_FILE_NAME /* @min:%2efileName */] = strTrim(matches[4]);\r\n                _self[_DYN_LINE /* @min:%2eline */] = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = sourceFrame[_DYN_LEVEL /* @min:%2elevel */];\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = sourceFrame[_DYN_METHOD /* @min:%2emethod */];\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = sourceFrame[_DYN_ASSEMBLY /* @min:%2eassembly */];\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = sourceFrame[_DYN_FILE_NAME /* @min:%2efileName */];\r\n            _self[_DYN_LINE /* @min:%2eline */] = sourceFrame[_DYN_LINE /* @min:%2eline */];\r\n            _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        }\r\n        _self.sizeInBytes += _self.method[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.fileName[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.assembly[_DYN_LENGTH /* @min:%2elength */];\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] += _StackFrame.baseSize;\r\n        _self.sizeInBytes += _self.level.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.line.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        var _self = this;\r\n        return {\r\n            level: _self[_DYN_LEVEL /* @min:%2elevel */],\r\n            method: _self[_DYN_METHOD /* @min:%2emethod */],\r\n            assembly: _self[_DYN_ASSEMBLY /* @min:%2eassembly */],\r\n            fileName: _self[_DYN_FILE_NAME /* @min:%2efileName */],\r\n            line: _self[_DYN_LINE /* @min:%2eline */]\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?[\\s]{0,50}([^\\@\\()]+?)[\\s]{0,50}(\\@|\\()([^\\(\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            name: 1 /* FieldType.Required */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 1 /* FieldType.Required */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */\r\n        };\r\n        /**\r\n         * Metric type. Single measurement or the aggregated value.\r\n         */\r\n        this.kind = 0 /* DataPointType.Measurement */;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_COUNT, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { DataPoint } from \"./Common/DataPoint\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Metric = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            metrics: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        var dataPoint = new DataPoint();\r\n        dataPoint[_DYN_COUNT /* @min:%2ecount */] = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        dataPoint.value = value;\r\n        dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;\r\n        _self.metrics = [dataPoint];\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}());\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar strEmpty = \"\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString()[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = strEmpty + totalms % 1000;\r\n    var sec = strEmpty + Math.floor(totalms / 1000) % 60;\r\n    var min = strEmpty + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = strEmpty + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms[_DYN_LENGTH /* @min:%2elength */] === 1 ? \"00\" + ms : ms[_DYN_LENGTH /* @min:%2elength */] === 2 ? \"0\" + ms : ms;\r\n    sec = sec[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + sec : sec;\r\n    min = min[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + min : min;\r\n    hour = hour[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : strEmpty) + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageView = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            id: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = dataSanitizeId(logger, id);\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(durationMs);\r\n        }\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}());\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { AjaxHelperParseDependencyPath } from \"../Util\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar RemoteDependencyData = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        this.aiDataContract = {\r\n            id: 1 /* FieldType.Required */,\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            resultCode: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            success: 0 /* FieldType.Default */,\r\n            data: 0 /* FieldType.Default */,\r\n            target: 0 /* FieldType.Default */,\r\n            type: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 0 /* FieldType.Default */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */,\r\n            dependencyKind: 0 /* FieldType.Default */,\r\n            dependencySource: 0 /* FieldType.Default */,\r\n            commandName: 0 /* FieldType.Default */,\r\n            dependencyTypeName: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = id;\r\n        _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(value);\r\n        _self.success = success;\r\n        _self.resultCode = resultCode + \"\";\r\n        _self.type = dataSanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _self.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _self.target = dataSanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _self.target = \"\".concat(_self.target, \" | \").concat(correlationContext);\r\n        }\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, dependencyFields[_DYN_NAME /* @min:%2ename */]);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}());\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties } from \"./Common/DataSanitizer\";\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        message = message || strNotSpecified;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, message);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n        }\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES, _DYN_RECEIVED_RESPONSE } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageViewPerformance = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            perfTotal: 0 /* FieldType.Default */,\r\n            networkConnect: 0 /* FieldType.Default */,\r\n            sentRequest: 0 /* FieldType.Default */,\r\n            receivedResponse: 0 /* FieldType.Default */,\r\n            domProcessing: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _self.domProcessing = cs4BaseData.domProcessing;\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = cs4BaseData[_DYN_DURATION /* @min:%2eduration */];\r\n            _self.networkConnect = cs4BaseData.networkConnect;\r\n            _self.perfTotal = cs4BaseData.perfTotal;\r\n            _self[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */] = cs4BaseData[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */];\r\n            _self.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}());\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Data = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            baseType: 1 /* FieldType.Required */,\r\n            baseData: 1 /* FieldType.Required */\r\n        };\r\n        this.baseType = baseType;\r\n        this.baseData = data;\r\n    }\r\n    return Data;\r\n}());\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel = createEnumStyle({\r\n    Verbose: 0 /* eSeverityLevel.Verbose */,\r\n    Information: 1 /* eSeverityLevel.Information */,\r\n    Warning: 2 /* eSeverityLevel.Warning */,\r\n    Error: 3 /* eSeverityLevel.Error */,\r\n    Critical: 4 /* eSeverityLevel.Critical */\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { createClassFromInterface } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _aiNameFunc(baseName) {\r\n    var aiName = \"ai.\" + baseName + \".\";\r\n    return function (name) {\r\n        return aiName + name;\r\n    };\r\n}\r\nvar _aiApplication = _aiNameFunc(\"application\");\r\nvar _aiDevice = _aiNameFunc(\"device\");\r\nvar _aiLocation = _aiNameFunc(\"location\");\r\nvar _aiOperation = _aiNameFunc(\"operation\");\r\nvar _aiSession = _aiNameFunc(\"session\");\r\nvar _aiUser = _aiNameFunc(\"user\");\r\nvar _aiCloud = _aiNameFunc(\"cloud\");\r\nvar _aiInternal = _aiNameFunc(\"internal\");\r\nvar ContextTagKeys = /** @class */ (function (_super) {\r\n    __extends(ContextTagKeys, _super);\r\n    function ContextTagKeys() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return ContextTagKeys;\r\n}(createClassFromInterface({\r\n    applicationVersion: _aiApplication(\"ver\"),\r\n    applicationBuild: _aiApplication(\"build\"),\r\n    applicationTypeId: _aiApplication(\"typeId\"),\r\n    applicationId: _aiApplication(\"applicationId\"),\r\n    applicationLayer: _aiApplication(\"layer\"),\r\n    deviceId: _aiDevice(\"id\"),\r\n    deviceIp: _aiDevice(\"ip\"),\r\n    deviceLanguage: _aiDevice(\"language\"),\r\n    deviceLocale: _aiDevice(\"locale\"),\r\n    deviceModel: _aiDevice(\"model\"),\r\n    deviceFriendlyName: _aiDevice(\"friendlyName\"),\r\n    deviceNetwork: _aiDevice(\"network\"),\r\n    deviceNetworkName: _aiDevice(\"networkName\"),\r\n    deviceOEMName: _aiDevice(\"oemName\"),\r\n    deviceOS: _aiDevice(\"os\"),\r\n    deviceOSVersion: _aiDevice(\"osVersion\"),\r\n    deviceRoleInstance: _aiDevice(\"roleInstance\"),\r\n    deviceRoleName: _aiDevice(\"roleName\"),\r\n    deviceScreenResolution: _aiDevice(\"screenResolution\"),\r\n    deviceType: _aiDevice(\"type\"),\r\n    deviceMachineName: _aiDevice(\"machineName\"),\r\n    deviceVMName: _aiDevice(\"vmName\"),\r\n    deviceBrowser: _aiDevice(\"browser\"),\r\n    deviceBrowserVersion: _aiDevice(\"browserVersion\"),\r\n    locationIp: _aiLocation(\"ip\"),\r\n    locationCountry: _aiLocation(\"country\"),\r\n    locationProvince: _aiLocation(\"province\"),\r\n    locationCity: _aiLocation(\"city\"),\r\n    operationId: _aiOperation(\"id\"),\r\n    operationName: _aiOperation(\"name\"),\r\n    operationParentId: _aiOperation(\"parentId\"),\r\n    operationRootId: _aiOperation(\"rootId\"),\r\n    operationSyntheticSource: _aiOperation(\"syntheticSource\"),\r\n    operationCorrelationVector: _aiOperation(\"correlationVector\"),\r\n    sessionId: _aiSession(\"id\"),\r\n    sessionIsFirst: _aiSession(\"isFirst\"),\r\n    sessionIsNew: _aiSession(\"isNew\"),\r\n    userAccountAcquisitionDate: _aiUser(\"accountAcquisitionDate\"),\r\n    userAccountId: _aiUser(\"accountId\"),\r\n    userAgent: _aiUser(\"userAgent\"),\r\n    userId: _aiUser(\"id\"),\r\n    userStoreRegion: _aiUser(\"storeRegion\"),\r\n    userAuthUserId: _aiUser(\"authUserId\"),\r\n    userAnonymousUserAcquisitionDate: _aiUser(\"anonUserAcquisitionDate\"),\r\n    userAuthenticatedUserAcquisitionDate: _aiUser(\"authUserAcquisitionDate\"),\r\n    cloudName: _aiCloud(\"name\"),\r\n    cloudRole: _aiCloud(\"role\"),\r\n    cloudRoleVer: _aiCloud(\"roleVer\"),\r\n    cloudRoleInstance: _aiCloud(\"roleInstance\"),\r\n    cloudEnvironment: _aiCloud(\"environment\"),\r\n    cloudLocation: _aiCloud(\"location\"),\r\n    cloudDeploymentUnit: _aiCloud(\"deploymentUnit\"),\r\n    internalNodeName: _aiInternal(\"nodeName\"),\r\n    internalSdkVersion: _aiInternal(\"sdkVersion\"),\r\n    internalAgentVersion: _aiInternal(\"agentVersion\"),\r\n    internalSnippet: _aiInternal(\"snippet\"),\r\n    internalSdkSrc: _aiInternal(\"sdkSrc\")\r\n})));\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isNullOrUndefined, objForEachKey, throwError, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIkey, strNotSpecified } from \"./Constants\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { _DYN_NAME } from \"./__DynamicConstants\";\r\n/**\r\n * Create a telemetry item that the 1DS channel understands\r\n * @param item - domain specific properties; part B\r\n * @param baseType - telemetry item type. ie PageViewData\r\n * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n * @param customProperties - user defined custom properties; part C\r\n * @param systemProperties - system properties that are added to the context; part A\r\n * @returns ITelemetryItem that is sent to channel\r\n */\r\nexport function createTelemetryItem(item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n    var _a;\r\n    envelopeName = dataSanitizeString(logger, envelopeName) || strNotSpecified;\r\n    if (isNullOrUndefined(item) ||\r\n        isNullOrUndefined(baseType) ||\r\n        isNullOrUndefined(envelopeName)) {\r\n        throwError(\"Input doesn't contain all required fields\");\r\n    }\r\n    var iKey = \"\";\r\n    if (item[strIkey]) {\r\n        iKey = item[strIkey];\r\n        delete item[strIkey];\r\n    }\r\n    var telemetryItem = (_a = {},\r\n        _a[_DYN_NAME /* @min:name */] = envelopeName,\r\n        _a.time = toISOString(new Date()),\r\n        _a.iKey = iKey,\r\n        _a.ext = systemProperties ? systemProperties : {},\r\n        _a.tags = [],\r\n        _a.data = {},\r\n        _a.baseType = baseType,\r\n        _a.baseData = item // Part B\r\n    ,\r\n        _a);\r\n    // Part C\r\n    if (!isNullOrUndefined(customProperties)) {\r\n        objForEachKey(customProperties, function (prop, value) {\r\n            telemetryItem.data[prop] = value;\r\n        });\r\n    }\r\n    return telemetryItem;\r\n}\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item - domain specific properties; part B\r\n     * @param baseType - telemetry item type. ie PageViewData\r\n     * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties - user defined custom properties; part C\r\n     * @param systemProperties - system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = createTelemetryItem;\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { ContextTagKeys } from \"./Contracts/ContextTagKeys\";\r\nexport var Extensions = {\r\n    UserExt: \"user\",\r\n    DeviceExt: \"device\",\r\n    TraceExt: \"trace\",\r\n    WebExt: \"web\",\r\n    AppExt: \"app\",\r\n    OSExt: \"os\",\r\n    SessionExt: \"ses\",\r\n    SDKExt: \"sdk\"\r\n};\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isFunction } from \"@microsoft/applicationinsights-core-js\";\r\nexport function createDomEvent(eventName) {\r\n    var event = null;\r\n    if (isFunction(Event)) { // Use Event constructor when available\r\n        event = new Event(eventName);\r\n    }\r\n    else { // Event has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n    }\r\n    return event;\r\n}\r\n//# sourceMappingURL=DomHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_PUSH } from \"./__DynamicConstants\";\r\nfunction _disableEvents(target, evtNamespace) {\r\n    eventOff(target, null, null, evtNamespace);\r\n}\r\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\r\nexport function createOfflineListener(parentEvtNamespace) {\r\n    var _document = getDocument();\r\n    var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\r\n    var _isListening = false;\r\n    var listenerList = [];\r\n    // Set the initial state\r\n    // rState is changed by the browser, both via events and when we check the navigator.onLine property\r\n    var rState = 1 /* eOfflineValue.Online */;\r\n    if (_navigator && !isNullOrUndefined(_navigator.onLine) && !_navigator.onLine) { // navigator.onLine is undefined in react-native\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n    }\r\n    // ustate is changed by the user calling setOnlineState\r\n    var uState = 0 /* eOfflineValue.Unknown */;\r\n    // current state would be updated each time rState or uState is changed\r\n    // it is a resolved value of rState and uState\r\n    var _currentState = calCurrentState();\r\n    var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\r\n    try {\r\n        if (_enableEvents(getWindow())) {\r\n            _isListening = true;\r\n        }\r\n        if (_document) {\r\n            // Also attach to the document.body or document\r\n            var target = _document.body || _document;\r\n            if (target.ononline) {\r\n                if (_enableEvents(target)) {\r\n                    _isListening = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this makes react-native less angry\r\n        _isListening = false;\r\n    }\r\n    function _enableEvents(target) {\r\n        var enabled = false;\r\n        if (target) {\r\n            enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\r\n            if (enabled) {\r\n                eventOn(target, \"offline\", _setOffline, _evtNamespace);\r\n            }\r\n        }\r\n        return enabled;\r\n    }\r\n    function _isOnline() {\r\n        return _currentState;\r\n    }\r\n    function calCurrentState() {\r\n        if (uState === 2 /* eOfflineValue.Offline */ || rState === 2 /* eOfflineValue.Offline */) {\r\n            return false;\r\n        }\r\n        return true; // if both unknown, then we assume the network is good\r\n    }\r\n    function listnerNoticeCheck() {\r\n        // we were offline and are now online or we were online and now offline\r\n        var newState = calCurrentState();\r\n        if (_currentState !== newState) {\r\n            _currentState = newState; // use the resolved state to update\r\n            // send all the callbacks with the current state\r\n            arrForEach(listenerList, function (callback) {\r\n                var offlineState = {\r\n                    isOnline: _currentState,\r\n                    rState: rState,\r\n                    uState: uState\r\n                };\r\n                try {\r\n                    callback(offlineState);\r\n                }\r\n                catch (e) {\r\n                    // Do nothing, just making sure we run all of the callbacks\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function setOnlineState(newState) {\r\n        uState = newState;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOnline() {\r\n        rState = 1 /* eOfflineValue.Online */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOffline() {\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _unload() {\r\n        var win = getWindow();\r\n        if (win && _isListening) {\r\n            _disableEvents(win, _evtNamespace);\r\n            if (_document) {\r\n                // Also attach to the document.body or document\r\n                var target = _document.body || _document;\r\n                if (!isUndefined(target.ononline)) {\r\n                    _disableEvents(target, _evtNamespace);\r\n                }\r\n            }\r\n            _isListening = false;\r\n        }\r\n    }\r\n    function addListener(callback) {\r\n        listenerList[_DYN_PUSH /* @min:%2epush */](callback);\r\n        // Define rm as an instance of IUnloadHook\r\n        return {\r\n            rm: function () {\r\n                var index = listenerList.indexOf(callback);\r\n                if (index > -1) {\r\n                    return listenerList.splice(index, 1);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    return {\r\n        isOnline: _isOnline,\r\n        isListening: function () { return _isListening; },\r\n        unload: _unload,\r\n        addListener: addListener,\r\n        setOnlineState: setOnlineState\r\n    };\r\n}\r\n//# sourceMappingURL=Offline.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent, findAllScripts } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 4\r\nexport var _DYN_IS_STORAGE_USE_DISAB0 = \"isStorageUseDisabled\"; // Count: 3\r\nexport var _DYN__ADD_HOOK = \"_addHook\"; // Count: 6\r\nexport var _DYN_CORE = \"core\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 8\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 13\r\nexport var _DYN_TRACK = \"track\"; // Count: 7\r\nexport var _DYN_TRACK_PAGE_VIEW = \"trackPageView\"; // Count: 4\r\nexport var _DYN_TRACK_PREVIOUS_PAGE_1 = \"trackPreviousPageVisit\"; // Count: 3\r\nexport var _DYN_SEND_PAGE_VIEW_INTER2 = \"sendPageViewInternal\"; // Count: 7\r\nexport var _DYN_START_TIME = \"startTime\"; // Count: 6\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 4\r\nexport var _DYN_DURATION = \"duration\"; // Count: 12\r\nexport var _DYN_SEND_PAGE_VIEW_PERFO3 = \"sendPageViewPerformanceInternal\"; // Count: 3\r\nexport var _DYN_POPULATE_PAGE_VIEW_P4 = \"populatePageViewPerformanceEvent\"; // Count: 3\r\nexport var _DYN_HREF = \"href\"; // Count: 6\r\nexport var _DYN_SEND_EXCEPTION_INTER5 = \"sendExceptionInternal\"; // Count: 2\r\nexport var _DYN_EXCEPTION = \"exception\"; // Count: 3\r\nexport var _DYN_ERROR = \"error\"; // Count: 5\r\nexport var _DYN__ONERROR = \"_onerror\"; // Count: 3\r\nexport var _DYN_ERROR_SRC = \"errorSrc\"; // Count: 3\r\nexport var _DYN_LINE_NUMBER = \"lineNumber\"; // Count: 5\r\nexport var _DYN_COLUMN_NUMBER = \"columnNumber\"; // Count: 5\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 4\r\nexport var _DYN__CREATE_AUTO_EXCEPTI6 = \"CreateAutoException\"; // Count: 3\r\nexport var _DYN_ADD_TELEMETRY_INITIA7 = \"addTelemetryInitializer\"; // Count: 4\r\nexport var _DYN_OVERRIDE_PAGE_VIEW_D8 = \"overridePageViewDuration\"; // Count: 2\r\nexport var _DYN_AUTO_TRACK_PAGE_VISI9 = \"autoTrackPageVisitTime\"; // Count: 2\r\nexport var _DYN_IS_BROWSER_LINK_TRAC10 = \"isBrowserLinkTrackingEnabled\"; // Count: 2\r\nexport var _DYN_LENGTH = \"length\"; // Count: 5\r\nexport var _DYN_ENABLE_AUTO_ROUTE_TR11 = \"enableAutoRouteTracking\"; // Count: 2\r\nexport var _DYN_ENABLE_UNHANDLED_PRO12 = \"enableUnhandledPromiseRejectionTracking\"; // Count: 2\r\nexport var _DYN_AUTO_UNHANDLED_PROMI13 = \"autoUnhandledPromiseInstrumented\"; // Count: 3\r\nexport var _DYN_GET_ENTRIES_BY_TYPE = \"getEntriesByType\"; // Count: 5\r\nexport var _DYN_IS_PERFORMANCE_TIMIN14 = \"isPerformanceTimingSupported\"; // Count: 2\r\nexport var _DYN_GET_PERFORMANCE_TIMI15 = \"getPerformanceTiming\"; // Count: 2\r\nexport var _DYN_NAVIGATION_START = \"navigationStart\"; // Count: 4\r\nexport var _DYN_SHOULD_COLLECT_DURAT16 = \"shouldCollectDuration\"; // Count: 3\r\nexport var _DYN_IS_PERFORMANCE_TIMIN17 = \"isPerformanceTimingDataReady\"; // Count: 2\r\nexport var _DYN_RESPONSE_START = \"responseStart\"; // Count: 5\r\nexport var _DYN_REQUEST_START = \"requestStart\"; // Count: 3\r\nexport var _DYN_LOAD_EVENT_END = \"loadEventEnd\"; // Count: 4\r\nexport var _DYN_RESPONSE_END = \"responseEnd\"; // Count: 5\r\nexport var _DYN_CONNECT_END = \"connectEnd\"; // Count: 4\r\nexport var _DYN_PAGE_VISIT_START_TIM18 = \"pageVisitStartTime\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dateTimeUtilsDuration } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, dumpObj, getDocument, getExceptionName, getLocation, isNullOrUndefined } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getPerformance, isUndefined, isWebWorker, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DURATION, _DYN_GET_ENTRIES_BY_TYPE, _DYN_GET_PERFORMANCE_TIMI15, _DYN_HREF, _DYN_IS_PERFORMANCE_TIMIN14, _DYN_IS_PERFORMANCE_TIMIN17, _DYN_LENGTH, _DYN_NAVIGATION_START, _DYN_POPULATE_PAGE_VIEW_P4, _DYN_PROPERTIES, _DYN_SEND_PAGE_VIEW_INTER2, _DYN_SEND_PAGE_VIEW_PERFO3, _DYN_SHOULD_COLLECT_DURAT16, _DYN_START_TIME, _DYN_TRACK_PAGE_VIEW } from \"../../__DynamicConstants\";\r\n/**\r\n * Class encapsulates sending page views and page view performance telemetry.\r\n */\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        dynamicProto(PageViewManager, this, function (_self) {\r\n            var queueTimer = null;\r\n            var itemQueue = [];\r\n            var pageViewPerformanceSent = false;\r\n            var firstPageViewSent = false;\r\n            var _logger;\r\n            if (core) {\r\n                _logger = core.logger;\r\n            }\r\n            function _flushChannels(isAsync) {\r\n                if (core) {\r\n                    core.flush(isAsync, function () {\r\n                        // Event flushed, callback added to prevent promise creation\r\n                    });\r\n                }\r\n            }\r\n            function _startTimer() {\r\n                if (!queueTimer) {\r\n                    queueTimer = scheduleTimeout((function () {\r\n                        queueTimer = null;\r\n                        var allItems = itemQueue.slice(0);\r\n                        var doFlush = false;\r\n                        itemQueue = [];\r\n                        arrForEach(allItems, function (item) {\r\n                            if (!item()) {\r\n                                // Not processed so rescheduled\r\n                                itemQueue.push(item);\r\n                            }\r\n                            else {\r\n                                doFlush = true;\r\n                            }\r\n                        });\r\n                        if (itemQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            _startTimer();\r\n                        }\r\n                        if (doFlush) {\r\n                            // We process at least one item so flush the queue\r\n                            _flushChannels(true);\r\n                        }\r\n                    }), 100);\r\n                }\r\n            }\r\n            function _addQueue(cb) {\r\n                itemQueue.push(cb);\r\n                _startTimer();\r\n            }\r\n            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */] = function (pageView, customProperties) {\r\n                var name = pageView.name;\r\n                if (isNullOrUndefined(name) || typeof name !== \"string\") {\r\n                    var doc = getDocument();\r\n                    name = pageView.name = doc && doc.title || \"\";\r\n                }\r\n                var uri = pageView.uri;\r\n                if (isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n                    var location_1 = getLocation();\r\n                    uri = pageView.uri = location_1 && location_1[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                }\r\n                if (!firstPageViewSent) {\r\n                    var perf = getPerformance();\r\n                    // Access the performance timing object\r\n                    var navigationEntries = (perf && perf[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */] && perf[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */](\"navigation\"));\r\n                    // Edge Case the navigation Entries may return an empty array and the timeOrigin is not supported on IE\r\n                    if (navigationEntries && navigationEntries[0] && !isUndefined(perf.timeOrigin)) {\r\n                        // Get the value of loadEventStart\r\n                        var loadEventStart = navigationEntries[0].loadEventStart;\r\n                        pageView[_DYN_START_TIME /* @min:%2estartTime */] = new Date(perf.timeOrigin + loadEventStart);\r\n                    }\r\n                    else {\r\n                        // calculate the start time manually\r\n                        var duration_1 = ((customProperties || pageView[_DYN_PROPERTIES /* @min:%2eproperties */] || {})[_DYN_DURATION /* @min:%2eduration */] || 0);\r\n                        pageView[_DYN_START_TIME /* @min:%2estartTime */] = new Date(new Date().getTime() - duration_1);\r\n                    }\r\n                    firstPageViewSent = true;\r\n                }\r\n                // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n                // do not provide the duration, set duration to undefined\r\n                // Also this is case 4\r\n                if (!pageViewPerformanceManager[_DYN_IS_PERFORMANCE_TIMIN14 /* @min:%2eisPerformanceTimingSupported */]()) {\r\n                    appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                    _flushChannels(true);\r\n                    if (!isWebWorker()) {\r\n                        // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 25 /* _eInternalMessageId.NavigationTimingNotSupported */, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n                    }\r\n                    return;\r\n                }\r\n                var pageViewSent = false;\r\n                var customDuration;\r\n                // if the performance timing is supported by the browser, calculate the custom duration\r\n                var start = pageViewPerformanceManager[_DYN_GET_PERFORMANCE_TIMI15 /* @min:%2egetPerformanceTiming */]()[_DYN_NAVIGATION_START /* @min:%2enavigationStart */];\r\n                if (start > 0) {\r\n                    customDuration = dateTimeUtilsDuration(start, +new Date);\r\n                    if (!pageViewPerformanceManager[_DYN_SHOULD_COLLECT_DURAT16 /* @min:%2eshouldCollectDuration */](customDuration)) {\r\n                        customDuration = undefined;\r\n                    }\r\n                }\r\n                // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n                // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n                var duration;\r\n                if (!isNullOrUndefined(customProperties) &&\r\n                    !isNullOrUndefined(customProperties[_DYN_DURATION /* @min:%2eduration */])) {\r\n                    duration = customProperties[_DYN_DURATION /* @min:%2eduration */];\r\n                }\r\n                if (overridePageViewDuration || !isNaN(duration)) {\r\n                    if (isNaN(duration)) {\r\n                        // case 3\r\n                        if (!customProperties) {\r\n                            customProperties = {};\r\n                        }\r\n                        customProperties[_DYN_DURATION /* @min:%2eduration */] = customDuration;\r\n                    }\r\n                    // case 2\r\n                    appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                    _flushChannels(true);\r\n                    pageViewSent = true;\r\n                }\r\n                // now try to send the page view performance telemetry\r\n                var maxDurationLimit = 60000;\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                // Queue the event for processing\r\n                _addQueue(function () {\r\n                    var processed = false;\r\n                    try {\r\n                        if (pageViewPerformanceManager[_DYN_IS_PERFORMANCE_TIMIN17 /* @min:%2eisPerformanceTimingDataReady */]()) {\r\n                            processed = true;\r\n                            var pageViewPerformance = {\r\n                                name: name,\r\n                                uri: uri\r\n                            };\r\n                            pageViewPerformanceManager[_DYN_POPULATE_PAGE_VIEW_P4 /* @min:%2epopulatePageViewPerformanceEvent */](pageViewPerformance);\r\n                            if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                                // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                                // That's the best value we can get that makes sense.\r\n                                customProperties[_DYN_DURATION /* @min:%2eduration */] = customDuration;\r\n                                appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                            }\r\n                            else {\r\n                                if (!pageViewSent) {\r\n                                    customProperties[_DYN_DURATION /* @min:%2eduration */] = pageViewPerformance.durationMs;\r\n                                    appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                                }\r\n                                if (!pageViewPerformanceSent) {\r\n                                    appInsights[_DYN_SEND_PAGE_VIEW_PERFO3 /* @min:%2esendPageViewPerformanceInternal */](pageViewPerformance, customProperties);\r\n                                    pageViewPerformanceSent = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (start > 0 && dateTimeUtilsDuration(start, +new Date) > maxDurationLimit) {\r\n                            // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                            // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                            processed = true;\r\n                            if (!pageViewSent) {\r\n                                customProperties[_DYN_DURATION /* @min:%2eduration */] = maxDurationLimit;\r\n                                appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 38 /* _eInternalMessageId.TrackPVFailedCalc */, \"trackPageView failed on page load calculation: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                    return processed;\r\n                });\r\n            };\r\n            _self.teardown = function (unloadCtx, unloadState) {\r\n                if (queueTimer) {\r\n                    queueTimer.cancel();\r\n                    queueTimer = null;\r\n                    var allItems = itemQueue.slice(0);\r\n                    var doFlush_1 = false;\r\n                    itemQueue = [];\r\n                    arrForEach(allItems, function (item) {\r\n                        if (item()) {\r\n                            doFlush_1 = true;\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PageViewManager.prototype.trackPageView.\r\n// Removed Stub for PageViewManager.prototype.teardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageViewManager.__ieDyn=1;\n\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dateTimeUtilsDuration, msToTimeSpan } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, getNavigator, getPerformance, safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_CONNECT_END, _DYN_DURATION, _DYN_GET_ENTRIES_BY_TYPE, _DYN_GET_PERFORMANCE_TIMI15, _DYN_IS_PERFORMANCE_TIMIN14, _DYN_IS_PERFORMANCE_TIMIN17, _DYN_LENGTH, _DYN_LOAD_EVENT_END, _DYN_NAVIGATION_START, _DYN_POPULATE_PAGE_VIEW_P4, _DYN_REQUEST_START, _DYN_RESPONSE_END, _DYN_RESPONSE_START, _DYN_SHOULD_COLLECT_DURAT16, _DYN_START_TIME } from \"../../__DynamicConstants\";\r\nvar MAX_DURATION_ALLOWED = 3600000; // 1h\r\nvar botAgentNames = [\"googlebot\", \"adsbot-google\", \"apis-google\", \"mediapartners-google\"];\r\nfunction _isPerformanceTimingSupported() {\r\n    var perf = getPerformance();\r\n    return perf && !!perf.timing;\r\n}\r\nfunction _isPerformanceNavigationTimingSupported() {\r\n    var perf = getPerformance();\r\n    return perf && perf.getEntriesByType && perf.getEntriesByType(\"navigation\")[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\nfunction _isPerformanceTimingDataReady() {\r\n    var perf = getPerformance();\r\n    var timing = perf ? perf.timing : 0;\r\n    return timing\r\n        && timing.domainLookupStart > 0\r\n        && timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */] > 0\r\n        && timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */] > 0\r\n        && timing[_DYN_REQUEST_START /* @min:%2erequestStart */] > 0\r\n        && timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */] > 0\r\n        && timing[_DYN_RESPONSE_END /* @min:%2eresponseEnd */] > 0\r\n        && timing[_DYN_CONNECT_END /* @min:%2econnectEnd */] > 0\r\n        && timing.domLoading > 0;\r\n}\r\nfunction _getPerformanceTiming() {\r\n    if (_isPerformanceTimingSupported()) {\r\n        return getPerformance().timing;\r\n    }\r\n    return null;\r\n}\r\nfunction _getPerformanceNavigationTiming() {\r\n    if (_isPerformanceNavigationTimingSupported()) {\r\n        return getPerformance()[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */](\"navigation\")[0];\r\n    }\r\n    return null;\r\n}\r\n/**\r\n* This method tells if given durations should be excluded from collection.\r\n*/\r\nfunction _shouldCollectDuration() {\r\n    var durations = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        durations[_i] = arguments[_i];\r\n    }\r\n    var _navigator = getNavigator() || {};\r\n    // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n    var userAgent = _navigator.userAgent;\r\n    var isGoogleBot = false;\r\n    if (userAgent) {\r\n        for (var i = 0; i < botAgentNames[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            isGoogleBot = isGoogleBot || strIndexOf(userAgent.toLowerCase(), botAgentNames[i]) !== -1;\r\n        }\r\n    }\r\n    if (isGoogleBot) {\r\n        // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n        return false;\r\n    }\r\n    else {\r\n        // for other page views, don't report if it's outside of a reasonable range\r\n        for (var i = 0; i < durations[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (durations[i] < 0 || durations[i] >= MAX_DURATION_ALLOWED) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Class encapsulates sending page view performance telemetry.\r\n */\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        var _logger = safeGetLogger(core);\r\n        dynamicProto(PageViewPerformanceManager, this, function (_self) {\r\n            _self[_DYN_POPULATE_PAGE_VIEW_P4 /* @min:%2epopulatePageViewPerformanceEvent */] = function (pageViewPerformance) {\r\n                pageViewPerformance.isValid = false;\r\n                /*\r\n                 * http://www.w3.org/TR/navigation-timing/#processing-model\r\n                 *  |-navigationStart\r\n                 *  |             |-connectEnd\r\n                 *  |             ||-requestStart\r\n                 *  |             ||             |-responseStart\r\n                 *  |             ||             |              |-responseEnd\r\n                 *  |             ||             |              |\r\n                 *  |             ||             |              |         |-loadEventEnd\r\n                 *  |---network---||---request---|---response---|---dom---|\r\n                 *  |--------------------------total----------------------|\r\n                 *\r\n                 *  total = The difference between the load event of the current document is completed and the first recorded timestamp of the performance entry : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#duration\r\n                 *  network = Redirect time + App Cache + DNS lookup time + TCP connection time\r\n                 *  request = Request time : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#request_time\r\n                 *  response = Response time\r\n                 *  dom = Document load time : https://html.spec.whatwg.org/multipage/dom.html#document-load-timing-info\r\n                 *      = Document processing time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#document_processing\r\n                 *      + Loading time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#loading\r\n                 */\r\n                var navigationTiming = _getPerformanceNavigationTiming();\r\n                var timing = _getPerformanceTiming();\r\n                var total = 0;\r\n                var network = 0;\r\n                var request = 0;\r\n                var response = 0;\r\n                var dom = 0;\r\n                if (navigationTiming || timing) {\r\n                    if (navigationTiming) {\r\n                        total = navigationTiming[_DYN_DURATION /* @min:%2eduration */];\r\n                        /**\r\n                         * support both cases:\r\n                         * - startTime is always zero: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming\r\n                         * - for older browsers where the startTime is not zero\r\n                         */\r\n                        network = navigationTiming[_DYN_START_TIME /* @min:%2estartTime */] === 0 ? navigationTiming[_DYN_CONNECT_END /* @min:%2econnectEnd */] : dateTimeUtilsDuration(navigationTiming[_DYN_START_TIME /* @min:%2estartTime */], navigationTiming[_DYN_CONNECT_END /* @min:%2econnectEnd */]);\r\n                        request = dateTimeUtilsDuration(navigationTiming.requestStart, navigationTiming[_DYN_RESPONSE_START /* @min:%2eresponseStart */]);\r\n                        response = dateTimeUtilsDuration(navigationTiming[_DYN_RESPONSE_START /* @min:%2eresponseStart */], navigationTiming[_DYN_RESPONSE_END /* @min:%2eresponseEnd */]);\r\n                        dom = dateTimeUtilsDuration(navigationTiming.responseEnd, navigationTiming[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                    }\r\n                    else {\r\n                        total = dateTimeUtilsDuration(timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */], timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                        network = dateTimeUtilsDuration(timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */], timing[_DYN_CONNECT_END /* @min:%2econnectEnd */]);\r\n                        request = dateTimeUtilsDuration(timing.requestStart, timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */]);\r\n                        response = dateTimeUtilsDuration(timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */], timing[_DYN_RESPONSE_END /* @min:%2eresponseEnd */]);\r\n                        dom = dateTimeUtilsDuration(timing.responseEnd, timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                    }\r\n                    if (total === 0) {\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 10 /* _eInternalMessageId.ErrorPVCalc */, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else if (!_self[_DYN_SHOULD_COLLECT_DURAT16 /* @min:%2eshouldCollectDuration */](total, network, request, response, dom)) {\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 45 /* _eInternalMessageId.InvalidDurationValue */, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                        // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                        // in this case, don't report client performance from this page\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 8 /* _eInternalMessageId.ClientPerformanceMathError */, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else {\r\n                        pageViewPerformance.durationMs = total;\r\n                        // // convert to timespans\r\n                        pageViewPerformance.perfTotal = pageViewPerformance[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(total);\r\n                        pageViewPerformance.networkConnect = msToTimeSpan(network);\r\n                        pageViewPerformance.sentRequest = msToTimeSpan(request);\r\n                        pageViewPerformance.receivedResponse = msToTimeSpan(response);\r\n                        pageViewPerformance.domProcessing = msToTimeSpan(dom);\r\n                        pageViewPerformance.isValid = true;\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_GET_PERFORMANCE_TIMI15 /* @min:%2egetPerformanceTiming */] = _getPerformanceTiming;\r\n            _self[_DYN_IS_PERFORMANCE_TIMIN14 /* @min:%2eisPerformanceTimingSupported */] = _isPerformanceTimingSupported;\r\n            _self[_DYN_IS_PERFORMANCE_TIMIN17 /* @min:%2eisPerformanceTimingDataReady */] = _isPerformanceTimingDataReady;\r\n            _self[_DYN_SHOULD_COLLECT_DURAT16 /* @min:%2eshouldCollectDuration */] = _shouldCollectDuration;\r\n        });\r\n    }\r\n// Removed Stub for PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent.\r\n// Removed Stub for PageViewPerformanceManager.prototype.getPerformanceTiming.\r\n// Removed Stub for PageViewPerformanceManager.prototype.isPerformanceTimingSupported.\r\n// Removed Stub for PageViewPerformanceManager.prototype.isPerformanceTimingDataReady.\r\n// Removed Stub for PageViewPerformanceManager.prototype.shouldCollectDuration.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageViewPerformanceManager.__ieDyn=1;\n\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* ApplicationInsights.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nvar _a;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AnalyticsPluginIdentifier, Event as EventTelemetry, Exception, Metric, PageView, PageViewPerformance, PropertiesPluginIdentifier, RemoteDependencyData, Trace, createDistributedTraceContextFromTrace, createDomEvent, createTelemetryItem, dataSanitizeString, isCrossOriginError, strNotSpecified, utlDisableStorage, utlEnableStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, InstrumentEvent, arrForEach, cfgDfBoolean, cfgDfMerge, cfgDfSet, cfgDfString, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dumpObj, eventOff, eventOn, findAllScripts, generateW3CId, getDocument, getExceptionName, getHistory, getLocation, getWindow, hasHistory, hasWindow, isFunction, isNullOrUndefined, isString, isUndefined, mergeEvtNamespace, onConfigChange, safeGetCookieMgr, strUndefined, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isError, objDeepFreeze, objDefine, scheduleTimeout, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ADD_TELEMETRY_INITIA7, _DYN_AUTO_TRACK_PAGE_VISI9, _DYN_AUTO_UNHANDLED_PROMI13, _DYN_COLUMN_NUMBER, _DYN_CORE, _DYN_DATA_TYPE, _DYN_DIAG_LOG, _DYN_DURATION, _DYN_ENABLE_AUTO_ROUTE_TR11, _DYN_ENABLE_UNHANDLED_PRO12, _DYN_ENVELOPE_TYPE, _DYN_ERROR, _DYN_ERROR_SRC, _DYN_EXCEPTION, _DYN_HREF, _DYN_IS_BROWSER_LINK_TRAC10, _DYN_IS_STORAGE_USE_DISAB0, _DYN_LENGTH, _DYN_LINE_NUMBER, _DYN_MESSAGE, _DYN_OVERRIDE_PAGE_VIEW_D8, _DYN_POPULATE_PAGE_VIEW_P4, _DYN_PROPERTIES, _DYN_SEND_EXCEPTION_INTER5, _DYN_SEND_PAGE_VIEW_INTER2, _DYN_SEND_PAGE_VIEW_PERFO3, _DYN_START_TIME, _DYN_TO_STRING, _DYN_TRACK, _DYN_TRACK_PAGE_VIEW, _DYN_TRACK_PREVIOUS_PAGE_1, _DYN__ADD_HOOK, _DYN__CREATE_AUTO_EXCEPTI6, _DYN__ONERROR } from \"../__DynamicConstants\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageViewPerformanceManager } from \"./Telemetry/PageViewPerformanceManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { Timing } from \"./Timing\";\r\nvar strEvent = \"event\";\r\nfunction _dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n    }\r\n}\r\nfunction _getReason(error) {\r\n    if (error && error.reason) {\r\n        var reason = error.reason;\r\n        if (!isString(reason) && isFunction(reason[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n            return reason[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        }\r\n        return dumpObj(reason);\r\n    }\r\n    // Pass the original object down which will eventually get evaluated for any message or description\r\n    return error || \"\";\r\n}\r\nvar MinMilliSeconds = 60000;\r\nvar defaultValues = objDeepFreeze((_a = {\r\n        sessionRenewalMs: cfgDfSet(_chkConfigMilliseconds, 30 * 60 * 1000),\r\n        sessionExpirationMs: cfgDfSet(_chkConfigMilliseconds, 24 * 60 * 60 * 1000),\r\n        disableExceptionTracking: cfgDfBoolean()\r\n    },\r\n    _a[_DYN_AUTO_TRACK_PAGE_VISI9 /* @min:autoTrackPageVisitTime */] = cfgDfBoolean(),\r\n    _a[_DYN_OVERRIDE_PAGE_VIEW_D8 /* @min:overridePageViewDuration */] = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_UNHANDLED_PRO12 /* @min:enableUnhandledPromiseRejectionTracking */] = cfgDfBoolean(),\r\n    _a[_DYN_AUTO_UNHANDLED_PROMI13 /* @min:autoUnhandledPromiseInstrumented */] = false,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_IS_STORAGE_USE_DISAB0 /* @min:isStorageUseDisabled */] = cfgDfBoolean(),\r\n    _a[_DYN_IS_BROWSER_LINK_TRAC10 /* @min:isBrowserLinkTrackingEnabled */] = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_AUTO_ROUTE_TR11 /* @min:enableAutoRouteTracking */] = cfgDfBoolean(),\r\n    _a.namePrefix = cfgDfString(),\r\n    _a.enableDebug = cfgDfBoolean(),\r\n    _a.disableFlushOnBeforeUnload = cfgDfBoolean(),\r\n    _a.disableFlushOnUnload = cfgDfBoolean(false, \"disableFlushOnBeforeUnload\"),\r\n    _a.expCfg = cfgDfMerge({ inclScripts: false }),\r\n    _a));\r\nfunction _chkConfigMilliseconds(value, defValue) {\r\n    value = value || defValue;\r\n    if (value < MinMilliSeconds) {\r\n        value = MinMilliSeconds;\r\n    }\r\n    return +value;\r\n}\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nfunction _updateStorageUsage(extConfig) {\r\n    // Not resetting the storage usage as someone may have manually called utlDisableStorage, so this will only\r\n    // reset based if the configuration option is provided\r\n    if (!isUndefined(extConfig[_DYN_IS_STORAGE_USE_DISAB0 /* @min:%2eisStorageUseDisabled */])) {\r\n        if (extConfig[_DYN_IS_STORAGE_USE_DISAB0 /* @min:%2eisStorageUseDisabled */]) {\r\n            utlDisableStorage();\r\n        }\r\n        else {\r\n            utlEnableStorage();\r\n        }\r\n    }\r\n}\r\nvar AnalyticsPlugin = /** @class */ (function (_super) {\r\n    __extends(AnalyticsPlugin, _super);\r\n    function AnalyticsPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = AnalyticsPluginIdentifier; // do not change name or priority\r\n        _this.priority = 180; // take from reserved priority range 100- 200\r\n        _this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        var _eventTracking;\r\n        var _pageTracking;\r\n        var _pageViewManager;\r\n        var _pageViewPerformanceManager;\r\n        var _pageVisitTimeManager;\r\n        var _preInitTelemetryInitializers;\r\n        var _isBrowserLinkTrackingEnabled;\r\n        var _browserLinkInitializerAdded;\r\n        var _enableAutoRouteTracking;\r\n        var _historyListenerAdded;\r\n        var _disableExceptionTracking;\r\n        var _autoExceptionInstrumented;\r\n        var _enableUnhandledPromiseRejectionTracking;\r\n        var _autoUnhandledPromiseInstrumented;\r\n        var _extConfig;\r\n        var _autoTrackPageVisitTime;\r\n        // Counts number of trackAjax invocations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        var _trackAjaxAttempts = 0;\r\n        // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n        var _prevUri; // Assigned in the constructor\r\n        var _currUri;\r\n        var _evtNamespace;\r\n        dynamicProto(AnalyticsPlugin, _this, function (_self, _base) {\r\n            var _addHook = _base[_DYN__ADD_HOOK /* @min:%2e_addHook */];\r\n            _initDefaults();\r\n            _self.getCookieMgr = function () {\r\n                return safeGetCookieMgr(_self[_DYN_CORE /* @min:%2ecore */]);\r\n            };\r\n            _self.processTelemetry = function (env, itemCtx) {\r\n                _self.processNext(env, itemCtx);\r\n            };\r\n            _self.trackEvent = function (event, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(event, EventTelemetry[_DYN_DATA_TYPE /* @min:%2edataType */], EventTelemetry[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(2 /* eLoggingSeverity.WARNING */, 39 /* _eInternalMessageId.TrackTraceFailed */, \"trackTrace failed, trace will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n             * @param   name    A string that identifies this event uniquely within the document.\r\n             */\r\n            _self.startTrackEvent = function (name) {\r\n                try {\r\n                    _eventTracking.start(name);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 29 /* _eInternalMessageId.StartTrackEventFailed */, \"startTrackEvent failed, event will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Log an extended event that you started timing with `startTrackEvent`.\r\n             * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n             * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n             * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n             */\r\n            _self.stopTrackEvent = function (name, properties, measurements) {\r\n                try {\r\n                    _eventTracking.stop(name, undefined, properties, measurements);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 30 /* _eInternalMessageId.StopTrackEventFailed */, \"stopTrackEvent failed, event will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Log a diagnostic message\r\n             * @param trace\r\n             * @param ICustomProperties.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackTrace = function (trace, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(trace, Trace[_DYN_DATA_TYPE /* @min:%2edataType */], Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(2 /* eLoggingSeverity.WARNING */, 39 /* _eInternalMessageId.TrackTraceFailed */, \"trackTrace failed, trace will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Log a numeric value that is not associated with a specific event. Typically\r\n             * used to send regular reports of performance indicators. To send single measurement, just\r\n             * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n             * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n             * and sending the resulting average at intervals\r\n             * @param metric - input object argument. Only name and average are mandatory.\r\n             * @param } customProperties additional data used to filter metrics in the\r\n             * portal. Defaults to empty.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackMetric = function (metric, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(metric, Metric[_DYN_DATA_TYPE /* @min:%2edataType */], Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 36 /* _eInternalMessageId.TrackMetricFailed */, \"trackMetric failed, metric will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Logs that a page or other item was viewed.\r\n             * @param IPageViewTelemetry - The string you used as the name in startTrackPage. Defaults to the document title.\r\n             * @param customProperties - Additional data used to filter events and metrics. Defaults to empty.\r\n             * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n             */\r\n            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */] = function (pageView, customProperties) {\r\n                try {\r\n                    var inPv = pageView || {};\r\n                    _pageViewManager[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */](inPv, __assign(__assign(__assign({}, inPv.properties), inPv.measurements), customProperties));\r\n                    if (_autoTrackPageVisitTime) {\r\n                        _pageVisitTimeManager[_DYN_TRACK_PREVIOUS_PAGE_1 /* @min:%2etrackPreviousPageVisit */](inPv.name, inPv.uri);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 37 /* _eInternalMessageId.TrackPVFailed */, \"trackPageView failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n             * @param pageView - Page view item to be sent\r\n             * @param properties - Custom properties (Part C) that a user can add to the telemetry item\r\n             * @param systemProperties - System level properties (Part A) that a user can add to the telemetry item\r\n             */\r\n            _self[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */] = function (pageView, properties, systemProperties) {\r\n                var doc = getDocument();\r\n                if (doc) {\r\n                    pageView.refUri = pageView.refUri === undefined ? doc.referrer : pageView.refUri;\r\n                }\r\n                if (isNullOrUndefined(pageView[_DYN_START_TIME /* @min:%2estartTime */])) {\r\n                    // calculate the start time manually\r\n                    var duration = ((properties || pageView[_DYN_PROPERTIES /* @min:%2eproperties */] || {})[_DYN_DURATION /* @min:%2eduration */] || 0);\r\n                    pageView[_DYN_START_TIME /* @min:%2estartTime */] = new Date(new Date().getTime() - duration);\r\n                }\r\n                var telemetryItem = createTelemetryItem(pageView, PageView[_DYN_DATA_TYPE /* @min:%2edataType */], PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                // reset ajaxes counter\r\n                _trackAjaxAttempts = 0;\r\n            };\r\n            /**\r\n             * @ignore INTERNAL ONLY\r\n             * @param pageViewPerformance\r\n             * @param properties\r\n             */\r\n            _self[_DYN_SEND_PAGE_VIEW_PERFO3 /* @min:%2esendPageViewPerformanceInternal */] = function (pageViewPerformance, properties, systemProperties) {\r\n                var telemetryItem = createTelemetryItem(pageViewPerformance, PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            };\r\n            /**\r\n             * Send browser performance metrics.\r\n             * @param pageViewPerformance\r\n             * @param customProperties\r\n             */\r\n            _self.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n                var inPvp = pageViewPerformance || {};\r\n                try {\r\n                    _pageViewPerformanceManager[_DYN_POPULATE_PAGE_VIEW_P4 /* @min:%2epopulatePageViewPerformanceEvent */](inPvp);\r\n                    _self[_DYN_SEND_PAGE_VIEW_PERFO3 /* @min:%2esendPageViewPerformanceInternal */](inPvp, customProperties);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 37 /* _eInternalMessageId.TrackPVFailed */, \"trackPageViewPerformance failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n             * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n             * and send the event.\r\n             * @param name - A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n             */\r\n            _self.startTrackPage = function (name) {\r\n                try {\r\n                    if (typeof name !== \"string\") {\r\n                        var doc = getDocument();\r\n                        name = doc && doc.title || \"\";\r\n                    }\r\n                    _pageTracking.start(name);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 31 /* _eInternalMessageId.StartTrackFailed */, \"startTrackPage failed, page view may not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n             * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n             * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n             * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n             * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n             * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n             */\r\n            _self.stopTrackPage = function (name, url, properties, measurement) {\r\n                try {\r\n                    if (typeof name !== \"string\") {\r\n                        var doc = getDocument();\r\n                        name = doc && doc.title || \"\";\r\n                    }\r\n                    if (typeof url !== \"string\") {\r\n                        var loc = getLocation();\r\n                        url = loc && loc[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    _pageTracking.stop(name, url, properties, measurement);\r\n                    if (_autoTrackPageVisitTime) {\r\n                        _pageVisitTimeManager[_DYN_TRACK_PREVIOUS_PAGE_1 /* @min:%2etrackPreviousPageVisit */](name, url);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 32 /* _eInternalMessageId.StopTrackFailed */, \"stopTrackPage failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n            * @ignore INTERNAL ONLY\r\n            * @param exception\r\n            * @param properties\r\n            * @param systemProperties\r\n            */\r\n            _self[_DYN_SEND_EXCEPTION_INTER5 /* @min:%2esendExceptionInternal */] = function (exception, customProperties, systemProperties) {\r\n                var _a;\r\n                // Adding additional edge cases to handle\r\n                // - Not passing anything (null / undefined)\r\n                var theError = (exception && (exception[_DYN_EXCEPTION /* @min:%2eexception */] || exception[_DYN_ERROR /* @min:%2eerror */])) ||\r\n                    // - Handle someone calling trackException based of v1 API where the exception was the Error\r\n                    isError(exception) && exception ||\r\n                    // - Handles no error being defined and instead of creating a new Error() instance attempt to map so any stacktrace\r\n                    //   is preserved and does not list ApplicationInsights code as the source\r\n                    { name: (exception && typeof exception), message: exception || strNotSpecified };\r\n                // If no exception object was passed assign to an empty object to avoid internal exceptions\r\n                exception = exception || {};\r\n                var exceptionPartB = new Exception(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), theError, exception[_DYN_PROPERTIES /* @min:%2eproperties */] || customProperties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n                var doc = getDocument();\r\n                if (doc && ((_a = _self.config.expCfg) === null || _a === void 0 ? void 0 : _a.inclScripts)) {\r\n                    var scriptsInfo = findAllScripts(doc);\r\n                    exceptionPartB[_DYN_PROPERTIES /* @min:%2eproperties */][\"exceptionScripts\"] = JSON.stringify(scriptsInfo);\r\n                }\r\n                var telemetryItem = createTelemetryItem(exceptionPartB, Exception[_DYN_DATA_TYPE /* @min:%2edataType */], Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            };\r\n            /**\r\n             * Log an exception you have caught.\r\n             *\r\n             * @param exception -   Object which contains exception to be sent\r\n             * @param } customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n             *\r\n             * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackException = function (exception, customProperties) {\r\n                if (exception && !exception[_DYN_EXCEPTION /* @min:%2eexception */] && exception[_DYN_ERROR /* @min:%2eerror */]) {\r\n                    exception[_DYN_EXCEPTION /* @min:%2eexception */] = exception[_DYN_ERROR /* @min:%2eerror */];\r\n                }\r\n                try {\r\n                    _self[_DYN_SEND_EXCEPTION_INTER5 /* @min:%2esendExceptionInternal */](exception, customProperties);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 35 /* _eInternalMessageId.TrackExceptionFailed */, \"trackException failed, exception will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Custom error handler for Application Insights Analytics\r\n             * @param exception\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self[_DYN__ONERROR /* @min:%2e_onerror */] = function (exception) {\r\n                var error = exception && exception[_DYN_ERROR /* @min:%2eerror */];\r\n                var evt = exception && exception.evt;\r\n                try {\r\n                    if (!evt) {\r\n                        var _window = getWindow();\r\n                        if (_window) {\r\n                            evt = _window[strEvent];\r\n                        }\r\n                    }\r\n                    var url = (exception && exception.url) || (getDocument() || {}).URL;\r\n                    // If no error source is provided assume the default window.onerror handler\r\n                    var errorSrc = exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */] || \"window.onerror@\" + url + \":\" + (exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0) + \":\" + (exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0);\r\n                    var properties = {\r\n                        errorSrc: errorSrc,\r\n                        url: url,\r\n                        lineNumber: exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0,\r\n                        columnNumber: exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0,\r\n                        message: exception[_DYN_MESSAGE /* @min:%2emessage */]\r\n                    };\r\n                    if (isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception[_DYN_ERROR /* @min:%2eerror */])) {\r\n                        _sendCORSException(Exception[_DYN__CREATE_AUTO_EXCEPTI6 /* @min:%2eCreateAutoException */](\"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\", url, exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0, exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0, error, evt, null, errorSrc), properties);\r\n                    }\r\n                    else {\r\n                        if (!exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */]) {\r\n                            exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */] = errorSrc;\r\n                        }\r\n                        _self.trackException({ exception: exception, severityLevel: 3 /* eSeverityLevel.Error */ }, properties);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    var errorString = error ? (error.name + \", \" + error[_DYN_MESSAGE /* @min:%2emessage */]) : \"null\";\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 11 /* _eInternalMessageId.ExceptionWhileLoggingError */, \"_onError threw exception while logging error, error will not be collected: \"\r\n                        + getExceptionName(e), { exception: dumpObj(e), errorString: errorString });\r\n                }\r\n            };\r\n            _self[_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */] = function (telemetryInitializer) {\r\n                if (_self[_DYN_CORE /* @min:%2ecore */]) {\r\n                    // Just add to the core\r\n                    return _self[_DYN_CORE /* @min:%2ecore */][_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */](telemetryInitializer);\r\n                }\r\n                // Handle \"pre-initialization\" telemetry initializers (for backward compatibility)\r\n                if (!_preInitTelemetryInitializers) {\r\n                    _preInitTelemetryInitializers = [];\r\n                }\r\n                _preInitTelemetryInitializers.push(telemetryInitializer);\r\n            };\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    return;\r\n                }\r\n                if (isNullOrUndefined(core)) {\r\n                    throwError(\"Error initializing\");\r\n                }\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                try {\r\n                    _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self.identifier), core.evtNamespace && core.evtNamespace());\r\n                    if (_preInitTelemetryInitializers) {\r\n                        arrForEach(_preInitTelemetryInitializers, function (initializer) {\r\n                            core[_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */](initializer);\r\n                        });\r\n                        _preInitTelemetryInitializers = null;\r\n                    }\r\n                    _populateDefaults(config);\r\n                    _pageViewPerformanceManager = new PageViewPerformanceManager(_self[_DYN_CORE /* @min:%2ecore */]);\r\n                    _pageViewManager = new PageViewManager(_self, _extConfig.overridePageViewDuration, _self[_DYN_CORE /* @min:%2ecore */], _pageViewPerformanceManager);\r\n                    _pageVisitTimeManager = new PageVisitTimeManager(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), function (pageName, pageUrl, pageVisitTime) { return trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n                    _eventTracking = new Timing(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), \"trackEvent\");\r\n                    _eventTracking.action =\r\n                        function (name, url, duration, properties, measurements) {\r\n                            if (!properties) {\r\n                                properties = {};\r\n                            }\r\n                            if (!measurements) {\r\n                                measurements = {};\r\n                            }\r\n                            properties.duration = duration[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            _self.trackEvent({ name: name, properties: properties, measurements: measurements });\r\n                        };\r\n                    // initialize page view timing\r\n                    _pageTracking = new Timing(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), \"trackPageView\");\r\n                    _pageTracking.action = function (name, url, duration, properties, measurements) {\r\n                        // duration must be a custom property in order for the collector to extract it\r\n                        if (isNullOrUndefined(properties)) {\r\n                            properties = {};\r\n                        }\r\n                        properties.duration = duration[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                        var pageViewItem = {\r\n                            name: name,\r\n                            uri: url,\r\n                            properties: properties,\r\n                            measurements: measurements\r\n                        };\r\n                        _self[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageViewItem, properties);\r\n                    };\r\n                    if (hasWindow()) {\r\n                        _updateExceptionTracking();\r\n                        _updateLocationChange();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // resetting the initialized state because of failure\r\n                    _self.setInitialized(false);\r\n                    throw e;\r\n                }\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _pageViewManager && _pageViewManager.teardown(unloadCtx, unloadState);\r\n                // Just register to remove all events associated with this namespace\r\n                eventOff(window, null, null, _evtNamespace);\r\n                _initDefaults();\r\n            };\r\n            function _populateDefaults(config) {\r\n                var identifier = _self.identifier;\r\n                var core = _self[_DYN_CORE /* @min:%2ecore */];\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(config, function () {\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    _extConfig = ctx.getExtCfg(identifier, defaultValues);\r\n                    _autoTrackPageVisitTime = _extConfig[_DYN_AUTO_TRACK_PAGE_VISI9 /* @min:%2eautoTrackPageVisitTime */];\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    _updateStorageUsage(_extConfig);\r\n                    // _updateBrowserLinkTracking\r\n                    _isBrowserLinkTrackingEnabled = _extConfig[_DYN_IS_BROWSER_LINK_TRAC10 /* @min:%2eisBrowserLinkTrackingEnabled */];\r\n                    _addDefaultTelemetryInitializers();\r\n                }));\r\n            }\r\n            /**\r\n             * Log a page visit time\r\n             * @param    pageName    Name of page\r\n             * @param    pageVisitDuration Duration of visit to the page in milliseconds\r\n             */\r\n            function trackPageVisitTime(pageName, pageUrl, pageVisitTime) {\r\n                var properties = { PageName: pageName, PageUrl: pageUrl };\r\n                _self.trackMetric({\r\n                    name: \"PageVisitTime\",\r\n                    average: pageVisitTime,\r\n                    max: pageVisitTime,\r\n                    min: pageVisitTime,\r\n                    sampleCount: 1\r\n                }, properties);\r\n            }\r\n            function _addDefaultTelemetryInitializers() {\r\n                if (!_browserLinkInitializerAdded && _isBrowserLinkTrackingEnabled) {\r\n                    var browserLinkPaths_1 = [\"/browserLinkSignalR/\", \"/__browserLink/\"];\r\n                    var dropBrowserLinkRequests = function (envelope) {\r\n                        if (_isBrowserLinkTrackingEnabled && envelope.baseType === RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n                            var remoteData = envelope.baseData;\r\n                            if (remoteData) {\r\n                                for (var i = 0; i < browserLinkPaths_1[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                                    if (remoteData.target && strIndexOf(remoteData.target, browserLinkPaths_1[i]) >= 0) {\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return true;\r\n                    };\r\n                    _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](_self[_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */](dropBrowserLinkRequests));\r\n                    _browserLinkInitializerAdded = true;\r\n                }\r\n            }\r\n            function _sendCORSException(exception, properties) {\r\n                var telemetryItem = createTelemetryItem(exception, Exception[_DYN_DATA_TYPE /* @min:%2edataType */], Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            }\r\n            function _updateExceptionTracking() {\r\n                var _window = getWindow();\r\n                var locn = getLocation(true);\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extConfig, function () {\r\n                    _disableExceptionTracking = _extConfig.disableExceptionTracking;\r\n                    if (!_disableExceptionTracking && !_autoExceptionInstrumented && !_extConfig.autoExceptionInstrumented) {\r\n                        // We want to enable exception auto collection and it has not been done so yet\r\n                        _addHook(InstrumentEvent(_window, \"onerror\", {\r\n                            ns: _evtNamespace,\r\n                            rsp: function (callDetails, message, url, lineNumber, columnNumber, error) {\r\n                                if (!_disableExceptionTracking && callDetails.rslt !== true) {\r\n                                    _self[_DYN__ONERROR /* @min:%2e_onerror */](Exception[_DYN__CREATE_AUTO_EXCEPTI6 /* @min:%2eCreateAutoException */](message, url, lineNumber, columnNumber, error, callDetails.evt));\r\n                                }\r\n                            }\r\n                        }, false));\r\n                        _autoExceptionInstrumented = true;\r\n                    }\r\n                }));\r\n                _addUnhandledPromiseRejectionTracking(_window, locn);\r\n            }\r\n            function _updateLocationChange() {\r\n                var win = getWindow();\r\n                var locn = getLocation(true);\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extConfig, function () {\r\n                    _enableAutoRouteTracking = _extConfig[_DYN_ENABLE_AUTO_ROUTE_TR11 /* @min:%2eenableAutoRouteTracking */] === true;\r\n                    /**\r\n                     * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n                     */\r\n                    if (win && _enableAutoRouteTracking && !_historyListenerAdded && hasHistory()) {\r\n                        var _history = getHistory();\r\n                        if (isFunction(_history.pushState) && isFunction(_history.replaceState) && typeof Event !== strUndefined) {\r\n                            _addHistoryListener(win, _history, locn);\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n            function _getDistributedTraceCtx() {\r\n                var distributedTraceCtx = null;\r\n                if (_self[_DYN_CORE /* @min:%2ecore */] && _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx) {\r\n                    distributedTraceCtx = _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx(false);\r\n                }\r\n                if (!distributedTraceCtx) {\r\n                    // Fallback when using an older Core and PropertiesPlugin\r\n                    var properties = _self[_DYN_CORE /* @min:%2ecore */].getPlugin(PropertiesPluginIdentifier);\r\n                    if (properties) {\r\n                        var context = properties.plugin.context;\r\n                        if (context) {\r\n                            distributedTraceCtx = createDistributedTraceContextFromTrace(context.telemetryTrace);\r\n                        }\r\n                    }\r\n                }\r\n                return distributedTraceCtx;\r\n            }\r\n            /**\r\n             * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n             */\r\n            function _addHistoryListener(win, history, locn) {\r\n                if (_historyListenerAdded) {\r\n                    return;\r\n                }\r\n                // Name Prefix is only referenced during the initial initialization and cannot be changed afterwards\r\n                var namePrefix = _extConfig.namePrefix || \"\";\r\n                function _popstateHandler() {\r\n                    if (_enableAutoRouteTracking) {\r\n                        _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                    }\r\n                }\r\n                function _locationChangeHandler() {\r\n                    // We always track the changes (if the handler is installed) to handle the feature being disabled between location changes\r\n                    if (_currUri) {\r\n                        _prevUri = _currUri;\r\n                        _currUri = locn && locn[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    else {\r\n                        _currUri = locn && locn[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    if (_enableAutoRouteTracking) {\r\n                        var distributedTraceCtx = _getDistributedTraceCtx();\r\n                        if (distributedTraceCtx) {\r\n                            distributedTraceCtx.setTraceId(generateW3CId());\r\n                            var traceLocationName = \"_unknown_\";\r\n                            if (locn && locn.pathname) {\r\n                                traceLocationName = locn.pathname + (locn.hash || \"\");\r\n                            }\r\n                            // This populates the ai.operation.name which has a maximum size of 1024 so we need to sanitize it\r\n                            distributedTraceCtx.setName(dataSanitizeString(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), traceLocationName));\r\n                        }\r\n                        scheduleTimeout((function (uri) {\r\n                            // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */]({ refUri: uri, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                        }).bind(_self, _prevUri), _self.autoRoutePVDelay);\r\n                    }\r\n                }\r\n                _addHook(InstrumentEvent(history, \"pushState\", {\r\n                    ns: _evtNamespace,\r\n                    rsp: function () {\r\n                        if (_enableAutoRouteTracking) {\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"pushState\"));\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                        }\r\n                    }\r\n                }, true));\r\n                _addHook(InstrumentEvent(history, \"replaceState\", {\r\n                    ns: _evtNamespace,\r\n                    rsp: function () {\r\n                        if (_enableAutoRouteTracking) {\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"replaceState\"));\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                        }\r\n                    }\r\n                }, true));\r\n                eventOn(win, namePrefix + \"popstate\", _popstateHandler, _evtNamespace);\r\n                eventOn(win, namePrefix + \"locationchange\", _locationChangeHandler, _evtNamespace);\r\n                _historyListenerAdded = true;\r\n            }\r\n            function _addUnhandledPromiseRejectionTracking(_window, _location) {\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extConfig, function () {\r\n                    _enableUnhandledPromiseRejectionTracking = _extConfig[_DYN_ENABLE_UNHANDLED_PRO12 /* @min:%2eenableUnhandledPromiseRejectionTracking */] === true;\r\n                    _autoExceptionInstrumented = _autoExceptionInstrumented || _extConfig[_DYN_AUTO_UNHANDLED_PROMI13 /* @min:%2eautoUnhandledPromiseInstrumented */];\r\n                    if (_enableUnhandledPromiseRejectionTracking && !_autoUnhandledPromiseInstrumented) {\r\n                        // We want to enable exception auto collection and it has not been done so yet\r\n                        _addHook(InstrumentEvent(_window, \"onunhandledrejection\", {\r\n                            ns: _evtNamespace,\r\n                            rsp: function (callDetails, error) {\r\n                                if (_enableUnhandledPromiseRejectionTracking && callDetails.rslt !== true) { // handled could be typeof function\r\n                                    _self[_DYN__ONERROR /* @min:%2e_onerror */](Exception[_DYN__CREATE_AUTO_EXCEPTI6 /* @min:%2eCreateAutoException */](_getReason(error), _location ? _location[_DYN_HREF /* @min:%2ehref */] : \"\", 0, 0, error, callDetails.evt));\r\n                                }\r\n                            }\r\n                        }, false));\r\n                        _extConfig[_DYN_AUTO_UNHANDLED_PROMI13 /* @min:%2eautoUnhandledPromiseInstrumented */] = _autoUnhandledPromiseInstrumented = true;\r\n                    }\r\n                }));\r\n            }\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {eLoggingSeverity} - The severity of the log message\r\n             * @param msgId - {_eInternalLogMessage} - The log message.\r\n             */\r\n            function _throwInternal(severity, msgId, msg, properties, isUserAct) {\r\n                _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]().throwInternal(severity, msgId, msg, properties, isUserAct);\r\n            }\r\n            function _initDefaults() {\r\n                _eventTracking = null;\r\n                _pageTracking = null;\r\n                _pageViewManager = null;\r\n                _pageViewPerformanceManager = null;\r\n                _pageVisitTimeManager = null;\r\n                _preInitTelemetryInitializers = null;\r\n                _isBrowserLinkTrackingEnabled = false;\r\n                _browserLinkInitializerAdded = false;\r\n                _enableAutoRouteTracking = false;\r\n                _historyListenerAdded = false;\r\n                _disableExceptionTracking = false;\r\n                _autoExceptionInstrumented = false;\r\n                _enableUnhandledPromiseRejectionTracking = false;\r\n                _autoUnhandledPromiseInstrumented = false;\r\n                _autoTrackPageVisitTime = false;\r\n                // Counts number of trackAjax invocations.\r\n                // By default we only monitor X ajax call per view to avoid too much load.\r\n                // Default value is set in config.\r\n                // This counter keeps increasing even after the limit is reached.\r\n                _trackAjaxAttempts = 0;\r\n                // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n                var location = getLocation(true);\r\n                _prevUri = location && location[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                _currUri = null;\r\n                _evtNamespace = null;\r\n                _extConfig = null;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _extConfig; }\r\n                });\r\n            }\r\n            // For backward compatibility\r\n            objDefine(_self, \"_pageViewManager\", { g: function () { return _pageViewManager; } });\r\n            objDefine(_self, \"_pageViewPerformanceManager\", { g: function () { return _pageViewPerformanceManager; } });\r\n            objDefine(_self, \"_pageVisitTimeManager\", { g: function () { return _pageVisitTimeManager; } });\r\n            objDefine(_self, \"_evtNamespace\", { g: function () { return \".\" + _evtNamespace; } });\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AnalyticsPlugin.prototype.getCookieMgr.\r\n// Removed Stub for AnalyticsPlugin.prototype.processTelemetry.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.startTrackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.stopTrackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackTrace.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackMetric.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackPageView.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendPageViewInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendPageViewPerformanceInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackPageViewPerformance.\r\n// Removed Stub for AnalyticsPlugin.prototype.startTrackPage.\r\n// Removed Stub for AnalyticsPlugin.prototype.stopTrackPage.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendExceptionInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackException.\r\n// Removed Stub for AnalyticsPlugin.prototype._onerror.\r\n// Removed Stub for AnalyticsPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for AnalyticsPlugin.prototype.initialize.\r\n    AnalyticsPlugin.Version = '3.3.1'; // Not currently used anywhere\r\n    return AnalyticsPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { AnalyticsPlugin };\r\n//# sourceMappingURL=AnalyticsPlugin.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlCanUseSessionStorage, utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _warnToConsole, dateNow, dumpObj, getJSON, hasJSON, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_PAGE_VISIT_START_TIM18, _DYN_TRACK_PREVIOUS_PAGE_1 } from \"../../__DynamicConstants\";\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler - Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        var prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        dynamicProto(PageVisitTimeManager, this, function (_self) {\r\n            _self[_DYN_TRACK_PREVIOUS_PAGE_1 /* @min:%2etrackPreviousPageVisit */] = function (currentPageName, currentPageUrl) {\r\n                try {\r\n                    // Restart timer for new page view\r\n                    var prevPageVisitTimeData = restartPageVisitTimer(currentPageName, currentPageUrl);\r\n                    // If there was a page already being timed, track the visit time for it now.\r\n                    if (prevPageVisitTimeData) {\r\n                        pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Auto track page visit time failed, metric will not be collected: \" + dumpObj(e));\r\n                }\r\n            };\r\n            /**\r\n             * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n             * @param pageName - Name of page to begin timing visit duration\r\n             * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n             */\r\n            function restartPageVisitTimer(pageName, pageUrl) {\r\n                var prevPageVisitData = null;\r\n                try {\r\n                    prevPageVisitData = stopPageVisitTimer();\r\n                    if (utlCanUseSessionStorage()) {\r\n                        if (utlGetSessionStorage(logger, prevPageVisitDataKeyName) != null) {\r\n                            throwError(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                        }\r\n                        var currPageVisitDataStr = getJSON().stringify(new PageVisitData(pageName, pageUrl));\r\n                        utlSetSessionStorage(logger, prevPageVisitDataKeyName, currPageVisitDataStr);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Call to restart failed: \" + dumpObj(e));\r\n                    prevPageVisitData = null;\r\n                }\r\n                return prevPageVisitData;\r\n            }\r\n            /**\r\n             * Stops timing of current page, if exists.\r\n             * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n             */\r\n            function stopPageVisitTimer() {\r\n                var prevPageVisitData = null;\r\n                try {\r\n                    if (utlCanUseSessionStorage()) {\r\n                        // Define end time of page's visit\r\n                        var pageVisitEndTime = dateNow();\r\n                        // Try to retrieve  page name and start time from session storage\r\n                        var pageVisitDataJsonStr = utlGetSessionStorage(logger, prevPageVisitDataKeyName);\r\n                        if (pageVisitDataJsonStr && hasJSON()) {\r\n                            // if previous page data exists, set end time of visit\r\n                            prevPageVisitData = getJSON().parse(pageVisitDataJsonStr);\r\n                            prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData[_DYN_PAGE_VISIT_START_TIM18 /* @min:%2epageVisitStartTime */];\r\n                            // Remove data from storage since we already used it\r\n                            utlRemoveSessionStorage(logger, prevPageVisitDataKeyName);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Stop page visit timer failed: \" + dumpObj(e));\r\n                    prevPageVisitData = null;\r\n                }\r\n                return prevPageVisitData;\r\n            }\r\n            // For backward compatibility\r\n            objDefine(_self, \"_logger\", { g: function () { return logger; } });\r\n            objDefine(_self, \"pageVisitTimeTrackingHandler\", { g: function () { return pageVisitTimeTrackingHandler; } });\r\n        });\r\n    }\r\n// Removed Stub for PageVisitTimeManager.prototype.trackPreviousPageVisit.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageVisitTimeManager.__ieDyn=1;\n\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this[_DYN_PAGE_VISIT_START_TIM18 /* @min:%2epageVisitStartTime */] = dateNow();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dateTimeUtilsDuration } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        var _self = this;\r\n        var _events = {};\r\n        _self.start = function (name) {\r\n            if (typeof _events[name] !== \"undefined\") {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 62 /* _eInternalMessageId.StartCalledMoreThanOnce */, \"start was called more than once for this event without calling stop.\", { name: name, key: name }, true);\r\n            }\r\n            _events[name] = +new Date;\r\n        };\r\n        _self.stop = function (name, url, properties, measurements) {\r\n            var start = _events[name];\r\n            if (isNaN(start)) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 63 /* _eInternalMessageId.StopCalledWithoutStart */, \"stop was called without a corresponding start.\", { name: name, key: name }, true);\r\n            }\r\n            else {\r\n                var end = +new Date;\r\n                var duration = dateTimeUtilsDuration(start, end);\r\n                _self.action(name, url, duration, properties, measurements);\r\n            }\r\n            delete _events[name];\r\n            _events[name] = undefined;\r\n        };\r\n    }\r\n    return Timing;\r\n}());\r\nexport { Timing };\r\n//# sourceMappingURL=Timing.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_FEATURE_OPT_IN = \"featureOptIn\"; // Count: 4\r\nexport var _DYN_ON_CFG_CHANGE_RECEIV0 = \"onCfgChangeReceive\"; // Count: 2\r\nexport var _DYN_NON_OVERRIDE_CONFIGS = \"nonOverrideConfigs\"; // Count: 2\r\nexport var _DYN_SCHEDULE_FETCH_TIMEO1 = \"scheduleFetchTimeout\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { isNullOrUndefined, isObject, objExtend, objForEachKey, setValueByKey } from \"@nevware21/ts-utils\";\r\nimport { _DYN_FEATURE_OPT_IN } from \"./__DynamicConstants\";\r\n/**\r\n * Delete a config key in the given cfg, if the config key exists in nonOverrideConfigs and its value is set to true\r\n * @param cfg cfg to modify\r\n * @param nonOverrideConfigs nonOverrideConfigs\r\n * @param curLevel cur config level, starting at 0\r\n * @param maxLevel max config level\r\n * @returns new copy of modified configs\r\n */\r\nexport function replaceByNonOverrideCfg(cfg, nonOverrideConfigs, curLevel, maxLevel) {\r\n    try {\r\n        var exceedMaxLevel = curLevel > maxLevel;\r\n        if (exceedMaxLevel) {\r\n            cfg = null;\r\n        }\r\n        var curCfg_1 = curLevel == 0 ? objExtend({}, cfg) : cfg; // only copy cfg at the begining level\r\n        if (curCfg_1 && nonOverrideConfigs && !exceedMaxLevel) {\r\n            objForEachKey(curCfg_1, function (key) {\r\n                var nonOverrideVal = nonOverrideConfigs[key];\r\n                if (!!nonOverrideVal) {\r\n                    if (isObject(curCfg_1[key]) && isObject(nonOverrideVal)) {\r\n                        curCfg_1[key] = replaceByNonOverrideCfg(curCfg_1[key], nonOverrideVal, ++curLevel, maxLevel);\r\n                    }\r\n                    else {\r\n                        delete curCfg_1[key];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return curCfg_1;\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    // if errors happen, do nothing\r\n    return cfg;\r\n}\r\n//                                                     CDN Mode, value = B (CDN value = B)\r\n//                                |--------------------------------------------------------------------------|-----------|\r\n//                                |                    | none        | disabled    | enabled     | forceOn   | forceOff  |\r\n//                                | ------------------ | ----------- | ----------- | ----------- | --------- | --------- |\r\n// | User Mode, value = A         | none               | none        | disabled    | enabled     | enabled   | disabled  |\r\n// (user Value = A)               | disabled           | disabled    | disabled    | disabled    | enabled   | disabled  |\r\n//                                | enabled            | enabled     | disabled    | enabled     | enabled   | disabled  |\r\n//                                | none(blockCdn)     | none        | none        | none        | none      | none      |\r\n//                                | disabled(blockCdn) | disabled    | disabled    | disabled    | disabled  | disabled  |\r\n//                                | enabled(blockCdn)  | enabled     | enabled     | enabled     | enabled   | enabled   |\r\n// This matrix identifies how feature based overrides are selected (if present)\r\n//                                cdn Mode (cdn Value = B)\r\n//                   |---------------------------------------------------------------------------|\r\n//                   |                    | none     | disabled | enabled  | forceOn  | forceOff |\r\n//                   | ------------------ | ---------| ---------| ---------| ---------|----------|\r\n// | User Mode       | none               | A        | A        | A || B   | B || A   | B || A   |\r\n// (user Value = A)  | disabled           | A        | A        | A        | B || A   | B || A   |\r\n//                   | enabled            | A        | A        | A || B   | B || A   | B || A   |\r\n//                   | none(blockCdn)     | A        | A        | A        | A        | A        |\r\n//                   | disabled(blockCdn) | A        | A        | A        | A        | A        |\r\n//                   | enabled(blockCdn)  | A        | A        | A        | A        | A        |\r\n// Note:\r\n// Where the \"value\" is an object (map) of encoded key/values which will be used to override the real configuration\r\n// A = either the user supplied enable/disable value (via the `config.featureOptIn[name]`) or if not defined by the user the SDK defaults of the same.\r\n// B = The enable/disable value obtained from the CDN for the named feature\r\n// These are evaluated based on the above matrix to either\r\n// - A (Always the user/sdk value)\r\n// - B (Always the value from the CDN)\r\n// - A || B (If A is null or undefined use the value from the CDN (B) otherwise A)\r\n// - B || A (If B is null or undefined use the user/SDK value otherwise use the value from the CDN)\r\n//\r\n// The result of the value may also be null / undefined, which means there are no overrides to apply when the feature is enabled\r\nvar F = \"featureOptIn.\";\r\nvar M = \".mode\";\r\nvar ON = \".onCfg\";\r\nvar OFF = \".offCfg\";\r\nexport function resolveCdnFeatureCfg(field, cdnCfg, userOptInDetails) {\r\n    var _a;\r\n    // cdn conifg value\r\n    if (!cdnCfg || !cdnCfg.enabled) {\r\n        return null;\r\n    }\r\n    var cdnFt = (cdnCfg[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */] || {})[field] || { mode: 1 /* CdnFeatureMode.none */ };\r\n    var cdnM = cdnFt.mode;\r\n    var cdnOnV = cdnFt.onCfg;\r\n    var cdnOffV = cdnFt.offCfg;\r\n    var userFt = (userOptInDetails || {})[field] || { mode: 2 /* FeatureOptInMode.disable */ }; // default user mode is disable\r\n    var userM = userFt.mode;\r\n    var userOnV = userFt.onCfg;\r\n    var userOffV = userFt.offCfg;\r\n    var blockCdn = !!userFt.blockCdnCfg;\r\n    var mFld = F + field + M;\r\n    var onFld = F + field + ON;\r\n    var offFld = F + field + OFF;\r\n    var mode = userM;\r\n    var onV = userOnV;\r\n    var offV = userOffV;\r\n    if (!blockCdn) {\r\n        if (cdnM === 4 /* CdnFeatureMode.forceOn */ || cdnM === 5 /* CdnFeatureMode.forceOff */) {\r\n            mode = (cdnM == 4 /* CdnFeatureMode.forceOn */ ? 3 /* FeatureOptInMode.enable */ : 2 /* FeatureOptInMode.disable */);\r\n            onV = cdnOnV || userOnV;\r\n            offV = cdnOffV || userOffV;\r\n        }\r\n        else if (cdnM === 2 /* CdnFeatureMode.disable */ || userM === 2 /* FeatureOptInMode.disable */) {\r\n            mode = 2 /* FeatureOptInMode.disable */;\r\n            onV = userOnV || cdnOnV;\r\n            offV = userOffV || cdnOffV;\r\n        }\r\n        else if (cdnM === 3 /* CdnFeatureMode.enable */) {\r\n            mode = 3 /* FeatureOptInMode.enable */;\r\n            onV = userOnV || cdnOnV;\r\n            offV = userOffV || cdnOffV;\r\n        }\r\n        else if (cdnM === 1 /* CdnFeatureMode.none */ && userM === 1 /* FeatureOptInMode.none */) {\r\n            mode = 1 /* FeatureOptInMode.none */;\r\n        }\r\n    }\r\n    return _a = {},\r\n        _a[mFld] = mode,\r\n        _a[onFld] = onV,\r\n        _a[offFld] = offV,\r\n        _a;\r\n}\r\n// helper function to get cdn config with opt-in features\r\nexport function applyCdnfeatureCfg(cdnCfg, core) {\r\n    try {\r\n        if (!cdnCfg || !cdnCfg.enabled) {\r\n            return null;\r\n        }\r\n        if (!cdnCfg[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */]) {\r\n            return cdnCfg.config;\r\n        }\r\n        var optInMap = cdnCfg[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */];\r\n        var cdnConfig_1 = cdnCfg.config || {};\r\n        objForEachKey(optInMap, function (key) {\r\n            var featureVal = resolveCdnFeatureCfg(key, cdnCfg, core.config[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */]);\r\n            if (!isNullOrUndefined(featureVal)) {\r\n                objForEachKey(featureVal, function (config, val) {\r\n                    setValueByKey(cdnConfig_1, config, val);\r\n                });\r\n                _overrideCdnCfgByFeature(key, featureVal, cdnConfig_1);\r\n            }\r\n        });\r\n        return cdnConfig_1;\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\nfunction _overrideCdnCfgByFeature(field, ftVal, config) {\r\n    var mode = ftVal[F + field + M];\r\n    var val = ftVal[F + field + ON];\r\n    var dVal = ftVal[F + field + OFF];\r\n    var target = null;\r\n    if (mode === 3 /* FeatureOptInMode.enable */) {\r\n        target = val;\r\n    }\r\n    if (mode === 2 /* FeatureOptInMode.disable */) {\r\n        target = dVal;\r\n    }\r\n    if (target) {\r\n        objForEachKey(target, function (key, cfg) {\r\n            setValueByKey(config, key, cfg);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=CfgSyncHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* CfgSyncPlugin.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nvar _a;\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, createProcessTelemetryContext, createUniqueNamespace, eventOff, eventOn, getGlobal, getJSON, isFetchSupported, isXhrSupported, mergeEvtNamespace, onConfigChange, sendCustomEvent } from \"@microsoft/applicationinsights-core-js\";\r\nimport { doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { isFunction, isNullOrUndefined, isPlainObject, objDeepFreeze, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { applyCdnfeatureCfg, replaceByNonOverrideCfg } from \"./CfgSyncHelperFuncs\";\r\nimport { _DYN_NON_OVERRIDE_CONFIGS, _DYN_ON_CFG_CHANGE_RECEIV0, _DYN_SCHEDULE_FETCH_TIMEO1 } from \"./__DynamicConstants\";\r\nvar EVENT_NAME = \"ai_cfgsync\";\r\nvar STR_GET_METHOD = \"GET\";\r\nvar FETCH_TIMEOUT = 1800000; // 30 minutes\r\nvar udfVal = undefined;\r\nvar defaultNonOverrideCfg = { instrumentationKey: true, connectionString: true, endpointUrl: true };\r\nvar _defaultConfig = objDeepFreeze((_a = {\r\n        syncMode: 1 /* ICfgSyncMode.Broadcast */,\r\n        blkCdnCfg: udfVal,\r\n        customEvtName: udfVal,\r\n        cfgUrl: udfVal,\r\n        overrideSyncFn: udfVal,\r\n        overrideFetchFn: udfVal\r\n    },\r\n    _a[_DYN_ON_CFG_CHANGE_RECEIV0 /* @min:onCfgChangeReceive */] = udfVal,\r\n    _a[_DYN_SCHEDULE_FETCH_TIMEO1 /* @min:scheduleFetchTimeout */] = FETCH_TIMEOUT,\r\n    _a[_DYN_NON_OVERRIDE_CONFIGS /* @min:nonOverrideConfigs */] = defaultNonOverrideCfg,\r\n    _a));\r\nvar CfgSyncPlugin = /** @class */ (function (_super) {\r\n    __extends(CfgSyncPlugin, _super);\r\n    function CfgSyncPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 198;\r\n        _this.identifier = \"AppInsightsCfgSyncPlugin\";\r\n        var _extensionConfig;\r\n        var _mainConfig; // throttle config should be wrapped in IConfiguration\r\n        var _evtName;\r\n        var _evtNamespace;\r\n        var _cfgUrl;\r\n        var _timeoutHandle;\r\n        var _receiveChanges;\r\n        var _broadcastChanges;\r\n        var _blkCdnCfg;\r\n        var _fetchTimeout;\r\n        var _retryCnt;\r\n        var _onCfgChangeReceive;\r\n        var _nonOverrideConfigs;\r\n        var _fetchFn;\r\n        var _overrideFetchFn;\r\n        var _overrideSyncFn;\r\n        var _paused = false;\r\n        dynamicProto(CfgSyncPlugin, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self.identifier), core.evtNamespace && core.evtNamespace());\r\n                _populateDefaults(config);\r\n            };\r\n            _self.getCfg = function () {\r\n                return _mainConfig;\r\n            };\r\n            _self.pause = function () {\r\n                _paused = true;\r\n                _clearScheduledTimer();\r\n            };\r\n            _self.resume = function () {\r\n                _paused = false;\r\n                _setupTimer();\r\n            };\r\n            // used for V2 to manaully trigger config udpate\r\n            _self.setCfg = function (config) {\r\n                return _setCfg(config);\r\n            };\r\n            _self.sync = function (customDetails) {\r\n                return _sendCfgsyncEvents(customDetails);\r\n            };\r\n            _self.updateEventListenerName = function (eventName) {\r\n                return _updateEventListenerName(eventName);\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _eventOff();\r\n                _clearScheduledTimer();\r\n                _initDefaults();\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_broadcastChanges, _receiveChanges, _evtName, _blkCdnCfg, _nonOverrideConfigs];\r\n            };\r\n            function _initDefaults() {\r\n                _mainConfig = null;\r\n                _evtName = null;\r\n                _evtNamespace = null;\r\n                _cfgUrl = null;\r\n                _receiveChanges = null;\r\n                _broadcastChanges = null;\r\n                _nonOverrideConfigs = null;\r\n                _timeoutHandle = null;\r\n                _fetchTimeout = null;\r\n                _retryCnt = null;\r\n                _blkCdnCfg = null;\r\n                _overrideFetchFn = null;\r\n                _overrideSyncFn = null;\r\n                _onCfgChangeReceive = null;\r\n            }\r\n            function _populateDefaults(config) {\r\n                var identifier = _self.identifier;\r\n                var core = _self.core;\r\n                _self._addHook(onConfigChange(config, function () {\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    _extensionConfig = ctx.getExtCfg(identifier, _defaultConfig);\r\n                    var preBlkCdn = _blkCdnCfg;\r\n                    _blkCdnCfg = !!_extensionConfig.blkCdnCfg;\r\n                    // avoid initial call\r\n                    if (!isNullOrUndefined(preBlkCdn) && preBlkCdn !== _blkCdnCfg) {\r\n                        if (!_blkCdnCfg && _cfgUrl) {\r\n                            _fetchFn && _fetchFn(_cfgUrl, _onFetchComplete, _broadcastChanges);\r\n                        }\r\n                        else {\r\n                            _clearScheduledTimer();\r\n                        }\r\n                    }\r\n                    if (isNullOrUndefined(_receiveChanges)) {\r\n                        _receiveChanges = _extensionConfig.syncMode === 2 /* ICfgSyncMode.Receive */;\r\n                    }\r\n                    if (isNullOrUndefined(_broadcastChanges)) {\r\n                        _broadcastChanges = _extensionConfig.syncMode === 1 /* ICfgSyncMode.Broadcast */;\r\n                    }\r\n                    var newEvtName = _extensionConfig.customEvtName || EVENT_NAME;\r\n                    if (_evtName !== newEvtName) {\r\n                        if (_receiveChanges) {\r\n                            _updateEventListenerName(newEvtName);\r\n                        }\r\n                        else {\r\n                            _eventOff();\r\n                            _evtName = newEvtName;\r\n                        }\r\n                    }\r\n                    if (isNullOrUndefined(_cfgUrl)) {\r\n                        _cfgUrl = _extensionConfig.cfgUrl;\r\n                    }\r\n                    // if cfgUrl is set, we will ignore core config change\r\n                    if (!_cfgUrl) {\r\n                        _mainConfig = config;\r\n                        if (_broadcastChanges) {\r\n                            _sendCfgsyncEvents();\r\n                        }\r\n                    }\r\n                }));\r\n                _overrideSyncFn = _extensionConfig.overrideSyncFn;\r\n                _overrideFetchFn = _extensionConfig.overrideFetchFn;\r\n                _onCfgChangeReceive = _extensionConfig[_DYN_ON_CFG_CHANGE_RECEIV0 /* @min:%2eonCfgChangeReceive */];\r\n                _nonOverrideConfigs = _extensionConfig[_DYN_NON_OVERRIDE_CONFIGS /* @min:%2enonOverrideConfigs */]; // override values should not be changed\r\n                _fetchTimeout = _extensionConfig[_DYN_SCHEDULE_FETCH_TIMEO1 /* @min:%2escheduleFetchTimeout */];\r\n                _fetchFn = _getFetchFnInterface();\r\n                _retryCnt = 0;\r\n                // NOT support cfgURL change to avoid mutiple fetch calls\r\n                if (_cfgUrl && !_blkCdnCfg) {\r\n                    _fetchFn && _fetchFn(_cfgUrl, _onFetchComplete, _broadcastChanges);\r\n                }\r\n            }\r\n            function _setCfg(config, isAutoSync) {\r\n                if (config) {\r\n                    _mainConfig = config;\r\n                    if (!!isAutoSync && !_paused) {\r\n                        return _sendCfgsyncEvents();\r\n                    }\r\n                    if (_receiveChanges && !_paused) {\r\n                        _self.core.updateCfg(config);\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _eventOff() {\r\n                try {\r\n                    var global_1 = getGlobal();\r\n                    if (global_1) {\r\n                        eventOff(global_1, null, null, _evtNamespace);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _sendCfgsyncEvents(customDetails) {\r\n                try {\r\n                    if (!!_overrideSyncFn && isFunction(_overrideSyncFn)) {\r\n                        return _overrideSyncFn(_mainConfig, customDetails);\r\n                    }\r\n                    return sendCustomEvent(_evtName, _mainConfig, customDetails);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            }\r\n            function _updateEventListenerName(name) {\r\n                try {\r\n                    _eventOff();\r\n                    if (name) {\r\n                        _evtName = name;\r\n                        _addEventListener();\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            }\r\n            function _getFetchFnInterface() {\r\n                var _fetchFn = _overrideFetchFn;\r\n                if (isNullOrUndefined(_fetchFn)) {\r\n                    if (isFetchSupported()) {\r\n                        _fetchFn = _fetchSender;\r\n                    }\r\n                    else if (isXhrSupported()) {\r\n                        _fetchFn = _xhrSender;\r\n                    }\r\n                }\r\n                return _fetchFn;\r\n            }\r\n            function _fetchSender(url, oncomplete, isAutoSync) {\r\n                var global = getGlobal();\r\n                var fetchFn = (global && global.fetch) || null;\r\n                if (url && fetchFn && isFunction(fetchFn)) {\r\n                    try {\r\n                        var init = {\r\n                            method: STR_GET_METHOD\r\n                        };\r\n                        var request = new Request(url, init);\r\n                        doAwaitResponse(fetch(request), function (result) {\r\n                            var response = result.value;\r\n                            if (!result.rejected) {\r\n                                if (response.ok) {\r\n                                    doAwaitResponse(response.text(), function (res) {\r\n                                        _doOnComplete(oncomplete, response.status, res.value, isAutoSync);\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    _doOnComplete(oncomplete, response.status, null, isAutoSync);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _doOnComplete(oncomplete, 400);\r\n                            }\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        // eslint-disable-next-line no-empty\r\n                    }\r\n                }\r\n            }\r\n            function _xhrSender(url, oncomplete, isAutoSync) {\r\n                try {\r\n                    var xhr_1 = new XMLHttpRequest();\r\n                    xhr_1.open(STR_GET_METHOD, url);\r\n                    xhr_1.onreadystatechange = function () {\r\n                        if (xhr_1.readyState === XMLHttpRequest.DONE) {\r\n                            _doOnComplete(oncomplete, xhr_1.status, xhr_1.responseText, isAutoSync);\r\n                        }\r\n                    };\r\n                    xhr_1.onerror = function () {\r\n                        _doOnComplete(oncomplete, 400);\r\n                    };\r\n                    xhr_1.ontimeout = function () {\r\n                        _doOnComplete(oncomplete, 400);\r\n                    };\r\n                    xhr_1.send();\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _onFetchComplete(status, response, isAutoSync) {\r\n                try {\r\n                    if (status >= 200 && status < 400 && response) {\r\n                        _retryCnt = 0; // any successful response will reset retry count to 0\r\n                        var JSON_1 = getJSON();\r\n                        if (JSON_1) {\r\n                            var cdnCfg = JSON_1.parse(response); //comments are not allowed\r\n                            var cfg = applyCdnfeatureCfg(cdnCfg, _self.core);\r\n                            var newCfg = cfg && isPlainObject(cfg) && _replaceTartgetByKeys(cfg);\r\n                            newCfg && _setCfg(newCfg, isAutoSync);\r\n                            //cfg && _setCfg(cfg, isAutoSync);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _retryCnt++;\r\n                    }\r\n                    if (_retryCnt < 3) {\r\n                        _setupTimer();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doOnComplete(oncomplete, status, response, isAutoSync) {\r\n                try {\r\n                    oncomplete(status, response, isAutoSync);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _addEventListener() {\r\n                if (_receiveChanges) {\r\n                    var global_2 = getGlobal();\r\n                    if (global_2) {\r\n                        try {\r\n                            eventOn(global_2, _evtName, function (event) {\r\n                                // TODO: add more validation here\r\n                                // may include a \"name\" or some other features to check\r\n                                var cfgEvent = event && event.detail;\r\n                                if (_onCfgChangeReceive && cfgEvent) {\r\n                                    _onCfgChangeReceive(cfgEvent);\r\n                                }\r\n                                else {\r\n                                    var cfg = cfgEvent && cfgEvent.cfg;\r\n                                    var newCfg = cfg && isPlainObject(cfg) && _replaceTartgetByKeys(cfg);\r\n                                    newCfg && _setCfg(newCfg);\r\n                                }\r\n                            }, _evtNamespace, true);\r\n                        }\r\n                        catch (e) {\r\n                            // eslint-disable-next-line no-empty\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 4 levels\r\n            function _replaceTartgetByKeys(cfg, level) {\r\n                var _cfg = null;\r\n                try {\r\n                    if (cfg) {\r\n                        _cfg = replaceByNonOverrideCfg(cfg, _nonOverrideConfigs, 0, 5);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return _cfg;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers fetching cdn every 30mins after inital call\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && _fetchTimeout) {\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _fetchFn(_cfgUrl, _onFetchComplete, _broadcastChanges);\r\n                    }, _fetchTimeout);\r\n                    _timeoutHandle.unref();\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryCnt = 0;\r\n            }\r\n            _self.processTelemetry = function (env, itemCtx) {\r\n                _self.processNext(env, itemCtx);\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for CfgSyncPlugin.prototype.initialize.\r\n// Removed Stub for CfgSyncPlugin.prototype.getCfg.\r\n// Removed Stub for CfgSyncPlugin.prototype.setCfg.\r\n// Removed Stub for CfgSyncPlugin.prototype.sync.\r\n// Removed Stub for CfgSyncPlugin.prototype.updateEventListenerName.\r\n// Removed Stub for CfgSyncPlugin.prototype.pause.\r\n// Removed Stub for CfgSyncPlugin.prototype.resume.\r\n    //// Removed Stub for CfgSyncPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    CfgSyncPlugin.__ieDyn=1;\n\n    return CfgSyncPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { CfgSyncPlugin };\r\n//# sourceMappingURL=CfgSyncPlugin.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TAGS = \"tags\"; // Count: 17\r\nexport var _DYN_DEVICE_TYPE = \"deviceType\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 15\r\nexport var _DYN_NAME = \"name\"; // Count: 8\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 5\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 10\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 7\r\nexport var _DYN__GET = \"_get\"; // Count: 5\r\nexport var _DYN_ENQUEUE = \"enqueue\"; // Count: 7\r\nexport var _DYN_COUNT = \"count\"; // Count: 7\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_PUSH = \"push\"; // Count: 9\r\nexport var _DYN_ITEM = \"item\"; // Count: 6\r\nexport var _DYN_EMIT_LINE_DELIMITED_0 = \"emitLineDelimitedJson\"; // Count: 3\r\nexport var _DYN_CLEAR = \"clear\"; // Count: 6\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 3\r\nexport var _DYN_MARK_AS_SENT = \"markAsSent\"; // Count: 4\r\nexport var _DYN_CLEAR_SENT = \"clearSent\"; // Count: 5\r\nexport var _DYN_BUFFER_OVERRIDE = \"bufferOverride\"; // Count: 3\r\nexport var _DYN__BUFFER__KEY = \"BUFFER_KEY\"; // Count: 5\r\nexport var _DYN__SENT__BUFFER__KEY = \"SENT_BUFFER_KEY\"; // Count: 8\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 6\r\nexport var _DYN__MAX__BUFFER__SIZE = \"MAX_BUFFER_SIZE\"; // Count: 5\r\nexport var _DYN_TRIGGER_SEND = \"triggerSend\"; // Count: 5\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 16\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 3\r\nexport var _DYN__SENDER = \"_sender\"; // Count: 5\r\nexport var _DYN_CUSTOM_HEADERS = \"customHeaders\"; // Count: 3\r\nexport var _DYN_MAX_BATCH_SIZE_IN_BY1 = \"maxBatchSizeInBytes\"; // Count: 2\r\nexport var _DYN_ONUNLOAD_DISABLE_BEA2 = \"onunloadDisableBeacon\"; // Count: 3\r\nexport var _DYN_IS_BEACON_API_DISABL3 = \"isBeaconApiDisabled\"; // Count: 3\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR4 = \"alwaysUseXhrOverride\"; // Count: 2\r\nexport var _DYN_DISABLE_XHR = \"disableXhr\"; // Count: 3\r\nexport var _DYN_ENABLE_SESSION_STORA5 = \"enableSessionStorageBuffer\"; // Count: 2\r\nexport var _DYN__BUFFER = \"_buffer\"; // Count: 9\r\nexport var _DYN_ONUNLOAD_DISABLE_FET6 = \"onunloadDisableFetch\"; // Count: 2\r\nexport var _DYN_DISABLE_SEND_BEACON_7 = \"disableSendBeaconSplit\"; // Count: 2\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN_ENABLE_SEND_PROMISE = \"enableSendPromise\"; // Count: 2\r\nexport var _DYN_GET_SENDER_INST = \"getSenderInst\"; // Count: 4\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_CONVERT_UNDEFINED = \"convertUndefined\"; // Count: 2\r\nexport var _DYN_MAX_BATCH_INTERVAL = \"maxBatchInterval\"; // Count: 2\r\nexport var _DYN_SERIALIZE = \"serialize\"; // Count: 4\r\nexport var _DYN__ON_ERROR = \"_onError\"; // Count: 7\r\nexport var _DYN__ON_PARTIAL_SUCCESS = \"_onPartialSuccess\"; // Count: 3\r\nexport var _DYN__ON_SUCCESS = \"_onSuccess\"; // Count: 6\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_ITEMS_ACCEPTED = \"itemsAccepted\"; // Count: 3\r\nexport var _DYN_ORI_PAYLOAD = \"oriPayload\"; // Count: 3\r\nexport var _DYN_BASE_TYPE = \"baseType\"; // Count: 4\r\nexport var _DYN_SAMPLE_RATE = \"sampleRate\"; // Count: 4\r\nexport var _DYN_EVENTS_SEND_REQUEST = \"eventsSendRequest\"; // Count: 2\r\nexport var _DYN_GET_SAMPLING_SCORE = \"getSamplingScore\"; // Count: 2\r\nexport var _DYN_GET_HASH_CODE_SCORE = \"getHashCodeScore\"; // Count: 4\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { CtxTagKeys, Data, Envelope, Event, Exception, HttpMethod, Metric, PageView, PageViewPerformance, RemoteDependencyData, SampleRate, Trace, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, _warnToConsole, getJSON, hasJSON, isNullOrUndefined, isNumber, isString, isTruthy, objForEachKey, optimizeObject, setValue, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION } from \"./InternalConstants\";\r\nimport { _DYN_DATA, _DYN_DATA_TYPE, _DYN_DEVICE_TYPE, _DYN_ENVELOPE_TYPE, _DYN_LENGTH, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_STRINGIFY, _DYN_TAGS, _DYN_TO_STRING, _DYN_TRACE_ID } from \"./__DynamicConstants\";\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar strBaseType = \"baseType\";\r\nvar strBaseData = \"baseData\";\r\nvar strProperties = \"properties\";\r\nvar strTrue = \"true\";\r\nfunction _setValueIf(target, field, value) {\r\n    return setValue(target, field, value, isTruthy);\r\n}\r\n/*\r\n * Maps Part A data from CS 4.0\r\n */\r\nfunction _extractPartAExtensions(logger, item, env) {\r\n    // todo: switch to keys from common in this method\r\n    var envTags = env[_DYN_TAGS /* @min:%2etags */] = env[_DYN_TAGS /* @min:%2etags */] || {};\r\n    var itmExt = item.ext = item.ext || {};\r\n    var itmTags = item[_DYN_TAGS /* @min:%2etags */] = item[_DYN_TAGS /* @min:%2etags */] || [];\r\n    var extUser = itmExt.user;\r\n    if (extUser) {\r\n        _setValueIf(envTags, CtxTagKeys.userAuthUserId, extUser.authId);\r\n        _setValueIf(envTags, CtxTagKeys.userId, extUser.id || extUser.localId);\r\n    }\r\n    var extApp = itmExt.app;\r\n    if (extApp) {\r\n        _setValueIf(envTags, CtxTagKeys.sessionId, extApp.sesId);\r\n    }\r\n    var extDevice = itmExt.device;\r\n    if (extDevice) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceId, extDevice.id || extDevice.localId);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice.deviceClass);\r\n        _setValueIf(envTags, CtxTagKeys.deviceIp, extDevice.ip);\r\n        _setValueIf(envTags, CtxTagKeys.deviceModel, extDevice.model);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice[_DYN_DEVICE_TYPE /* @min:%2edeviceType */]);\r\n    }\r\n    var web = item.ext.web;\r\n    if (web) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceLanguage, web.browserLang);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowserVersion, web.browserVer);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowser, web.browser);\r\n        var envData = env[_DYN_DATA /* @min:%2edata */] = env[_DYN_DATA /* @min:%2edata */] || {};\r\n        var envBaseData = envData[strBaseData] = envData[strBaseData] || {};\r\n        var envProps = envBaseData[strProperties] = envBaseData[strProperties] || {};\r\n        _setValueIf(envProps, \"domain\", web.domain);\r\n        _setValueIf(envProps, \"isManual\", web.isManual ? strTrue : null);\r\n        _setValueIf(envProps, \"screenRes\", web.screenRes);\r\n        _setValueIf(envProps, \"userConsent\", web.userConsent ? strTrue : null);\r\n    }\r\n    var extOs = itmExt.os;\r\n    if (extOs) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceOS, extOs[_DYN_NAME /* @min:%2ename */]);\r\n        _setValueIf(envTags, CtxTagKeys.deviceOSVersion, extOs.osVer);\r\n    }\r\n    // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n    var extTrace = itmExt.trace;\r\n    if (extTrace) {\r\n        _setValueIf(envTags, CtxTagKeys.operationParentId, extTrace.parentID);\r\n        _setValueIf(envTags, CtxTagKeys.operationName, dataSanitizeString(logger, extTrace[_DYN_NAME /* @min:%2ename */]));\r\n        _setValueIf(envTags, CtxTagKeys.operationId, extTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n    }\r\n    // Sample 4.0 schema\r\n    //  {\r\n    //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n    //     \"name\" : \"MetricWithNamespace\",\r\n    //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n    //     \"ext\": {  \"cloud\": {\r\n    //          \"role\": \"WATSON3\",\r\n    //          \"roleInstance\": \"CO4AEAP00000260\"\r\n    //      },\r\n    //      \"device\": {}, \"correlation\": {} },\r\n    //      \"tags\": [\r\n    //        { \"amazon.region\" : \"east2\" },\r\n    //        { \"os.expid\" : \"wp:02df239\" }\r\n    //     ]\r\n    //   }\r\n    var tgs = {};\r\n    // deals with tags.push({object})\r\n    for (var i = itmTags[_DYN_LENGTH /* @min:%2elength */] - 1; i >= 0; i--) {\r\n        var tg = itmTags[i];\r\n        objForEachKey(tg, function (key, value) {\r\n            tgs[key] = value;\r\n        });\r\n        itmTags.splice(i, 1);\r\n    }\r\n    // deals with tags[key]=value (and handles hasOwnProperty)\r\n    objForEachKey(itmTags, function (tg, value) {\r\n        tgs[tg] = value;\r\n    });\r\n    var theTags = __assign(__assign({}, envTags), tgs);\r\n    if (!theTags[CtxTagKeys.internalSdkVersion]) {\r\n        // Append a version in case it is not already set\r\n        theTags[CtxTagKeys.internalSdkVersion] = dataSanitizeString(logger, \"javascript:\".concat(EnvelopeCreator.Version), 64);\r\n    }\r\n    env[_DYN_TAGS /* @min:%2etags */] = optimizeObject(theTags);\r\n}\r\nfunction _extractPropsAndMeasurements(data, properties, measurements) {\r\n    if (!isNullOrUndefined(data)) {\r\n        objForEachKey(data, function (key, value) {\r\n            if (isNumber(value)) {\r\n                measurements[key] = value;\r\n            }\r\n            else if (isString(value)) {\r\n                properties[key] = value;\r\n            }\r\n            else if (hasJSON()) {\r\n                properties[key] = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue) {\r\n    if (!isNullOrUndefined(properties)) {\r\n        objForEachKey(properties, function (key, value) {\r\n            properties[key] = value || customUndefinedValue;\r\n        });\r\n    }\r\n}\r\n// TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\nfunction _createEnvelope(logger, envelopeType, telemetryItem, data) {\r\n    var envelope = new Envelope(logger, data, envelopeType);\r\n    _setValueIf(envelope, \"sampleRate\", telemetryItem[SampleRate]);\r\n    if ((telemetryItem[strBaseData] || {}).startTime) {\r\n        // Starting from Version 3.0.3, the time property will be assigned by the startTime value,\r\n        // which records the loadEvent time for the pageView event.\r\n        envelope.time = toISOString(telemetryItem[strBaseData].startTime);\r\n    }\r\n    envelope.iKey = telemetryItem.iKey;\r\n    var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n    envelope[_DYN_NAME /* @min:%2ename */] = envelope[_DYN_NAME /* @min:%2ename */].replace(\"{0}\", iKeyNoDashes);\r\n    // extract all extensions from ctx\r\n    _extractPartAExtensions(logger, telemetryItem, envelope);\r\n    // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n    telemetryItem[_DYN_TAGS /* @min:%2etags */] = telemetryItem[_DYN_TAGS /* @min:%2etags */] || [];\r\n    return optimizeObject(envelope);\r\n}\r\nfunction EnvelopeCreatorInit(logger, telemetryItem) {\r\n    if (isNullOrUndefined(telemetryItem[strBaseData])) {\r\n        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 46 /* _eInternalMessageId.TelemetryEnvelopeInvalid */, \"telemetryItem.baseData cannot be null.\");\r\n    }\r\n}\r\nexport var EnvelopeCreator = {\r\n    Version: '3.3.1'\r\n};\r\nexport function DependencyEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    if (isNullOrUndefined(bd)) {\r\n        _warnToConsole(logger, \"Invalid input for dependency data\");\r\n        return null;\r\n    }\r\n    var method = bd[strProperties] && bd[strProperties][HttpMethod] ? bd[strProperties][HttpMethod] : \"GET\";\r\n    var remoteDepData = new RemoteDependencyData(logger, bd.id, bd.target, bd[_DYN_NAME /* @min:%2ename */], bd[STR_DURATION /* @min:%2eduration */], bd.success, bd.responseCode, method, bd.type, bd.correlationContext, customProperties, customMeasurements);\r\n    var data = new Data(RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */], remoteDepData);\r\n    return _createEnvelope(logger, RemoteDependencyData[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function EventEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customProperties = {};\r\n    var customMeasurements = {};\r\n    if (telemetryItem[strBaseType] !== Event[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n        customProperties[\"baseTypeSource\"] = telemetryItem[strBaseType]; // save the passed in base type as a property\r\n    }\r\n    if (telemetryItem[strBaseType] === Event[_DYN_DATA_TYPE /* @min:%2edataType */]) { // take collection\r\n        customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n        customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    }\r\n    else { // if its not a known type, convert to custom event\r\n        if (telemetryItem[strBaseData]) {\r\n            _extractPropsAndMeasurements(telemetryItem[strBaseData], customProperties, customMeasurements);\r\n        }\r\n    }\r\n    // Extract root level properties from part C telemetryItem.data\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var eventName = telemetryItem[strBaseData][_DYN_NAME /* @min:%2ename */];\r\n    var eventData = new Event(logger, eventName, customProperties, customMeasurements);\r\n    var data = new Data(Event[_DYN_DATA_TYPE /* @min:%2edataType */], eventData);\r\n    return _createEnvelope(logger, Event[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function ExceptionEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Extract root level properties from part C telemetryItem.data\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    var exData = Exception.CreateFromInterface(logger, bd, customProperties, customMeasurements);\r\n    var data = new Data(Exception[_DYN_DATA_TYPE /* @min:%2edataType */], exData);\r\n    return _createEnvelope(logger, Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function MetricEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var baseData = telemetryItem[strBaseData];\r\n    var props = baseData[strProperties] || {};\r\n    var measurements = baseData[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseMetricData = new Metric(logger, baseData[_DYN_NAME /* @min:%2ename */], baseData.average, baseData.sampleCount, baseData.min, baseData.max, baseData.stdDev, props, measurements);\r\n    var data = new Data(Metric[_DYN_DATA_TYPE /* @min:%2edataType */], baseMetricData);\r\n    return _createEnvelope(logger, Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n    var duration;\r\n    var baseData = telemetryItem[strBaseData];\r\n    if (!isNullOrUndefined(baseData) &&\r\n        !isNullOrUndefined(baseData[strProperties]) &&\r\n        !isNullOrUndefined(baseData[strProperties][STR_DURATION])) { // from part B properties\r\n        duration = baseData[strProperties][STR_DURATION];\r\n        delete baseData[strProperties][STR_DURATION];\r\n    }\r\n    else if (!isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */]) &&\r\n        !isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION])) { // from custom properties\r\n        duration = telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n        delete telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n    var currentContextId;\r\n    if (((telemetryItem.ext || {}).trace || {})[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n        currentContextId = telemetryItem.ext.trace[_DYN_TRACE_ID /* @min:%2etraceID */];\r\n    }\r\n    var id = bd.id || currentContextId;\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.refUri)) {\r\n        properties[\"refUri\"] = bd.refUri;\r\n    }\r\n    // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.pageType)) {\r\n        properties[\"pageType\"] = bd.pageType;\r\n    }\r\n    // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.isLoggedIn)) {\r\n        properties[\"isLoggedIn\"] = bd.isLoggedIn[_DYN_TO_STRING /* @min:%2etoString */]();\r\n    }\r\n    // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd[strProperties])) {\r\n        var pageTags = bd[strProperties];\r\n        objForEachKey(pageTags, function (key, value) {\r\n            properties[key] = value;\r\n        });\r\n    }\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var pageViewData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n    var data = new Data(PageView[_DYN_DATA_TYPE /* @min:%2edataType */], pageViewData);\r\n    return _createEnvelope(logger, PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewPerformanceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var bd = telemetryItem[strBaseData];\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri || bd.url;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n    var data = new Data(PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function TraceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var message = telemetryItem[strBaseData].message;\r\n    var severityLevel = telemetryItem[strBaseData].severityLevel;\r\n    var props = telemetryItem[strBaseData][strProperties] || {};\r\n    var measurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseData = new Trace(logger, message, severityLevel, props, measurements);\r\n    var data = new Data(Trace[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\n//# sourceMappingURL=EnvelopeCreator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, arrIndexOf, dumpObj, getExceptionName, getJSON, isArray, isFunction, isNullOrUndefined, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_ITEM, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_PUSH, _DYN_STRINGIFY, _DYN__BUFFER__KEY, _DYN__GET, _DYN__MAX__BUFFER__SIZE, _DYN__SENT__BUFFER__KEY } from \"./__DynamicConstants\";\r\nvar BaseSendBuffer = /** @class */ (function () {\r\n    function BaseSendBuffer(logger, config) {\r\n        var _buffer = [];\r\n        var _bufferFullMessageSent = false;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        this[_DYN__GET /* @min:%2e_get */] = function () {\r\n            return _buffer;\r\n        };\r\n        this._set = function (buffer) {\r\n            _buffer = buffer;\r\n            return _buffer;\r\n        };\r\n        dynamicProto(BaseSendBuffer, this, function (_self) {\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= config[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 105 /* _eInternalMessageId.InMemoryStorageBufferFull */, \"Maximum in-memory buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _buffer[_DYN_PUSH /* @min:%2epush */](payload);\r\n                return;\r\n            };\r\n            _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n                return _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.size = function () {\r\n                var size = _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n                for (var lp = 0; lp < _buffer[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    size += (_buffer[lp].item)[_DYN_LENGTH /* @min:%2elength */];\r\n                }\r\n                if (!config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */]) {\r\n                    size += 2;\r\n                }\r\n                return size;\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _buffer = [];\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self.getItems = function () {\r\n                return _buffer.slice(0);\r\n            };\r\n            _self.batchPayloads = function (payloads) {\r\n                if (payloads && payloads[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var payloadStr_1 = [];\r\n                    arrForEach(payloads, function (payload) {\r\n                        payloadStr_1[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                    });\r\n                    var batch = config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */] ?\r\n                        payloadStr_1.join(\"\\n\") :\r\n                        \"[\" + payloadStr_1.join(\",\") + \"]\";\r\n                    return batch;\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                var items = _buffer.slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                var newBuffer = !!canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(items, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                return newBuffer;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for BaseSendBuffer.prototype.enqueue.\r\n// Removed Stub for BaseSendBuffer.prototype.count.\r\n// Removed Stub for BaseSendBuffer.prototype.size.\r\n// Removed Stub for BaseSendBuffer.prototype.clear.\r\n// Removed Stub for BaseSendBuffer.prototype.getItems.\r\n// Removed Stub for BaseSendBuffer.prototype.batchPayloads.\r\n// Removed Stub for BaseSendBuffer.prototype.createNew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseSendBuffer.__ieDyn=1;\n\n    return BaseSendBuffer;\r\n}());\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function (_super) {\r\n    __extends(ArraySendBuffer, _super);\r\n    function ArraySendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        dynamicProto(ArraySendBuffer, _this, function (_self, _base) {\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                // not supported\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ArraySendBuffer.prototype.markAsSent.\r\n// Removed Stub for ArraySendBuffer.prototype.clearSent.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ArraySendBuffer.__ieDyn=1;\n\n    return ArraySendBuffer;\r\n}(BaseSendBuffer));\r\nexport { ArraySendBuffer };\r\nvar PREVIOUS_KEYS = [\"AI_buffer\", \"AI_sentBuffer\"];\r\n/*\r\n * Session storage buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function (_super) {\r\n    __extends(SessionStorageSendBuffer, _super);\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        var _bufferFullMessageSent = false;\r\n        //Note: should not use config.namePrefix directly, because it will always refers to the latest namePrefix\r\n        var _namePrefix = config === null || config === void 0 ? void 0 : config.namePrefix;\r\n        // TODO: add remove buffer override as well\r\n        var _b = config[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */] || { getItem: utlGetSessionStorage, setItem: utlSetSessionStorage }, getItem = _b.getItem, setItem = _b.setItem;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        dynamicProto(SessionStorageSendBuffer, _this, function (_self, _base) {\r\n            var bufferItems = _getBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */]);\r\n            var itemsInSentBuffer = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n            var previousItems = _getPreviousEvents();\r\n            var notDeliveredItems = itemsInSentBuffer[_DYN_CONCAT /* @min:%2econcat */](previousItems);\r\n            var buffer = _self._set(bufferItems[_DYN_CONCAT /* @min:%2econcat */](notDeliveredItems));\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (buffer[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                buffer[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n            }\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], buffer);\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Maximum buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _base[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], _self._set(_removePayloadsFromBuffer(payload, _self[_DYN__GET /* @min:%2e_get */]())));\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                if (sentElements instanceof Array && payload instanceof Array) {\r\n                    sentElements = sentElements[_DYN_CONCAT /* @min:%2econcat */](payload);\r\n                    if (sentElements[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                        // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                        // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Sent buffer reached its maximum size: \" + sentElements[_DYN_LENGTH /* @min:%2elength */], true);\r\n                        sentElements[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n                    }\r\n                    _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n                }\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                sentElements = _removePayloadsFromBuffer(payload, sentElements);\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                canUseSessionStorage = !!canUseSessionStorage;\r\n                var unsentItems = _self[_DYN__GET /* @min:%2e_get */]().slice(0);\r\n                var sentItems = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]).slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                // to make sure that we do not send duplicated payloads when it is switched back to previous one\r\n                _self[_DYN_CLEAR /* @min:%2eclear */]();\r\n                var newBuffer = canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(unsentItems, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                if (canUseSessionStorage) {\r\n                    // arr buffer will clear all payloads if markAsSent() is called\r\n                    newBuffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](sentItems);\r\n                }\r\n                return newBuffer;\r\n            };\r\n            function _removePayloadsFromBuffer(payloads, buffer) {\r\n                var remaining = [];\r\n                var payloadStr = [];\r\n                arrForEach(payloads, function (payload) {\r\n                    payloadStr[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                });\r\n                arrForEach(buffer, function (value) {\r\n                    if (!isFunction(value) && arrIndexOf(payloadStr, value[_DYN_ITEM /* @min:%2eitem */]) === -1) {\r\n                        remaining[_DYN_PUSH /* @min:%2epush */](value);\r\n                    }\r\n                });\r\n                return remaining;\r\n            }\r\n            function _getBuffer(key) {\r\n                var prefixedKey = key;\r\n                prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                return _getBufferBase(prefixedKey);\r\n            }\r\n            function _getBufferBase(key) {\r\n                try {\r\n                    var bufferJson = getItem(logger, key);\r\n                    if (bufferJson) {\r\n                        var buffer_1 = getJSON().parse(bufferJson);\r\n                        if (isString(buffer_1)) {\r\n                            // When using some version prototype.js the stringify / parse cycle does not decode array's correctly\r\n                            buffer_1 = getJSON().parse(buffer_1);\r\n                        }\r\n                        if (buffer_1 && isArray(buffer_1)) {\r\n                            return buffer_1;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 42 /* _eInternalMessageId.FailedToRestoreStorageBuffer */, \" storage key: \" + key + \", \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            function _setBuffer(key, buffer) {\r\n                var prefixedKey = key;\r\n                try {\r\n                    prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                    var bufferJson = JSON[_DYN_STRINGIFY /* @min:%2estringify */](buffer);\r\n                    setItem(logger, prefixedKey, bufferJson);\r\n                }\r\n                catch (e) {\r\n                    // if there was an error, clear the buffer\r\n                    // telemetry is stored in the _buffer array so we won't loose any items\r\n                    setItem(logger, prefixedKey, JSON[_DYN_STRINGIFY /* @min:%2estringify */]([]));\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \" storage key: \" + prefixedKey + \", \" + getExceptionName(e) + \". Buffer cleared\", { exception: dumpObj(e) });\r\n                }\r\n            }\r\n            // this removes buffer with prefix+key\r\n            function _getPreviousEvents() {\r\n                var items = [];\r\n                try {\r\n                    arrForEach(PREVIOUS_KEYS, function (key) {\r\n                        var events = _getItemsFromPreviousKey(key);\r\n                        items = items[_DYN_CONCAT /* @min:%2econcat */](events);\r\n                        // to make sure that we also transfer items from old prefixed + key buffer\r\n                        if (_namePrefix) {\r\n                            var prefixedKey = _namePrefix + \"_\" + key;\r\n                            var prefixEvents = _getItemsFromPreviousKey(prefixedKey);\r\n                            items = items[_DYN_CONCAT /* @min:%2econcat */](prefixEvents);\r\n                        }\r\n                    });\r\n                    return items;\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \"Transfer events from previous buffers: \" + getExceptionName(e) + \". previous Buffer items can not be removed\", { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            // transform string[] to IInternalStorageItem[]\r\n            function _getItemsFromPreviousKey(key) {\r\n                try {\r\n                    var items = _getBufferBase(key);\r\n                    var transFormedItems_1 = [];\r\n                    arrForEach(items, function (item) {\r\n                        var internalItem = {\r\n                            item: item,\r\n                            cnt: 0 // previous events will be default to 0 count\r\n                        };\r\n                        transFormedItems_1[_DYN_PUSH /* @min:%2epush */](internalItem);\r\n                    });\r\n                    // remove the session storage if we can add events back\r\n                    utlRemoveSessionStorage(logger, key);\r\n                    return transFormedItems_1;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return [];\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for SessionStorageSendBuffer.prototype.enqueue.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clear.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.markAsSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clearSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.createNew.\r\n    var _a;\r\n    _a = SessionStorageSendBuffer;\r\n    SessionStorageSendBuffer.VERSION = \"_1\";\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\" + _a.VERSION;\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\" + _a.VERSION;\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}(BaseSendBuffer));\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, Event, Exception, Metric, PageView, PageViewPerformance, ProcessLegacy, RemoteDependencyData, RequestHeaders, SampleRate, Trace, createOfflineListener, isInternalApplicationInsightsEndpoint, utlCanUseSessionStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { ActiveStatus, BaseTelemetryPlugin, SenderPostManager, _throwInternal, _warnToConsole, arrForEach, cfgDfBoolean, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dateNow, dumpObj, formatErrorMessageXdr, formatErrorMessageXhr, getExceptionName, getIEVersion, isArray, isBeaconsSupported, isFetchSupported, isNullOrUndefined, mergeEvtNamespace, objExtend, onConfigChange, parseResponse, prependTransports, runTargetUnload } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isNumber, isString, isTruthy, objDeepFreeze, objDefine, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from \"./EnvelopeCreator\";\r\nimport { ArraySendBuffer, SessionStorageSendBuffer } from \"./SendBuffer\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { Sample } from \"./TelemetryProcessors/Sample\";\r\nimport { _DYN_ALWAYS_USE_XHR_OVERR4, _DYN_BASE_TYPE, _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONVERT_UNDEFINED, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_CUSTOM_HEADERS, _DYN_DATA, _DYN_DIAG_LOG, _DYN_DISABLE_SEND_BEACON_7, _DYN_DISABLE_XHR, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENABLE_SEND_PROMISE, _DYN_ENABLE_SESSION_STORA5, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_EVENTS_SEND_REQUEST, _DYN_GET_SENDER_INST, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_BEACON_API_DISABL3, _DYN_ITEM, _DYN_ITEMS_ACCEPTED, _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_MAX_BATCH_INTERVAL, _DYN_MAX_BATCH_SIZE_IN_BY1, _DYN_ONUNLOAD_DISABLE_BEA2, _DYN_ONUNLOAD_DISABLE_FET6, _DYN_ORI_PAYLOAD, _DYN_PUSH, _DYN_SAMPLE_RATE, _DYN_SERIALIZE, _DYN_TAGS, _DYN_TRIGGER_SEND, _DYN_UNLOAD_TRANSPORTS, _DYN__BUFFER, _DYN__ON_ERROR, _DYN__ON_PARTIAL_SUCCESS, _DYN__ON_SUCCESS, _DYN__SENDER } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar EMPTY_STR = \"\";\r\nvar FetchSyncRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nfunction _getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\nvar defaultAppInsightsChannelConfig = objDeepFreeze((_a = {\r\n        // Use the default value (handles empty string in the configuration)\r\n        endpointUrl: cfgDfValidate(isTruthy, DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH)\r\n    },\r\n    _a[_DYN_EMIT_LINE_DELIMITED_0 /* @min:emitLineDelimitedJson */] = cfgDfBoolean(),\r\n    _a[_DYN_MAX_BATCH_INTERVAL /* @min:maxBatchInterval */] = 15000,\r\n    _a[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:maxBatchSizeInBytes */] = 102400,\r\n    _a.disableTelemetry = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_SESSION_STORA5 /* @min:enableSessionStorageBuffer */] = cfgDfBoolean(true),\r\n    _a.isRetryDisabled = cfgDfBoolean(),\r\n    _a[_DYN_IS_BEACON_API_DISABL3 /* @min:isBeaconApiDisabled */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_SEND_BEACON_7 /* @min:disableSendBeaconSplit */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:onunloadDisableFetch */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:onunloadDisableBeacon */] = cfgDfBoolean(),\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.namePrefix = UNDEFINED_VALUE,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_CUSTOM_HEADERS /* @min:customHeaders */] = UNDEFINED_VALUE,\r\n    _a[_DYN_CONVERT_UNDEFINED /* @min:convertUndefined */] = UNDEFINED_VALUE,\r\n    _a[_DYN_EVENTS_LIMIT_IN_MEM /* @min:eventsLimitInMem */] = 10000,\r\n    _a[_DYN_BUFFER_OVERRIDE /* @min:bufferOverride */] = false,\r\n    _a.httpXHROverride = { isVal: isOverrideFn, v: UNDEFINED_VALUE },\r\n    _a[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:alwaysUseXhrOverride */] = cfgDfBoolean(),\r\n    _a.transports = UNDEFINED_VALUE,\r\n    _a.retryCodes = UNDEFINED_VALUE,\r\n    _a.maxRetryCnt = { isVal: isNumber, v: 10 },\r\n    _a));\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nvar EnvelopeTypeCreator = (_b = {},\r\n    _b[Event.dataType] = EventEnvelopeCreator,\r\n    _b[Trace.dataType] = TraceEnvelopeCreator,\r\n    _b[PageView.dataType] = PageViewEnvelopeCreator,\r\n    _b[PageViewPerformance.dataType] = PageViewPerformanceEnvelopeCreator,\r\n    _b[Exception.dataType] = ExceptionEnvelopeCreator,\r\n    _b[Metric.dataType] = MetricEnvelopeCreator,\r\n    _b[RemoteDependencyData.dataType] = DependencyEnvelopeCreator,\r\n    _b);\r\nvar Sender = /** @class */ (function (_super) {\r\n    __extends(Sender, _super);\r\n    function Sender() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 1001;\r\n        _this.identifier = BreezeChannelIdentifier;\r\n        // Don't set the defaults here, set them in the _initDefaults() as this is also called during unload\r\n        var _consecutiveErrors; // How many times in a row a retryable error condition has occurred.\r\n        var _retryAt; // The time to retry at in milliseconds from 1970/01/01 (this makes the timer calculation easy).\r\n        var _lastSend; // The time of the last send operation.\r\n        var _paused; // Flag indicating that the sending should be paused\r\n        var _timeoutHandle; // Handle to the timer for delayed sending of batches of data.\r\n        var _serializer;\r\n        var _stamp_specific_redirects;\r\n        var _headers;\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _syncUnloadSender; // The identified sender to use for the synchronous unload stage\r\n        var _offlineListener;\r\n        var _evtNamespace;\r\n        var _endpointUrl;\r\n        var _orgEndpointUrl;\r\n        var _maxBatchSizeInBytes;\r\n        var _beaconSupported;\r\n        var _beaconOnUnloadSupported;\r\n        var _beaconNormalSupported;\r\n        var _customHeaders;\r\n        var _disableTelemetry;\r\n        var _instrumentationKey;\r\n        var _convertUndefined;\r\n        var _isRetryDisabled;\r\n        var _maxBatchInterval;\r\n        var _sessionStorageUsed;\r\n        var _bufferOverrideUsed;\r\n        var _namePrefix;\r\n        var _enableSendPromise;\r\n        var _alwaysUseCustomSend;\r\n        var _disableXhr;\r\n        var _fetchKeepAlive;\r\n        var _xhrSend;\r\n        var _fallbackSend;\r\n        var _disableBeaconSplit;\r\n        var _sendPostMgr;\r\n        var _retryCodes;\r\n        dynamicProto(Sender, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n            };\r\n            _self.resume = function () {\r\n                if (_paused) {\r\n                    _paused = false;\r\n                    _retryAt = null;\r\n                    // flush if we have exceeded the max-size already\r\n                    _checkMaxSize();\r\n                    _setupTimer();\r\n                }\r\n            };\r\n            _self.flush = function (isAsync, callBack, sendReason) {\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_paused) {\r\n                    // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                    _clearScheduledTimer();\r\n                    try {\r\n                        return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](isAsync, null, sendReason || 1 /* SendRequestReason.ManualFlush */);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 22 /* _eInternalMessageId.FlushFailed */, \"flush failed, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            };\r\n            _self.onunloadFlush = function () {\r\n                if (!_paused) {\r\n                    if (_beaconSupported || _alwaysUseCustomSend) {\r\n                        try {\r\n                            return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, _doUnloadSend, 2 /* SendRequestReason.Unload */);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                    else {\r\n                        _self.flush(false);\r\n                    }\r\n                }\r\n            };\r\n            _self.addHeader = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _base[_DYN_INITIALIZE /* @min:%2einitialize */](config, core, extensions, pluginChain);\r\n                var identifier = _self.identifier;\r\n                _serializer = new Serializer(core.logger);\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = 0;\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _stamp_specific_redirects = 0;\r\n                var diagLog = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"Sender\"), core.evtNamespace && core.evtNamespace());\r\n                _offlineListener = createOfflineListener(_evtNamespace);\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    var senderConfig = ctx.getExtCfg(identifier, defaultAppInsightsChannelConfig);\r\n                    objDefine(_self, \"_senderConfig\", {\r\n                        g: function () {\r\n                            return senderConfig;\r\n                        }\r\n                    });\r\n                    // or is not string\r\n                    if (core.activeStatus() === ActiveStatus.PENDING) {\r\n                        // waiting for core promises to be resolved\r\n                        // NOTE: if active status is set to pending, stop sending, clear timer here\r\n                        _self.pause();\r\n                    }\r\n                    else if (core.activeStatus() === ActiveStatus.ACTIVE) {\r\n                        // core status changed from pending to other status\r\n                        _self.resume();\r\n                    }\r\n                    // Only update the endpoint if the original config !== the current config\r\n                    // This is so any redirect endpointUrl is not overwritten\r\n                    if (_orgEndpointUrl !== senderConfig.endpointUrl) {\r\n                        if (_orgEndpointUrl) {\r\n                            // TODO: add doc to remind users to flush before changing endpoint, otherwise all unsent payload will be sent to new endpoint\r\n                        }\r\n                        _endpointUrl = _orgEndpointUrl = senderConfig.endpointUrl;\r\n                    }\r\n                    if (_customHeaders && _customHeaders !== senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */]) {\r\n                        // Removing any previously defined custom headers as they have changed\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            delete _headers[customHeader.header];\r\n                        });\r\n                    }\r\n                    _maxBatchSizeInBytes = senderConfig[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:%2emaxBatchSizeInBytes */];\r\n                    _beaconSupported = (senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false || senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false) && isBeaconsSupported();\r\n                    _beaconOnUnloadSupported = senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false && isBeaconsSupported();\r\n                    _beaconNormalSupported = senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false && isBeaconsSupported();\r\n                    _alwaysUseCustomSend = senderConfig[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:%2ealwaysUseXhrOverride */];\r\n                    _disableXhr = !!senderConfig[_DYN_DISABLE_XHR /* @min:%2edisableXhr */];\r\n                    _retryCodes = senderConfig.retryCodes;\r\n                    var bufferOverride = senderConfig[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */];\r\n                    var canUseSessionStorage = !!senderConfig[_DYN_ENABLE_SESSION_STORA5 /* @min:%2eenableSessionStorageBuffer */] &&\r\n                        (!!bufferOverride || utlCanUseSessionStorage());\r\n                    var namePrefix = senderConfig.namePrefix;\r\n                    //Note: emitLineDelimitedJson and eventsLimitInMem is directly accessed via config in senderBuffer\r\n                    //Therefore, if canUseSessionStorage is not changed, we do not need to re initialize a new one\r\n                    var shouldUpdate = (canUseSessionStorage !== _sessionStorageUsed)\r\n                        || (canUseSessionStorage && (_namePrefix !== namePrefix)) // prefixName is only used in session storage\r\n                        || (canUseSessionStorage && (_bufferOverrideUsed !== bufferOverride));\r\n                    if (_self[_DYN__BUFFER /* @min:%2e_buffer */]) {\r\n                        // case1 (Pre and Now enableSessionStorageBuffer settings are same)\r\n                        // if namePrefix changes, transfer current buffer to new buffer\r\n                        // else no action needed\r\n                        //case2 (Pre and Now enableSessionStorageBuffer settings are changed)\r\n                        // transfer current buffer to new buffer\r\n                        if (shouldUpdate) {\r\n                            try {\r\n                                _self._buffer = _self._buffer[_DYN_CREATE_NEW /* @min:%2ecreateNew */](diagLog, senderConfig, canUseSessionStorage);\r\n                            }\r\n                            catch (e) {\r\n                                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"failed to transfer telemetry to different buffer storage, telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                            }\r\n                        }\r\n                        _checkMaxSize();\r\n                    }\r\n                    else {\r\n                        _self[_DYN__BUFFER /* @min:%2e_buffer */] = canUseSessionStorage\r\n                            ? new SessionStorageSendBuffer(diagLog, senderConfig) : new ArraySendBuffer(diagLog, senderConfig);\r\n                    }\r\n                    _namePrefix = namePrefix;\r\n                    _sessionStorageUsed = canUseSessionStorage;\r\n                    _bufferOverrideUsed = bufferOverride;\r\n                    _fetchKeepAlive = !senderConfig[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:%2eonunloadDisableFetch */] && isFetchSupported(true);\r\n                    _disableBeaconSplit = !!senderConfig[_DYN_DISABLE_SEND_BEACON_7 /* @min:%2edisableSendBeaconSplit */];\r\n                    _self._sample = new Sample(senderConfig.samplingPercentage, diagLog);\r\n                    _instrumentationKey = senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    if (!_validateInstrumentationKey(_instrumentationKey, config)) {\r\n                        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, \"Invalid Instrumentation key \" + _instrumentationKey);\r\n                    }\r\n                    _customHeaders = senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */];\r\n                    if (isString(_endpointUrl) && !isInternalApplicationInsightsEndpoint(_endpointUrl) && _customHeaders && _customHeaders[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            _this.addHeader(customHeader.header, customHeader.value);\r\n                        });\r\n                    }\r\n                    else {\r\n                        _customHeaders = null;\r\n                    }\r\n                    _enableSendPromise = senderConfig[_DYN_ENABLE_SEND_PROMISE /* @min:%2eenableSendPromise */];\r\n                    var sendPostConfig = _getSendPostMgrConfig();\r\n                    // only init it once\r\n                    if (!_sendPostMgr) {\r\n                        _sendPostMgr = new SenderPostManager();\r\n                        _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, diagLog);\r\n                    }\r\n                    else {\r\n                        _sendPostMgr.SetConfig(sendPostConfig);\r\n                    }\r\n                    var customInterface = senderConfig.httpXHROverride;\r\n                    var httpInterface = null;\r\n                    var syncInterface = null;\r\n                    // User requested transport(s) values > Beacon > Fetch > XHR\r\n                    // Beacon would be filtered out if user has set disableBeaconApi to true at _getSenderInterface\r\n                    var theTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */], senderConfig.transports);\r\n                    httpInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](theTransports, false);\r\n                    var xhrInterface = _sendPostMgr && _sendPostMgr.getFallbackInst();\r\n                    _xhrSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync);\r\n                    };\r\n                    _fallbackSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync, false);\r\n                    };\r\n                    httpInterface = _alwaysUseCustomSend ? customInterface : (httpInterface || customInterface || xhrInterface);\r\n                    _self[_DYN__SENDER /* @min:%2e_sender */] = function (payload, isAsync) {\r\n                        return _doSend(httpInterface, payload, isAsync);\r\n                    };\r\n                    if (_fetchKeepAlive) {\r\n                        // Try and use the fetch with keepalive\r\n                        _syncUnloadSender = _fetchKeepAliveSender;\r\n                    }\r\n                    var syncTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */], senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                    if (!_fetchKeepAlive) {\r\n                        // remove fetch from theTransports\r\n                        syncTransports = syncTransports.filter(function (transport) { return transport !== 2 /* TransportType.Fetch */; });\r\n                    }\r\n                    syncInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](syncTransports, true);\r\n                    syncInterface = _alwaysUseCustomSend ? customInterface : (syncInterface || customInterface);\r\n                    if ((_alwaysUseCustomSend || senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */] || !_syncUnloadSender) && syncInterface) {\r\n                        _syncUnloadSender = function (payload, isAsync) {\r\n                            return _doSend(syncInterface, payload, isAsync);\r\n                        };\r\n                    }\r\n                    if (!_syncUnloadSender) {\r\n                        _syncUnloadSender = _xhrSend;\r\n                    }\r\n                    _disableTelemetry = senderConfig.disableTelemetry;\r\n                    _convertUndefined = senderConfig[_DYN_CONVERT_UNDEFINED /* @min:%2econvertUndefined */] || UNDEFINED_VALUE;\r\n                    _isRetryDisabled = senderConfig.isRetryDisabled;\r\n                    _maxBatchInterval = senderConfig[_DYN_MAX_BATCH_INTERVAL /* @min:%2emaxBatchInterval */];\r\n                }));\r\n            };\r\n            _self.processTelemetry = function (telemetryItem, itemCtx) {\r\n                var _a;\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                var diagLogger = itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var isValidate = _validate(telemetryItem, diagLogger);\r\n                    if (!isValidate) {\r\n                        return;\r\n                    }\r\n                    var aiEnvelope = _getEnvelope(telemetryItem, diagLogger);\r\n                    if (!aiEnvelope) {\r\n                        return;\r\n                    }\r\n                    // check if the incoming payload is too large, truncate if necessary\r\n                    var payload = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](aiEnvelope);\r\n                    // flush if we would exceed the max-size limit by adding this item\r\n                    var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                    _checkMaxSize(payload);\r\n                    var payloadItem = (_a = {},\r\n                        _a[_DYN_ITEM /* @min:item */] = payload,\r\n                        _a.cnt = 0 // inital cnt will always be 0\r\n                    ,\r\n                        _a);\r\n                    // enqueue the payload\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payloadItem);\r\n                    // ensure an invocation timeout is set\r\n                    _setupTimer();\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                // hand off the telemetry item to the next plugin\r\n                _self.processNext(telemetryItem, itemCtx);\r\n            };\r\n            _self.isCompletelyIdle = function () {\r\n                return !_paused && _syncFetchPayload === 0 && _self._buffer[_DYN_COUNT /* @min:%2ecount */]() === 0;\r\n            };\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            _self._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n                // since version 3.2.0, this function is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xhrReadyStateChange(xhr, payload, countOfItemsInPayload);\r\n            };\r\n            /**\r\n             * Immediately send buffered data\r\n             * @param async - {boolean} - Indicates if the events should be sent asynchronously\r\n             * @param forcedSender - {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n             */\r\n            _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */] = function (async, forcedSender, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    try {\r\n                        var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                        // Send data only if disableTelemetry is false\r\n                        if (!_disableTelemetry) {\r\n                            if (buffer[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var payload = buffer.getItems();\r\n                                _notifySendRequest(sendReason || 0 /* SendRequestReason.Undefined */, async);\r\n                                // invoke send\r\n                                if (forcedSender) {\r\n                                    result = forcedSender.call(_self, payload, async);\r\n                                }\r\n                                else {\r\n                                    result = _self[_DYN__SENDER /* @min:%2e_sender */](payload, async);\r\n                                }\r\n                            }\r\n                            // update lastSend time to enable throttling\r\n                            _lastSend = +new Date;\r\n                        }\r\n                        else {\r\n                            buffer[_DYN_CLEAR /* @min:%2eclear */]();\r\n                        }\r\n                        _clearScheduledTimer();\r\n                    }\r\n                    catch (e) {\r\n                        /* Ignore this error for IE under v10 */\r\n                        var ieVer = getIEVersion();\r\n                        if (!ieVer || ieVer > 9) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Telemetry transmission failed, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                var _a;\r\n                return _a = {\r\n                        getUrl: function () {\r\n                            return _endpointUrl;\r\n                        },\r\n                        createPayload: _createPayload\r\n                    },\r\n                    _a[_DYN_SERIALIZE /* @min:serialize */] = _serialize,\r\n                    _a.batch = _batch,\r\n                    _a.shouldProcess = function (evt) {\r\n                        return !!_validate(evt);\r\n                    },\r\n                    _a;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _self.onunloadFlush();\r\n                runTargetUnload(_offlineListener, false);\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * error handler\r\n             */\r\n            _self[_DYN__ON_ERROR /* @min:%2e_onError */] = function (payload, message, event) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onError(payload, message, event);\r\n            };\r\n            /**\r\n             * partial success handler\r\n             */\r\n            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */] = function (payload, results) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onPartialSuccess(payload, results);\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */] = function (payload, countOfItemsInPayload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onSuccess(payload, countOfItemsInPayload);\r\n                //_self._buffer && _self._buffer.clearSent(payload);\r\n            };\r\n            /**\r\n             * xdr state changes\r\n             */\r\n            _self._xdrOnLoad = function (xdr, payload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xdrOnLoad(xdr, payload);\r\n            };\r\n            function _xdrOnLoad(xdr, payload) {\r\n                var responseText = _getResponseText(xdr);\r\n                if (xdr && (responseText + \"\" === \"200\" || responseText === \"\")) {\r\n                    _consecutiveErrors = 0;\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, 0);\r\n                }\r\n                else {\r\n                    var results = parseResponse(responseText);\r\n                    if (results && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] > results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]\r\n                        && !_isRetryDisabled) {\r\n                        _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, results);\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, formatErrorMessageXdr(xdr));\r\n                    }\r\n                }\r\n            }\r\n            function _getSendPostMgrConfig() {\r\n                var _a;\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: function (xdr, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xdrOnLoad(xdr, data);\r\n                        },\r\n                        fetchOnComplete: function (response, onComplete, resValue, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _checkResponsStatus(response.status, data, response.url, data[_DYN_LENGTH /* @min:%2elength */], response.statusText, resValue || \"\");\r\n                        },\r\n                        xhrOnComplete: function (request, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xhrReadyStateChange(request, data, data[_DYN_LENGTH /* @min:%2elength */]);\r\n                        },\r\n                        beaconOnRetry: function (data, onComplete, canSend) {\r\n                            return _onBeaconRetry(data, onComplete, canSend);\r\n                        }\r\n                    };\r\n                    var config = (_a = {},\r\n                        _a[_DYN_ENABLE_SEND_PROMISE /* @min:enableSendPromise */] = _enableSendPromise,\r\n                        _a.isOneDs = false,\r\n                        _a.disableCredentials = false,\r\n                        _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = _disableXhr,\r\n                        _a.disableBeacon = !_beaconNormalSupported,\r\n                        _a.disableBeaconSync = !_beaconOnUnloadSupported,\r\n                        _a.senderOnCompleteCallBack = onCompleteFuncs,\r\n                        _a);\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            function _xhrReadyStateChange(xhr, payload, countOfItemsInPayload) {\r\n                if (xhr.readyState === 4) {\r\n                    _checkResponsStatus(xhr.status, payload, xhr.responseURL, countOfItemsInPayload, formatErrorMessageXhr(xhr), _getResponseText(xhr) || xhr.response);\r\n                }\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(payload, message, event) {\r\n                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            /**\r\n             * partial success handler\r\n             */\r\n            function _onPartialSuccess(payload, results) {\r\n                var failed = [];\r\n                var retry = [];\r\n                // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n                var errors = results.errors.reverse();\r\n                for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                    var error = errors_1[_i];\r\n                    var extracted = payload.splice(error.index, 1)[0];\r\n                    if (_isRetriable(error.statusCode)) {\r\n                        retry[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                    else {\r\n                        // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                        failed[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                }\r\n                if (payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]);\r\n                }\r\n                if (failed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_ERROR /* @min:%2e_onError */](failed, formatErrorMessageXhr(null, [\"partial success\", results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */], \"of\", results.itemsReceived].join(\" \")));\r\n                }\r\n                if (retry[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _resendPayload(retry);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Partial success. \" +\r\n                        \"Delivered: \" + payload[_DYN_LENGTH /* @min:%2elength */] + \", Failed: \" + failed[_DYN_LENGTH /* @min:%2elength */] +\r\n                        \". Will retry to send \" + retry[_DYN_LENGTH /* @min:%2elength */] + \" our of \" + results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] + \" items\");\r\n                }\r\n            }\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(payload, countOfItemsInPayload) {\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            function _getPayloadArr(payload) {\r\n                try {\r\n                    if (payload) {\r\n                        var internalPayload = payload;\r\n                        var arr = internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                        if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                            return arr;\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _validate(telemetryItem, diagLogger) {\r\n                if (_disableTelemetry) {\r\n                    // Do not send/save data\r\n                    return false;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 7 /* _eInternalMessageId.CannotSendEmptyTelemetry */, \"Cannot send empty telemetry\");\r\n                    return false;\r\n                }\r\n                // validate event\r\n                if (telemetryItem.baseData && !telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 70 /* _eInternalMessageId.InvalidEvent */, \"Cannot send telemetry without baseData and baseType\");\r\n                    return false;\r\n                }\r\n                if (!telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    // Default\r\n                    telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */] = \"EventData\";\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!_self[_DYN__SENDER /* @min:%2e_sender */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender was not initialized\");\r\n                    return false;\r\n                }\r\n                // check if this item should be sampled in, else add sampleRate tag\r\n                if (!_isSampledIn(telemetryItem)) {\r\n                    // Item is sampled out, do not send it\r\n                    diagLogger && _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 33 /* _eInternalMessageId.TelemetrySampledAndNotSent */, \"Telemetry item was sampled out and not sent\", { SampleRate: _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] });\r\n                    return false;\r\n                }\r\n                else {\r\n                    telemetryItem[SampleRate] = _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */];\r\n                }\r\n                return true;\r\n            }\r\n            function _getEnvelope(telemetryItem, diagLogger) {\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                // if ikey of telemetry is provided and not empty, envelope will use this iKey instead of senderConfig iKey\r\n                var defaultEnvelopeIkey = telemetryItem.iKey || _instrumentationKey;\r\n                var aiEnvelope = Sender.constructEnvelope(telemetryItem, defaultEnvelopeIkey, diagLogger, _convertUndefined);\r\n                if (!aiEnvelope) {\r\n                    _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 47 /* _eInternalMessageId.CreateEnvelopeError */, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                var doNotSendItem = false;\r\n                // this is for running in legacy mode, where customer may already have a custom initializer present\r\n                if (telemetryItem[_DYN_TAGS /* @min:%2etags */] && telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy]) {\r\n                    arrForEach(telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy], function (callBack) {\r\n                        try {\r\n                            if (callBack && callBack(aiEnvelope) === false) {\r\n                                doNotSendItem = true;\r\n                                _warnToConsole(diagLogger, \"Telemetry processor check returns false\");\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // log error but dont stop executing rest of the telemetry initializers\r\n                            // doNotSendItem = true;\r\n                            _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n                        }\r\n                    });\r\n                    delete telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy];\r\n                }\r\n                if (doNotSendItem) {\r\n                    return; // do not send, no need to execute next plugin\r\n                }\r\n                return aiEnvelope;\r\n            }\r\n            function _serialize(item) {\r\n                var rlt = EMPTY_STR;\r\n                var diagLogger = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var valid = _validate(item, diagLogger);\r\n                    var envelope = null;\r\n                    if (valid) {\r\n                        envelope = _getEnvelope(item, diagLogger);\r\n                    }\r\n                    if (envelope) {\r\n                        rlt = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](envelope);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    rlt = \"[\" + arr.join(\",\") + \"]\";\r\n                }\r\n                return rlt;\r\n            }\r\n            function _createPayload(data) {\r\n                var _a;\r\n                var headers = _getHeaders();\r\n                return _a = {\r\n                        urlString: _endpointUrl\r\n                    },\r\n                    _a[_DYN_DATA /* @min:data */] = data,\r\n                    _a.headers = headers,\r\n                    _a;\r\n            }\r\n            function _isSampledIn(envelope) {\r\n                return _self._sample.isSampledIn(envelope);\r\n            }\r\n            function _getOnComplete(payload, status, headers, response) {\r\n                // ***********************************************************************************************\r\n                //TODO: handle other status codes\r\n                if (status === 200 && payload) {\r\n                    _self._onSuccess(payload, payload[_DYN_LENGTH /* @min:%2elength */]);\r\n                }\r\n                else {\r\n                    response && _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, response);\r\n                }\r\n            }\r\n            function _doSend(sendInterface, payload, isAsync, markAsSent) {\r\n                if (markAsSent === void 0) { markAsSent = true; }\r\n                var onComplete = function (status, headers, response) {\r\n                    return _getOnComplete(payload, status, headers, response);\r\n                };\r\n                var payloadData = _getPayload(payload);\r\n                var sendPostFunc = sendInterface && sendInterface.sendPOST;\r\n                if (sendPostFunc && payloadData) {\r\n                    // ***********************************************************************************************\r\n                    // mark payload as sent at the beginning of calling each send function\r\n                    if (markAsSent) {\r\n                        _self._buffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](payload);\r\n                    }\r\n                    return sendPostFunc(payloadData, onComplete, !isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            function _getPayload(payload) {\r\n                var _a;\r\n                if (isArray(payload) && payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var batch = _self[_DYN__BUFFER /* @min:%2e_buffer */].batchPayloads(payload);\r\n                    var headers = _getHeaders();\r\n                    var payloadData = (_a = {},\r\n                        _a[_DYN_DATA /* @min:data */] = batch,\r\n                        _a.urlString = _endpointUrl,\r\n                        _a.headers = headers,\r\n                        _a.disableXhrSync = _disableXhr,\r\n                        _a.disableFetchKeepAlive = !_fetchKeepAlive,\r\n                        _a[_DYN_ORI_PAYLOAD /* @min:oriPayload */] = payload,\r\n                        _a);\r\n                    return payloadData;\r\n                }\r\n                return null;\r\n            }\r\n            function _getHeaders() {\r\n                try {\r\n                    var headers = _headers || {};\r\n                    if (isInternalApplicationInsightsEndpoint(_endpointUrl)) {\r\n                        headers[RequestHeaders[6 /* eRequestHeaders.sdkContextHeader */]] = RequestHeaders[7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */];\r\n                    }\r\n                    return headers;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _checkMaxSize(incomingPayload) {\r\n                var incomingSize = incomingPayload ? incomingPayload[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n                if ((_self[_DYN__BUFFER /* @min:%2e_buffer */].size() + incomingSize) > _maxBatchSizeInBytes) {\r\n                    if (!_offlineListener || _offlineListener.isOnline()) { // only trigger send when currently online\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 10 /* SendRequestReason.MaxBatchSize */);\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _checkResponsStatus(status, payload, responseUrl, countOfItemsInPayload, errorMessage, res) {\r\n                var response = null;\r\n                if (!_self._appId) {\r\n                    response = parseResponse(res);\r\n                    if (response && response.appId) {\r\n                        _self._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((status < 200 || status >= 300) && status !== 0) {\r\n                    // Update End Point url if permanent redirect or moved permanently\r\n                    // Updates the end point url before retry\r\n                    if (status === 301 || status === 307 || status === 308) {\r\n                        if (!_checkAndUpdateEndPointUrl(responseUrl)) {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (_offlineListener && !_offlineListener.isOnline()) { // offline\r\n                        // Note: Don't check for status == 0, since adblock gives this code\r\n                        if (!_isRetryDisabled) {\r\n                            var offlineBackOffMultiplier = 10; // arbritrary number\r\n                            _resendPayload(payload, offlineBackOffMultiplier);\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". Offline - Response Code: \".concat(status, \". Offline status: \").concat(!_offlineListener.isOnline(), \". Will retry to send \").concat(payload.length, \" items.\"));\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (!_isRetryDisabled && _isRetriable(status)) {\r\n                        _resendPayload(payload);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" +\r\n                            \"Response code \" + status + \". Will retry to send \" + payload[_DYN_LENGTH /* @min:%2elength */] + \" items.\");\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                    }\r\n                }\r\n                else {\r\n                    // check if the xhr's responseURL or fetch's response.url is same as endpoint url\r\n                    // TODO after 10 redirects force send telemetry with 'redirect=false' as query parameter.\r\n                    _checkAndUpdateEndPointUrl(responseUrl);\r\n                    if (status === 206) {\r\n                        if (!response) {\r\n                            response = parseResponse(res);\r\n                        }\r\n                        if (response && !_isRetryDisabled) {\r\n                            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, response);\r\n                        }\r\n                        else {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _consecutiveErrors = 0;\r\n                        _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n            function _checkAndUpdateEndPointUrl(responseUrl) {\r\n                // Maximum stamp specific redirects allowed(uncomment this when breeze is ready with not allowing redirects feature)\r\n                if (_stamp_specific_redirects >= 10) {\r\n                    //  _self._senderConfig.endpointUrl = () => Sender._getDefaultAppInsightsChannelConfig().endpointUrl()+\"/?redirect=false\";\r\n                    //  _stamp_specific_redirects = 0;\r\n                    return false;\r\n                }\r\n                if (!isNullOrUndefined(responseUrl) && responseUrl !== \"\") {\r\n                    if (responseUrl !== _endpointUrl) {\r\n                        _endpointUrl = responseUrl;\r\n                        ++_stamp_specific_redirects;\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _doUnloadSend(payload, isAsync) {\r\n                if (_syncUnloadSender) {\r\n                    // We are unloading so always call the sender with sync set to false\r\n                    _syncUnloadSender(payload, false);\r\n                }\r\n                else {\r\n                    // Fallback to the previous beacon Sender (which causes a CORB warning on chrome now)\r\n                    var beaconInst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([3 /* TransportType.Beacon */], true);\r\n                    return _doSend(beaconInst, payload, isAsync);\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                var internalPayload = payload;\r\n                var data = internalPayload && internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                if (!_disableBeaconSplit) {\r\n                    // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                    var droppedPayload = [];\r\n                    for (var lp = 0; lp < data[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        var thePayload = data[lp];\r\n                        var arr = [thePayload];\r\n                        var item = _getPayload(arr);\r\n                        if (!canSend(item, onComplete)) {\r\n                            // Can't send anymore, so split the batch and drop the rest\r\n                            droppedPayload[_DYN_PUSH /* @min:%2epush */](thePayload);\r\n                        }\r\n                        else {\r\n                            _self._onSuccess(arr, arr[_DYN_LENGTH /* @min:%2elength */]);\r\n                        }\r\n                    }\r\n                    if (droppedPayload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _fallbackSend && _fallbackSend(droppedPayload, true);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                    }\r\n                }\r\n                else {\r\n                    _fallbackSend && _fallbackSend(data, true);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                }\r\n            }\r\n            function _isStringArr(arr) {\r\n                try {\r\n                    if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        return (isString(arr[0]));\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    //TODO: log, sender use IInternalStorageItem instead of string since 3.1.3\r\n                }\r\n                return null;\r\n            }\r\n            function _fetchKeepAliveSender(payload, isAsync) {\r\n                var transport = null;\r\n                if (isArray(payload)) {\r\n                    var payloadSize = payload[_DYN_LENGTH /* @min:%2elength */];\r\n                    for (var lp = 0; lp < payload[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        payloadSize += payload[lp].item[_DYN_LENGTH /* @min:%2elength */];\r\n                    }\r\n                    var syncFetchPayload = _sendPostMgr.getSyncFetchPayload();\r\n                    if ((syncFetchPayload + payloadSize) <= FetchSyncRequestSizeLimitBytes) {\r\n                        transport = 2 /* TransportType.Fetch */;\r\n                    }\r\n                    else if (isBeaconsSupported()) {\r\n                        // Fallback to beacon sender as we at least get told which events can't be scheduled\r\n                        transport = 3 /* TransportType.Beacon */;\r\n                    }\r\n                    else {\r\n                        // Payload is going to be too big so just try and send via XHR\r\n                        transport = 1 /* TransportType.Xhr */;\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n                    }\r\n                    var inst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([transport], true);\r\n                    return _doSend(inst, payload, isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n             * @param payload\r\n             */\r\n            function _resendPayload(payload, linearFactor) {\r\n                if (linearFactor === void 0) { linearFactor = 1; }\r\n                if (!payload || payload[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    return;\r\n                }\r\n                var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n                _consecutiveErrors++;\r\n                for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                    var item = payload_1[_i];\r\n                    item.cnt = item.cnt || 0; // to make sure we have cnt for each payload\r\n                    item.cnt++; // when resend, increase cnt\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](item);\r\n                }\r\n                // setup timer\r\n                _setRetryTime(linearFactor);\r\n                _setupTimer();\r\n            }\r\n            /**\r\n             * Calculates the time to wait before retrying in case of an error based on\r\n             * http://en.wikipedia.org/wiki/Exponential_backoff\r\n             */\r\n            function _setRetryTime(linearFactor) {\r\n                var SlotDelayInSeconds = 10;\r\n                var delayInSeconds;\r\n                if (_consecutiveErrors <= 1) {\r\n                    delayInSeconds = SlotDelayInSeconds;\r\n                }\r\n                else {\r\n                    var backOffSlot = (Math.pow(2, _consecutiveErrors) - 1) / 2;\r\n                    // tslint:disable-next-line:insecure-random\r\n                    var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                    backOffDelay = linearFactor * backOffDelay;\r\n                    delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n                }\r\n                // TODO: Log the backoff time like the C# version does.\r\n                var retryAfterTimeSpan = dateNow() + (delayInSeconds * 1000);\r\n                // TODO: Log the retry at time like the C# version does.\r\n                _retryAt = retryAfterTimeSpan;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers actually sending the data.\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && !_paused) {\r\n                    var retryInterval = _retryAt ? Math.max(0, _retryAt - dateNow()) : 0;\r\n                    var timerValue = Math.max(_maxBatchInterval, retryInterval);\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 1 /* SendRequestReason.NormalSchedule */);\r\n                    }, timerValue);\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryAt = null;\r\n            }\r\n            /**\r\n             * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n             * @param statusCode\r\n             */\r\n            function _isRetriable(statusCode) {\r\n                // retryCodes = [] means should not retry\r\n                if (!isNullOrUndefined(_retryCodes)) {\r\n                    return _retryCodes[_DYN_LENGTH /* @min:%2elength */] && _retryCodes.indexOf(statusCode) > -1;\r\n                }\r\n                return statusCode === 401 // Unauthorized\r\n                    // Removing as private links can return a 403 which causes excessive retries and session storage usage\r\n                    // || statusCode === 403 // Forbidden\r\n                    || statusCode === 408 // Timeout\r\n                    || statusCode === 429 // Too many requests.\r\n                    || statusCode === 500 // Internal server error.\r\n                    || statusCode === 502 // Bad Gateway.\r\n                    || statusCode === 503 // Service unavailable.\r\n                    || statusCode === 504; // Gateway timeout.\r\n            }\r\n            // Using function lookups for backward compatibility as the getNotifyMgr() did not exist until after v2.5.6\r\n            function _getNotifyMgr() {\r\n                var func = \"getNotifyMgr\";\r\n                if (_self.core[func]) {\r\n                    return _self.core[func]();\r\n                }\r\n                // using _self.core['_notificationManager'] for backward compatibility\r\n                return _self.core[\"_notificationManager\"];\r\n            }\r\n            function _notifySendRequest(sendRequest, isAsync) {\r\n                var manager = _getNotifyMgr();\r\n                if (manager && manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */]) {\r\n                    try {\r\n                        manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendRequest, isAsync);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            }\r\n            /**\r\n             * Validate UUID Format\r\n             * Specs taken from https://tools.ietf.org/html/rfc4122 and breeze repo\r\n             */\r\n            function _validateInstrumentationKey(instrumentationKey, config) {\r\n                var disableValidation = config.disableInstrumentationKeyValidation;\r\n                var disableIKeyValidationFlag = isNullOrUndefined(disableValidation) ? false : disableValidation;\r\n                if (disableIKeyValidationFlag) {\r\n                    return true;\r\n                }\r\n                var UUID_Regex = \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";\r\n                var regexp = new RegExp(UUID_Regex);\r\n                return regexp.test(instrumentationKey);\r\n            }\r\n            function _initDefaults() {\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _self[_DYN__BUFFER /* @min:%2e_buffer */] = null;\r\n                _self._appId = null;\r\n                _self._sample = null;\r\n                _headers = {};\r\n                _offlineListener = null;\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = null;\r\n                _paused = false;\r\n                _timeoutHandle = null;\r\n                _serializer = null;\r\n                _stamp_specific_redirects = 0;\r\n                _syncFetchPayload = 0;\r\n                _syncUnloadSender = null;\r\n                _evtNamespace = null;\r\n                _endpointUrl = null;\r\n                _orgEndpointUrl = null;\r\n                _maxBatchSizeInBytes = 0;\r\n                _beaconSupported = false;\r\n                _customHeaders = null;\r\n                _disableTelemetry = false;\r\n                _instrumentationKey = null;\r\n                _convertUndefined = UNDEFINED_VALUE;\r\n                _isRetryDisabled = false;\r\n                _sessionStorageUsed = null;\r\n                _namePrefix = UNDEFINED_VALUE;\r\n                _disableXhr = false;\r\n                _fetchKeepAlive = false;\r\n                _disableBeaconSplit = false;\r\n                _xhrSend = null;\r\n                _fallbackSend = null;\r\n                _sendPostMgr = null;\r\n                objDefine(_self, \"_senderConfig\", {\r\n                    g: function () {\r\n                        return objExtend({}, defaultAppInsightsChannelConfig);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger, convertUndefined) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !isNullOrUndefined(iKey)) {\r\n            envelope = __assign(__assign({}, orig), { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        var creator = EnvelopeTypeCreator[envelope.baseType] || EventEnvelopeCreator;\r\n        return creator(logger, envelope, convertUndefined);\r\n    };\r\n// Removed Stub for Sender.prototype.pause.\r\n// Removed Stub for Sender.prototype.resume.\r\n// Removed Stub for Sender.prototype.flush.\r\n// Removed Stub for Sender.prototype.onunloadFlush.\r\n// Removed Stub for Sender.prototype.initialize.\r\n// Removed Stub for Sender.prototype.processTelemetry.\r\n// Removed Stub for Sender.prototype._xhrReadyStateChange.\r\n// Removed Stub for Sender.prototype.triggerSend.\r\n// Removed Stub for Sender.prototype._onError.\r\n// Removed Stub for Sender.prototype._onPartialSuccess.\r\n// Removed Stub for Sender.prototype._onSuccess.\r\n// Removed Stub for Sender.prototype._xdrOnLoad.\r\n// Removed Stub for Sender.prototype.addHeader.\r\n// Removed Stub for Sender.prototype.isCompletelyIdle.\r\n// Removed Stub for Sender.prototype.getOfflineSupport.\r\n    return Sender;\r\n}(BaseTelemetryPlugin));\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, getJSON, isArray, isFunction, isObject, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SERIALIZE, _DYN_STRINGIFY, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            /**\r\n             * Serializes the current object to a JSON string.\r\n             */\r\n            _self[_DYN_SERIALIZE /* @min:%2eserialize */] = function (input) {\r\n                var output = _serializeObject(input, \"root\");\r\n                try {\r\n                    return getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](output);\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                }\r\n            };\r\n            function _serializeObject(source, name) {\r\n                var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n                var output = {};\r\n                if (!source) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (source[circularReferenceCheck]) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 50 /* _eInternalMessageId.CircularReferenceDetected */, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (!source.aiDataContract) {\r\n                    // special case for measurements/properties/tags\r\n                    if (name === \"measurements\") {\r\n                        output = _serializeStringMap(source, \"number\", name);\r\n                    }\r\n                    else if (name === \"properties\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (name === \"tags\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (isArray(source)) {\r\n                        output = _serializeArray(source, name);\r\n                    }\r\n                    else {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                        try {\r\n                            // verify that the object can be stringified\r\n                            getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](source);\r\n                            output = source;\r\n                        }\r\n                        catch (e) {\r\n                            // if serialization fails return an empty string\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                        }\r\n                    }\r\n                    return output;\r\n                }\r\n                source[circularReferenceCheck] = true;\r\n                objForEachKey(source.aiDataContract, function (field, contract) {\r\n                    var isRequired = (isFunction(contract)) ? (contract() & 1 /* FieldType.Required */) : (contract & 1 /* FieldType.Required */);\r\n                    var isHidden = (isFunction(contract)) ? (contract() & 4 /* FieldType.Hidden */) : (contract & 4 /* FieldType.Hidden */);\r\n                    var isArray = contract & 2 /* FieldType.Array */;\r\n                    var isPresent = source[field] !== undefined;\r\n                    var isObj = isObject(source[field]) && source[field] !== null;\r\n                    if (isRequired && !isPresent && !isArray) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 24 /* _eInternalMessageId.MissingRequiredFieldSpecification */, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                        // If not in debug mode, continue and hope the error is permissible\r\n                    }\r\n                    else if (!isHidden) { // Don't serialize hidden fields\r\n                        var value = void 0;\r\n                        if (isObj) {\r\n                            if (isArray) {\r\n                                // special case; recurse on each object in the source array\r\n                                value = _serializeArray(source[field], field);\r\n                            }\r\n                            else {\r\n                                // recurse on the source object in this field\r\n                                value = _serializeObject(source[field], field);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // assign the source field to the output even if undefined or required\r\n                            value = source[field];\r\n                        }\r\n                        // only emit this field if the value is defined\r\n                        if (value !== undefined) {\r\n                            output[field] = value;\r\n                        }\r\n                    }\r\n                });\r\n                delete source[circularReferenceCheck];\r\n                return output;\r\n            }\r\n            function _serializeArray(sources, name) {\r\n                var output;\r\n                if (!!sources) {\r\n                    if (!isArray(sources)) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 54 /* _eInternalMessageId.ItemNotInArray */, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                    }\r\n                    else {\r\n                        output = [];\r\n                        for (var i = 0; i < sources[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                            var source = sources[i];\r\n                            var item = _serializeObject(source, name + \"[\" + i + \"]\");\r\n                            output[_DYN_PUSH /* @min:%2epush */](item);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            function _serializeStringMap(map, expectedType, name) {\r\n                var output;\r\n                if (map) {\r\n                    output = {};\r\n                    objForEachKey(map, function (field, value) {\r\n                        if (expectedType === \"string\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else if (!value[_DYN_TO_STRING /* @min:%2etoString */]) {\r\n                                output[field] = \"invalid field: toString() is not defined.\";\r\n                            }\r\n                            else {\r\n                                output[field] = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            }\r\n                        }\r\n                        else if (expectedType === \"number\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else {\r\n                                var num = parseFloat(value);\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                        else {\r\n                            output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, output[field], null, true);\r\n                        }\r\n                    });\r\n                }\r\n                return output;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.serialize.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_CONCAT, _DYN_LENGTH } from \"../../__DynamicConstants\";\r\n// (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\nvar MIN_INPUT_LENGTH = 8;\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input[_DYN_LENGTH /* @min:%2elength */] < MIN_INPUT_LENGTH) {\r\n            input = input[_DYN_CONCAT /* @min:%2econcat */](input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ContextTagKeys } from \"@microsoft/applicationinsights-common\";\r\nimport { _DYN_GET_HASH_CODE_SCORE, _DYN_GET_SAMPLING_SCORE, _DYN_TAGS, _DYN_TRACE_ID } from \"../../__DynamicConstants\";\r\nimport { HashCodeScoreGenerator } from \"./HashCodeScoreGenerator\";\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        var _self = this;\r\n        var hashCodeGenerator = new HashCodeScoreGenerator();\r\n        var keys = new ContextTagKeys();\r\n        _self[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */] = function (item) {\r\n            var score = 0;\r\n            if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.userId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.userId]);\r\n            }\r\n            else if (item.ext && item.ext.user && item.ext.user.id) {\r\n                score = hashCodeGenerator[_DYN_GET_HASH_CODE_SCORE /* @min:%2egetHashCodeScore */](item.ext.user.id);\r\n            }\r\n            else if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.operationId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.operationId]);\r\n            }\r\n            else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n                score = hashCodeGenerator.getHashCodeScore(item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n            }\r\n            else {\r\n                // tslint:disable-next-line:insecure-random\r\n                score = (Math.random() * 100);\r\n            }\r\n            return score;\r\n        };\r\n    }\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { Metric } from \"@microsoft/applicationinsights-common\";\r\nimport { safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_DATA_TYPE, _DYN_GET_SAMPLING_SCORE, _DYN_SAMPLE_RATE } from \"../__DynamicConstants\";\r\nimport { SamplingScoreGenerator } from \"./SamplingScoreGenerators/SamplingScoreGenerator\";\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        var _logger = logger || safeGetLogger(null);\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            _logger.throwInternal(2 /* eLoggingSeverity.WARNING */, 58 /* _eInternalMessageId.SampleRateOutOfRange */, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            sampleRate = 100;\r\n        }\r\n        this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */]; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */](envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\nexport var STR_PROPERTIES = \"properties\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_REQUEST_URL = \"requestUrl\"; // Count: 11\r\nexport var _DYN_INST = \"inst\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 8\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 9\r\nexport var _DYN_SPAN_ID = \"spanID\"; // Count: 8\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 13\r\nexport var _DYN_CONTEXT = \"context\"; // Count: 7\r\nexport var _DYN_ABORTED = \"aborted\"; // Count: 7\r\nexport var _DYN_TRACE_ID0 = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID1 = \"spanId\"; // Count: 5\r\nexport var _DYN__ADD_HOOK = \"_addHook\"; // Count: 4\r\nexport var _DYN_CORE = \"core\"; // Count: 8\r\nexport var _DYN_INCLUDE_CORRELATION_2 = \"includeCorrelationHeaders\"; // Count: 4\r\nexport var _DYN_GET_ABSOLUTE_URL = \"getAbsoluteUrl\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 6\r\nexport var _DYN_REQUEST_HEADERS = \"requestHeaders\"; // Count: 13\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 3\r\nexport var _DYN_TRACK_DEPENDENCY_DAT3 = \"trackDependencyDataInternal\"; // Count: 2\r\nexport var _DYN_START_TIME = \"startTime\"; // Count: 6\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_ENABLE_REQUEST_HEADE4 = \"enableRequestHeaderTracking\"; // Count: 3\r\nexport var _DYN_ENABLE_AJAX_ERROR_ST5 = \"enableAjaxErrorStatusText\"; // Count: 2\r\nexport var _DYN_ENABLE_AJAX_PERF_TRA6 = \"enableAjaxPerfTracking\"; // Count: 2\r\nexport var _DYN_MAX_AJAX_CALLS_PER_V7 = \"maxAjaxCallsPerView\"; // Count: 2\r\nexport var _DYN_EXCLUDE_REQUEST_FROM8 = \"excludeRequestFromAutoTrackingPatterns\"; // Count: 2\r\nexport var _DYN_ADD_REQUEST_CONTEXT = \"addRequestContext\"; // Count: 2\r\nexport var _DYN_DISABLE_AJAX_TRACKIN9 = \"disableAjaxTracking\"; // Count: 3\r\nexport var _DYN_AJAX_PERF_LOOKUP_DEL10 = \"ajaxPerfLookupDelay\"; // Count: 2\r\nexport var _DYN_DISABLE_FETCH_TRACKI11 = \"disableFetchTracking\"; // Count: 2\r\nexport var _DYN_ENABLE_RESPONSE_HEAD12 = \"enableResponseHeaderTracking\"; // Count: 2\r\nexport var _DYN_STATUS = \"status\"; // Count: 11\r\nexport var _DYN_STATUS_TEXT = \"statusText\"; // Count: 9\r\nexport var _DYN_HEADER_MAP = \"headerMap\"; // Count: 8\r\nexport var _DYN_OPEN_DONE = \"openDone\"; // Count: 3\r\nexport var _DYN_SEND_DONE = \"sendDone\"; // Count: 3\r\nexport var _DYN_REQUEST_SENT_TIME = \"requestSentTime\"; // Count: 9\r\nexport var _DYN_ABORT_DONE = \"abortDone\"; // Count: 3\r\nexport var _DYN_GET_TRACE_ID = \"getTraceId\"; // Count: 3\r\nexport var _DYN_GET_TRACE_FLAGS = \"getTraceFlags\"; // Count: 3\r\nexport var _DYN_METHOD = \"method\"; // Count: 8\r\nexport var _DYN_ERROR_STATUS_TEXT = \"errorStatusText\"; // Count: 3\r\nexport var _DYN_STATE_CHANGE_ATTACHE13 = \"stateChangeAttached\"; // Count: 2\r\nexport var _DYN_RESPONSE_TEXT = \"responseText\"; // Count: 6\r\nexport var _DYN_RESPONSE_FINISHED_TI14 = \"responseFinishedTime\"; // Count: 7\r\nexport var _DYN__CREATE_TRACK_ITEM = \"CreateTrackItem\"; // Count: 3\r\nexport var _DYN_RESPONSE = \"response\"; // Count: 4\r\nexport var _DYN_GET_ALL_RESPONSE_HEA15 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_GET_PART_APROPS = \"getPartAProps\"; // Count: 3\r\nexport var _DYN_PERF_MARK = \"perfMark\"; // Count: 4\r\nexport var _DYN_NAME = \"name\"; // Count: 6\r\nexport var _DYN_PERF_TIMING = \"perfTiming\"; // Count: 3\r\nexport var _DYN_EXCEPTION = \"exception\"; // Count: 5\r\nexport var _DYN_AJAX_DIAGNOSTICS_MES16 = \"ajaxDiagnosticsMessage\"; // Count: 3\r\nexport var _DYN_CORRELATION_CONTEXT = \"correlationContext\"; // Count: 3\r\nexport var _DYN_AJAX_TOTAL_DURATION = \"ajaxTotalDuration\"; // Count: 3\r\nexport var _DYN_EVENT_TRACE_CTX = \"eventTraceCtx\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { Extensions, dataSanitizeUrl, dateTimeUtilsDuration, msToTimeSpan, urlGetAbsoluteUrl, urlGetCompleteUrl } from \"@microsoft/applicationinsights-common\";\r\nimport { arrForEach, isNullOrUndefined, isNumber, isString, normalizeJsName, objForEachKey, objKeys } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION, STR_PROPERTIES } from \"./InternalConstants\";\r\nimport { _DYN_ABORTED, _DYN_ABORT_DONE, _DYN_AJAX_TOTAL_DURATION, _DYN_CORRELATION_CONTEXT, _DYN_ERROR_STATUS_TEXT, _DYN_EVENT_TRACE_CTX, _DYN_GET_ABSOLUTE_URL, _DYN_GET_PART_APROPS, _DYN_GET_TRACE_FLAGS, _DYN_GET_TRACE_ID, _DYN_HEADER_MAP, _DYN_LENGTH, _DYN_METHOD, _DYN_NAME, _DYN_OPEN_DONE, _DYN_PERF_MARK, _DYN_PERF_TIMING, _DYN_REQUEST_HEADERS, _DYN_REQUEST_SENT_TIME, _DYN_REQUEST_URL, _DYN_RESPONSE, _DYN_RESPONSE_FINISHED_TI14, _DYN_SEND_DONE, _DYN_SPAN_ID, _DYN_SPAN_ID1, _DYN_START_TIME, _DYN_STATE_CHANGE_ATTACHE13, _DYN_STATUS, _DYN_STATUS_TEXT, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_TRACE_ID0, _DYN__CREATE_TRACK_ITEM } from \"./__DynamicConstants\";\r\n/** @ignore */\r\nfunction _calcPerfDuration(resourceEntry, start, end) {\r\n    var result = 0;\r\n    var from = resourceEntry[start];\r\n    var to = resourceEntry[end];\r\n    if (from && to) {\r\n        result = dateTimeUtilsDuration(from, to);\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _setPerfDuration(props, name, resourceEntry, start, end) {\r\n    var result = 0;\r\n    var value = _calcPerfDuration(resourceEntry, start, end);\r\n    if (value) {\r\n        result = _setPerfValue(props, name, msToTimeSpan(value));\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _setPerfValue(props, name, value) {\r\n    var strPerf = \"ajaxPerf\";\r\n    var result = 0;\r\n    if (props && name && value) {\r\n        var perfData = props[strPerf] = (props[strPerf] || {});\r\n        perfData[name] = value;\r\n        result = 1;\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _populatePerfData(ajaxData, dependency) {\r\n    /*\r\n    * https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API\r\n    *  | -startTime\r\n    *  | -redirectStart\r\n    *  |            | -redirectEnd\r\n    *  |            | | -fetchStart\r\n    *  |            | |   | -domainLookupStart\r\n    *  |            | |   |                |- domainLookupEnd\r\n    *  |            | |   |                | | -connectStart\r\n    *  |            | |   |                | |  | -secureConnectionStart\r\n    *  |            | |   |                | |  |        | -connectEnd\r\n    *  |            | |   |                | |  |        | | -requestStart\r\n    *  |            | |   |                | |  |        | |           | | -responseStart\r\n    *  |            | |   |                | |  |        | |           | |            | | -responseEnd\r\n    *  +------------+-+---+----------------+-+--+--------+-+-----------+-+------------+-+\r\n    *  |--redirect--| |---|--domainLookup--| |--connect--| |--request--| |--response--| |\r\n    *  |-------------------networkConnect----------------|\r\n    *  |                                                   |---------sentRequest--------|\r\n    *  |------------------------------------perfTotal-----------------------------------|\r\n    */\r\n    var resourceEntry = ajaxData[_DYN_PERF_TIMING /* @min:%2eperfTiming */];\r\n    var props = dependency[STR_PROPERTIES /* @min:%2eproperties */] || {};\r\n    var propsSet = 0;\r\n    var strName = \"name\";\r\n    var strStart = \"Start\";\r\n    var strEnd = \"End\";\r\n    var strDomainLookup = \"domainLookup\";\r\n    var strConnect = \"connect\";\r\n    var strRedirect = \"redirect\";\r\n    var strRequest = \"request\";\r\n    var strResponse = \"response\";\r\n    var strStartTime = \"startTime\";\r\n    var strDomainLookupStart = strDomainLookup + strStart;\r\n    var strDomainLookupEnd = strDomainLookup + strEnd;\r\n    var strConnectStart = strConnect + strStart;\r\n    var strConnectEnd = strConnect + strEnd;\r\n    var strRequestStart = strRequest + strStart;\r\n    var strRequestEnd = strRequest + strEnd;\r\n    var strResponseStart = strResponse + strStart;\r\n    var strResponseEnd = strResponse + strEnd;\r\n    var strRedirectStart = strRedirect + strStart;\r\n    var strRedirectEnd = strRedirect = strEnd;\r\n    var strTransferSize = \"transferSize\";\r\n    var strEncodedBodySize = \"encodedBodySize\";\r\n    var strDecodedBodySize = \"decodedBodySize\";\r\n    var strServerTiming = \"serverTiming\";\r\n    if (resourceEntry) {\r\n        // redirect\r\n        propsSet |= _setPerfDuration(props, strRedirect, resourceEntry, strRedirectStart, strRedirectEnd);\r\n        // domainLookup\r\n        propsSet |= _setPerfDuration(props, strDomainLookup, resourceEntry, strDomainLookupStart, strDomainLookupEnd);\r\n        // connect\r\n        propsSet |= _setPerfDuration(props, strConnect, resourceEntry, strConnectStart, strConnectEnd);\r\n        // request\r\n        propsSet |= _setPerfDuration(props, strRequest, resourceEntry, strRequestStart, strRequestEnd);\r\n        // response\r\n        propsSet |= _setPerfDuration(props, strResponse, resourceEntry, strResponseStart, strResponseEnd);\r\n        // Network connection time\r\n        propsSet |= _setPerfDuration(props, \"networkConnect\", resourceEntry, strStartTime, strConnectEnd);\r\n        // Sent Request\r\n        propsSet |= _setPerfDuration(props, \"sentRequest\", resourceEntry, strRequestStart, strResponseEnd);\r\n        // PerfTotal / Duration\r\n        var duration = resourceEntry[STR_DURATION /* @min:%2eduration */];\r\n        if (!duration) {\r\n            duration = _calcPerfDuration(resourceEntry, strStartTime, strResponseEnd) || 0;\r\n        }\r\n        propsSet |= _setPerfValue(props, STR_DURATION, duration);\r\n        propsSet |= _setPerfValue(props, \"perfTotal\", duration);\r\n        var serverTiming = resourceEntry[strServerTiming];\r\n        if (serverTiming) {\r\n            var server_1 = {};\r\n            arrForEach(serverTiming, function (value, idx) {\r\n                var name = normalizeJsName(value[strName] || \"\" + idx);\r\n                var newValue = server_1[name] || {};\r\n                objForEachKey(value, function (key, val) {\r\n                    if (key !== strName && isString(val) || isNumber(val)) {\r\n                        if (newValue[key]) {\r\n                            val = newValue[key] + \";\" + val;\r\n                        }\r\n                        if (val || !isString(val)) {\r\n                            // Only set the value if it has a value and it's not an empty string\r\n                            newValue[key] = val;\r\n                        }\r\n                    }\r\n                });\r\n                server_1[name] = newValue;\r\n            });\r\n            propsSet |= _setPerfValue(props, strServerTiming, server_1);\r\n        }\r\n        propsSet |= _setPerfValue(props, strTransferSize, resourceEntry[strTransferSize]);\r\n        propsSet |= _setPerfValue(props, strEncodedBodySize, resourceEntry[strEncodedBodySize]);\r\n        propsSet |= _setPerfValue(props, strDecodedBodySize, resourceEntry[strDecodedBodySize]);\r\n    }\r\n    else {\r\n        if (ajaxData[_DYN_PERF_MARK /* @min:%2eperfMark */]) {\r\n            propsSet |= _setPerfValue(props, \"missing\", ajaxData.perfAttempts);\r\n        }\r\n    }\r\n    if (propsSet) {\r\n        dependency[STR_PROPERTIES /* @min:%2eproperties */] = props;\r\n    }\r\n}\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        var self = this;\r\n        self[_DYN_OPEN_DONE /* @min:%2eopenDone */] = false;\r\n        self.setRequestHeaderDone = false;\r\n        self[_DYN_SEND_DONE /* @min:%2esendDone */] = false;\r\n        self[_DYN_ABORT_DONE /* @min:%2eabortDone */] = false;\r\n        // <summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        self[_DYN_STATE_CHANGE_ATTACHE13 /* @min:%2estateChangeAttached */] = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\nexport { XHRMonitoringState };\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(traceId, spanId, logger, traceCtx) {\r\n        var _a;\r\n        var self = this;\r\n        var _logger = logger;\r\n        var strResponseText = \"responseText\";\r\n        // Assigning the initial/default values within the constructor to avoid typescript from creating a bunch of\r\n        // this.XXXX = null\r\n        self[_DYN_PERF_MARK /* @min:%2eperfMark */] = null;\r\n        self.completed = false;\r\n        self.requestHeadersSize = null;\r\n        self[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = null;\r\n        self.responseReceivingDuration = null;\r\n        self.callbackDuration = null;\r\n        self[_DYN_AJAX_TOTAL_DURATION /* @min:%2eajaxTotalDuration */] = null;\r\n        self[_DYN_ABORTED /* @min:%2eaborted */] = 0;\r\n        self.pageUrl = null;\r\n        self[_DYN_REQUEST_URL /* @min:%2erequestUrl */] = null;\r\n        self.requestSize = 0;\r\n        self[_DYN_METHOD /* @min:%2emethod */] = null;\r\n        self[_DYN_STATUS /* @min:%2estatus */] = null;\r\n        self[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */] = null;\r\n        self.responseStartedTime = null;\r\n        self[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */] = null;\r\n        self.callbackFinishedTime = null;\r\n        self.endTime = null;\r\n        self.xhrMonitoringState = new XHRMonitoringState();\r\n        self.clientFailure = 0;\r\n        self[_DYN_TRACE_ID /* @min:%2etraceID */] = traceId;\r\n        self[_DYN_SPAN_ID /* @min:%2espanID */] = spanId;\r\n        self[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = traceCtx === null || traceCtx === void 0 ? void 0 : traceCtx.getTraceFlags();\r\n        if (traceCtx) {\r\n            self[_DYN_EVENT_TRACE_CTX /* @min:%2eeventTraceCtx */] = (_a = {},\r\n                _a[_DYN_TRACE_ID0 /* @min:traceId */] = traceCtx[_DYN_GET_TRACE_ID /* @min:%2egetTraceId */](),\r\n                _a[_DYN_SPAN_ID1 /* @min:spanId */] = traceCtx.getSpanId(),\r\n                _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = traceCtx[_DYN_GET_TRACE_FLAGS /* @min:%2egetTraceFlags */](),\r\n                _a);\r\n        }\r\n        else {\r\n            self[_DYN_EVENT_TRACE_CTX /* @min:%2eeventTraceCtx */] = null;\r\n        }\r\n        dynamicProto(ajaxRecord, self, function (self) {\r\n            self.getAbsoluteUrl = function () {\r\n                return self[_DYN_REQUEST_URL /* @min:%2erequestUrl */] ? urlGetAbsoluteUrl(self[_DYN_REQUEST_URL /* @min:%2erequestUrl */]) : null;\r\n            };\r\n            self.getPathName = function () {\r\n                return self[_DYN_REQUEST_URL /* @min:%2erequestUrl */] ? dataSanitizeUrl(_logger, urlGetCompleteUrl(self[_DYN_METHOD /* @min:%2emethod */], self[_DYN_REQUEST_URL /* @min:%2erequestUrl */])) : null;\r\n            };\r\n            self[_DYN__CREATE_TRACK_ITEM /* @min:%2eCreateTrackItem */] = function (ajaxType, enableRequestHeaderTracking, getResponse) {\r\n                var _a;\r\n                // round to 3 decimal points\r\n                self.ajaxTotalDuration = Math.round(dateTimeUtilsDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n                if (self[_DYN_AJAX_TOTAL_DURATION /* @min:%2eajaxTotalDuration */] < 0) {\r\n                    return null;\r\n                }\r\n                var dependency = (_a = {\r\n                        id: \"|\" + self[_DYN_TRACE_ID /* @min:%2etraceID */] + \".\" + self[_DYN_SPAN_ID /* @min:%2espanID */],\r\n                        target: self[_DYN_GET_ABSOLUTE_URL /* @min:%2egetAbsoluteUrl */]()\r\n                    },\r\n                    _a[_DYN_NAME /* @min:name */] = self.getPathName(),\r\n                    _a.type = ajaxType,\r\n                    _a[_DYN_START_TIME /* @min:startTime */] = null,\r\n                    _a.duration = self[_DYN_AJAX_TOTAL_DURATION /* @min:%2eajaxTotalDuration */],\r\n                    _a.success = (+(self[_DYN_STATUS /* @min:%2estatus */])) >= 200 && (+(self[_DYN_STATUS /* @min:%2estatus */])) < 400,\r\n                    _a.responseCode = (+(self[_DYN_STATUS /* @min:%2estatus */])),\r\n                    _a[STR_PROPERTIES] = { HttpMethod: self[_DYN_METHOD /* @min:%2emethod */] },\r\n                    _a);\r\n                var props = dependency[STR_PROPERTIES];\r\n                if (self[_DYN_ABORTED /* @min:%2eaborted */]) {\r\n                    props[_DYN_ABORTED /* @min:%2eaborted */] = true;\r\n                }\r\n                if (self[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */]) {\r\n                    // Set the correct dependency start time\r\n                    dependency[_DYN_START_TIME /* @min:%2estartTime */] = new Date();\r\n                    dependency[_DYN_START_TIME /* @min:%2estartTime */].setTime(self[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */]);\r\n                }\r\n                // Add Ajax perf details if available\r\n                _populatePerfData(self, dependency);\r\n                if (enableRequestHeaderTracking) {\r\n                    if (objKeys(self.requestHeaders)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        props[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = self[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */];\r\n                    }\r\n                }\r\n                if (getResponse) {\r\n                    var response = getResponse();\r\n                    if (response) {\r\n                        // enrich dependency target with correlation context from the server\r\n                        var correlationContext = response[_DYN_CORRELATION_CONTEXT /* @min:%2ecorrelationContext */];\r\n                        if (correlationContext) {\r\n                            dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n                        }\r\n                        if (response[_DYN_HEADER_MAP /* @min:%2eheaderMap */]) {\r\n                            if (objKeys(response.headerMap)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                                props.responseHeaders = response[_DYN_HEADER_MAP /* @min:%2eheaderMap */];\r\n                            }\r\n                        }\r\n                        if (self[_DYN_ERROR_STATUS_TEXT /* @min:%2eerrorStatusText */]) {\r\n                            if (self[_DYN_STATUS /* @min:%2estatus */] >= 400) {\r\n                                var responseType = response.type;\r\n                                if (responseType === \"\" || responseType === \"text\") {\r\n                                    props.responseText = response.responseText ? response[_DYN_STATUS_TEXT /* @min:%2estatusText */] + \" - \" + response[strResponseText] : response[_DYN_STATUS_TEXT /* @min:%2estatusText */];\r\n                                }\r\n                                if (responseType === \"json\") {\r\n                                    props.responseText = response.response ? response[_DYN_STATUS_TEXT /* @min:%2estatusText */] + \" - \" + JSON.stringify(response[_DYN_RESPONSE /* @min:%2eresponse */]) : response[_DYN_STATUS_TEXT /* @min:%2estatusText */];\r\n                                }\r\n                            }\r\n                            else if (self[_DYN_STATUS /* @min:%2estatus */] === 0) {\r\n                                props.responseText = response[_DYN_STATUS_TEXT /* @min:%2estatusText */] || \"\";\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return dependency;\r\n            };\r\n            self[_DYN_GET_PART_APROPS /* @min:%2egetPartAProps */] = function () {\r\n                var _a;\r\n                var partA = null;\r\n                var traceCtx = self[_DYN_EVENT_TRACE_CTX /* @min:%2eeventTraceCtx */];\r\n                if (traceCtx && (traceCtx[_DYN_TRACE_ID0 /* @min:%2etraceId */] || traceCtx[_DYN_SPAN_ID1 /* @min:%2espanId */])) {\r\n                    partA = {};\r\n                    var traceExt = partA[Extensions.TraceExt] = (_a = {},\r\n                        _a[_DYN_TRACE_ID /* @min:traceID */] = traceCtx[_DYN_TRACE_ID0 /* @min:%2etraceId */],\r\n                        _a.parentID = traceCtx[_DYN_SPAN_ID1 /* @min:%2espanId */],\r\n                        _a);\r\n                    if (!isNullOrUndefined(traceCtx[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */])) {\r\n                        traceExt[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = traceCtx[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n                    }\r\n                }\r\n                return partA;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for ajaxRecord.prototype.getAbsoluteUrl.\r\n// Removed Stub for ajaxRecord.prototype.getPathName.\r\n// Removed Stub for ajaxRecord.prototype.CreateTrackItem.\r\n// Removed Stub for ajaxRecord.prototype.getPartAProps.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ajaxRecord.__ieDyn=1;\n\n    return ajaxRecord;\r\n}());\r\nexport { ajaxRecord };\r\n//# sourceMappingURL=ajaxRecord.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar _a;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { DisabledPropertyName, PropertiesPluginIdentifier, RemoteDependencyData, RequestHeaders, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, createDistributedTraceContextFromTrace, createTelemetryItem, createTraceParent, dateTimeUtilsNow, formatTraceParent, isInternalApplicationInsightsEndpoint } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, InstrumentFunc, InstrumentProto, _throwInternal, arrForEach, createProcessTelemetryContext, createUniqueNamespace, dumpObj, eventOn, generateW3CId, getExceptionName, getGlobal, getIEVersion, getLocation, getPerformance, isFunction, isNullOrUndefined, isString, isXhrSupported, mergeEvtNamespace, onConfigChange, strPrototype, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isWebWorker, objFreeze, scheduleTimeout, strIndexOf, strSplit, strSubstr } from \"@nevware21/ts-utils\";\r\nimport { STR_PROPERTIES } from \"./InternalConstants\";\r\nimport { _DYN_ABORTED, _DYN_ABORT_DONE, _DYN_ADD_REQUEST_CONTEXT, _DYN_AJAX_DIAGNOSTICS_MES16, _DYN_AJAX_PERF_LOOKUP_DEL10, _DYN_CONTEXT, _DYN_CORE, _DYN_CORRELATION_CONTEXT, _DYN_DISABLE_AJAX_TRACKIN9, _DYN_DISABLE_FETCH_TRACKI11, _DYN_ENABLE_AJAX_ERROR_ST5, _DYN_ENABLE_AJAX_PERF_TRA6, _DYN_ENABLE_REQUEST_HEADE4, _DYN_ENABLE_RESPONSE_HEAD12, _DYN_ERROR_STATUS_TEXT, _DYN_EXCEPTION, _DYN_EXCLUDE_REQUEST_FROM8, _DYN_GET_ABSOLUTE_URL, _DYN_GET_ALL_RESPONSE_HEA15, _DYN_GET_PART_APROPS, _DYN_GET_TRACE_FLAGS, _DYN_GET_TRACE_ID, _DYN_HEADERS, _DYN_HEADER_MAP, _DYN_INCLUDE_CORRELATION_2, _DYN_INST, _DYN_LENGTH, _DYN_MAX_AJAX_CALLS_PER_V7, _DYN_METHOD, _DYN_NAME, _DYN_OPEN_DONE, _DYN_PERF_MARK, _DYN_PERF_TIMING, _DYN_REQUEST_HEADERS, _DYN_REQUEST_SENT_TIME, _DYN_REQUEST_URL, _DYN_RESPONSE, _DYN_RESPONSE_FINISHED_TI14, _DYN_RESPONSE_TEXT, _DYN_SEND_DONE, _DYN_SET_REQUEST_HEADER, _DYN_SPAN_ID, _DYN_SPAN_ID1, _DYN_START_TIME, _DYN_STATE_CHANGE_ATTACHE13, _DYN_STATUS, _DYN_STATUS_TEXT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_TRACE_ID0, _DYN_TRACK_DEPENDENCY_DAT3, _DYN__ADD_HOOK, _DYN__CREATE_TRACK_ITEM } from \"./__DynamicConstants\";\r\nimport { ajaxRecord } from \"./ajaxRecord\";\r\nvar AJAX_MONITOR_PREFIX = \"ai.ajxmn.\";\r\nvar strDiagLog = \"diagLog\";\r\nvar AJAX_DATA_CONTAINER = \"_ajaxData\";\r\nvar STR_FETCH = \"fetch\";\r\nvar ERROR_HEADER = \"Failed to monitor XMLHttpRequest\";\r\nvar ERROR_PREFIX = \", monitoring data for this ajax call \";\r\nvar ERROR_POSTFIX = ERROR_PREFIX + \"may be incorrect.\";\r\nvar ERROR_NOT_SENT = ERROR_PREFIX + \"won't be sent.\";\r\nvar CORRELATION_HEADER_ERROR = \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\";\r\nvar CUSTOM_REQUEST_CONTEXT_ERROR = \"Failed to add custom defined request context as configured call back may missing a null check.\";\r\nvar FAILED_TO_CALCULATE_DURATION_ERROR = \"Failed to calculate the duration of the \";\r\n// Using a global value so that to handle same iKey with multiple app insights instances (mostly for testing)\r\nvar _markCount = 0;\r\n/** @Ignore */\r\nfunction _supportsFetch() {\r\n    var _global = getGlobal();\r\n    if (!_global ||\r\n        isNullOrUndefined(_global.Request) ||\r\n        isNullOrUndefined(_global.Request[strPrototype]) ||\r\n        isNullOrUndefined(_global[STR_FETCH])) {\r\n        return null;\r\n    }\r\n    return _global[STR_FETCH];\r\n}\r\n/**\r\n * Determines whether ajax monitoring can be enabled on this document\r\n * @returns True if Ajax monitoring is supported on this page, otherwise false\r\n * @ignore\r\n */\r\nfunction _supportsAjaxMonitoring(ajaxMonitorInstance, ajaxDataId) {\r\n    var _a, _b;\r\n    var result = false;\r\n    if (isXhrSupported()) {\r\n        var proto = XMLHttpRequest[strPrototype];\r\n        result = !isNullOrUndefined(proto) &&\r\n            !isNullOrUndefined(proto.open) && // eslint-disable-line security/detect-non-literal-fs-filename -- false positive\r\n            !isNullOrUndefined(proto.send) &&\r\n            !isNullOrUndefined(proto.abort);\r\n    }\r\n    var ieVer = getIEVersion();\r\n    if (ieVer && ieVer < 9) {\r\n        result = false;\r\n    }\r\n    if (result) {\r\n        // Disable if the XmlHttpRequest can't be extended or hooked\r\n        try {\r\n            var xhr = new XMLHttpRequest();\r\n            var xhrData = {\r\n                xh: [],\r\n                i: (_a = {},\r\n                    _a[ajaxDataId] = {},\r\n                    _a)\r\n            };\r\n            xhr[AJAX_DATA_CONTAINER] = xhrData;\r\n            // Check that we can update the prototype\r\n            var theOpen = XMLHttpRequest[strPrototype].open;\r\n            XMLHttpRequest[strPrototype].open = theOpen;\r\n        }\r\n        catch (e) {\r\n            // We can't decorate the xhr object so disable monitoring\r\n            result = false;\r\n            _throwInternalCritical(ajaxMonitorInstance, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, \"Failed to enable XMLHttpRequest monitoring, extension is not supported\", (_b = {},\r\n                _b[_DYN_EXCEPTION /* @min:exception */] = dumpObj(e),\r\n                _b));\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Internal helper to fetch the SDK instance tracking data for this XHR request\r\n * @param xhr\r\n * @param ajaxDataId\r\n * @returns\r\n */\r\nvar _getAjaxData = function (xhr, ajaxDataId) {\r\n    if (xhr && ajaxDataId && xhr[AJAX_DATA_CONTAINER]) {\r\n        return (xhr[AJAX_DATA_CONTAINER].i || {})[ajaxDataId];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * @ignore\r\n * Internal helper to track the singleton shared tracking headers, so we can attempt to not create headers\r\n * that might cause an issue if multiple values are populated.\r\n * @param xhr - The instrumented XHR instance\r\n */\r\nvar _addSharedXhrHeaders = function (xhr, name, value) {\r\n    if (xhr) {\r\n        var headers = (xhr[AJAX_DATA_CONTAINER] || {}).xh;\r\n        if (headers) {\r\n            headers.push({\r\n                n: name,\r\n                v: value\r\n            });\r\n        }\r\n    }\r\n};\r\nvar _isHeaderSet = function (xhr, name) {\r\n    var isPresent = false;\r\n    if (xhr) {\r\n        var headers = (xhr[AJAX_DATA_CONTAINER] || {}).xh;\r\n        if (headers) {\r\n            arrForEach(headers, function (header) {\r\n                if (header.n === name) {\r\n                    isPresent = true;\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return isPresent;\r\n};\r\n/** @Ignore */\r\nfunction _getFailedAjaxDiagnosticsMessage(xhr, ajaxDataId) {\r\n    var result = \"\";\r\n    try {\r\n        var ajaxData = _getAjaxData(xhr, ajaxDataId);\r\n        if (ajaxData && ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */]) {\r\n            result += \"(url: '\" + ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] + \"')\";\r\n        }\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _throwInternalCritical(ajaxMonitorInstance, msgId, message, properties, isUserAct) {\r\n    _throwInternal(ajaxMonitorInstance[strDiagLog](), 1 /* eLoggingSeverity.CRITICAL */, msgId, message, properties, isUserAct);\r\n}\r\n/** @ignore */\r\nfunction _throwInternalWarning(ajaxMonitorInstance, msgId, message, properties, isUserAct) {\r\n    _throwInternal(ajaxMonitorInstance[strDiagLog](), 2 /* eLoggingSeverity.WARNING */, msgId, message, properties, isUserAct);\r\n}\r\n/** @Ignore */\r\nfunction _createErrorCallbackFunc(ajaxMonitorInstance, internalMessage, message) {\r\n    // tslint:disable-next-line\r\n    return function (callDetails) {\r\n        var _a;\r\n        _throwInternalCritical(ajaxMonitorInstance, internalMessage, message, (_a = {\r\n                ajaxDiagnosticsMessage: _getFailedAjaxDiagnosticsMessage(callDetails[_DYN_INST /* @min:%2einst */], ajaxMonitorInstance._ajaxDataId)\r\n            },\r\n            _a[_DYN_EXCEPTION /* @min:exception */] = dumpObj(callDetails.err),\r\n            _a));\r\n    };\r\n}\r\nfunction _indexOf(value, match) {\r\n    if (value && match) {\r\n        return strIndexOf(value, match);\r\n    }\r\n    return -1;\r\n}\r\nfunction _addHandler(container, id, theFunc) {\r\n    var theHandler = {\r\n        id: id,\r\n        fn: theFunc\r\n    };\r\n    container.push(theHandler);\r\n    return {\r\n        remove: function () {\r\n            arrForEach(container, function (initializer, idx) {\r\n                if (initializer.id === theHandler.id) {\r\n                    container.splice(idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\nfunction _processDependencyContainer(core, container, details, message) {\r\n    var result = true;\r\n    arrForEach(container, function (theFunc, idx) {\r\n        try {\r\n            if (theFunc.fn.call(null, details) === false) {\r\n                result = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            _throwInternal(core && core.logger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Dependency \" + message + \" [#\" + idx + \"] failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n        }\r\n    });\r\n    return result;\r\n}\r\nfunction _processDependencyListeners(listeners, core, ajaxData, xhr, input, init) {\r\n    var _a;\r\n    var initializersCount = listeners[_DYN_LENGTH /* @min:%2elength */];\r\n    if (initializersCount > 0) {\r\n        var details = (_a = {},\r\n            _a[_DYN_CORE /* @min:core */] = core,\r\n            _a.xhr = xhr,\r\n            _a.input = input,\r\n            _a.init = init,\r\n            _a.traceId = ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */],\r\n            _a.spanId = ajaxData[_DYN_SPAN_ID /* @min:%2espanID */],\r\n            _a.traceFlags = ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */],\r\n            _a.context = ajaxData[_DYN_CONTEXT /* @min:%2econtext */] || {},\r\n            _a.aborted = !!ajaxData[_DYN_ABORTED /* @min:%2eaborted */],\r\n            _a);\r\n        _processDependencyContainer(core, listeners, details, \"listener\");\r\n        ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */] = details[_DYN_TRACE_ID0 /* @min:%2etraceId */];\r\n        ajaxData[_DYN_SPAN_ID /* @min:%2espanID */] = details[_DYN_SPAN_ID1 /* @min:%2espanId */];\r\n        ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = details[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        ajaxData[_DYN_CONTEXT /* @min:%2econtext */] = details[_DYN_CONTEXT /* @min:%2econtext */];\r\n    }\r\n}\r\nvar BLOB_CORE = \"*.blob.core.\";\r\nexport var DfltAjaxCorrelationHeaderExDomains = objFreeze([\r\n    BLOB_CORE + \"windows.net\",\r\n    BLOB_CORE + \"chinacloudapi.cn\",\r\n    BLOB_CORE + \"cloudapi.de\",\r\n    BLOB_CORE + \"usgovcloudapi.net\"\r\n]);\r\nvar _internalExcludeEndpoints = [\r\n    /https:\\/\\/[^\\/]*(\\.pipe\\.aria|aria\\.pipe|events\\.data|collector\\.azure)\\.[^\\/]+\\/(OneCollector\\/1|Collector\\/3)\\.0/i\r\n];\r\nvar _defaultConfig = objFreeze((_a = {},\r\n    _a[_DYN_MAX_AJAX_CALLS_PER_V7 /* @min:maxAjaxCallsPerView */] = 500,\r\n    _a[_DYN_DISABLE_AJAX_TRACKIN9 /* @min:disableAjaxTracking */] = false,\r\n    _a[_DYN_DISABLE_FETCH_TRACKI11 /* @min:disableFetchTracking */] = false,\r\n    _a[_DYN_EXCLUDE_REQUEST_FROM8 /* @min:excludeRequestFromAutoTrackingPatterns */] = undefined,\r\n    _a.disableCorrelationHeaders = false,\r\n    _a.distributedTracingMode = 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    _a.correlationHeaderExcludedDomains = DfltAjaxCorrelationHeaderExDomains,\r\n    _a.correlationHeaderDomains = undefined,\r\n    _a.correlationHeaderExcludePatterns = undefined,\r\n    _a.appId = undefined,\r\n    _a.enableCorsCorrelation = false,\r\n    _a[_DYN_ENABLE_REQUEST_HEADE4 /* @min:enableRequestHeaderTracking */] = false,\r\n    _a[_DYN_ENABLE_RESPONSE_HEAD12 /* @min:enableResponseHeaderTracking */] = false,\r\n    _a[_DYN_ENABLE_AJAX_ERROR_ST5 /* @min:enableAjaxErrorStatusText */] = false,\r\n    _a[_DYN_ENABLE_AJAX_PERF_TRA6 /* @min:enableAjaxPerfTracking */] = false,\r\n    _a.maxAjaxPerfLookupAttempts = 3,\r\n    _a[_DYN_AJAX_PERF_LOOKUP_DEL10 /* @min:ajaxPerfLookupDelay */] = 25,\r\n    _a.ignoreHeaders = [\r\n        \"Authorization\",\r\n        \"X-API-Key\",\r\n        \"WWW-Authenticate\"\r\n    ],\r\n    _a[_DYN_ADD_REQUEST_CONTEXT /* @min:addRequestContext */] = undefined,\r\n    _a.addIntEndpoints = true,\r\n    _a));\r\nvar AjaxMonitor = /** @class */ (function (_super) {\r\n    __extends(AjaxMonitor, _super);\r\n    function AjaxMonitor() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = AjaxMonitor.identifier;\r\n        _this.priority = 120;\r\n        var _fetchInitialized; // fetch monitoring initialized\r\n        var _xhrInitialized; // XHR monitoring initialized\r\n        var _currentWindowHost;\r\n        var _extensionConfig;\r\n        var _enableRequestHeaderTracking;\r\n        var _enableAjaxErrorStatusText;\r\n        var _trackAjaxAttempts;\r\n        var _context;\r\n        var _isUsingW3CHeaders;\r\n        var _isUsingAIHeaders;\r\n        var _markPrefix;\r\n        var _enableAjaxPerfTracking;\r\n        var _maxAjaxCallsPerView;\r\n        var _enableResponseHeaderTracking;\r\n        var _disabledUrls;\r\n        var _disableAjaxTracking;\r\n        var _disableFetchTracking;\r\n        var _excludeRequestFromAutoTrackingPatterns;\r\n        var _addRequestContext;\r\n        var _evtNamespace;\r\n        var _ajaxDataId;\r\n        var _dependencyHandlerId;\r\n        var _dependencyListeners;\r\n        var _dependencyInitializers;\r\n        var _ignoreHeaders;\r\n        var _maxAjaxPerfLookupAttempts;\r\n        var _ajaxPerfLookupDelay;\r\n        var _distributedTracingMode;\r\n        var _appId;\r\n        var _polyfillInitialized;\r\n        dynamicProto(AjaxMonitor, _this, function (_self, _base) {\r\n            var _addHook = _base[_DYN__ADD_HOOK /* @min:%2e_addHook */];\r\n            _initDefaults();\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                if (!_self.isInitialized()) {\r\n                    _base.initialize(config, core, extensions, pluginChain);\r\n                    _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"ajax\"), core && core.evtNamespace && core.evtNamespace());\r\n                    _populateDefaults(config);\r\n                    _instrumentXhr();\r\n                    _instrumentFetch();\r\n                    _populateContext();\r\n                }\r\n            };\r\n            _self._doTeardown = function () {\r\n                _initDefaults();\r\n            };\r\n            _self.trackDependencyData = function (dependency, properties) {\r\n                _reportDependencyInternal(_dependencyInitializers, _self[_DYN_CORE /* @min:%2ecore */], null, dependency, properties);\r\n            };\r\n            _self[_DYN_INCLUDE_CORRELATION_2 /* @min:%2eincludeCorrelationHeaders */] = function (ajaxData, input, init, xhr) {\r\n                // Test Hook to allow the overriding of the location host\r\n                var currentWindowHost = _self[\"_currentWindowHost\"] || _currentWindowHost;\r\n                _processDependencyListeners(_dependencyListeners, _self[_DYN_CORE /* @min:%2ecore */], ajaxData, xhr, input, init);\r\n                if (input || input === \"\") { // Fetch\r\n                    if (correlationIdCanIncludeCorrelationHeader(_extensionConfig, ajaxData[_DYN_GET_ABSOLUTE_URL /* @min:%2egetAbsoluteUrl */](), currentWindowHost)) {\r\n                        if (!init) {\r\n                            init = {};\r\n                        }\r\n                        // init headers override original request headers\r\n                        // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                        // not using original request headers will result in them being lost\r\n                        var headers = new Headers(init[_DYN_HEADERS /* @min:%2eheaders */] || (input instanceof Request ? (input[_DYN_HEADERS /* @min:%2eheaders */] || {}) : {}));\r\n                        if (_isUsingAIHeaders) {\r\n                            var id = \"|\" + ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */] + \".\" + ajaxData[_DYN_SPAN_ID /* @min:%2espanID */];\r\n                            headers.set(RequestHeaders[3 /* eRequestHeaders.requestIdHeader */], id);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[3 /* eRequestHeaders.requestIdHeader */]] = id;\r\n                            }\r\n                        }\r\n                        var appId = _appId || (_context && _context.appId());\r\n                        if (appId) {\r\n                            headers.set(RequestHeaders[0 /* eRequestHeaders.requestContextHeader */], RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]] = RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId;\r\n                            }\r\n                        }\r\n                        if (_isUsingW3CHeaders) {\r\n                            var traceFlags = ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n                            if (isNullOrUndefined(traceFlags)) {\r\n                                traceFlags = 0x01;\r\n                            }\r\n                            var traceParent = formatTraceParent(createTraceParent(ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */], ajaxData[_DYN_SPAN_ID /* @min:%2espanID */], traceFlags));\r\n                            headers.set(RequestHeaders[4 /* eRequestHeaders.traceParentHeader */], traceParent);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[4 /* eRequestHeaders.traceParentHeader */]] = traceParent;\r\n                            }\r\n                        }\r\n                        init[_DYN_HEADERS /* @min:%2eheaders */] = headers;\r\n                    }\r\n                    return init;\r\n                }\r\n                else if (xhr) { // XHR\r\n                    if (correlationIdCanIncludeCorrelationHeader(_extensionConfig, ajaxData[_DYN_GET_ABSOLUTE_URL /* @min:%2egetAbsoluteUrl */](), currentWindowHost)) {\r\n                        if (_isUsingAIHeaders) {\r\n                            if (!_isHeaderSet(xhr, RequestHeaders[3 /* eRequestHeaders.requestIdHeader */])) {\r\n                                var id = \"|\" + ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */] + \".\" + ajaxData[_DYN_SPAN_ID /* @min:%2espanID */];\r\n                                xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](RequestHeaders[3 /* eRequestHeaders.requestIdHeader */], id);\r\n                                if (_enableRequestHeaderTracking) {\r\n                                    ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[3 /* eRequestHeaders.requestIdHeader */]] = id;\r\n                                }\r\n                            }\r\n                            else {\r\n                                _throwInternalWarning(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, \"Unable to set [\" + RequestHeaders[3 /* eRequestHeaders.requestIdHeader */] + \"] as it has already been set by another instance\");\r\n                            }\r\n                        }\r\n                        var appId = _appId || (_context && _context.appId());\r\n                        if (appId) {\r\n                            if (!_isHeaderSet(xhr, RequestHeaders[0 /* eRequestHeaders.requestContextHeader */])) {\r\n                                xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](RequestHeaders[0 /* eRequestHeaders.requestContextHeader */], RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId);\r\n                                if (_enableRequestHeaderTracking) {\r\n                                    ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]] = RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId;\r\n                                }\r\n                            }\r\n                            else {\r\n                                _throwInternalWarning(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, \"Unable to set [\" + RequestHeaders[0 /* eRequestHeaders.requestContextHeader */] + \"] as it has already been set by another instance\");\r\n                            }\r\n                        }\r\n                        if (_isUsingW3CHeaders) {\r\n                            var traceFlags = ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n                            if (isNullOrUndefined(traceFlags)) {\r\n                                traceFlags = 0x01;\r\n                            }\r\n                            if (!_isHeaderSet(xhr, RequestHeaders[4 /* eRequestHeaders.traceParentHeader */])) {\r\n                                var traceParent = formatTraceParent(createTraceParent(ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */], ajaxData[_DYN_SPAN_ID /* @min:%2espanID */], traceFlags));\r\n                                xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](RequestHeaders[4 /* eRequestHeaders.traceParentHeader */], traceParent);\r\n                                if (_enableRequestHeaderTracking) {\r\n                                    ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[4 /* eRequestHeaders.traceParentHeader */]] = traceParent;\r\n                                }\r\n                            }\r\n                            else {\r\n                                _throwInternalWarning(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, \"Unable to set [\" + RequestHeaders[4 /* eRequestHeaders.traceParentHeader */] + \"] as it has already been set by another instance\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return xhr;\r\n                }\r\n                return undefined;\r\n            };\r\n            _self[_DYN_TRACK_DEPENDENCY_DAT3 /* @min:%2etrackDependencyDataInternal */] = function (dependency, properties, systemProperties) {\r\n                if (_maxAjaxCallsPerView === -1 || _trackAjaxAttempts < _maxAjaxCallsPerView) {\r\n                    // Hack since expected format in w3c mode is |abc.def.\r\n                    // Non-w3c format is |abc.def\r\n                    // @todo Remove if better solution is available, e.g. handle in portal\r\n                    if ((_distributedTracingMode === 2 /* eDistributedTracingModes.W3C */\r\n                        || _distributedTracingMode === 1 /* eDistributedTracingModes.AI_AND_W3C */)\r\n                        && typeof dependency.id === \"string\" && dependency.id[dependency.id[_DYN_LENGTH /* @min:%2elength */] - 1] !== \".\") {\r\n                        dependency.id += \".\";\r\n                    }\r\n                    if (isNullOrUndefined(dependency[_DYN_START_TIME /* @min:%2estartTime */])) {\r\n                        dependency[_DYN_START_TIME /* @min:%2estartTime */] = new Date();\r\n                    }\r\n                    var item = createTelemetryItem(dependency, RemoteDependencyData.dataType, RemoteDependencyData.envelopeType, _self[strDiagLog](), properties, systemProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */].track(item);\r\n                }\r\n                else if (_trackAjaxAttempts === _maxAjaxCallsPerView) {\r\n                    _throwInternalCritical(_self, 55 /* _eInternalMessageId.MaxAjaxPerPVExceeded */, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n                }\r\n                ++_trackAjaxAttempts;\r\n            };\r\n            _self.addDependencyListener = function (dependencyListener) {\r\n                return _addHandler(_dependencyListeners, _dependencyHandlerId++, dependencyListener);\r\n            };\r\n            _self.addDependencyInitializer = function (dependencyInitializer) {\r\n                return _addHandler(_dependencyInitializers, _dependencyHandlerId++, dependencyInitializer);\r\n            };\r\n            function _initDefaults() {\r\n                var location = getLocation();\r\n                _fetchInitialized = false; // fetch monitoring initialized\r\n                _xhrInitialized = false; // XHR monitoring initialized\r\n                _polyfillInitialized = false; // polyfill monitoring initialized\r\n                _currentWindowHost = location && location.host && location.host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                _extensionConfig = null;\r\n                _enableRequestHeaderTracking = false;\r\n                _enableAjaxErrorStatusText = false;\r\n                _trackAjaxAttempts = 0;\r\n                _context = null;\r\n                _isUsingW3CHeaders = false;\r\n                _isUsingAIHeaders = false;\r\n                _markPrefix = null;\r\n                _enableAjaxPerfTracking = false;\r\n                _maxAjaxCallsPerView = 0;\r\n                _enableResponseHeaderTracking = false;\r\n                _disabledUrls = {};\r\n                _disableAjaxTracking = false;\r\n                _disableFetchTracking = false;\r\n                _excludeRequestFromAutoTrackingPatterns = null;\r\n                _addRequestContext = null;\r\n                _evtNamespace = null;\r\n                _dependencyHandlerId = 0;\r\n                _dependencyListeners = [];\r\n                _dependencyInitializers = [];\r\n                _ajaxDataId = createUniqueNamespace(\"ajaxData\");\r\n                _self._ajaxDataId = _ajaxDataId;\r\n                _ignoreHeaders = null;\r\n                _maxAjaxPerfLookupAttempts = 1;\r\n                _ajaxPerfLookupDelay = 1;\r\n                _distributedTracingMode = 1 /* eDistributedTracingModes.AI_AND_W3C */;\r\n                _appId = null;\r\n            }\r\n            function _populateDefaults(config) {\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    var ctx = createProcessTelemetryContext(null, config, _self[_DYN_CORE /* @min:%2ecore */]);\r\n                    _extensionConfig = ctx.getExtCfg(AjaxMonitor.identifier, _defaultConfig);\r\n                    _distributedTracingMode = _extensionConfig.distributedTracingMode;\r\n                    _enableRequestHeaderTracking = _extensionConfig[_DYN_ENABLE_REQUEST_HEADE4 /* @min:%2eenableRequestHeaderTracking */];\r\n                    _enableAjaxErrorStatusText = _extensionConfig[_DYN_ENABLE_AJAX_ERROR_ST5 /* @min:%2eenableAjaxErrorStatusText */];\r\n                    _enableAjaxPerfTracking = _extensionConfig[_DYN_ENABLE_AJAX_PERF_TRA6 /* @min:%2eenableAjaxPerfTracking */];\r\n                    _maxAjaxCallsPerView = _extensionConfig[_DYN_MAX_AJAX_CALLS_PER_V7 /* @min:%2emaxAjaxCallsPerView */];\r\n                    _excludeRequestFromAutoTrackingPatterns = [].concat(_extensionConfig[_DYN_EXCLUDE_REQUEST_FROM8 /* @min:%2eexcludeRequestFromAutoTrackingPatterns */] || [], _extensionConfig.addIntEndpoints !== false ? _internalExcludeEndpoints : []);\r\n                    _addRequestContext = _extensionConfig[_DYN_ADD_REQUEST_CONTEXT /* @min:%2eaddRequestContext */];\r\n                    _isUsingAIHeaders = _distributedTracingMode === 0 /* eDistributedTracingModes.AI */ || _distributedTracingMode === 1 /* eDistributedTracingModes.AI_AND_W3C */;\r\n                    _isUsingW3CHeaders = _distributedTracingMode === 1 /* eDistributedTracingModes.AI_AND_W3C */ || _distributedTracingMode === 2 /* eDistributedTracingModes.W3C */;\r\n                    if (_enableAjaxPerfTracking) {\r\n                        _markPrefix = _ajaxDataId;\r\n                    }\r\n                    _disableAjaxTracking = !!_extensionConfig[_DYN_DISABLE_AJAX_TRACKIN9 /* @min:%2edisableAjaxTracking */];\r\n                    _maxAjaxPerfLookupAttempts = _extensionConfig.maxAjaxPerfLookupAttempts;\r\n                    _ajaxPerfLookupDelay = _extensionConfig[_DYN_AJAX_PERF_LOOKUP_DEL10 /* @min:%2eajaxPerfLookupDelay */];\r\n                    _ignoreHeaders = _extensionConfig.ignoreHeaders;\r\n                    _appId = _extensionConfig.appId;\r\n                }));\r\n            }\r\n            function _populateContext() {\r\n                var propExt = _self[_DYN_CORE /* @min:%2ecore */].getPlugin(PropertiesPluginIdentifier);\r\n                if (propExt) {\r\n                    _context = propExt.plugin[_DYN_CONTEXT /* @min:%2econtext */]; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n            // discard the header if it's defined as ignoreHeaders in ICorrelationConfig\r\n            function _canIncludeHeaders(header) {\r\n                var rlt = true;\r\n                if (header || _ignoreHeaders) {\r\n                    arrForEach(_ignoreHeaders, (function (key) {\r\n                        if (key[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === header[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) {\r\n                            rlt = false;\r\n                            return -1;\r\n                        }\r\n                    }));\r\n                }\r\n                return rlt;\r\n            }\r\n            // Fetch Stuff\r\n            function _instrumentFetch() {\r\n                var fetch = _supportsFetch();\r\n                if (!fetch) {\r\n                    return;\r\n                }\r\n                var global = getGlobal();\r\n                var isPolyfill = fetch.polyfill;\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extensionConfig, function () {\r\n                    _disableFetchTracking = !!_extensionConfig[_DYN_DISABLE_FETCH_TRACKI11 /* @min:%2edisableFetchTracking */];\r\n                    _enableResponseHeaderTracking = _extensionConfig[_DYN_ENABLE_RESPONSE_HEAD12 /* @min:%2eenableResponseHeaderTracking */];\r\n                    if (!_disableFetchTracking && !_fetchInitialized) {\r\n                        _addHook(InstrumentFunc(global, STR_FETCH, {\r\n                            ns: _evtNamespace,\r\n                            // Add request hook\r\n                            req: function (callDetails, input, init) {\r\n                                var fetchData;\r\n                                if (!_disableFetchTracking && _fetchInitialized &&\r\n                                    !_isDisabledRequest(null, input, init) &&\r\n                                    // If we have a polyfil and XHR instrumented then let XHR report otherwise we get duplicates\r\n                                    !(isPolyfill && _xhrInitialized)) {\r\n                                    var ctx = callDetails.ctx();\r\n                                    fetchData = _createFetchRecord(input, init);\r\n                                    var newInit = _self[_DYN_INCLUDE_CORRELATION_2 /* @min:%2eincludeCorrelationHeaders */](fetchData, input, init);\r\n                                    if (newInit !== init) {\r\n                                        callDetails.set(1, newInit);\r\n                                    }\r\n                                    ctx.data = fetchData;\r\n                                }\r\n                            },\r\n                            rsp: function (callDetails, input) {\r\n                                if (!_disableFetchTracking) {\r\n                                    var fetchData_1 = callDetails.ctx().data;\r\n                                    if (fetchData_1) {\r\n                                        // Replace the result with the new promise from this code\r\n                                        callDetails.rslt = callDetails.rslt.then(function (response) {\r\n                                            _reportFetchMetrics(callDetails, (response || {})[_DYN_STATUS /* @min:%2estatus */], input, response, fetchData_1, function () {\r\n                                                var _a;\r\n                                                var ajaxResponse = (_a = {\r\n                                                        statusText: (response || {})[_DYN_STATUS_TEXT /* @min:%2estatusText */]\r\n                                                    },\r\n                                                    _a[_DYN_HEADER_MAP /* @min:headerMap */] = null,\r\n                                                    _a[_DYN_CORRELATION_CONTEXT /* @min:correlationContext */] = _getFetchCorrelationContext(response),\r\n                                                    _a);\r\n                                                if (_enableResponseHeaderTracking && response) {\r\n                                                    var responseHeaderMap_1 = {};\r\n                                                    response.headers.forEach(function (value, name) {\r\n                                                        if (_canIncludeHeaders(name)) {\r\n                                                            responseHeaderMap_1[name] = value;\r\n                                                        }\r\n                                                    });\r\n                                                    ajaxResponse[_DYN_HEADER_MAP /* @min:%2eheaderMap */] = responseHeaderMap_1;\r\n                                                }\r\n                                                return ajaxResponse;\r\n                                            });\r\n                                            return response;\r\n                                        })\r\n                                            .catch(function (reason) {\r\n                                            _reportFetchMetrics(callDetails, 0, input, null, fetchData_1, null, { error: reason.message || dumpObj(reason) });\r\n                                            throw reason;\r\n                                        });\r\n                                    }\r\n                                }\r\n                            },\r\n                            // Create an error callback to report any hook errors\r\n                            hkErr: _createErrorCallbackFunc(_self, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, \"Failed to monitor Window.fetch\" + ERROR_POSTFIX)\r\n                        }, true, isWebWorker()));\r\n                        _fetchInitialized = true;\r\n                    }\r\n                    else if (isPolyfill && !_polyfillInitialized) {\r\n                        // If fetch is a polyfill we need to capture the request to ensure that we correctly track\r\n                        // disabled request URLS (i.e. internal urls) to ensure we don't end up in a constant loop\r\n                        // of reporting ourselves, for example React Native uses a polyfill for fetch\r\n                        // Note: Polyfill implementations that don't support the \"polyfill\" tag are not supported\r\n                        // the workaround is to add a polyfill property to your fetch implementation before initializing\r\n                        // App Insights\r\n                        _addHook(InstrumentFunc(global, STR_FETCH, {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, input, init) {\r\n                                // Just call so that we record any disabled URL\r\n                                _isDisabledRequest(null, input, init);\r\n                            }\r\n                        }));\r\n                        _polyfillInitialized = true;\r\n                    }\r\n                }));\r\n                if (isPolyfill) {\r\n                    // retag the instrumented fetch with the same polyfill settings this is mostly for testing\r\n                    // But also supports multiple App Insights usages\r\n                    global[STR_FETCH].polyfill = isPolyfill;\r\n                }\r\n            }\r\n            function _hookProto(target, funcName, callbacks) {\r\n                _addHook(InstrumentProto(target, funcName, callbacks));\r\n            }\r\n            function _instrumentXhr() {\r\n                if (!_supportsAjaxMonitoring(_self, _ajaxDataId)) {\r\n                    return;\r\n                }\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extensionConfig, function () {\r\n                    _disableAjaxTracking = !!_extensionConfig[_DYN_DISABLE_AJAX_TRACKIN9 /* @min:%2edisableAjaxTracking */];\r\n                    _enableRequestHeaderTracking = _extensionConfig[_DYN_ENABLE_REQUEST_HEADE4 /* @min:%2eenableRequestHeaderTracking */];\r\n                    if (!_disableAjaxTracking && !_xhrInitialized) {\r\n                        // Instrument open\r\n                        _hookProto(XMLHttpRequest, \"open\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, method, url, async) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (!_isDisabledRequest(xhr, url) && _isMonitoredXhrInstance(xhr, ajaxData, true)) {\r\n                                        if (!ajaxData || !ajaxData.xhrMonitoringState[_DYN_OPEN_DONE /* @min:%2eopenDone */]) {\r\n                                            // Only create a single ajaxData (even when multiple AI instances are running)\r\n                                            ajaxData = _openHandler(xhr, method, url, async);\r\n                                        }\r\n                                        // always attach to the on ready state change (required for handling multiple instances)\r\n                                        _attachToOnReadyStateChange(xhr, ajaxData);\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, ERROR_HEADER + \".open\" + ERROR_POSTFIX)\r\n                        });\r\n                        // Instrument send\r\n                        _hookProto(XMLHttpRequest, \"send\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, context) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (_isMonitoredXhrInstance(xhr, ajaxData) && !ajaxData.xhrMonitoringState[_DYN_SEND_DONE /* @min:%2esendDone */]) {\r\n                                        _createMarkId(\"xhr\", ajaxData);\r\n                                        ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */] = dateTimeUtilsNow();\r\n                                        _self[_DYN_INCLUDE_CORRELATION_2 /* @min:%2eincludeCorrelationHeaders */](ajaxData, undefined, undefined, xhr);\r\n                                        ajaxData.xhrMonitoringState[_DYN_SEND_DONE /* @min:%2esendDone */] = true;\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 17 /* _eInternalMessageId.FailedMonitorAjaxSend */, ERROR_HEADER + ERROR_POSTFIX)\r\n                        });\r\n                        // Instrument abort\r\n                        _hookProto(XMLHttpRequest, \"abort\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (_isMonitoredXhrInstance(xhr, ajaxData) && !ajaxData.xhrMonitoringState[_DYN_ABORT_DONE /* @min:%2eabortDone */]) {\r\n                                        ajaxData[_DYN_ABORTED /* @min:%2eaborted */] = 1;\r\n                                        ajaxData.xhrMonitoringState[_DYN_ABORT_DONE /* @min:%2eabortDone */] = true;\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 13 /* _eInternalMessageId.FailedMonitorAjaxAbort */, ERROR_HEADER + \".abort\" + ERROR_POSTFIX)\r\n                        });\r\n                        // Instrument setRequestHeader\r\n                        _hookProto(XMLHttpRequest, \"setRequestHeader\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, header, value) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (ajaxData && _isMonitoredXhrInstance(xhr, ajaxData)) {\r\n                                        _addSharedXhrHeaders(xhr, header, value);\r\n                                        if (_enableRequestHeaderTracking && _canIncludeHeaders(header)) {\r\n                                            if (ajaxData) {\r\n                                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][header] = value;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, ERROR_HEADER + \".setRequestHeader\" + ERROR_POSTFIX)\r\n                        });\r\n                        _xhrInitialized = true;\r\n                    }\r\n                }));\r\n            }\r\n            function _isDisabledRequest(xhr, request, init) {\r\n                var isDisabled = false;\r\n                var theUrl = ((!isString(request) ? (request || {}).url || \"\" : request) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                // check excludeRequestFromAutoTrackingPatterns before stripping off any query string\r\n                arrForEach(_excludeRequestFromAutoTrackingPatterns, function (regex) {\r\n                    var theRegex = regex;\r\n                    if (isString(regex)) {\r\n                        theRegex = new RegExp(regex);\r\n                    }\r\n                    if (!isDisabled) {\r\n                        isDisabled = theRegex.test(theUrl);\r\n                    }\r\n                });\r\n                // if request url matches with exclude regex pattern, return true and no need to check for headers\r\n                if (isDisabled) {\r\n                    return isDisabled;\r\n                }\r\n                var idx = _indexOf(theUrl, \"?\");\r\n                var idx2 = _indexOf(theUrl, \"#\");\r\n                if (idx === -1 || (idx2 !== -1 && idx2 < idx)) {\r\n                    idx = idx2;\r\n                }\r\n                if (idx !== -1) {\r\n                    // Strip off any Query string\r\n                    theUrl = theUrl.substring(0, idx);\r\n                }\r\n                // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n                if (!isNullOrUndefined(xhr)) {\r\n                    // Look on the XMLHttpRequest of the URL string value\r\n                    isDisabled = xhr[DisabledPropertyName] === true || theUrl[DisabledPropertyName] === true;\r\n                }\r\n                else if (!isNullOrUndefined(request)) { // fetch\r\n                    // Look for DisabledPropertyName in either Request or RequestInit\r\n                    isDisabled = (typeof request === \"object\" ? request[DisabledPropertyName] === true : false) ||\r\n                        (init ? init[DisabledPropertyName] === true : false);\r\n                }\r\n                // Also add extra check just in case the XHR or fetch objects where not decorated with the DisableProperty due to sealing or freezing\r\n                if (!isDisabled && theUrl && isInternalApplicationInsightsEndpoint(theUrl)) {\r\n                    isDisabled = true;\r\n                }\r\n                if (isDisabled) {\r\n                    // Add the disabled url if not present\r\n                    if (!_disabledUrls[theUrl]) {\r\n                        _disabledUrls[theUrl] = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    // Check to see if the url is listed as disabled\r\n                    if (_disabledUrls[theUrl]) {\r\n                        isDisabled = true;\r\n                    }\r\n                }\r\n                return isDisabled;\r\n            }\r\n            /// <summary>Verifies that particular instance of XMLHttpRequest needs to be monitored</summary>\r\n            /// <param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n            /// <returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n            function _isMonitoredXhrInstance(xhr, ajaxData, excludeAjaxDataValidation) {\r\n                var ajaxValidation = true;\r\n                var initialized = _xhrInitialized;\r\n                if (!isNullOrUndefined(xhr)) {\r\n                    ajaxValidation = excludeAjaxDataValidation === true || !isNullOrUndefined(ajaxData);\r\n                }\r\n                // checking to see that all interested functions on xhr were instrumented\r\n                return initialized\r\n                    // checking on ajaxData to see that it was not removed in user code\r\n                    && ajaxValidation;\r\n            }\r\n            function _getDistributedTraceCtx() {\r\n                var distributedTraceCtx = null;\r\n                if (_self[_DYN_CORE /* @min:%2ecore */] && _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx) {\r\n                    distributedTraceCtx = _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx(false);\r\n                }\r\n                // Fall back\r\n                if (!distributedTraceCtx && _context && _context.telemetryTrace) {\r\n                    distributedTraceCtx = createDistributedTraceContextFromTrace(_context.telemetryTrace);\r\n                }\r\n                return distributedTraceCtx;\r\n            }\r\n            function _openHandler(xhr, method, url, async) {\r\n                var _a;\r\n                var distributedTraceCtx = _getDistributedTraceCtx();\r\n                var traceID = (distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_ID /* @min:%2egetTraceId */]()) || generateW3CId();\r\n                var spanID = strSubstr(generateW3CId(), 0, 16);\r\n                var xhrRequestData = xhr[AJAX_DATA_CONTAINER] = (xhr[AJAX_DATA_CONTAINER] || { xh: [], i: {} });\r\n                var ajaxDataCntr = xhrRequestData.i = (xhrRequestData.i || {});\r\n                var ajaxData = ajaxDataCntr[_ajaxDataId] = (ajaxDataCntr[_ajaxDataId] || new ajaxRecord(traceID, spanID, _self[strDiagLog](), (_a = _self.core) === null || _a === void 0 ? void 0 : _a.getTraceCtx()));\r\n                ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_FLAGS /* @min:%2egetTraceFlags */]();\r\n                ajaxData[_DYN_METHOD /* @min:%2emethod */] = method;\r\n                ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] = url;\r\n                ajaxData.xhrMonitoringState[_DYN_OPEN_DONE /* @min:%2eopenDone */] = true;\r\n                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = {};\r\n                ajaxData.async = async;\r\n                ajaxData[_DYN_ERROR_STATUS_TEXT /* @min:%2eerrorStatusText */] = _enableAjaxErrorStatusText;\r\n                return ajaxData;\r\n            }\r\n            function _attachToOnReadyStateChange(xhr, ajaxData) {\r\n                ajaxData.xhrMonitoringState[_DYN_STATE_CHANGE_ATTACHE13 /* @min:%2estateChangeAttached */] = eventOn(xhr, \"readystatechange\", function () {\r\n                    var _a;\r\n                    try {\r\n                        if (xhr && xhr.readyState === 4 && _isMonitoredXhrInstance(xhr, ajaxData)) {\r\n                            _onAjaxComplete(xhr);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        var exceptionText = dumpObj(e);\r\n                        // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                        if (!exceptionText || _indexOf(exceptionText[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](), \"c00c023f\") === -1) {\r\n                            _throwInternalCritical(_self, 16 /* _eInternalMessageId.FailedMonitorAjaxRSC */, ERROR_HEADER + \" 'readystatechange' event handler\" + ERROR_POSTFIX, (_a = {},\r\n                                _a[_DYN_AJAX_DIAGNOSTICS_MES16 /* @min:ajaxDiagnosticsMessage */] = _getFailedAjaxDiagnosticsMessage(xhr, _ajaxDataId),\r\n                                _a[_DYN_EXCEPTION /* @min:exception */] = exceptionText,\r\n                                _a));\r\n                        }\r\n                    }\r\n                }, _evtNamespace);\r\n            }\r\n            function _getResponseText(xhr) {\r\n                try {\r\n                    var responseType = xhr.responseType;\r\n                    if (responseType === \"\" || responseType === \"text\") {\r\n                        // As per the specification responseText is only valid if the type is an empty string or \"text\"\r\n                        return xhr[_DYN_RESPONSE_TEXT /* @min:%2eresponseText */];\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // This shouldn't happen because of the above check -- but just in case, so just ignore\r\n                }\r\n                return null;\r\n            }\r\n            function _onAjaxComplete(xhr) {\r\n                var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */] = dateTimeUtilsNow();\r\n                ajaxData[_DYN_STATUS /* @min:%2estatus */] = xhr[_DYN_STATUS /* @min:%2estatus */];\r\n                function _reportXhrError(e, failedProps) {\r\n                    var errorProps = failedProps || {};\r\n                    errorProps[\"ajaxDiagnosticsMessage\"] = _getFailedAjaxDiagnosticsMessage(xhr, _ajaxDataId);\r\n                    if (e) {\r\n                        errorProps[\"exception\"] = dumpObj(e);\r\n                    }\r\n                    _throwInternalWarning(_self, 14 /* _eInternalMessageId.FailedMonitorAjaxDur */, FAILED_TO_CALCULATE_DURATION_ERROR + \"ajax call\" + ERROR_NOT_SENT, errorProps);\r\n                }\r\n                _findPerfResourceEntry(\"xmlhttprequest\", ajaxData, function () {\r\n                    try {\r\n                        var dependency = ajaxData[_DYN__CREATE_TRACK_ITEM /* @min:%2eCreateTrackItem */](\"Ajax\", _enableRequestHeaderTracking, function () {\r\n                            var _a;\r\n                            var ajaxResponse = (_a = {\r\n                                    statusText: xhr[_DYN_STATUS_TEXT /* @min:%2estatusText */]\r\n                                },\r\n                                _a[_DYN_HEADER_MAP /* @min:headerMap */] = null,\r\n                                _a[_DYN_CORRELATION_CONTEXT /* @min:correlationContext */] = _getAjaxCorrelationContext(xhr),\r\n                                _a.type = xhr.responseType,\r\n                                _a[_DYN_RESPONSE_TEXT /* @min:responseText */] = _getResponseText(xhr),\r\n                                _a.response = xhr[_DYN_RESPONSE /* @min:%2eresponse */],\r\n                                _a);\r\n                            if (_enableResponseHeaderTracking) {\r\n                                var headers = xhr[_DYN_GET_ALL_RESPONSE_HEA15 /* @min:%2egetAllResponseHeaders */]();\r\n                                if (headers) {\r\n                                    // xhr.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string or null\r\n                                    // the regex converts the header string into an array of individual headers\r\n                                    var arr = strTrim(headers).split(/[\\r\\n]+/);\r\n                                    var responseHeaderMap_2 = {};\r\n                                    arrForEach(arr, function (line) {\r\n                                        var parts = line.split(\": \");\r\n                                        var header = parts.shift();\r\n                                        var value = parts.join(\": \");\r\n                                        if (_canIncludeHeaders(header)) {\r\n                                            responseHeaderMap_2[header] = value;\r\n                                        }\r\n                                    });\r\n                                    ajaxResponse[_DYN_HEADER_MAP /* @min:%2eheaderMap */] = responseHeaderMap_2;\r\n                                }\r\n                            }\r\n                            return ajaxResponse;\r\n                        });\r\n                        var properties = void 0;\r\n                        try {\r\n                            if (!!_addRequestContext) {\r\n                                properties = _addRequestContext({ status: xhr[_DYN_STATUS /* @min:%2estatus */], xhr: xhr });\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternalWarning(_self, 104 /* _eInternalMessageId.FailedAddingCustomDefinedRequestContext */, CUSTOM_REQUEST_CONTEXT_ERROR);\r\n                        }\r\n                        if (dependency) {\r\n                            if (properties !== undefined) {\r\n                                dependency[STR_PROPERTIES /* @min:%2eproperties */] = __assign(__assign({}, dependency.properties), properties);\r\n                            }\r\n                            var sysProperties = ajaxData[_DYN_GET_PART_APROPS /* @min:%2egetPartAProps */]();\r\n                            _reportDependencyInternal(_dependencyInitializers, _self[_DYN_CORE /* @min:%2ecore */], ajaxData, dependency, null, sysProperties);\r\n                        }\r\n                        else {\r\n                            _reportXhrError(null, {\r\n                                requestSentTime: ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */],\r\n                                responseFinishedTime: ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */]\r\n                            });\r\n                        }\r\n                    }\r\n                    finally {\r\n                        // cleanup telemetry data\r\n                        try {\r\n                            var xhrRequestData = (xhr[AJAX_DATA_CONTAINER] || { i: {} });\r\n                            var ajaxDataCntr = (xhrRequestData.i || {});\r\n                            if (ajaxDataCntr[_ajaxDataId]) {\r\n                                ajaxDataCntr[_ajaxDataId] = null;\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // May throw in environments that prevent extension or freeze xhr\r\n                        }\r\n                    }\r\n                }, function (e) {\r\n                    _reportXhrError(e, null);\r\n                });\r\n            }\r\n            function _getAjaxCorrelationContext(xhr) {\r\n                var _a;\r\n                try {\r\n                    var responseHeadersString = xhr[_DYN_GET_ALL_RESPONSE_HEA15 /* @min:%2egetAllResponseHeaders */]();\r\n                    if (responseHeadersString !== null) {\r\n                        var index = _indexOf(responseHeadersString[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](), RequestHeaders[8 /* eRequestHeaders.requestContextHeaderLowerCase */]);\r\n                        if (index !== -1) {\r\n                            var responseHeader = xhr.getResponseHeader(RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]);\r\n                            return correlationIdGetCorrelationContext(responseHeader);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternalWarning(_self, 18 /* _eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader */, CORRELATION_HEADER_ERROR, (_a = {},\r\n                        _a[_DYN_AJAX_DIAGNOSTICS_MES16 /* @min:ajaxDiagnosticsMessage */] = _getFailedAjaxDiagnosticsMessage(xhr, _ajaxDataId),\r\n                        _a[_DYN_EXCEPTION /* @min:exception */] = dumpObj(e),\r\n                        _a));\r\n                }\r\n            }\r\n            function _createMarkId(type, ajaxData) {\r\n                if (ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] && _markPrefix && _enableAjaxPerfTracking) {\r\n                    var performance_1 = getPerformance();\r\n                    if (performance_1 && isFunction(performance_1.mark)) {\r\n                        _markCount++;\r\n                        var markId = _markPrefix + type + \"#\" + _markCount;\r\n                        performance_1.mark(markId);\r\n                        var entries = performance_1.getEntriesByName(markId);\r\n                        if (entries && entries[_DYN_LENGTH /* @min:%2elength */] === 1) {\r\n                            ajaxData[_DYN_PERF_MARK /* @min:%2eperfMark */] = entries[0];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _findPerfResourceEntry(initiatorType, ajaxData, trackCallback, reportError) {\r\n                var perfMark = ajaxData[_DYN_PERF_MARK /* @min:%2eperfMark */];\r\n                var performance = getPerformance();\r\n                var maxAttempts = _maxAjaxPerfLookupAttempts;\r\n                var retryDelay = _ajaxPerfLookupDelay;\r\n                var requestUrl = ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */];\r\n                var attempt = 0;\r\n                (function locateResourceTiming() {\r\n                    try {\r\n                        if (performance && perfMark) {\r\n                            attempt++;\r\n                            var perfTiming = null;\r\n                            var entries = performance.getEntries();\r\n                            for (var lp = entries[_DYN_LENGTH /* @min:%2elength */] - 1; lp >= 0; lp--) {\r\n                                var entry = entries[lp];\r\n                                if (entry) {\r\n                                    if (entry.entryType === \"resource\") {\r\n                                        if (entry.initiatorType === initiatorType &&\r\n                                            (_indexOf(entry[_DYN_NAME /* @min:%2ename */], requestUrl) !== -1 || _indexOf(requestUrl, entry[_DYN_NAME /* @min:%2ename */]) !== -1)) {\r\n                                            perfTiming = entry;\r\n                                        }\r\n                                    }\r\n                                    else if (entry.entryType === \"mark\" && entry[_DYN_NAME /* @min:%2ename */] === perfMark[_DYN_NAME /* @min:%2ename */]) {\r\n                                        // We hit the start event\r\n                                        ajaxData[_DYN_PERF_TIMING /* @min:%2eperfTiming */] = perfTiming;\r\n                                        break;\r\n                                    }\r\n                                    if (entry[_DYN_START_TIME /* @min:%2estartTime */] < perfMark[_DYN_START_TIME /* @min:%2estartTime */] - 1000) {\r\n                                        // Fallback to try and reduce the time spent looking for the perf entry\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!perfMark || // - we don't have a perfMark or\r\n                            ajaxData[_DYN_PERF_TIMING /* @min:%2eperfTiming */] || // - we have not found the perf entry or\r\n                            attempt >= maxAttempts || // - we have tried too many attempts or\r\n                            ajaxData.async === false) { // - this is a sync request\r\n                            if (perfMark && isFunction(performance.clearMarks)) {\r\n                                // Remove the mark so we don't fill up the performance resources too much\r\n                                performance.clearMarks(perfMark[_DYN_NAME /* @min:%2ename */]);\r\n                            }\r\n                            ajaxData.perfAttempts = attempt;\r\n                            // just continue and report the track event\r\n                            trackCallback();\r\n                        }\r\n                        else {\r\n                            // We need to wait for the browser to populate the window.performance entry\r\n                            // This needs to be at least 1ms as waiting <= 1 (on firefox) is not enough time for fetch or xhr,\r\n                            // this is a scheduling issue for the browser implementation\r\n                            scheduleTimeout(locateResourceTiming, retryDelay);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reportError(e);\r\n                    }\r\n                })();\r\n            }\r\n            function _createFetchRecord(input, init) {\r\n                var _a;\r\n                var distributedTraceCtx = _getDistributedTraceCtx();\r\n                var traceID = (distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_ID /* @min:%2egetTraceId */]()) || generateW3CId();\r\n                var spanID = strSubstr(generateW3CId(), 0, 16);\r\n                var ajaxData = new ajaxRecord(traceID, spanID, _self[strDiagLog](), (_a = _self.core) === null || _a === void 0 ? void 0 : _a.getTraceCtx());\r\n                ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_FLAGS /* @min:%2egetTraceFlags */]();\r\n                ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */] = dateTimeUtilsNow();\r\n                ajaxData[_DYN_ERROR_STATUS_TEXT /* @min:%2eerrorStatusText */] = _enableAjaxErrorStatusText;\r\n                var requestUrl;\r\n                if (input instanceof Request) {\r\n                    requestUrl = (input || {}).url || \"\";\r\n                }\r\n                else {\r\n                    requestUrl = input;\r\n                }\r\n                if (requestUrl === \"\") {\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1.href) {\r\n                        requestUrl = strSplit(location_1.href, \"#\")[0];\r\n                    }\r\n                }\r\n                ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] = requestUrl;\r\n                var method = \"GET\";\r\n                if (init && init[_DYN_METHOD /* @min:%2emethod */]) {\r\n                    method = init[_DYN_METHOD /* @min:%2emethod */];\r\n                }\r\n                else if (input && input instanceof Request) {\r\n                    method = input[_DYN_METHOD /* @min:%2emethod */];\r\n                }\r\n                ajaxData[_DYN_METHOD /* @min:%2emethod */] = method;\r\n                var requestHeaders = {};\r\n                if (_enableRequestHeaderTracking) {\r\n                    var headers = new Headers((init ? init[_DYN_HEADERS /* @min:%2eheaders */] : 0) || (input instanceof Request ? (input[_DYN_HEADERS /* @min:%2eheaders */] || {}) : {}));\r\n                    headers.forEach(function (value, key) {\r\n                        if (_canIncludeHeaders(key)) {\r\n                            requestHeaders[key] = value;\r\n                        }\r\n                    });\r\n                }\r\n                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = requestHeaders;\r\n                _createMarkId(STR_FETCH, ajaxData);\r\n                return ajaxData;\r\n            }\r\n            function _getFailedFetchDiagnosticsMessage(input) {\r\n                var result = \"\";\r\n                try {\r\n                    if (!isNullOrUndefined(input)) {\r\n                        if (typeof (input) === \"string\") {\r\n                            result += \"(url: '\".concat(input, \"')\");\r\n                        }\r\n                        else {\r\n                            result += \"(url: '\".concat(input.url, \"')\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternalCritical(_self, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, \"Failed to grab failed fetch diagnostics message\", { exception: dumpObj(e) });\r\n                }\r\n                return result;\r\n            }\r\n            function _reportFetchMetrics(callDetails, status, input, response, ajaxData, getResponse, properties) {\r\n                if (!ajaxData) {\r\n                    return;\r\n                }\r\n                function _reportFetchError(msgId, e, failedProps) {\r\n                    var errorProps = failedProps || {};\r\n                    errorProps[\"fetchDiagnosticsMessage\"] = _getFailedFetchDiagnosticsMessage(input);\r\n                    if (e) {\r\n                        errorProps[\"exception\"] = dumpObj(e);\r\n                    }\r\n                    _throwInternalWarning(_self, msgId, FAILED_TO_CALCULATE_DURATION_ERROR + \"fetch call\" + ERROR_NOT_SENT, errorProps);\r\n                }\r\n                ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */] = dateTimeUtilsNow();\r\n                ajaxData[_DYN_STATUS /* @min:%2estatus */] = status;\r\n                _findPerfResourceEntry(STR_FETCH, ajaxData, function () {\r\n                    var dependency = ajaxData[_DYN__CREATE_TRACK_ITEM /* @min:%2eCreateTrackItem */](\"Fetch\", _enableRequestHeaderTracking, getResponse);\r\n                    var properties;\r\n                    try {\r\n                        if (!!_addRequestContext) {\r\n                            properties = _addRequestContext({ status: status, request: input, response: response });\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternalWarning(_self, 104 /* _eInternalMessageId.FailedAddingCustomDefinedRequestContext */, CUSTOM_REQUEST_CONTEXT_ERROR);\r\n                    }\r\n                    if (dependency) {\r\n                        if (properties !== undefined) {\r\n                            dependency[STR_PROPERTIES /* @min:%2eproperties */] = __assign(__assign({}, dependency.properties), properties);\r\n                        }\r\n                        var sysProperties = ajaxData[_DYN_GET_PART_APROPS /* @min:%2egetPartAProps */]();\r\n                        _reportDependencyInternal(_dependencyInitializers, _self[_DYN_CORE /* @min:%2ecore */], ajaxData, dependency, null, sysProperties);\r\n                    }\r\n                    else {\r\n                        _reportFetchError(14 /* _eInternalMessageId.FailedMonitorAjaxDur */, null, {\r\n                            requestSentTime: ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */],\r\n                            responseFinishedTime: ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */]\r\n                        });\r\n                    }\r\n                }, function (e) {\r\n                    _reportFetchError(18 /* _eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader */, e, null);\r\n                });\r\n            }\r\n            function _getFetchCorrelationContext(response) {\r\n                var _a;\r\n                if (response && response[_DYN_HEADERS /* @min:%2eheaders */]) {\r\n                    try {\r\n                        var responseHeader = response[_DYN_HEADERS /* @min:%2eheaders */].get(RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]);\r\n                        return correlationIdGetCorrelationContext(responseHeader);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternalWarning(_self, 18 /* _eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader */, CORRELATION_HEADER_ERROR, (_a = {\r\n                                fetchDiagnosticsMessage: _getFailedFetchDiagnosticsMessage(response)\r\n                            },\r\n                            _a[_DYN_EXCEPTION /* @min:exception */] = dumpObj(e),\r\n                            _a));\r\n                    }\r\n                }\r\n            }\r\n            function _reportDependencyInternal(initializers, core, ajaxData, dependency, properties, systemProperties) {\r\n                var _a;\r\n                var result = true;\r\n                var initializersCount = initializers[_DYN_LENGTH /* @min:%2elength */];\r\n                if (initializersCount > 0) {\r\n                    var details = (_a = {\r\n                            item: dependency\r\n                        },\r\n                        _a[STR_PROPERTIES /* @min:properties */] = properties,\r\n                        _a.sysProperties = systemProperties,\r\n                        _a.context = ajaxData ? ajaxData[_DYN_CONTEXT /* @min:%2econtext */] : null,\r\n                        _a.aborted = ajaxData ? !!ajaxData[_DYN_ABORTED /* @min:%2eaborted */] : false,\r\n                        _a);\r\n                    result = _processDependencyContainer(core, initializers, details, \"initializer\");\r\n                }\r\n                if (result) {\r\n                    _self[_DYN_TRACK_DEPENDENCY_DAT3 /* @min:%2etrackDependencyDataInternal */](dependency, properties, systemProperties);\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AjaxMonitor.prototype.initialize.\r\n    AjaxMonitor.prototype.processTelemetry = function (item, itemCtx) {\r\n        this.processNext(item, itemCtx);\r\n    };\r\n// Removed Stub for AjaxMonitor.prototype.trackDependencyData.\r\n// Removed Stub for AjaxMonitor.prototype.includeCorrelationHeaders.\r\n// Removed Stub for AjaxMonitor.prototype.addDependencyListener.\r\n    /**\r\n     * Add an dependency telemetry initializer callback function to allow populating additional properties or drop the request.\r\n     * It is called after the dependency call has completed and any available performance details are available. A dependency\r\n     * initializer is similar to the TelemetryInitializer function but it allows you to block the reporting of the dependency\r\n     * request so that it doesn't count against the `maxAjaxCallsPerView`.\r\n     * @param dependencyInitializer - The Dependency Telemetry Initializer function\r\n     * @returns - A IDependencyInitializerHandler to enable the initializer to be removed\r\n     */\r\n    AjaxMonitor.prototype.addDependencyInitializer = function (dependencyInitializer) {\r\n        return null;\r\n    };\r\n// Removed Stub for AjaxMonitor.prototype.trackDependencyDataInternal.\r\n    AjaxMonitor.identifier = \"AjaxDependencyPlugin\";\r\n    return AjaxMonitor;\r\n}(BaseTelemetryPlugin));\r\nexport { AjaxMonitor };\r\n//# sourceMappingURL=ajax.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { onConfigChange } from \"@microsoft/applicationinsights-core-js\";\r\nvar Version = '3.3.1';\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the internal telemetry data class.\r\n     */\r\n    function Internal(config, unloadHookContainer) {\r\n        var _this = this;\r\n        var unloadHook = onConfigChange((config), function () {\r\n            var prefix = config.sdkExtension;\r\n            _this.sdkVersion = (prefix ? prefix + \"_\" : \"\") + \"javascript:\" + Version;\r\n        });\r\n        unloadHookContainer && unloadHookContainer.add(unloadHook);\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SESSION_MANAGER = \"sessionManager\"; // Count: 3\r\nexport var _DYN_UPDATE = \"update\"; // Count: 4\r\nexport var _DYN_IS_USER_COOKIE_SET = \"isUserCookieSet\"; // Count: 4\r\nexport var _DYN_IS_NEW_USER = \"isNewUser\"; // Count: 4\r\nexport var _DYN_GET_TRACE_CTX = \"getTraceCtx\"; // Count: 3\r\nexport var _DYN_TELEMETRY_TRACE = \"telemetryTrace\"; // Count: 3\r\nexport var _DYN_APPLY_SESSION_CONTEX0 = \"applySessionContext\"; // Count: 2\r\nexport var _DYN_APPLY_APPLICATION_CO1 = \"applyApplicationContext\"; // Count: 2\r\nexport var _DYN_APPLY_DEVICE_CONTEXT = \"applyDeviceContext\"; // Count: 2\r\nexport var _DYN_APPLY_OPERATION_CONT2 = \"applyOperationContext\"; // Count: 2\r\nexport var _DYN_APPLY_USER_CONTEXT = \"applyUserContext\"; // Count: 2\r\nexport var _DYN_APPLY_OPERATING_SYST3 = \"applyOperatingSystemContxt\"; // Count: 2\r\nexport var _DYN_APPLY_LOCATION_CONTE4 = \"applyLocationContext\"; // Count: 2\r\nexport var _DYN_APPLY_INTERNAL_CONTE5 = \"applyInternalContext\"; // Count: 2\r\nexport var _DYN_ACCOUNT_ID = \"accountId\"; // Count: 7\r\nexport var _DYN_GET_SESSION_ID = \"getSessionId\"; // Count: 4\r\nexport var _DYN_NAME_PREFIX = \"namePrefix\"; // Count: 3\r\nexport var _DYN_SESSION_COOKIE_POSTF6 = \"sessionCookiePostfix\"; // Count: 2\r\nexport var _DYN_USER_COOKIE_POSTFIX = \"userCookiePostfix\"; // Count: 2\r\nexport var _DYN_ID_LENGTH = \"idLength\"; // Count: 4\r\nexport var _DYN_GET_NEW_ID = \"getNewId\"; // Count: 3\r\nexport var _DYN_LENGTH = \"length\"; // Count: 4\r\nexport var _DYN_AUTOMATIC_SESSION = \"automaticSession\"; // Count: 5\r\nexport var _DYN_AUTHENTICATED_ID = \"authenticatedId\"; // Count: 6\r\nexport var _DYN_ACQUISITION_DATE = \"acquisitionDate\"; // Count: 5\r\nexport var _DYN_RENEWAL_DATE = \"renewalDate\"; // Count: 4\r\nexport var _DYN_JOIN = \"join\"; // Count: 5\r\nexport var _DYN_COOKIE_SEPARATOR = \"cookieSeparator\"; // Count: 5\r\nexport var _DYN_AUTH_USER_COOKIE_NAM7 = \"authUserCookieName\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, dateNow, dumpObj, getExceptionName, isFunction, newId, onConfigChange, safeGetCookieMgr, safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_ACQUISITION_DATE, _DYN_AUTOMATIC_SESSION, _DYN_GET_NEW_ID, _DYN_ID_LENGTH, _DYN_JOIN, _DYN_LENGTH, _DYN_NAME_PREFIX, _DYN_RENEWAL_DATE, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nvar SESSION_COOKIE_NAME = \"ai_session\";\r\nvar ACQUISITION_SPAN = 86400000; // 24 hours in ms\r\nvar RENEWAL_SPAN = 1800000; // 30 minutes in ms\r\nvar COOKIE_UPDATE_INTERVAL = 60000; // 1 minute in ms\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, core, unloadHookContainer) {\r\n        var self = this;\r\n        var _storageNamePrefix;\r\n        var _cookieUpdatedTimestamp;\r\n        var _logger = safeGetLogger(core);\r\n        var _cookieManager = safeGetCookieMgr(core);\r\n        var _sessionExpirationMs;\r\n        var _sessionRenewalMs;\r\n        dynamicProto(_SessionManager, self, function (_self) {\r\n            if (!config) {\r\n                config = {};\r\n            }\r\n            var unloadHook = onConfigChange(config, function (details) {\r\n                _sessionExpirationMs = config.sessionExpirationMs || ACQUISITION_SPAN;\r\n                _sessionRenewalMs = config.sessionRenewalMs || RENEWAL_SPAN;\r\n                // sessionCookiePostfix takes the preference if it is configured, otherwise takes namePrefix if configured.\r\n                var sessionCookiePostfix = config.sessionCookiePostfix || config[_DYN_NAME_PREFIX /* @min:%2enamePrefix */] || \"\";\r\n                _storageNamePrefix = SESSION_COOKIE_NAME + sessionCookiePostfix;\r\n            });\r\n            unloadHookContainer && unloadHookContainer.add(unloadHook);\r\n            _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */] = new Session();\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function () {\r\n                // Always using Date getTime() as there is a bug in older IE instances that causes the performance timings to have the hi-bit set eg 0x800000000 causing\r\n                // the number to be incorrect.\r\n                var nowMs = dateNow();\r\n                var isExpired = false;\r\n                var session = _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */];\r\n                if (!session.id) {\r\n                    isExpired = !_initializeAutomaticSession(session, nowMs);\r\n                }\r\n                if (!isExpired && _sessionExpirationMs > 0) {\r\n                    var timeSinceAcqMs = nowMs - session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */];\r\n                    var timeSinceRenewalMs = nowMs - session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */];\r\n                    isExpired = timeSinceAcqMs < 0 || timeSinceRenewalMs < 0; // expired if the acquisition or last renewal are in the future\r\n                    isExpired = isExpired || timeSinceAcqMs > _sessionExpirationMs; // expired if the time since acquisition is more than session Expiration\r\n                    isExpired = isExpired || timeSinceRenewalMs > _sessionRenewalMs; // expired if the time since last renewal is more than renewal period\r\n                }\r\n                // renew if acquisitionSpan or renewalSpan has elapsed\r\n                if (isExpired) {\r\n                    // update automaticSession so session state has correct id\r\n                    _renew(nowMs);\r\n                }\r\n                else {\r\n                    // do not update the cookie more often than cookieUpdateInterval\r\n                    if (!_cookieUpdatedTimestamp || nowMs - _cookieUpdatedTimestamp > COOKIE_UPDATE_INTERVAL) {\r\n                        _setCookie(session, nowMs);\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             *  Record the current state of the automatic session and store it in our cookie string format\r\n             *  into the browser's local storage. This is used to restore the session data when the cookie\r\n             *  expires.\r\n             */\r\n            _self.backup = function () {\r\n                var session = _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */];\r\n                _setStorage(session.id, session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */], session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */]);\r\n            };\r\n            /**\r\n             * Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n             * initialize the automatic session.\r\n             * @returns true if values set otherwise false\r\n             */\r\n            function _initializeAutomaticSession(session, now) {\r\n                var isValid = false;\r\n                var cookieValue = _cookieManager.get(_storageNamePrefix);\r\n                if (cookieValue && isFunction(cookieValue.split)) {\r\n                    isValid = _initializeAutomaticSessionWithData(session, cookieValue);\r\n                }\r\n                else {\r\n                    // There's no cookie, but we might have session data in local storage\r\n                    // This can happen if the session expired or the user actively deleted the cookie\r\n                    // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n                    // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n                    var storageValue = utlGetLocalStorage(_logger, _storageNamePrefix);\r\n                    if (storageValue) {\r\n                        isValid = _initializeAutomaticSessionWithData(session, storageValue);\r\n                    }\r\n                }\r\n                return isValid || !!session.id;\r\n            }\r\n            /**\r\n             * Extract id, acquisitionDate, and renewalDate from an ai_session payload string and\r\n             * use this data to initialize automaticSession.\r\n             *\r\n             * @param sessionData - The string stored in an ai_session cookie or local storage backup\r\n             * @returns true if values set otherwise false\r\n             */\r\n            function _initializeAutomaticSessionWithData(session, sessionData) {\r\n                var isValid = false;\r\n                var sessionReset = \", session will be reset\";\r\n                var tokens = sessionData.split(\"|\");\r\n                if (tokens[_DYN_LENGTH /* @min:%2elength */] >= 2) {\r\n                    try {\r\n                        var acqMs = +tokens[1] || 0;\r\n                        var renewalMs = +tokens[2] || 0;\r\n                        if (isNaN(acqMs) || acqMs <= 0) {\r\n                            _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 27 /* _eInternalMessageId.SessionRenewalDateIsZero */, \"AI session acquisition date is 0\" + sessionReset);\r\n                        }\r\n                        else if (isNaN(renewalMs) || renewalMs <= 0) {\r\n                            _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 27 /* _eInternalMessageId.SessionRenewalDateIsZero */, \"AI session renewal date is 0\" + sessionReset);\r\n                        }\r\n                        else if (tokens[0]) {\r\n                            // Everything looks valid so set the values\r\n                            session.id = tokens[0];\r\n                            session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */] = acqMs;\r\n                            session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */] = renewalMs;\r\n                            isValid = true;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 9 /* _eInternalMessageId.ErrorParsingAISessionCookie */, \"Error parsing ai_session value [\" + (sessionData || \"\") + \"]\" + sessionReset + \" - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n                return isValid;\r\n            }\r\n            function _renew(nowMs) {\r\n                var getNewId = config[_DYN_GET_NEW_ID /* @min:%2egetNewId */] || newId;\r\n                _self.automaticSession.id = getNewId(config[_DYN_ID_LENGTH /* @min:%2eidLength */] || 22);\r\n                _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */][_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */] = nowMs;\r\n                _setCookie(_self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */], nowMs);\r\n                // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n                if (!utlCanUseLocalStorage()) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 0 /* _eInternalMessageId.BrowserDoesNotSupportLocalStorage */, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n                }\r\n            }\r\n            function _setCookie(session, nowMs) {\r\n                var acq = session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */];\r\n                session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */] = nowMs;\r\n                var renewalPeriodMs = _sessionRenewalMs;\r\n                // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n                // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n                var acqTimeLeftMs = (acq + _sessionExpirationMs) - nowMs;\r\n                var cookie = [session.id, acq, nowMs];\r\n                var maxAgeSec = 0;\r\n                if (acqTimeLeftMs < renewalPeriodMs) {\r\n                    maxAgeSec = acqTimeLeftMs / 1000;\r\n                }\r\n                else {\r\n                    maxAgeSec = renewalPeriodMs / 1000;\r\n                }\r\n                var cookieDomain = config.cookieDomain || null;\r\n                // if sessionExpirationMs is set to 0, it means the expiry is set to 0 for this session cookie\r\n                // A cookie with 0 expiry in the session cookie will never expire for that browser session.  If the browser is closed the cookie expires.\r\n                // Depending on the browser, another instance does not inherit this cookie, however, another tab will\r\n                _cookieManager.set(_storageNamePrefix, cookie[_DYN_JOIN /* @min:%2ejoin */](\"|\"), _sessionExpirationMs > 0 ? maxAgeSec : null, cookieDomain);\r\n                _cookieUpdatedTimestamp = nowMs;\r\n            }\r\n            function _setStorage(guid, acq, renewal) {\r\n                // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n                // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n                // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n                utlSetLocalStorage(_logger, _storageNamePrefix, [guid, acq, renewal][_DYN_JOIN /* @min:%2ejoin */](\"|\"));\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for _SessionManager.prototype.update.\r\n// Removed Stub for _SessionManager.prototype.backup.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    _SessionManager.__ieDyn=1;\n\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { generateW3CId, getLocation } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name, logger) {\r\n        var _self = this;\r\n        _self.traceID = id || generateW3CId();\r\n        _self.parentID = parentId;\r\n        var location = getLocation();\r\n        if (!name && location && location.pathname) {\r\n            name = location.pathname;\r\n        }\r\n        _self.name = dataSanitizeString(logger, name);\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlRemoveStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, newId, onConfigChange, safeGetCookieMgr, safeGetLogger, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ACCOUNT_ID, _DYN_AUTHENTICATED_ID, _DYN_AUTH_USER_COOKIE_NAM7, _DYN_COOKIE_SEPARATOR, _DYN_GET_NEW_ID, _DYN_ID_LENGTH, _DYN_IS_NEW_USER, _DYN_IS_USER_COOKIE_SET, _DYN_JOIN, _DYN_LENGTH, _DYN_NAME_PREFIX, _DYN_UPDATE, _DYN_USER_COOKIE_POSTFIX } from \"../__DynamicConstants\";\r\nfunction _validateUserInput(id) {\r\n    // Validate:\r\n    // 1. Id is a non-empty string.\r\n    // 2. It does not contain special characters for cookies.\r\n    if (typeof id !== \"string\" ||\r\n        !id ||\r\n        id.match(/,|;|=| |\\|/)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nvar User = /** @class */ (function () {\r\n    function User(config, core, unloadHookContainer) {\r\n        /**\r\n         * A flag indicating whether this represents a new user\r\n         */\r\n        this.isNewUser = false;\r\n        /**\r\n         * A flag indicating whether the user cookie has been set\r\n         */\r\n        this.isUserCookieSet = false;\r\n        var _logger = safeGetLogger(core);\r\n        var _cookieManager = safeGetCookieMgr(core);\r\n        var _storageNamePrefix;\r\n        dynamicProto(User, this, function (_self) {\r\n            // Define _self.config\r\n            objDefine(_self, \"config\", {\r\n                g: function () { return config; }\r\n            });\r\n            var unloadHook = onConfigChange(config, function () {\r\n                var userCookiePostfix = config[_DYN_USER_COOKIE_POSTFIX /* @min:%2euserCookiePostfix */] || \"\";\r\n                _storageNamePrefix = User.userCookieName + userCookiePostfix;\r\n                // get userId or create new one if none exists\r\n                var cookie = _cookieManager.get(_storageNamePrefix);\r\n                if (cookie) {\r\n                    _self[_DYN_IS_NEW_USER /* @min:%2eisNewUser */] = false;\r\n                    var params = cookie.split(User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]);\r\n                    if (params[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _self.id = params[0];\r\n                        // we already have a cookie\r\n                        _self[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */] = !!_self.id;\r\n                    }\r\n                }\r\n                if (!_self.id) {\r\n                    _self.id = _generateNewId();\r\n                    var newCookie = _generateNewCookie(_self.id);\r\n                    _setUserCookie(newCookie[_DYN_JOIN /* @min:%2ejoin */](User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]));\r\n                    // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n                    // We should respect their wishes and clear ourselves from local storage\r\n                    var name_1 = (config[_DYN_NAME_PREFIX /* @min:%2enamePrefix */] || \"\") + \"ai_session\";\r\n                    utlRemoveStorage(_logger, name_1);\r\n                }\r\n                // We still take the account id from the ctor param for backward compatibility.\r\n                // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n                _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = config[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] || undefined;\r\n                // Get the auth user id and account id from the cookie if exists\r\n                // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n                var authCookie = _cookieManager.get(User[_DYN_AUTH_USER_COOKIE_NAM7 /* @min:%2eauthUserCookieName */]);\r\n                if (authCookie) {\r\n                    authCookie = decodeURI(authCookie);\r\n                    var authCookieString = authCookie.split(User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]);\r\n                    if (authCookieString[0]) {\r\n                        _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */] = authCookieString[0];\r\n                    }\r\n                    if (authCookieString[_DYN_LENGTH /* @min:%2elength */] > 1 && authCookieString[1]) {\r\n                        _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = authCookieString[1];\r\n                    }\r\n                }\r\n            });\r\n            unloadHookContainer && unloadHookContainer.add(unloadHook);\r\n            function _generateNewId() {\r\n                var theConfig = (config || {});\r\n                var getNewId = theConfig[_DYN_GET_NEW_ID /* @min:%2egetNewId */] || newId;\r\n                var id = getNewId(theConfig[_DYN_ID_LENGTH /* @min:%2eidLength */] ? config[_DYN_ID_LENGTH /* @min:%2eidLength */] : 22);\r\n                return id;\r\n            }\r\n            function _generateNewCookie(userId) {\r\n                var acqStr = toISOString(new Date());\r\n                _self.accountAcquisitionDate = acqStr;\r\n                _self[_DYN_IS_NEW_USER /* @min:%2eisNewUser */] = true;\r\n                var newCookie = [userId, acqStr];\r\n                return newCookie;\r\n            }\r\n            function _setUserCookie(cookie) {\r\n                // without expiration, cookies expire at the end of the session\r\n                // set it to 365 days from now\r\n                // 365 * 24 * 60 * 60 = 31536000\r\n                var oneYear = 31536000;\r\n                _self[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */] = _cookieManager.set(_storageNamePrefix, cookie, oneYear);\r\n            }\r\n            _self.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n                if (storeInCookie === void 0) { storeInCookie = false; }\r\n                // Validate inputs to ensure no cookie control characters.\r\n                var isInvalidInput = !_validateUserInput(authenticatedUserId) || (accountId && !_validateUserInput(accountId));\r\n                if (isInvalidInput) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 60 /* _eInternalMessageId.SetAuthContextFailedAccountName */, \"Setting auth user context failed. \" +\r\n                        \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n                    return;\r\n                }\r\n                // Create cookie string.\r\n                _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */] = authenticatedUserId;\r\n                var authCookie = _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */];\r\n                if (accountId) {\r\n                    _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = accountId;\r\n                    authCookie = [_self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */], _self.accountId][_DYN_JOIN /* @min:%2ejoin */](User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]);\r\n                }\r\n                if (storeInCookie) {\r\n                    // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n                    // Encoding the cookie to handle unexpected unicode characters.\r\n                    _cookieManager.set(User[_DYN_AUTH_USER_COOKIE_NAM7 /* @min:%2eauthUserCookieName */], encodeURI(authCookie));\r\n                }\r\n            };\r\n            /**\r\n             * Clears the authenticated user id and the account id from the user context.\r\n             * @returns {}\r\n             */\r\n            _self.clearAuthenticatedUserContext = function () {\r\n                _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */] = null;\r\n                _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = null;\r\n                _cookieManager.del(User[_DYN_AUTH_USER_COOKIE_NAM7 /* @min:%2eauthUserCookieName */]);\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (userId) {\r\n                // Optimizations to avoid setting and processing the cookie when not needed\r\n                if (_self.id !== userId || !_self[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */]) {\r\n                    var user_id = userId ? userId : _generateNewId();\r\n                    var user_cookie = _generateNewCookie(user_id);\r\n                    _setUserCookie(user_cookie[_DYN_JOIN /* @min:%2ejoin */](User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]));\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for User.prototype.setAuthenticatedUserContext.\r\n// Removed Stub for User.prototype.clearAuthenticatedUserContext.\r\n// Removed Stub for User.prototype.update.\r\n    User.cookieSeparator = \"|\";\r\n    User.userCookieName = \"ai_user\";\r\n    User.authUserCookieName = \"ai_authUser\";\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* TelemetryContext.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { CtxTagKeys, Extensions, PageView, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _InternalLogMessage, getSetValue, hasWindow, isNullOrUndefined, isString, objKeys, setValue } from \"@microsoft/applicationinsights-core-js\";\r\nimport { Application } from \"./Context/Application\";\r\nimport { Device } from \"./Context/Device\";\r\nimport { Internal } from \"./Context/Internal\";\r\nimport { Location } from \"./Context/Location\";\r\nimport { Session, _SessionManager } from \"./Context/Session\";\r\nimport { TelemetryTrace } from \"./Context/TelemetryTrace\";\r\nimport { User } from \"./Context/User\";\r\nimport { _DYN_ACCOUNT_ID, _DYN_APPLY_APPLICATION_CO1, _DYN_APPLY_DEVICE_CONTEXT, _DYN_APPLY_INTERNAL_CONTE5, _DYN_APPLY_LOCATION_CONTE4, _DYN_APPLY_OPERATING_SYST3, _DYN_APPLY_OPERATION_CONT2, _DYN_APPLY_SESSION_CONTEX0, _DYN_APPLY_USER_CONTEXT, _DYN_AUTHENTICATED_ID, _DYN_AUTOMATIC_SESSION, _DYN_GET_SESSION_ID, _DYN_LENGTH, _DYN_SESSION_MANAGER, _DYN_TELEMETRY_TRACE } from \"./__DynamicConstants\";\r\nvar strExt = \"ext\";\r\nvar strTags = \"tags\";\r\nfunction _removeEmpty(target, name) {\r\n    if (target && target[name] && objKeys(target[name])[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        delete target[name];\r\n    }\r\n}\r\nfunction _nullResult() {\r\n    return null;\r\n}\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(core, defaultConfig, previousTraceCtx, unloadHookContainer) {\r\n        var _this = this;\r\n        var logger = core.logger;\r\n        dynamicProto(TelemetryContext, this, function (_self) {\r\n            _self.appId = _nullResult;\r\n            _self[_DYN_GET_SESSION_ID /* @min:%2egetSessionId */] = _nullResult;\r\n            _self.application = new Application();\r\n            _self.internal = new Internal(defaultConfig, unloadHookContainer);\r\n            if (hasWindow()) {\r\n                _self[_DYN_SESSION_MANAGER /* @min:%2esessionManager */] = new _SessionManager(defaultConfig, core, unloadHookContainer);\r\n                _self.device = new Device();\r\n                _self.location = new Location();\r\n                _self.user = new User(defaultConfig, core, unloadHookContainer);\r\n                var traceId = void 0;\r\n                var parentId = void 0;\r\n                var name_1;\r\n                if (previousTraceCtx) {\r\n                    traceId = previousTraceCtx.getTraceId();\r\n                    parentId = previousTraceCtx.getSpanId();\r\n                    name_1 = previousTraceCtx.getName();\r\n                }\r\n                _self[_DYN_TELEMETRY_TRACE /* @min:%2etelemetryTrace */] = new TelemetryTrace(traceId, parentId, name_1, logger);\r\n                _self.session = new Session();\r\n            }\r\n            _self[_DYN_GET_SESSION_ID /* @min:%2egetSessionId */] = function () {\r\n                var session = _self.session;\r\n                var sesId = null;\r\n                // If customer set session info, apply their context; otherwise apply context automatically generated\r\n                if (session && isString(session.id)) {\r\n                    sesId = session.id;\r\n                }\r\n                else {\r\n                    // Gets the automatic session if it exists or an empty object\r\n                    var autoSession = (_self[_DYN_SESSION_MANAGER /* @min:%2esessionManager */] || {})[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */];\r\n                    sesId = autoSession && isString(autoSession.id) ? autoSession.id : null;\r\n                }\r\n                return sesId;\r\n            };\r\n            _self[_DYN_APPLY_SESSION_CONTEX0 /* @min:%2eapplySessionContext */] = function (evt, itemCtx) {\r\n                setValue(getSetValue(evt.ext, Extensions.AppExt), \"sesId\", _self[_DYN_GET_SESSION_ID /* @min:%2egetSessionId */](), isString);\r\n            };\r\n            _self[_DYN_APPLY_OPERATING_SYST3 /* @min:%2eapplyOperatingSystemContxt */] = function (evt, itemCtx) {\r\n                setValue(evt.ext, Extensions.OSExt, _self.os);\r\n            };\r\n            _self[_DYN_APPLY_APPLICATION_CO1 /* @min:%2eapplyApplicationContext */] = function (evt, itemCtx) {\r\n                var application = _self.application;\r\n                if (application) {\r\n                    // evt.ext.app\r\n                    var tags = getSetValue(evt, strTags);\r\n                    setValue(tags, CtxTagKeys.applicationVersion, application.ver, isString);\r\n                    setValue(tags, CtxTagKeys.applicationBuild, application.build, isString);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_DEVICE_CONTEXT /* @min:%2eapplyDeviceContext */] = function (evt, itemCtx) {\r\n                var device = _self.device;\r\n                if (device) {\r\n                    // evt.ext.device\r\n                    var extDevice = getSetValue(getSetValue(evt, strExt), Extensions.DeviceExt);\r\n                    setValue(extDevice, \"localId\", device.id, isString);\r\n                    setValue(extDevice, \"ip\", device.ip, isString);\r\n                    setValue(extDevice, \"model\", device.model, isString);\r\n                    setValue(extDevice, \"deviceClass\", device.deviceClass, isString);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_INTERNAL_CONTE5 /* @min:%2eapplyInternalContext */] = function (evt, itemCtx) {\r\n                var internal = _self.internal;\r\n                if (internal) {\r\n                    var tags = getSetValue(evt, strTags);\r\n                    setValue(tags, CtxTagKeys.internalAgentVersion, internal.agentVersion, isString); // not mapped in CS 4.0\r\n                    setValue(tags, CtxTagKeys.internalSdkVersion, dataSanitizeString(logger, internal.sdkVersion, 64), isString);\r\n                    if (evt.baseType === _InternalLogMessage.dataType || evt.baseType === PageView.dataType) {\r\n                        setValue(tags, CtxTagKeys.internalSnippet, internal.snippetVer, isString);\r\n                        setValue(tags, CtxTagKeys.internalSdkSrc, internal.sdkSrc, isString);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_LOCATION_CONTE4 /* @min:%2eapplyLocationContext */] = function (evt, itemCtx) {\r\n                var location = _this.location;\r\n                if (location) {\r\n                    setValue(getSetValue(evt, strTags, []), CtxTagKeys.locationIp, location.ip, isString);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_OPERATION_CONT2 /* @min:%2eapplyOperationContext */] = function (evt, itemCtx) {\r\n                var telemetryTrace = _self[_DYN_TELEMETRY_TRACE /* @min:%2etelemetryTrace */];\r\n                if (telemetryTrace) {\r\n                    var extTrace = getSetValue(getSetValue(evt, strExt), Extensions.TraceExt, { traceID: undefined, parentID: undefined });\r\n                    setValue(extTrace, \"traceID\", telemetryTrace.traceID, isString, isNullOrUndefined);\r\n                    setValue(extTrace, \"name\", telemetryTrace.name, isString, isNullOrUndefined);\r\n                    setValue(extTrace, \"parentID\", telemetryTrace.parentID, isString, isNullOrUndefined);\r\n                }\r\n            };\r\n            _self.applyWebContext = function (evt, itemCtx) {\r\n                var web = _this.web;\r\n                if (web) {\r\n                    setValue(getSetValue(evt, strExt), Extensions.WebExt, web);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_USER_CONTEXT /* @min:%2eapplyUserContext */] = function (evt, itemCtx) {\r\n                var user = _self.user;\r\n                if (user) {\r\n                    var tags = getSetValue(evt, strTags, []);\r\n                    // stays in tags\r\n                    setValue(tags, CtxTagKeys.userAccountId, user[_DYN_ACCOUNT_ID /* @min:%2eaccountId */], isString);\r\n                    // CS 4.0\r\n                    var extUser = getSetValue(getSetValue(evt, strExt), Extensions.UserExt);\r\n                    setValue(extUser, \"id\", user.id, isString);\r\n                    setValue(extUser, \"authId\", user[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */], isString);\r\n                }\r\n            };\r\n            _self.cleanUp = function (evt, itemCtx) {\r\n                var ext = evt.ext;\r\n                if (ext) {\r\n                    _removeEmpty(ext, Extensions.DeviceExt);\r\n                    _removeEmpty(ext, Extensions.UserExt);\r\n                    _removeEmpty(ext, Extensions.WebExt);\r\n                    _removeEmpty(ext, Extensions.OSExt);\r\n                    _removeEmpty(ext, Extensions.AppExt);\r\n                    _removeEmpty(ext, Extensions.TraceExt);\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for TelemetryContext.prototype.applySessionContext.\r\n// Removed Stub for TelemetryContext.prototype.applyOperatingSystemContxt.\r\n// Removed Stub for TelemetryContext.prototype.applyApplicationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyDeviceContext.\r\n// Removed Stub for TelemetryContext.prototype.applyInternalContext.\r\n// Removed Stub for TelemetryContext.prototype.applyLocationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyOperationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyWebContext.\r\n// Removed Stub for TelemetryContext.prototype.applyUserContext.\r\n// Removed Stub for TelemetryContext.prototype.cleanUp.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryContext.__ieDyn=1;\n\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* PropertiesPlugin.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nvar _a;\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, PageView, PropertiesPluginIdentifier, createDistributedTraceContextFromTrace, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, _InternalLogMessage, _logInternalMessage, createProcessTelemetryContext, getNavigator, getSetValue, isNullOrUndefined, onConfigChange } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDeepFreeze, objDefine } from \"@nevware21/ts-utils\";\r\nimport { TelemetryContext } from \"./TelemetryContext\";\r\nimport { _DYN_ACCOUNT_ID, _DYN_APPLY_APPLICATION_CO1, _DYN_APPLY_DEVICE_CONTEXT, _DYN_APPLY_INTERNAL_CONTE5, _DYN_APPLY_LOCATION_CONTE4, _DYN_APPLY_OPERATING_SYST3, _DYN_APPLY_OPERATION_CONT2, _DYN_APPLY_SESSION_CONTEX0, _DYN_APPLY_USER_CONTEXT, _DYN_GET_NEW_ID, _DYN_GET_SESSION_ID, _DYN_GET_TRACE_CTX, _DYN_ID_LENGTH, _DYN_IS_NEW_USER, _DYN_IS_USER_COOKIE_SET, _DYN_NAME_PREFIX, _DYN_SESSION_COOKIE_POSTF6, _DYN_SESSION_MANAGER, _DYN_TELEMETRY_TRACE, _DYN_UPDATE, _DYN_USER_COOKIE_POSTFIX } from \"./__DynamicConstants\";\r\nvar undefString;\r\nvar nullValue = null;\r\nvar _defaultConfig = objDeepFreeze((_a = {},\r\n    _a[_DYN_ACCOUNT_ID /* @min:accountId */] = nullValue,\r\n    _a.sessionRenewalMs = 30 * 60 * 1000,\r\n    _a.samplingPercentage = 100,\r\n    _a.sessionExpirationMs = 24 * 60 * 60 * 1000,\r\n    _a.cookieDomain = nullValue,\r\n    _a.sdkExtension = nullValue,\r\n    _a.isBrowserLinkTrackingEnabled = false,\r\n    _a.appId = nullValue,\r\n    _a[_DYN_GET_SESSION_ID /* @min:getSessionId */] = nullValue,\r\n    _a[_DYN_NAME_PREFIX /* @min:namePrefix */] = undefString,\r\n    _a[_DYN_SESSION_COOKIE_POSTF6 /* @min:sessionCookiePostfix */] = undefString,\r\n    _a[_DYN_USER_COOKIE_POSTFIX /* @min:userCookiePostfix */] = undefString,\r\n    _a[_DYN_ID_LENGTH /* @min:idLength */] = 22,\r\n    _a[_DYN_GET_NEW_ID /* @min:getNewId */] = nullValue,\r\n    _a));\r\nvar PropertiesPlugin = /** @class */ (function (_super) {\r\n    __extends(PropertiesPlugin, _super);\r\n    function PropertiesPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 110;\r\n        _this.identifier = PropertiesPluginIdentifier;\r\n        var _extensionConfig;\r\n        var _distributedTraceCtx;\r\n        var _previousTraceCtx;\r\n        var _context;\r\n        var _disableUserInitMessage;\r\n        dynamicProto(PropertiesPlugin, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            objDefine(_self, \"context\", {\r\n                g: function () {\r\n                    return _context;\r\n                }\r\n            });\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                _populateDefaults(config);\r\n            };\r\n            /**\r\n             * Add Part A fields to the event\r\n             * @param event - The event that needs to be processed\r\n             */\r\n            _self.processTelemetry = function (event, itemCtx) {\r\n                if (!isNullOrUndefined(event)) {\r\n                    itemCtx = _self._getTelCtx(itemCtx);\r\n                    // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n                    if (event.name === PageView.envelopeType) {\r\n                        itemCtx.diagLog().resetInternalMessageCount();\r\n                    }\r\n                    var theContext = (_context || {});\r\n                    if (theContext.session) {\r\n                        // If customer did not provide custom session id update the session manager\r\n                        if (typeof _context.session.id !== \"string\" && theContext[_DYN_SESSION_MANAGER /* @min:%2esessionManager */]) {\r\n                            theContext[_DYN_SESSION_MANAGER /* @min:%2esessionManager */][_DYN_UPDATE /* @min:%2eupdate */]();\r\n                        }\r\n                    }\r\n                    var userCtx = theContext.user;\r\n                    if (userCtx && !userCtx[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */]) {\r\n                        userCtx[_DYN_UPDATE /* @min:%2eupdate */](theContext.user.id);\r\n                    }\r\n                    _processTelemetryInternal(event, itemCtx);\r\n                    if (userCtx && userCtx[_DYN_IS_NEW_USER /* @min:%2eisNewUser */]) {\r\n                        userCtx[_DYN_IS_NEW_USER /* @min:%2eisNewUser */] = false;\r\n                        if (!_disableUserInitMessage) {\r\n                            var message = new _InternalLogMessage(72 /* _eInternalMessageId.SendBrowserInfoOnUserInit */, ((getNavigator() || {}).userAgent || \"\"));\r\n                            _logInternalMessage(itemCtx.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, message);\r\n                        }\r\n                    }\r\n                    _self.processNext(event, itemCtx);\r\n                }\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                var core = (unloadCtx || {}).core();\r\n                if (core && core[_DYN_GET_TRACE_CTX /* @min:%2egetTraceCtx */]) {\r\n                    var traceCtx = core[_DYN_GET_TRACE_CTX /* @min:%2egetTraceCtx */](false);\r\n                    if (traceCtx === _distributedTraceCtx) {\r\n                        core.setTraceCtx(_previousTraceCtx);\r\n                    }\r\n                }\r\n                _initDefaults();\r\n            };\r\n            function _initDefaults() {\r\n                _extensionConfig = null;\r\n                _distributedTraceCtx = null;\r\n                _previousTraceCtx = null;\r\n                _context = null;\r\n                _disableUserInitMessage = true;\r\n            }\r\n            function _populateDefaults(config) {\r\n                var identifier = _self.identifier;\r\n                var core = _self.core;\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function () {\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    _disableUserInitMessage = config.disableUserInitMessage === false ? false : true;\r\n                    _extensionConfig = ctx.getExtCfg(identifier, _defaultConfig);\r\n                    // Test hook to allow accessing the internal values -- explicitly not defined as an available property on the class\r\n                    _self[\"_extConfig\"] = _extensionConfig;\r\n                }));\r\n                // This is outside of the onConfigChange as we don't want to update (replace) these values whenever a referenced config item changes\r\n                _previousTraceCtx = core[_DYN_GET_TRACE_CTX /* @min:%2egetTraceCtx */](false);\r\n                _context = new TelemetryContext(core, _extensionConfig, _previousTraceCtx, _self._unloadHooks);\r\n                _distributedTraceCtx = createDistributedTraceContextFromTrace(_self.context[_DYN_TELEMETRY_TRACE /* @min:%2etelemetryTrace */], _previousTraceCtx);\r\n                core.setTraceCtx(_distributedTraceCtx);\r\n                _self.context.appId = function () {\r\n                    var breezeChannel = core.getPlugin(BreezeChannelIdentifier);\r\n                    return breezeChannel ? breezeChannel.plugin[\"_appId\"] : null;\r\n                };\r\n            }\r\n            function _processTelemetryInternal(evt, itemCtx) {\r\n                // Set Part A fields\r\n                getSetValue(evt, \"tags\", []);\r\n                getSetValue(evt, \"ext\", {});\r\n                var ctx = _self.context;\r\n                ctx[_DYN_APPLY_SESSION_CONTEX0 /* @min:%2eapplySessionContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_APPLICATION_CO1 /* @min:%2eapplyApplicationContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_DEVICE_CONTEXT /* @min:%2eapplyDeviceContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_OPERATION_CONT2 /* @min:%2eapplyOperationContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_USER_CONTEXT /* @min:%2eapplyUserContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_OPERATING_SYST3 /* @min:%2eapplyOperatingSystemContxt */](evt, itemCtx);\r\n                ctx.applyWebContext(evt, itemCtx);\r\n                ctx[_DYN_APPLY_LOCATION_CONTE4 /* @min:%2eapplyLocationContext */](evt, itemCtx); // legacy tags\r\n                ctx[_DYN_APPLY_INTERNAL_CONTE5 /* @min:%2eapplyInternalContext */](evt, itemCtx); // legacy tags\r\n                ctx.cleanUp(evt, itemCtx);\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for PropertiesPlugin.prototype.initialize.\r\n// Removed Stub for PropertiesPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PropertiesPlugin.__ieDyn=1;\n\n    return PropertiesPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a, _b, _c, _d;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AnalyticsPlugin } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { CfgSyncPlugin } from \"@microsoft/applicationinsights-cfgsync-js\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { AnalyticsPluginIdentifier, DEFAULT_BREEZE_PATH, PropertiesPluginIdentifier, ThrottleMgr, parseConnectionString } from \"@microsoft/applicationinsights-common\";\r\nimport { AppInsightsCore, _throwInternal, addPageHideEventListener, addPageUnloadEventListener, cfgDfMerge, cfgDfValidate, createDynamicConfig, createProcessTelemetryContext, createUniqueNamespace, doPerf, hasDocument, hasWindow, isArray, isFeatureEnabled, isFunction, isNullOrUndefined, isReactNative, isString, mergeEvtNamespace, onConfigChange, proxyAssign, proxyFunctions, removePageHideEventListener, removePageUnloadEventListener } from \"@microsoft/applicationinsights-core-js\";\r\nimport { AjaxPlugin as DependenciesPlugin } from \"@microsoft/applicationinsights-dependencies-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nimport { createAsyncPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, isPromiseLike, objDefine, objForEachKey, strIndexOf, throwUnsupported } from \"@nevware21/ts-utils\";\r\nimport { CONFIG_ENDPOINT_URL, STR_ADD_TELEMETRY_INITIALIZER, STR_CLEAR_AUTHENTICATED_USER_CONTEXT, STR_EVT_NAMESPACE, STR_FLUSH, STR_GET_COOKIE_MGR, STR_GET_PLUGIN, STR_POLL_INTERNAL_LOGS, STR_SET_AUTHENTICATED_USER_CONTEXT, STR_SNIPPET, STR_START_TRACK_EVENT, STR_START_TRACK_PAGE, STR_STOP_TRACK_EVENT, STR_STOP_TRACK_PAGE, STR_TRACK_DEPENDENCY_DATA, STR_TRACK_EVENT, STR_TRACK_EXCEPTION, STR_TRACK_METRIC, STR_TRACK_PAGE_VIEW, STR_TRACK_TRACE } from \"./InternalConstants\";\r\nimport { _DYN_ADD_HOUSEKEEPING_BEF2, _DYN_CONNECTION_STRING, _DYN_CONTEXT, _DYN_ENDPOINT_URL, _DYN_INGESTIONENDPOINT, _DYN_INSTRUMENTATIONKEY0, _DYN_INSTRUMENTATION_KEY, _DYN_ONUNLOAD_FLUSH, _DYN_QUEUE, _DYN_SEND_MESSAGE, _DYN_UPDATE_SNIPPET_DEFIN3, _DYN_USER_OVERRIDE_ENDPOI1, _DYN_VERSION } from \"./__DynamicConstants\";\r\nvar _internalSdkSrc;\r\n// This is an exclude list of properties that should not be updated during initialization\r\n// They include a combination of private and internal property names\r\nvar _ignoreUpdateSnippetProperties = [\r\n    STR_SNIPPET, \"dependencies\", \"properties\", \"_snippetVersion\", \"appInsightsNew\", \"getSKUDefaults\"\r\n];\r\nvar IKEY_USAGE = \"iKeyUsage\";\r\nvar CDN_USAGE = \"CdnUsage\";\r\nvar SDK_LOADER_VER = \"SdkLoaderVer\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar default_limit = {\r\n    samplingRate: 100,\r\n    maxSendNumber: 1\r\n};\r\nvar default_interval = {\r\n    monthInterval: 3,\r\n    daysOfMonth: [28]\r\n};\r\nvar default_throttle_config = {\r\n    disabled: true,\r\n    limit: cfgDfMerge(default_limit),\r\n    interval: cfgDfMerge(default_interval)\r\n};\r\n// We need to include all properties that we only reference that we want to be dynamically updatable here\r\n// So they are converted even when not specified in the passed configuration\r\nvar defaultConfigValues = (_a = {},\r\n    _a[_DYN_CONNECTION_STRING /* @min:connectionString */] = UNDEFINED_VALUE,\r\n    _a[_DYN_ENDPOINT_URL /* @min:endpointUrl */] = UNDEFINED_VALUE,\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:userOverrideEndpointUrl */] = UNDEFINED_VALUE,\r\n    _a.diagnosticLogInterval = cfgDfValidate(_chkDiagLevel, 10000),\r\n    _a.featureOptIn = (_b = {},\r\n        _b[IKEY_USAGE] = { mode: 3 /* FeatureOptInMode.enable */ },\r\n        _b[CDN_USAGE] = { mode: 2 /* FeatureOptInMode.disable */ },\r\n        _b[SDK_LOADER_VER] = { mode: 2 /* FeatureOptInMode.disable */ },\r\n        _b),\r\n    _a.throttleMgrCfg = cfgDfMerge((_c = {},\r\n        _c[109 /* _eInternalMessageId.DefaultThrottleMsgKey */] = cfgDfMerge(default_throttle_config),\r\n        _c[106 /* _eInternalMessageId.InstrumentationKeyDeprecation */] = cfgDfMerge(default_throttle_config),\r\n        _c[111 /* _eInternalMessageId.SdkLdrUpdate */] = cfgDfMerge(default_throttle_config),\r\n        _c[110 /* _eInternalMessageId.CdnDeprecation */] = cfgDfMerge(default_throttle_config),\r\n        _c)),\r\n    _a.extensionConfig = cfgDfMerge((_d = {},\r\n        _d[\"AppInsightsCfgSyncPlugin\"] = cfgDfMerge({\r\n            cfgUrl: CONFIG_ENDPOINT_URL,\r\n            syncMode: 2 /* ICfgSyncMode.Receive */\r\n        }),\r\n        _d)),\r\n    _a);\r\nfunction _chkDiagLevel(value) {\r\n    // Make sure we have a value > 0\r\n    return value && value > 0;\r\n}\r\n/**\r\n * Application Insights API\r\n * @group Entrypoint\r\n * @group Classes\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar AppInsightsSku = /** @class */ (function () {\r\n    function AppInsightsSku(snippet) {\r\n        var _this = this;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var dependencies;\r\n        var properties;\r\n        var _sender;\r\n        var _snippetVersion;\r\n        var _evtNamespace;\r\n        var _houseKeepingNamespace;\r\n        var _core;\r\n        var _config;\r\n        var _analyticsPlugin;\r\n        var _cfgSyncPlugin;\r\n        var _throttleMgr;\r\n        var _iKeySentMessage;\r\n        var _cdnSentMessage;\r\n        var _sdkVerSentMessage;\r\n        dynamicProto(AppInsightsSku, this, function (_self) {\r\n            _initDefaults();\r\n            objDefine(_self, \"config\", {\r\n                g: function () {\r\n                    return _config;\r\n                }\r\n            });\r\n            arrForEach([\"pluginVersionStringArr\", \"pluginVersionString\"], function (key) {\r\n                objDefine(_self, key, {\r\n                    g: function () {\r\n                        if (_core) {\r\n                            return _core[key];\r\n                        }\r\n                        return null;\r\n                    }\r\n                });\r\n            });\r\n            // initialize the queue and config in case they are undefined\r\n            _snippetVersion = \"\" + (snippet.sv || snippet[_DYN_VERSION /* @min:%2eversion */] || \"\");\r\n            snippet[_DYN_QUEUE /* @min:%2equeue */] = snippet[_DYN_QUEUE /* @min:%2equeue */] || [];\r\n            snippet[_DYN_VERSION /* @min:%2eversion */] = snippet[_DYN_VERSION /* @min:%2eversion */] || 2.0; // Default to new version\r\n            var cfgHandler = createDynamicConfig(snippet.config || {}, defaultConfigValues);\r\n            _config = cfgHandler.cfg;\r\n            _analyticsPlugin = new AnalyticsPlugin();\r\n            objDefine(_self, \"appInsights\", {\r\n                g: function () {\r\n                    return _analyticsPlugin;\r\n                }\r\n            });\r\n            properties = new PropertiesPlugin();\r\n            dependencies = new DependenciesPlugin();\r\n            _sender = new Sender();\r\n            _core = new AppInsightsCore();\r\n            objDefine(_self, \"core\", {\r\n                g: function () {\r\n                    return _core;\r\n                }\r\n            });\r\n            // Will get recalled if any referenced values are changed\r\n            _addUnloadHook(onConfigChange(cfgHandler, function () {\r\n                var configCs = _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */];\r\n                function _parseCs() {\r\n                    return createAsyncPromise(function (resolve, reject) {\r\n                        doAwaitResponse(configCs, function (res) {\r\n                            var curCs = res && res.value;\r\n                            var parsedCs = null;\r\n                            if (!res.rejected && curCs) {\r\n                                // replace cs with resolved values in case of circular promises\r\n                                _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */] = curCs;\r\n                                parsedCs = parseConnectionString(curCs);\r\n                            }\r\n                            // if can't resolve cs promise, null will be returned\r\n                            resolve(parsedCs);\r\n                        });\r\n                    });\r\n                }\r\n                if (isPromiseLike(configCs)) {\r\n                    var ikeyPromise = createAsyncPromise(function (resolve, reject) {\r\n                        _parseCs().then(function (cs) {\r\n                            var ikey = _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                            ikey = cs && cs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || ikey;\r\n                            resolve(ikey);\r\n                        }).catch(function (e) {\r\n                            // parseCs will always resolve(unless timeout)\r\n                            // return null in case any error happens\r\n                            resolve(null);\r\n                        });\r\n                    });\r\n                    var url = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */];\r\n                    if (isNullOrUndefined(url)) {\r\n                        url = createAsyncPromise(function (resolve, reject) {\r\n                            _parseCs().then(function (cs) {\r\n                                var url = _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                                var ingest = cs && cs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                                url = ingest ? ingest + DEFAULT_BREEZE_PATH : url;\r\n                                resolve(url);\r\n                            }).catch(function (e) {\r\n                                // parseCs will always resolve(unless timeout)\r\n                                // return null in case any error happens\r\n                                resolve(null);\r\n                            });\r\n                        });\r\n                    }\r\n                    _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = ikeyPromise;\r\n                    _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = url;\r\n                }\r\n                if (isString(configCs)) {\r\n                    // confirm if promiselike function present\r\n                    // handle cs promise here\r\n                    // add cases to oneNote\r\n                    var cs = parseConnectionString(configCs);\r\n                    var ingest = cs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                    _config.endpointUrl = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : ingest + DEFAULT_BREEZE_PATH; // add /v2/track\r\n                    _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = cs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                }\r\n                // userOverrideEndpointUrl have the highest priority\r\n                _config.endpointUrl = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n            }));\r\n            _self[STR_SNIPPET /* @min:%2esnippet */] = snippet;\r\n            _self[STR_FLUSH /* @min:%2eflush */] = function (async, callBack) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                doPerf(_core, function () { return \"AISKU.flush\"; }, function () {\r\n                    if (async && !callBack) {\r\n                        result = createPromise(function (resolve) {\r\n                            callBack = resolve;\r\n                        });\r\n                    }\r\n                    var waiting = 1;\r\n                    var flushDone = function () {\r\n                        waiting--;\r\n                        if (waiting === 0) {\r\n                            callBack();\r\n                        }\r\n                    };\r\n                    arrForEach(_core.getChannels(), function (channel) {\r\n                        if (channel) {\r\n                            waiting++;\r\n                            channel[STR_FLUSH /* @min:%2eflush */](async, flushDone);\r\n                        }\r\n                    });\r\n                    // decrement the initial \"waiting\"\r\n                    flushDone();\r\n                }, null, async);\r\n                return result;\r\n            };\r\n            _self[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */] = function (async) {\r\n                if (async === void 0) { async = true; }\r\n                arrForEach(_core.getChannels(), function (channel) {\r\n                    if (channel[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */]) {\r\n                        channel[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */]();\r\n                    }\r\n                    else {\r\n                        channel[STR_FLUSH /* @min:%2eflush */](async);\r\n                    }\r\n                });\r\n            };\r\n            _self.loadAppInsights = function (legacyMode, logger, notificationManager) {\r\n                if (legacyMode === void 0) { legacyMode = false; }\r\n                if (legacyMode) {\r\n                    throwUnsupported(\"Legacy Mode is no longer supported\");\r\n                }\r\n                function _updateSnippetProperties(snippet) {\r\n                    if (snippet) {\r\n                        var snippetVer = \"\";\r\n                        if (!isNullOrUndefined(_snippetVersion)) {\r\n                            snippetVer += _snippetVersion;\r\n                        }\r\n                        if (_self[_DYN_CONTEXT /* @min:%2econtext */] && _self[_DYN_CONTEXT /* @min:%2econtext */].internal) {\r\n                            _self[_DYN_CONTEXT /* @min:%2econtext */].internal.snippetVer = snippetVer || \"-\";\r\n                        }\r\n                        // apply updated properties to the global instance (snippet)\r\n                        objForEachKey(_self, function (field, value) {\r\n                            if (isString(field) &&\r\n                                !isFunction(value) &&\r\n                                field && field[0] !== \"_\" && // Don't copy \"internal\" values\r\n                                arrIndexOf(_ignoreUpdateSnippetProperties, field) === -1) {\r\n                                if (snippet[field] !== value) {\r\n                                    snippet[field] = value;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                doPerf(_self.core, function () { return \"AISKU.loadAppInsights\"; }, function () {\r\n                    // initialize core\r\n                    _core.initialize(_config, [_sender, properties, dependencies, _analyticsPlugin, _cfgSyncPlugin], logger, notificationManager);\r\n                    objDefine(_self, \"context\", {\r\n                        g: function () { return properties[_DYN_CONTEXT /* @min:%2econtext */]; }\r\n                    });\r\n                    if (!_throttleMgr) {\r\n                        _throttleMgr = new ThrottleMgr(_core);\r\n                    }\r\n                    var sdkSrc = _findSdkSourceFile();\r\n                    if (sdkSrc && _self[_DYN_CONTEXT /* @min:%2econtext */]) {\r\n                        _self[_DYN_CONTEXT /* @min:%2econtext */].internal.sdkSrc = sdkSrc;\r\n                    }\r\n                    _updateSnippetProperties(_self[STR_SNIPPET /* @min:%2esnippet */]);\r\n                    // Empty queue of all api calls logged prior to sdk download\r\n                    _self.emptyQueue();\r\n                    _self[STR_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n                    _self[_DYN_ADD_HOUSEKEEPING_BEF2 /* @min:%2eaddHousekeepingBeforeUnload */](_self);\r\n                    _addUnloadHook(onConfigChange(cfgHandler, function () {\r\n                        var defaultEnable = false;\r\n                        if (_config.throttleMgrCfg[109 /* _eInternalMessageId.DefaultThrottleMsgKey */]) {\r\n                            defaultEnable = !_config.throttleMgrCfg[109 /* _eInternalMessageId.DefaultThrottleMsgKey */].disabled;\r\n                        }\r\n                        if (!_throttleMgr.isReady() && _config.extensionConfig && _config.extensionConfig[_cfgSyncPlugin.identifier] && defaultEnable) {\r\n                            // set ready state to true will automatically trigger flush()\r\n                            _throttleMgr.onReadyState(true);\r\n                        }\r\n                        var result;\r\n                        if (!_iKeySentMessage && !_config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */] && isFeatureEnabled(IKEY_USAGE, _config)) {\r\n                            result = _throttleMgr[_DYN_SEND_MESSAGE /* @min:%2esendMessage */](106 /* _eInternalMessageId.InstrumentationKeyDeprecation */, \"See Instrumentation key support at aka.ms/IkeyMigrate\");\r\n                            _iKeySentMessage = true;\r\n                        }\r\n                        if (!_cdnSentMessage && _self[_DYN_CONTEXT /* @min:%2econtext */].internal.sdkSrc && _self[_DYN_CONTEXT /* @min:%2econtext */].internal.sdkSrc.indexOf(\"az416426\") != -1 && isFeatureEnabled(CDN_USAGE, _config)) {\r\n                            result = _throttleMgr[_DYN_SEND_MESSAGE /* @min:%2esendMessage */](110 /* _eInternalMessageId.CdnDeprecation */, \"See Cdn support notice at aka.ms/JsActiveCdn\");\r\n                            _cdnSentMessage = true;\r\n                        }\r\n                        if (!_sdkVerSentMessage && parseInt(_snippetVersion) < 6 && isFeatureEnabled(SDK_LOADER_VER, _config)) {\r\n                            result = _throttleMgr[_DYN_SEND_MESSAGE /* @min:%2esendMessage */](111 /* _eInternalMessageId.SdkLdrUpdate */, \"An updated Sdk Loader is available, see aka.ms/SnippetVer\");\r\n                            _sdkVerSentMessage = true;\r\n                        }\r\n                    }));\r\n                });\r\n                return _self;\r\n            };\r\n            _self[_DYN_UPDATE_SNIPPET_DEFIN3 /* @min:%2eupdateSnippetDefinitions */] = function (snippet) {\r\n                // apply full appInsights to the global instance\r\n                // Note: This must be called before loadAppInsights is called\r\n                proxyAssign(snippet, _self, function (name) {\r\n                    // Not excluding names prefixed with \"_\" as we need to proxy some functions like _onError\r\n                    return name && arrIndexOf(_ignoreUpdateSnippetProperties, name) === -1;\r\n                });\r\n            };\r\n            _self.emptyQueue = function () {\r\n                // call functions that were queued before the main script was loaded\r\n                try {\r\n                    if (isArray(_self.snippet[_DYN_QUEUE /* @min:%2equeue */])) {\r\n                        // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                        var length_1 = _self.snippet[_DYN_QUEUE /* @min:%2equeue */].length;\r\n                        for (var i = 0; i < length_1; i++) {\r\n                            var call = _self.snippet[_DYN_QUEUE /* @min:%2equeue */][i];\r\n                            call();\r\n                        }\r\n                        _self.snippet[_DYN_QUEUE /* @min:%2equeue */] = undefined;\r\n                        delete _self.snippet[_DYN_QUEUE /* @min:%2equeue */];\r\n                    }\r\n                }\r\n                catch (exception) {\r\n                    var properties_1 = {};\r\n                    if (exception && isFunction(exception.toString)) {\r\n                        properties_1.exception = exception.toString();\r\n                    }\r\n                    // need from core\r\n                    // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n                    //     eLoggingSeverity.WARNING,\r\n                    //     _eInternalMessageId.FailedToSendQueuedTelemetry,\r\n                    //     \"Failed to send queued telemetry\",\r\n                    //     properties);\r\n                }\r\n            };\r\n            _self[_DYN_ADD_HOUSEKEEPING_BEF2 /* @min:%2eaddHousekeepingBeforeUnload */] = function (appInsightsInstance) {\r\n                // Add callback to push events when the user navigates away\r\n                if (hasWindow() || hasDocument()) {\r\n                    var performHousekeeping_1 = function () {\r\n                        // Adds the ability to flush all data before the page unloads.\r\n                        // Note: This approach tries to push a sync request with all the pending events onbeforeunload.\r\n                        // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                        // Telemetry here will help us analyze how effective this approach is.\r\n                        // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                        // impact on user experience.\r\n                        // appInsightsInstance.context._sender.triggerSend();\r\n                        appInsightsInstance[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */](false);\r\n                        // Back up the current session to local storage\r\n                        // This lets us close expired sessions after the cookies themselves expire\r\n                        if (isFunction(_self.core[STR_GET_PLUGIN /* @min:%2egetPlugin */])) {\r\n                            var loadedPlugin = _this.core[STR_GET_PLUGIN /* @min:%2egetPlugin */](PropertiesPluginIdentifier);\r\n                            if (loadedPlugin) {\r\n                                var propertiesPlugin = loadedPlugin.plugin;\r\n                                if (propertiesPlugin && propertiesPlugin[_DYN_CONTEXT /* @min:%2econtext */] && propertiesPlugin[_DYN_CONTEXT /* @min:%2econtext */]._sessionManager) {\r\n                                    propertiesPlugin[_DYN_CONTEXT /* @min:%2econtext */]._sessionManager.backup();\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n                    var added_1 = false;\r\n                    if (!_houseKeepingNamespace) {\r\n                        _houseKeepingNamespace = mergeEvtNamespace(_evtNamespace, _core[STR_EVT_NAMESPACE /* @min:%2eevtNamespace */] && _core[STR_EVT_NAMESPACE /* @min:%2eevtNamespace */]());\r\n                    }\r\n                    // Will be recalled if any referenced config properties change\r\n                    _addUnloadHook(onConfigChange(_config, function (details) {\r\n                        var coreConfig = details.cfg;\r\n                        var analyticsPlugin = appInsightsInstance.appInsights;\r\n                        var ctx = createProcessTelemetryContext(null, coreConfig, analyticsPlugin.core);\r\n                        var extConfig = ctx.getExtCfg(analyticsPlugin.identifier || AnalyticsPluginIdentifier);\r\n                        // As we could get recalled, remove any previously registered event handlers first\r\n                        _removePageEventHandlers();\r\n                        var excludePageUnloadEvents = coreConfig.disablePageUnloadEvents;\r\n                        if (!extConfig.disableFlushOnBeforeUnload) {\r\n                            // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n                            // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n                            if (addPageUnloadEventListener(performHousekeeping_1, excludePageUnloadEvents, _houseKeepingNamespace)) {\r\n                                added_1 = true;\r\n                            }\r\n                            // We also need to hook the pagehide and visibilitychange events as not all versions of Safari support load/unload events.\r\n                            if (addPageHideEventListener(performHousekeeping_1, excludePageUnloadEvents, _houseKeepingNamespace)) {\r\n                                added_1 = true;\r\n                            }\r\n                            // A reactNative app may not have a window and therefore the beforeunload/pagehide events -- so don't\r\n                            // log the failure in this case\r\n                            if (!added_1 && !isReactNative()) {\r\n                                _throwInternal(_core.logger, 1 /* eLoggingSeverity.CRITICAL */, 19 /* _eInternalMessageId.FailedToAddHandlerForOnBeforeUnload */, \"Could not add handler for beforeunload and pagehide\");\r\n                            }\r\n                        }\r\n                        if (!added_1 && !extConfig.disableFlushOnUnload) {\r\n                            // If we didn't add the normal set then attempt to add the pagehide and visibilitychange only\r\n                            addPageHideEventListener(performHousekeeping_1, excludePageUnloadEvents, _houseKeepingNamespace);\r\n                        }\r\n                    }));\r\n                }\r\n            };\r\n            _self.getSender = function () {\r\n                return _sender;\r\n            };\r\n            _self.unload = function (isAsync, unloadComplete, cbTimeout) {\r\n                var unloadDone = false;\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                function _unloadCallback(unloadState) {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    }\r\n                }\r\n                _self[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */](isAsync);\r\n                _removePageEventHandlers();\r\n                _core.unload && _core.unload(isAsync, _unloadCallback, cbTimeout);\r\n                return result;\r\n            };\r\n            proxyFunctions(_self, _analyticsPlugin, [\r\n                STR_GET_COOKIE_MGR,\r\n                STR_TRACK_EVENT,\r\n                STR_TRACK_PAGE_VIEW,\r\n                \"trackPageViewPerformance\",\r\n                STR_TRACK_EXCEPTION,\r\n                \"_onerror\",\r\n                STR_TRACK_TRACE,\r\n                STR_TRACK_METRIC,\r\n                STR_START_TRACK_PAGE,\r\n                STR_STOP_TRACK_PAGE,\r\n                STR_START_TRACK_EVENT,\r\n                STR_STOP_TRACK_EVENT\r\n            ]);\r\n            proxyFunctions(_self, _getCurrentDependencies, [\r\n                STR_TRACK_DEPENDENCY_DATA,\r\n                \"addDependencyListener\",\r\n                \"addDependencyInitializer\"\r\n            ]);\r\n            proxyFunctions(_self, _core, [\r\n                STR_ADD_TELEMETRY_INITIALIZER,\r\n                STR_POLL_INTERNAL_LOGS,\r\n                \"stopPollingInternalLogs\",\r\n                STR_GET_PLUGIN,\r\n                \"addPlugin\",\r\n                STR_EVT_NAMESPACE,\r\n                \"addUnloadCb\",\r\n                \"getTraceCtx\",\r\n                \"updateCfg\",\r\n                \"onCfgChange\"\r\n            ]);\r\n            proxyFunctions(_self, function () {\r\n                var context = properties[_DYN_CONTEXT /* @min:%2econtext */];\r\n                return context ? context.user : null;\r\n            }, [\r\n                STR_SET_AUTHENTICATED_USER_CONTEXT,\r\n                STR_CLEAR_AUTHENTICATED_USER_CONTEXT\r\n            ]);\r\n            // Using a function to support the dynamic adding / removal of plugins, so this will always return the current value\r\n            function _getCurrentDependencies() {\r\n                return dependencies;\r\n            }\r\n            function _initDefaults() {\r\n                _evtNamespace = createUniqueNamespace(\"AISKU\");\r\n                _houseKeepingNamespace = null;\r\n                dependencies = null;\r\n                properties = null;\r\n                _sender = null;\r\n                _snippetVersion = null;\r\n                _throttleMgr = null;\r\n                _iKeySentMessage = false;\r\n                _cdnSentMessage = false;\r\n                _sdkVerSentMessage = false;\r\n                _cfgSyncPlugin = new CfgSyncPlugin();\r\n            }\r\n            function _removePageEventHandlers() {\r\n                // Remove any registered event handlers\r\n                if (_houseKeepingNamespace) {\r\n                    removePageUnloadEventListener(null, _houseKeepingNamespace);\r\n                    removePageHideEventListener(null, _houseKeepingNamespace);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _core.addUnloadHook(hooks);\r\n            }\r\n        });\r\n    }\r\n    // Analytics Plugin\r\n// Removed Stub for AppInsightsSku.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsSku.prototype.trackEvent.\r\n// Removed Stub for AppInsightsSku.prototype.trackPageView.\r\n// Removed Stub for AppInsightsSku.prototype.trackPageViewPerformance.\r\n// Removed Stub for AppInsightsSku.prototype.trackException.\r\n// Removed Stub for AppInsightsSku.prototype._onerror.\r\n// Removed Stub for AppInsightsSku.prototype.trackTrace.\r\n// Removed Stub for AppInsightsSku.prototype.trackMetric.\r\n// Removed Stub for AppInsightsSku.prototype.startTrackPage.\r\n// Removed Stub for AppInsightsSku.prototype.stopTrackPage.\r\n// Removed Stub for AppInsightsSku.prototype.startTrackEvent.\r\n// Removed Stub for AppInsightsSku.prototype.stopTrackEvent.\r\n// Removed Stub for AppInsightsSku.prototype.addTelemetryInitializer.\r\n    // Properties Plugin\r\n// Removed Stub for AppInsightsSku.prototype.setAuthenticatedUserContext.\r\n// Removed Stub for AppInsightsSku.prototype.clearAuthenticatedUserContext.\r\n    // Dependencies Plugin\r\n// Removed Stub for AppInsightsSku.prototype.trackDependencyData.\r\n    // Misc\r\n// Removed Stub for AppInsightsSku.prototype.flush.\r\n// Removed Stub for AppInsightsSku.prototype.onunloadFlush.\r\n// Removed Stub for AppInsightsSku.prototype.loadAppInsights.\r\n// Removed Stub for AppInsightsSku.prototype.updateSnippetDefinitions.\r\n// Removed Stub for AppInsightsSku.prototype.emptyQueue.\r\n// Removed Stub for AppInsightsSku.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsSku.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsSku.prototype.addHousekeepingBeforeUnload.\r\n// Removed Stub for AppInsightsSku.prototype.getSender.\r\n// Removed Stub for AppInsightsSku.prototype.unload.\r\n// Removed Stub for AppInsightsSku.prototype.getPlugin.\r\n// Removed Stub for AppInsightsSku.prototype.addPlugin.\r\n// Removed Stub for AppInsightsSku.prototype.updateCfg.\r\n// Removed Stub for AppInsightsSku.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsSku.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsSku.prototype.addDependencyListener.\r\n    /**\r\n     * Add an dependency telemetry initializer callback function to allow populating additional properties or drop the request.\r\n     * It is called after the dependency call has completed and any available performance details are available. A dependency\r\n     * initializer is similar to the TelemetryInitializer function but it allows you to block the reporting of the dependency\r\n     * request so that it doesn't count against the `maxAjaxCallsPerView`.\r\n     * @param dependencyInitializer - The Dependency Telemetry Initializer function\r\n     * @returns - A IDependencyInitializerHandler to enable the initializer to be removed\r\n     */\r\n    AppInsightsSku.prototype.addDependencyInitializer = function (dependencyInitializer) {\r\n        return null;\r\n    };\r\n// Removed Stub for AppInsightsSku.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsSku.prototype.onCfgChange.\r\n    return AppInsightsSku;\r\n}());\r\nexport { AppInsightsSku };\r\n// tslint:disable-next-line\r\nexport function _findSdkSourceFile() {\r\n    if (_internalSdkSrc) {\r\n        // Use the cached value\r\n        return _internalSdkSrc;\r\n    }\r\n    var sdkSrc = null;\r\n    var isModule = false;\r\n    var cdns = [\r\n        \"://js.monitor.azure.com/\",\r\n        \"://az416426.vo.msecnd.net/\"\r\n    ];\r\n    try {\r\n        // Try and determine whether the sdk is being loaded from the CDN\r\n        // currentScript is only valid during initial processing\r\n        var scrpt = (document || {}).currentScript;\r\n        if (scrpt) {\r\n            sdkSrc = scrpt.src;\r\n            // } else {\r\n            //     // We need to update to at least typescript 2.9 for this to work :-(\r\n            //     // Leaving as a stub for now so after we upgrade this breadcrumb is available\r\n            //     let meta = import.meta;\r\n            //     sdkSrc = (meta || {}).url;\r\n            //     isModule = true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    if (sdkSrc) {\r\n        try {\r\n            var url_1 = sdkSrc.toLowerCase();\r\n            if (url_1) {\r\n                var src_1 = \"\";\r\n                arrForEach(cdns, function (value, idx) {\r\n                    if (strIndexOf(url_1, value) !== -1) {\r\n                        src_1 = \"cdn\" + (idx + 1);\r\n                        if (strIndexOf(url_1, \"/scripts/\") === -1) {\r\n                            if (strIndexOf(url_1, \"/next/\") !== -1) {\r\n                                src_1 += \"-next\";\r\n                            }\r\n                            else if (strIndexOf(url_1, \"/beta/\") !== -1) {\r\n                                src_1 += \"-beta\";\r\n                            }\r\n                        }\r\n                        _internalSdkSrc = src_1 + (isModule ? \".mod\" : \"\");\r\n                        return -1;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n        // Cache the found value so we don't have to look it up again\r\n        _internalSdkSrc = sdkSrc;\r\n    }\r\n    return _internalSdkSrc;\r\n}\r\n//# sourceMappingURL=AISku.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nvar _AUTHENTICATED_USER_CONTEXT = \"AuthenticatedUserContext\";\r\nvar _TRACK = \"track\";\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_SNIPPET = \"snippet\";\r\nexport var STR_GET_COOKIE_MGR = \"getCookieMgr\";\r\nexport var STR_START_TRACK_PAGE = \"startTrackPage\";\r\nexport var STR_STOP_TRACK_PAGE = \"stopTrackPage\";\r\nexport var STR_FLUSH = \"flush\";\r\nexport var STR_START_TRACK_EVENT = \"startTrackEvent\";\r\nexport var STR_STOP_TRACK_EVENT = \"stopTrackEvent\";\r\nexport var STR_ADD_TELEMETRY_INITIALIZER = \"addTelemetryInitializer\";\r\nexport var STR_ADD_TELEMETRY_INITIALIZERS = STR_ADD_TELEMETRY_INITIALIZER + \"s\";\r\nexport var STR_POLL_INTERNAL_LOGS = \"pollInternalLogs\";\r\nexport var STR_GET_PLUGIN = \"getPlugin\";\r\nexport var STR_EVT_NAMESPACE = \"evtNamespace\";\r\nexport var STR_TRACK_EVENT = _TRACK + \"Event\";\r\nexport var STR_TRACK_TRACE = _TRACK + \"Trace\";\r\nexport var STR_TRACK_METRIC = _TRACK + \"Metric\";\r\nexport var STR_TRACK_PAGE_VIEW = _TRACK + \"PageView\";\r\nexport var STR_TRACK_EXCEPTION = _TRACK + \"Exception\";\r\nexport var STR_TRACK_DEPENDENCY_DATA = _TRACK + \"DependencyData\";\r\nexport var STR_SET_AUTHENTICATED_USER_CONTEXT = \"set\" + _AUTHENTICATED_USER_CONTEXT;\r\nexport var STR_CLEAR_AUTHENTICATED_USER_CONTEXT = \"clear\" + _AUTHENTICATED_USER_CONTEXT;\r\nexport var CONFIG_ENDPOINT_URL = \"https://js.monitor.azure.com/scripts/b/ai.config.1.cfg.json\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_QUEUE = \"queue\"; // Count: 6\r\nexport var _DYN_CONNECTION_STRING = \"connectionString\"; // Count: 4\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 5\r\nexport var _DYN_INSTRUMENTATIONKEY0 = \"instrumentationkey\"; // Count: 2\r\nexport var _DYN_USER_OVERRIDE_ENDPOI1 = \"userOverrideEndpointUrl\"; // Count: 6\r\nexport var _DYN_ENDPOINT_URL = \"endpointUrl\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 2\r\nexport var _DYN_ONUNLOAD_FLUSH = \"onunloadFlush\"; // Count: 6\r\nexport var _DYN_CONTEXT = \"context\"; // Count: 5\r\nexport var _DYN_ADD_HOUSEKEEPING_BEF2 = \"addHousekeepingBeforeUnload\"; // Count: 2\r\nexport var _DYN_SEND_MESSAGE = \"sendMessage\"; // Count: 3\r\nexport var _DYN_UPDATE_SNIPPET_DEFIN3 = \"updateSnippetDefinitions\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { throwUnsupported } from \"@nevware21/ts-utils\";\r\nimport { AppInsightsSku } from \"./AISku\";\r\nimport { _DYN_UPDATE_SNIPPET_DEFIN3 } from \"./__DynamicConstants\";\r\nvar ApplicationInsightsContainer = /** @class */ (function () {\r\n    function ApplicationInsightsContainer() {\r\n    }\r\n    ApplicationInsightsContainer.getAppInsights = function (snippet, version) {\r\n        var theSku = new AppInsightsSku(snippet);\r\n        // Two target scenarios:\r\n        // Removed: 1. Customer runs v1 snippet + runtime. If customer updates just cdn location to new SDK, it will run in compat mode so old apis work\r\n        // 2. Customer updates to new snippet (that uses cdn location to new SDK. This is same as a new customer onboarding\r\n        // and all api signatures are expected to map to new SDK. Note new snippet specifies version\r\n        if (version >= 2.0) {\r\n            theSku[_DYN_UPDATE_SNIPPET_DEFIN3 /* @min:%2eupdateSnippetDefinitions */](snippet);\r\n            theSku.loadAppInsights(false);\r\n            return theSku; // default behavior with new snippet\r\n        }\r\n        throwUnsupported(\"V1 API compatibility is no longer supported\");\r\n    };\r\n    return ApplicationInsightsContainer;\r\n}());\r\nexport { ApplicationInsightsContainer };\r\n//# sourceMappingURL=ApplicationInsightsContainer.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strUndefined } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { ApplicationInsightsContainer } from \"./ApplicationInsightsContainer\";\r\nimport { _DYN_VERSION } from \"./__DynamicConstants\";\r\n// ----------------------------------------------------------------------------------------------------\r\n// Exports available from the Cdn bundles\r\n// ----------------------------------------------------------------------------------------------------\r\nexport { AppInsightsSku as ApplicationInsights } from \"./AISku\";\r\nexport { LoggingSeverity, PerfEvent, PerfManager, doPerf, newId, newGuid, random32, randomValue, generateW3CId, findW3cTraceParent, findMetaTag, mergeEvtNamespace, eventOn, eventOff, addEventHandler, removeEventHandler, isBeaconsSupported } from \"@microsoft/applicationinsights-core-js\";\r\nexport { RequestHeaders, DisabledPropertyName, DEFAULT_BREEZE_ENDPOINT, SeverityLevel, DistributedTracingModes, PropertiesPluginIdentifier, BreezeChannelIdentifier, AnalyticsPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\n// ----------------------------------------------------------------------------------------------------\r\n// End of Exports available from the Cdn bundles\r\n// ----------------------------------------------------------------------------------------------------\r\nfunction _logWarn(aiName, message) {\r\n    // TODO: Find better place to warn to console when SDK initialization fails\r\n    var _console = getInst(\"console\");\r\n    if (_console && _console.warn) {\r\n        _console.warn(\"Failed to initialize AppInsights JS SDK for instance \" + (aiName || \"<unknown>\") + \" - \" + message);\r\n    }\r\n}\r\n// should be global function that should load as soon as SDK loads\r\ntry {\r\n    // E2E sku on load initializes core and pipeline using snippet as input for configuration\r\n    // tslint:disable-next-line: no-var-keyword\r\n    var aiName;\r\n    if (typeof window !== strUndefined) {\r\n        var _window = window;\r\n        aiName = _window[\"appInsightsSDK\"] || \"appInsights\";\r\n        if (document.currentScript) {\r\n            aiName = document.currentScript.getAttribute(\"data-ai-name\") || aiName;\r\n        }\r\n        if (typeof JSON !== strUndefined) {\r\n            // get snippet or initialize to an empty object\r\n            if (_window[aiName] !== undefined) {\r\n                // this is the typical case for browser+snippet\r\n                var snippet = _window[aiName] || { version: 2.0 };\r\n                // overwrite snippet with full appInsights\r\n                // only initiaize if required and detected snippet version is >= 2 or not defined\r\n                if ((snippet[_DYN_VERSION /* @min:%2eversion */] >= 2 && _window[aiName].initialize) || snippet[_DYN_VERSION /* @min:%2eversion */] === undefined) {\r\n                    ApplicationInsightsContainer.getAppInsights(snippet, snippet[_DYN_VERSION /* @min:%2eversion */]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            _logWarn(aiName, \"Missing JSON - you must supply a JSON polyfill!\");\r\n        }\r\n    }\r\n    else {\r\n        _logWarn(aiName, \"Missing window\");\r\n    }\r\n    // Hack: If legacy SDK exists, skip this step (Microsoft.ApplicationInsights exists).\r\n    // else write what was there for v2 SDK prior to rollup bundle output name change.\r\n    // e.g Microsoft.ApplicationInsights.ApplicationInsights, Microsoft.ApplicationInsights.Telemetry\r\n    // @todo uncomment once integration tests for this can be added\r\n    // if (typeof window !== strUndefined && window && ((window as any).Microsoft && !(window as any).Microsoft.ApplicationInsights)) {\r\n    //     (window as any).Microsoft = (window as any).Microsoft || {};\r\n    //     (window as any).Microsoft.ApplicationInsights = {\r\n    //         ApplicationInsights, Telemetry\r\n    //     };\r\n    // }\r\n}\r\ncatch (e) {\r\n    _logWarn(aiName, e.message);\r\n}\r\n//# sourceMappingURL=Init.js.map"],"names":["_pureAssign","func1","func2","_pureRef","value","name","_primitiveTypes","UNDEF_VALUE","undefined","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","ObjClass","Object","ObjProto","StrCls","String","StrProto","MathCls","Math","ArrCls","Array","ArrProto","ArrSlice","safe","func","argArray","v","apply","this","e","safeGet","cb","defValue","result","_createIs","theType","_createObjIs","theName","objToString","call","isUndefined","isNullOrUndefined","isStrictNullOrUndefined","isDefined","arg","isPrimitiveType","indexOf","isString","isFunction","isObject","isArray","isDate","isNumber","isBoolean","isError","isPromiseLike","then","isTruthy","objGetOwnPropertyDescriptor","objHasOwnProperty","obj","prop","hasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","theObject","callbackfn","thisArg","propMap","c","w","g","s","_createProp","desc","l","get","set","newValue","key","objDefineProp","objDefine","target","propDesc","_createKeyValueMap","values","keyType","valueType","completeFn","writable","theMap","_assignMapValue","enumerable","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stack","message","JSON","stringify","replace","throwError","Error","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objAssign","objKeys","objDeepFreeze","objFreeze","objGetPrototypeOf","createEnum","createEnumKeyMap","createSimpleMap","mapClass","createTypeMap","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","match","matchAll","search","species","split","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","globalThis","self","window","global","_getGlobalConfig","gbl","_unwrapFunction","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theArgs","theFunc","arguments","_unwrapProp","propName","mathMax","strSlice","strSubstring","strSubstr","polyStrSubstr","start","length","strLeft","count","_polySymbols","_wellKnownSymbolCache","_globalLazyTestHooks","UNIQUE_REGISTRY_ID","_globalSymbolRegistry","gblCfg","gblSym","k","polyNewSymbol","description","theSymbol","toString","polySymbolFor","newSymbol_1","regId_1","registry","polyGetKnownSymbol","knownName","_initTestHooks","getLazy","lazyValue","b","lzy","configurable","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","getGlobal","useCached","getInst","getWindow","hasDocument","getDocument","hasWindow","hasNavigator","getNavigator","hasHistory","getHistory","_symbol","_symbolFor","_iterSymbol$1","isNode","process","versions","node","isWebWorker","WorkerGlobalScope","_initSymbol","_getSymbolKey","hasSymbol","getSymbol","getKnownSymbol","noPoly","sym","newSymbol","symbolFor","isIterator","next","isIterable","iterForOf","iter","err","iterResult","done","failed","throw","return","fnApply","fn","arrAppend","elms","push","elm","arrForEach","theArray","len","idx","arrIndexOf","arrMap","arrSlice","end","_isProtoArray","_unsupportedError","arrReduce","objCreate","polyObjCreate","type","tempFunc","objSetPrototypeOf","proto","d","_a","_createCustomError","__","_setName","baseClass","createCustomError","constructCb","errorBase","theBaseClass","orgName","captureFn","captureStackTrace","_this","orgProto","_self","throwUnsupported","utcNow","Date","now","polyUtcNow","getTime","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","polyStrTrim","strTrim","isPlainObject","Function","ex","_defaultDeepCopyHandler","details","plainObjDeepCopyHandler","defaultDeepCopyHandlers","arrayDeepCopyHandler","functionDeepCopyHandler","dateDeepCopyHandler","_getSetVisited","visitMap","source","newPath","theEntry","entry","_deepCopy","ctx","userHandler","handler","path","concat","newCtx","src","isPlain","isPrim","origin","copy","newKey","copyTo","_copyProps","newEntry","objCopyProps","objDeepCopy","_doExtend","theArg","deepExtend","obj1","obj2","obj3","obj4","obj5","obj6","objExtend","_perf","getLength","getPerformance","strSplit","setValueByKey","lastKey","parts","pop","strEndsWith","polyStrEndsWith","searchString","searchValue","strIndexOf","REF","UNREF","HAS_REF","ENABLED","_createTimerHandler","startTimer","refreshFn","cancelFn","theTimerHandler","ref","timerId","_unref","_cancel","_refresh","cancel","refresh","h","dn","_createTimeoutWith","overrideFn","isArr","setFn","setTimeout","clearFn","clearTimeout","timerFn","scheduleTimeout","callback","timeout","createTimeout","aggregationErrorType","createEnumStyle","createValueMap","ActiveStatus","NONE","PENDING","INACTIVE","ACTIVE","_DYN_TO_LOWER_CASE","_DYN_BLK_VAL","_DYN_LENGTH","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_LOGGER","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_HDLR","_DYN_CANCEL","_DYN_INITIALIZE","_DYN_IDENTIFIER","_DYN_REMOVE_NOTIFICATION_0","_DYN_ADD_NOTIFICATION_LIS1","_DYN_IS_INITIALIZED","_DYN_INSTRUMENTATION_KEY","_DYN__INACTIVE","_DYN_VALUE","_DYN_GET_NOTIFY_MGR","_DYN_GET_PLUGIN","_DYN_NAME","_DYN_I_KEY","_DYN_TIME","_DYN_PROCESS_NEXT","_DYN_GET_PROCESS_TEL_CONT2","_DYN_POLL_INTERNAL_LOGS","_DYN_ENABLED","_DYN_STOP_POLLING_INTERNA3","_DYN_UNLOAD","_DYN_ON_COMPLETE","_DYN_VERSION","_DYN_LOGGING_LEVEL_CONSOL4","_DYN_CREATE_NEW","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_MESSAGE","_DYN_IS_ASYNC","_DYN_DIAG_LOG","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_PROTOCOL","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_LOG_INTERNAL_MESSAGE","_DYN_TYPE","_DYN_HANDLER","_DYN_STATUS","_DYN_GET_RESPONSE_HEADER","_DYN_GET_ALL_RESPONSE_HEA5","_DYN_IS_CHILD_EVT","_DYN_DATA","_DYN_GET_CTX","_DYN_SET_CTX","_DYN_COMPLETE","_DYN_ITEMS_RECEIVED","_DYN_URL_STRING","_DYN_SEND_POST","_DYN_HEADERS","_DYN_TIMEOUT","_DYN_SET_REQUEST_HEADER","_DYN_TRACE_ID","_DYN_SPAN_ID","_DYN_TRACE_FLAGS","_DYN_GET_ATTRIBUTE","throwAggregationError","sourceErrors","args","errors","theMessage","srcError","strShimFunction","strShimObject","strShimUndefined","strShimPrototype","strHasOwnProperty","__objAssignFnImpl","t","i","n","p","__assignFn","extendStaticsFn","__proto__","__extendsFn","constructor","__spreadArrayFn","to","from","il","j","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynClassNamePrefix","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","curProto","newProto","_forEachProp","props","name_1","lp","_isDynamicCandidate","skipOwn","_throwTypeError","_getInstanceFuncs","thisTarget","instFuncs","_hasVisited","_getBaseFuncs","classProto","useBaseInst","_instFuncProxy","funcHost","instFuncTable","baseFuncs","baseProto","visited","_getInstFunc","currentDynProtoProxy","instFunc","canAddInst","objProto","protoFunc","_getProtoFunc","_populatePrototype","className","baseInstFuncs","setInstanceFunc","instFuncs_1","dynProtoProxy","_checkPrototype","thisProto","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","options","perfOptions","STR_PROMISE","REJECTED","doAwaitResponse","doAwait","status","rejected","reason","resolveFn","rejectFn","finallyFn","doFinally","finally","_hasInitEvent","STRING_STATES","DISPATCH_EVENT","_hasInitEventFn","doc","evt","createEvent","initEvent","emitEvent","evtName","populateEvent","useNewEvent","theEvt","Event","theConsole","_hasPromiseRejectionEvent","_promiseCls","_promiseCreator","_allSettledCreator","NODE_UNHANDLED_REJECTION","UNHANDLED_REJECTION","toLowerCase","_unhandledRejectionTimeout","dumpFnObj","_createPromise","newPromise","processor","executor","_settledValue","_thePromise","additionalArgs","_state","_hasResolved","_queue","_handled","_unHandledRejectionHandler","_then","onResolved","onRejected","resolve","reject","_processQueue","_strState","pending","slice","_createSettleIfFn","newState","allowState","theValue","_notifyUnhandledRejection","emit","catch","onFinally","thenFinally","catchFinally","_rejectFn","_createAllPromise","input","values_1","pending_1","item","_createAllSettledPromise","processItem","syncItemProcessor","timeoutItemProcessor","callbackTimeout","createAsyncPromise","createNativePromise","PrmCls","thePromise","createPromise","createAllPromise","createAllSettledPromise","UNDEFINED_VALUE","STR_EMPTY","STR_CHANNELS","STR_CORE","STR_CREATE_PERF_MGR","STR_DISABLED","STR_EXTENSION_CONFIG","STR_EXTENSIONS","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_EVENTS_SENT","STR_EVENTS_DISCARDED","STR_EVENTS_SEND_REQUEST","STR_PERF_EVENT","STR_OFFLINE_STORE","STR_OFFLINE_SENT","STR_OFFLINE_DROP","STR_GET_PERF_MGR","STR_DOMAIN","STR_PATH","STR_NOT_DYNAMIC_ERROR","strGetPrototypeOf","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotNullOrUndefined","normalizeJsName","_all","letter","toUpperCase","strContains","toISOString","date","getExceptionName","setValue","field","valChk","srcChk","getSetValue","_createProxyFunction","srcFunc","originalArguments","proxyAssign","chkSet","_loop_1","proxyFunctionAs","overwriteTarget","proxyFunctions","functionsToProxy","theFuncName","createClassFromInterface","defaults","optimizeObject","ObjAssign","extended","argLen","deep","isNewArray","clone","isArgArray","isArgObj","isFeatureEnabled","feature","cfg","ft","featureOptIn","mode","getResponseText","xhr","responseText","formatErrorMessageXdr","xdr","formatErrorMessageXhr","response","prependTransports","theTransports","newTransports","strDisabledPropertyName","strWithCredentials","strTimeout","openXhr","method","urlString","withCredentials","disabled","isSync","_wrapSetXhrProp","XMLHttpRequest","open","convertAllHeadersToMap","headersString","headers","headerEntry","header","substring","_appendHeader","theHeaders","STR_KILL_DURATION_HEADER","STR_KILL_DURATION_SECONDS_HEADER","STR_TIME_DELTA_HEADER","_getAllResponseHeaders","isOneDs","strDocumentMode","strLocation","strConsole","strJSON","strCrypto","strMsCrypto","strReactNative","strMsie","strTrident","strXMLHttpRequest","_isTrident","_navUserAgentCheck","_enableMocks","_useXDomainRequest","_beaconsSupported","_hasProperty","property","supported","getLocation","checkForMock","mockLocation","location","getConsole","console","hasJSON","getJSON","getCrypto","getMsCrypto","isReactNative","nav","product","isIE","userAgent","getIEVersion","userAgentStr","ua","navigator_1","max","parseInt","tridentVer","isBeaconsSupported","sendBeacon","isFetchSupported","withKeepAlive","isSupported","request","useXDomainRequest","XDomainRequest","isXhrSupported","_getNamedValue","findMetaTag","querySelectorAll","content","findNamedServerTiming","perf","navPerf","getEntriesByType","serverTiming","dispatchEvent","evnt","createCustomDomEvent","eventName","event","detail","CustomEvent","initCustomEvent","sendCustomEvent","customDetails","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","_mwcSeed","seedValue","_autoSeedMwc","random","randomValue","maxValue","floor","random32","signed","getRandomValues","Uint32Array","mwcRandom32","newId","maxLength","number","chars","base64chars","version","instanceName","_dataUid","_canAcceptData","_getCache","data","theCache","id","createUniqueNamespace","includeVersion","createElmNodeData","accept","addDefault","kill","_isConfigDefaults","isVal","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","_resolveDefaultValue","newValue_1","_applyDefaultValue","defaultValue","isValid","mergeDf","reference","readOnly","blkDynamicValue","mrg","usingDefault","cfgValue","dfName","dfValue","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_cfgDeepCopy","target_1","getDynamicConfigHandler","blockDynamicConversion","_canMakeDynamic","getFunc","state","blkVal","throwInvalidAccess","arrayMethodsToPatch","_throwDynamicError","logger","_patchArray","orgMethod","_i","_makeDynamicObject","_getOwnPropGetter","_createDynamicProperty","trk","clr","checkDynamic","isObjectOrArray","_getProperty","activeHandler","act","chng","add","ro","upd","newIsObjectOrArray","isReferenced","rf","_setDynamicProperty","hdlr","getter","valueState","_setDynamicPropertyState","flags","isDynamic","inPlace","rdOnly","blkProp","symPrefix","symPostfix","_createState","cfgHandler","theState","dynamicPropertySymbol","uid","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","prevWatcher","bind","setDf","_notifyWatchers","notifyHandlers","watcherFailures_1","use","_createAndUseHandler","configHandler","rm","_createDynamicHandler","newTarget","defaultValues","_block","allowUpdate","prevUpd","_logInvalidAccess","createDynamicConfig","config","defaultConfig","onConfigChange","runTargetUnload","isAsync","doUnloadAll","targets","resolved","ChannelControllerPriority","DisabledPropertyName","_stringToBoolOrDefault","cfgDfMerge","cfgDfSet","setter","cfgDfValidate","validator","fallBackName","cfgDfBoolean","cfgDfString","_debugListener","listenerFuncs","_aiNamespace","_listenerProxyFunc","dbgExt","getDebugExt","listener","_getExtensionNamespace","ns","disableDbgExt","getDebugListener","STR_WARN_TO_CONSOLE","AiNonUserActionablePrefix","AiUserActionablePrefix","AIInternalMessagePrefix","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","text","_logToConsole","logFunc","_InternalLogMessage","msgId","msg","isUserAct","properties","strProps","diagnosticText","dataType","safeGetLogger","core","DiagnosticLogger","_b","identifier","queue","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","throttleLimitMessage","throttleMessage","logMessage","messageKey","_debugExtMsg","errorToConsole","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","__ieDyn","_getLogger","_throwInternal","_warnToConsole","_doc","strToGMTString","strToUTCString","strCookie","strExpires","strIsCookieUseDisabled","strDisableCookiesUsage","strConfigCookieMgr","_supportsCookies","_allowUaSameSite","_parsedCookieValue","_cookieCache","_globalCookieConfig","rootDefaultConfig","cookieCfg","enabled","ignoreCookies","blockedCookies","cookieDomain","cookiePath","_getDoc","_gblCookieMgr","inst","createCookieMgr","_isMgrEnabled","cookieMgr","isEnabled","_isIgnoredCookie","cookieMgrCfg","_isBlockedCookie","_isCfgEnabled","rootConfig","cookieMgrConfig","cookieEnabled","isCfgEnabled","safeGetCookieMgr","getCookieMgr","unloadHandler","_path","_domain","_enabled","_getCookieFn","getCookie","_getCookieValue","_setCookieFn","setCookie","_setCookieValue","_delCookieFn","delCookie","areCookiesSupported","gblManager","setEnabled","maxAgeSec","domain","location_1","_extractParts","_isIE","expireMs","expiry","setTime","_formatDate","uaDisallowsSameSiteNone","_formatCookieValue","del","purge","exception","thePart","theDate","cookieValue","theCookie","perfEvtsSendAll","_runScheduledListeners","asyncNotifications","callbacks","_runListeners","listeners","NotificationManager","_listeners","_asyncNotifications","index","events","sendReason","perfEvent","batch","cnt","rn_1","waiting","_finishUnload","asyncUnload","strExecutionContextKey","strParentContextKey","strChildrenContextKey","_defaultPerfManager","PerfEvent","payloadDetails","theDetails_1","childTime","childEvts","childEvt","exTime","ParentContextKey","ChildrenContextKey","PerfManager","manager","create","fire","doPerfActiveKey","doPerf","mgrSource","getSource","perfMgr","children","perfEvt","currentActive","getGblPerfMgr","newGuid","uuid","generateW3CId","tmp","hexValues","oct","a","clockSequenceHi","TRACE_PARENT_REGEX","DEFAULT_VERSION","INVALID_VERSION","INVALID_TRACE_ID","INVALID_SPAN_ID","_isValid","invalidValue","_formatValue","_formatFlags","isNaN","createTraceParent","traceId","spanId","isValidTraceId","isValidSpanId","traceFlags","parseTraceParent","selectIdx","exec","formatTraceParent","findW3cTraceParent","findAllScripts","scripts","getElementsByTagName","script","crossOrigin","async","defer","hasAttribute","referrerPolicy","info","url","pluginStateData","_getPluginState","plugin","initializePlugins","processContext","extensions","initPlugins","lastPlugin","proxy","pluginState","isInitialized","thePlugin","getCfg","sortPlugins","plugins","sort","extA","extB","bHasProcess","createDistributedTraceContext","parentCtx","trace","getName","setName","getTraceId","setTraceId","getSpanId","setSpanId","getTraceFlags","setTraceFlags","newTraceFlags","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_getNextProxyStart","startAt","createTelemetryProxyChain","_createInternalContext","telemetryChain","_nextProxy","_onComplete","context","_next","onComplete","nextProxy","completeDetails","diagLog","getExtCfg","newConfig","_getExtCfg","getConfig","extConfig","hasNext","getNext","setNext","nextPlugin","iterate","that","createIfMissing","extCfg","idCfg","createProcessTelemetryContext","internalContext","env","createProcessTelemetryUnloadContext","unloadState","createProcessTelemetryUpdateContext","updateState","lastProxy_1","firstProxy","newProxy","createTelemetryPluginProxy","_setNext","hasProcessTelemetry","hasSetNext","chainId","proxyChain","getPlugin","processTelemetry","itemCtx","_processChain","unload","unloadCtx","pluginCore","hasRun","update","updateCtx","_id","processPluginFn","hasRunContext","nextId","error","hasNextRun","createUnloadHandlerContainer","handlers","run","createUnloadHookContainer","_hooks","oldHooks","remove","hooks","strGetPlugin","BaseTelemetryPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","_hookContainer","_getTelCtx","currentCtx","rootCtx","_setDefaults","pluginChain","_initDefaults","unloadDone","theUnloadCtx","theUnloadState","_unloadCallback","updateDone","theUpdateCtx","_doUpdate","_updateCallback","setInitialized","_addInitializer","_initializers","telemetryInitializer","theInitializer","initializer","_runInitializers","doNotSendItem","telemetryInitializersCount","TelemetryInitializerPlugin","_super","priority","_base","addTelemetryInitializer","__extends","strValidationError","strNotificationManager","strSdkUnloadingError","strSdkNotInitialized","maxInitQueueSize","maxInitTimeout","diagnosticLogInterval","_createPerfManager","notificationMgr","_validateExtensions","channelPriority","allExtensions","coreExtensions","channels","extPriorities","ext","extPriority","_isPluginPresent","exists","_deepMergeConfig","newValues","merge","_findWatcher","newWatcher","theListener","_addDelayedCfgListener","fnd","_registerDelayedCfgListener","unloadHdl","_initDebugListener","unloadContainer","notificationManager","debugListener","_createUnloadHook","unloadHook","AppInsightsCore","_configHandler","_isInitialized","_logger","_eventQueue","_notificationManager","_perfManager","_cfgPerfManager","_cookieManager","_pluginChain","_configExtensions","_channelConfig","_channels","_isUnloading","_telemetryInitializerPlugin","_internalLogsEventName","_evtNamespace","_unloadHandlers","_traceCtx","_instrumentationKey","_cfgListeners","_extensions","_pluginVersionStringArr","_pluginVersionString","_activeStatus","_endpoint","_initInMemoMaxSize","_isStatusSet","_internalLogPoller","_internalLogPollerListening","_forceStopInternalLogPoller","_setStatus","_releaseQueues","releaseQueue","_startLogPoller","alwaysStart","_addUnloadHook","interval","isRunning","_flushInternalLogs","unref","_setPluginVersions","thePlugins","_addPluginVersions","ver","updateCfg","join","newLogger","cfgExtensions","splice","_createTelCtx","theCtx","_getPluginChain","_initPluginChain","theExtensions","_getPlugin","pluginIdentifier","channelHosts","getChannel","host","removeCb","pluginsToRemove","_removePlugins","removed","removeComplete","newConfigExtensions","newChannelConfig","newQueue","channel","baseType","baseData","track","_flushChannels","callBack","cbTimeout","doneIterating","cbTimer","doCallback","handled_1","flush","_updateHook","_logOrThrowError","_notifyInvalidEvent","telemetryItem","activeStatus","_setPendingStatus","rootCfg","initInMemoMaxSize","ikey","endpointUrl","promises","initTimeout","initTimeOut","allPromises","ikeyRes","endpointRes","createPerfMgr","enablePerfMgr","prevCfgPerfMgr","__spreadArray","teeController","getChannels","controls","getNotifyMgr","setCookieMgr","setPerfMgr","eventCnt","eventQueue","unloadComplete","flushComplete","processUnloadCtx","addPlugin","replaceExisting","addCb","existingPlugin","removedPlugins_1","_addPlugin","added","mergeExisting","oldCfg","evtNamespace","getTraceCtx","createNew","setTraceCtx","traceCtx","addUnloadHook","onCfgChange","getWParam","enableWParam","parseResponse","parse","itemsAccepted","itemsReceived","STR_NO_RESPONSE_BODY","_noResponseQs","STR_POST_METHOD","SenderPostManager","_enableSendPromise","_diagLog","_isOneDs","_onCompleteFuncs","_disableCredentials","_fetchCredentials","_fallbackInst","_disableXhr","_disableBeacon","_disableBeaconSync","_disableFetchKeepAlive","_addNoResponse","_timeoutWrapper","_syncFetchPayload","_sendCredentials","_onError","_doOnComplete","_onNoPayloadUrl","oncomplete","_doBeaconSend","payload","plainTextBatch","Blob","_beaconSender","sync","onRetry","beaconOnRetry","_xhrSender","resolveFunc","rejectFunc","endPointUrl","disableXhrSync","_doOnReadyFunc","onReadyFunc","xhrOnComplete","headerName","onreadystatechange","readyState","onload","onerror","ontimeout","send","_doFetchSender","requestHeaders","Headers","batchLength","ignoreResponse","responseHandled","body","append","init","credentials","keepalive","Request","_handleError","res","_onFetchComplete","onCompleteFunc","fetchOnComplete","fetch","response_1","ok","resp","statusText","_xdrSender","_window","hostingProtocol","onloadFunc","xdrOnComplete","onprogress","endpoint","lastIndexOf","SetConfig","senderOnCompleteCallBack","disableCredentials","fetchCredentials","enableSendPromise","disableXhr","disableBeacon","disableBeaconSync","timeWrapper","addNoResponse","disableFetchKeepAlive","sendPOST","protocol","getSyncFetchPayload","getSenderInst","transports","_getSenderInterface","syncSupport","transportType","sendPostFunc","_transport","_isSync","getFallbackInst","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","strVisibilityChangeEvt","strPageHide","strUnload","strBeforeUnload","strPageHideNamespace","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","theNamespace_1","parsedEvent","_getRegisteredEvents","aiEvts","_doDetach","handlerRef","useCapture","_doAttach","_doUnregister","unRegFn","theEvent","capture","_unregisterEvents","eventCache","evtType","mergeEvtNamespace","theNamespace","namespaces","eventOn","registeredEvent","guid","eventOff","evtName_1","found_1","regEvent","addEventHandler","removeEventHandler","_addEventListeners","excludeEvents","addEventListeners","removeEventListeners","addPageUnloadEventListener","removePageUnloadEventListener","addPageHideEventListener","newNamespaces","pageUnloadAdded","visibilityState","removePageHideEventListener","LoggingSeverity","DISABLED","CRITICAL","WARNING","DEBUG","aiInstrumentHooks","cbNames","_arrLoop","arr","_doCallbacks","callDetails","cbArgs","hookCtx","hook","cbks","orgEx","hookErrorCb","_createFunctionHook","aiHook","orgArgs","funcArgs","_createArgs","f","rslt","_getOwner","checkPrototype","checkParentProto","owner","InstrumentProto","InstrumentFunc","_createInstrumentHook","theHook","newFunc","InstrumentEvent","SampleRate","ProcessLegacy","HttpMethod","DEFAULT_BREEZE_ENDPOINT","DEFAULT_BREEZE_PATH","strNotSpecified","strIkey","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","traceStateHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","_DYN_INGESTIONENDPOINT","_DYN_TO_STRING","_DYN_REMOVE_ITEM","_DYN_COUNT","_DYN_PRE_TRIGGER_DATE","_DYN_DISABLED","_DYN_INTERVAL","_DYN_DAYS_OF_MONTH","_DYN_DATE","_DYN_GET_UTCDATE","_DYN_STRINGIFY","_DYN_PATHNAME","_DYN_CORRELATION_HEADER_E0","_DYN_EXCEPTIONS","_DYN_PARSED_STACK","_DYN_PROPERTIES","_DYN_MEASUREMENTS","_DYN_SIZE_IN_BYTES","_DYN_TYPE_NAME","_DYN_SEVERITY_LEVEL","_DYN_PROBLEM_GROUP","_DYN_IS_MANUAL","_DYN__CREATE_FROM_INTERFA1","_DYN_ASSEMBLY","_DYN_FILE_NAME","_DYN_HAS_FULL_STACK","_DYN_LEVEL","_DYN_METHOD","_DYN_LINE","_DYN_DURATION","_DYN_RECEIVED_RESPONSE","dataSanitizeKeyAndAddUniqueness","map","origLength","dataSanitizeKey","uniqueField","dsPadNumber","nameTrunc","dataSanitizeString","valueTrunc","dataSanitizeUrl","dataSanitizeInput","dataSanitizeMessage","messageTrunc","dataSanitizeException","exceptionTrunc","dataSanitizeProperties","tempProps_1","dataSanitizeMeasurements","measurements","tempMeasurements_1","measure","dataSanitizeId","_msgId","inputTrunc","num","_document","_htmlAnchorIdx","_htmlAnchorElement","urlParseUrl","anchorIdx","anchorCache","tempAnchor","createElement","urlParseHost","href","urlGetAbsoluteUrl","urlGetCompleteUrl","absoluteUrl","inclPort","fullHost","urlParseFullHost","port","_internalEndpoints","_correlationIdPrefix","isInternalApplicationInsightsEndpoint","correlationIdCanIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","correlationHeaderExcludePatterns","test","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","regex","RegExp","excludedDomains","correlationHeaderExcludedDomains","correlationIdGetCorrelationContext","responseHeader","correlationId","correlationIdGetCorrelationContextValue","keyValues","keyValue","AjaxHelperParseDependencyPath","commandName","parsedUrl","pathName","pathname","dateTimeUtilsNow","timing","navigationStart","dateNow","dateTimeUtilsDuration","createDistributedTraceContextFromTrace","telemetryTrace","traceID","parentID","StorageType","LocalStorage","SessionStorage","DistributedTracingModes","AI","AI_AND_W3C","W3C","_canUseLocalStorage","_canUseSessionStorage","_storagePrefix","_getLocalStorageObject","utlCanUseLocalStorage","_getVerifiedStorageObject","storageType","storage","getGlobalInst","fail","setItem","getItem","_getSessionStorageObject","utlCanUseSessionStorage","utlDisableStorage","utlSetStoragePrefix","storagePrefix","utlEnableStorage","reset","utlGetLocalStorage","utlSetLocalStorage","utlRemoveStorage","utlGetSessionStorage","utlSetSessionStorage","utlRemoveSessionStorage","THROTTLE_STORAGE_PREFIX","ThrottleMgr","namePrefix","_config","_localStorageObj","_isTriggered","_namePrefix","_isReady","_isSpecificDaysGiven","_flushMessage","msgID","saveUnsentMsg","_getCfgByKey","limit","samplingRate","_canSampledIn","localStorageObj","_getLocalStorageObjByKey","canThrottle","_canThrottle","throttled","isTriggered","_isTrigger","min","maxSendNumber","localStorageName","_getLocalStorageName","_resetLocalStorage","isThrottled","throttleNum","_getQueueByKey","_setCfgByKey","monthInterval","dayInterval","curCfg","configInterval","daysOfMonth","canUseLocalStorage","monthCheck","dayCheck","curDate","_getThrottleDate","monthExpand","getUTCFullYear","getUTCMonth","_checkInterval","daySpan","msgKey","prefix","fix","dateStr","getDate","storageName","current","curObj","storageObj","preTriggerDate","_getLocalStorageObj","isTrigger","_isTriggeredOnCurDate","coreConfig","throttleMgrCfg","localObj","isReady","items","flushAll","result_1","isFlushed","onReadyState","sendMessage","_FIELDS_SEPARATOR","_FIELD_KEY_VALUE_SEPARATOR","parseConnectionString","connectionString","locationPrefix","kvPairs","fields","kv","kvParts","endpointsuffix","Envelope","sampleRate","tags","time","aiDataContract","iKey","envelopeType","NoMethod","strError","strStack","strStackDetails","strErrorSrc","strMessage","strDescription","_stringify","convertToString","_formatMessage","errorType","evtMessage","_isExceptionDetailsInternal","_isExceptionInternal","_isStackDetails","_convertStackObj","errorStack","_getOperaStack","errorMessage","lines","_getStackFromErrorObj","errorObj","_formatStackTrace","stackDetails","_parseStack","frames","parsedStack","level_1","totalSizeInBytes_1","frame","theFrame","_StackFrame","parsedFrame","left","right","size","acceptedLeft","acceptedRight","_getErrorType","typeName","results","_formatErrorCode","Exception","severityLevel","exceptions","_ExceptionDetails","CreateAutoException","lineNumber","columnNumber","errorSrc","CreateFromInterface","__assign","prototype","toInterface","problemGroup","isManual","exceptionDetailsInterface","CreateSimpleException","assembly","fileName","line","formatError","outerId","hasFullStack","sourceFrame","level","matches","sizeInBytes","baseSize","DataPoint","kind","stdDev","Metric","metrics","dataPoint","strEmpty","msToTimeSpan","totalms","sec","round","hour","days","ms","isCrossOriginError","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","correlationContext","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","Trace","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","Data","SeverityLevel","Verbose","Information","Warning","Critical","_aiNameFunc","baseName","aiName","_aiApplication","_aiDevice","_aiLocation","_aiOperation","_aiSession","_aiUser","_aiCloud","_aiInternal","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","createTelemetryItem","envelopeName","customProperties","systemProperties","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys","createDomEvent","_disableEvents","createOfflineListener","parentEvtNamespace","_navigator","_isListening","listenerList","rState","uState","onLine","_currentState","calCurrentState","_enableEvents","ononline","_setOnline","_setOffline","listnerNoticeCheck","offlineState","isOnline","isListening","win","addListener","setOnlineState","PropertiesPluginIdentifier","BreezeChannelIdentifier","AnalyticsPluginIdentifier","_DYN_IS_STORAGE_USE_DISAB0","_DYN__ADD_HOOK","_DYN_CORE","_DYN_DATA_TYPE","_DYN_ENVELOPE_TYPE","_DYN_TRACK","_DYN_TRACK_PAGE_VIEW","_DYN_TRACK_PREVIOUS_PAGE_1","_DYN_SEND_PAGE_VIEW_INTER2","_DYN_START_TIME","_DYN_SEND_PAGE_VIEW_PERFO3","_DYN_POPULATE_PAGE_VIEW_P4","_DYN_HREF","_DYN_SEND_EXCEPTION_INTER5","_DYN_EXCEPTION","_DYN_ERROR","_DYN__ONERROR","_DYN_ERROR_SRC","_DYN_LINE_NUMBER","_DYN_COLUMN_NUMBER","_DYN__CREATE_AUTO_EXCEPTI6","_DYN_ADD_TELEMETRY_INITIA7","_DYN_OVERRIDE_PAGE_VIEW_D8","_DYN_AUTO_TRACK_PAGE_VISI9","_DYN_IS_BROWSER_LINK_TRAC10","_DYN_ENABLE_AUTO_ROUTE_TR11","_DYN_ENABLE_UNHANDLED_PRO12","_DYN_AUTO_UNHANDLED_PROMI13","_DYN_GET_ENTRIES_BY_TYPE","_DYN_IS_PERFORMANCE_TIMIN14","_DYN_GET_PERFORMANCE_TIMI15","_DYN_NAVIGATION_START","_DYN_SHOULD_COLLECT_DURAT16","_DYN_IS_PERFORMANCE_TIMIN17","_DYN_RESPONSE_START","_DYN_REQUEST_START","_DYN_LOAD_EVENT_END","_DYN_RESPONSE_END","_DYN_CONNECT_END","_DYN_PAGE_VISIT_START_TIM18","PageViewManager","appInsights","overridePageViewDuration","pageViewPerformanceManager","queueTimer","itemQueue","pageViewPerformanceSent","firstPageViewSent","_addQueue","_startTimer","allItems","doFlush","pageView","loadEventStart","duration_1","uri","title","navigationEntries","timeOrigin","customDuration","pageViewSent","pageViewPerformance","processed","teardown","MAX_DURATION_ALLOWED","botAgentNames","_isPerformanceTimingSupported","_isPerformanceNavigationTimingSupported","_isPerformanceTimingDataReady","domainLookupStart","domLoading","_getPerformanceTiming","_getPerformanceNavigationTiming","_shouldCollectDuration","durations","isGoogleBot","PageViewPerformanceManager","navigationTiming","total","network","dom","requestStart","responseEnd","PageVisitTimeManager","pageVisitTimeTrackingHandler","prevPageVisitDataKeyName","restartPageVisitTimer","pageName","pageUrl","prevPageVisitData","currPageVisitDataStr","stopPageVisitTimer","PageVisitData","pageVisitEndTime","pageVisitDataJsonStr","pageVisitTime","currentPageName","currentPageUrl","prevPageVisitTimeData","Timing","_events","stop","action","strEvent","_dispatchEvent","_getReason","MinMilliSeconds","sessionRenewalMs","_chkConfigMilliseconds","sessionExpirationMs","disableExceptionTracking","samplingPercentage","_chkSampling","disableFlushOnBeforeUnload","disableFlushOnUnload","expCfg","inclScripts","_updateStorageUsage","AnalyticsPlugin","_eventTracking","_pageTracking","_pageViewManager","_pageViewPerformanceManager","_pageVisitTimeManager","_preInitTelemetryInitializers","_isBrowserLinkTrackingEnabled","_browserLinkInitializerAdded","_enableAutoRouteTracking","_historyListenerAdded","_disableExceptionTracking","_autoExceptionInstrumented","_enableUnhandledPromiseRejectionTracking","_autoUnhandledPromiseInstrumented","_extConfig","_autoTrackPageVisitTime","_prevUri","_currUri","autoRoutePVDelay","_addHook","throwInternal","processNext","trackEvent","EventTelemetry","startTrackEvent","stopTrackEvent","trackTrace","trackMetric","metric","inPv","refUri","referrer","trackPageViewPerformance","inPvp","startTrackPage","stopTrackPage","measurement","loc","scriptsInfo","theError","exceptionPartB","trackException","URL","errorString","initialize","_location","browserLinkPaths_1","envelope","remoteData","average","sampleCount","PageName","PageUrl","locn","autoExceptionInstrumented","rsp","history","_history","pushState","replaceState","strUndefined","distributedTraceCtx","traceLocationName","hash","_doTeardown","Version","_DYN_FEATURE_OPT_IN","_DYN_ON_CFG_CHANGE_RECEIV0","_DYN_NON_OVERRIDE_CONFIGS","_DYN_SCHEDULE_FETCH_TIMEO1","replaceByNonOverrideCfg","nonOverrideConfigs","curLevel","maxLevel","exceedMaxLevel","curCfg_1","nonOverrideVal","F","M","ON","OFF","resolveCdnFeatureCfg","cdnCfg","userOptInDetails","cdnFt","cdnM","cdnOnV","onCfg","cdnOffV","offCfg","userFt","userM","userOnV","userOffV","blockCdn","blockCdnCfg","onFld","offFld","onV","offV","applyCdnfeatureCfg","optInMap","cdnConfig_1","featureVal","val","_overrideCdnCfgByFeature","ftVal","dVal","EVENT_NAME","STR_GET_METHOD","FETCH_TIMEOUT","udfVal","defaultNonOverrideCfg","instrumentationKey","_defaultConfig","syncMode","blkCdnCfg","customEvtName","cfgUrl","overrideSyncFn","overrideFetchFn","CfgSyncPlugin","_extensionConfig","_mainConfig","_evtName","_cfgUrl","_timeoutHandle","_receiveChanges","_broadcastChanges","_blkCdnCfg","_fetchTimeout","_retryCnt","_onCfgChangeReceive","_nonOverrideConfigs","_fetchFn","_overrideFetchFn","_overrideSyncFn","_paused","_setCfg","isAutoSync","_sendCfgsyncEvents","_eventOff","global_1","_updateEventListenerName","global_2","cfgEvent","newCfg","_replaceTartgetByKeys","_fetchSender","fetchFn","xhr_1","DONE","JSON_1","_setupTimer","_cfg","_clearScheduledTimer","preBlkCdn","newEvtName","pause","resume","setCfg","updateEventListenerName","STR_DURATION","_DYN_TAGS","_DYN_DEVICE_TYPE","_DYN__GET","_DYN_ENQUEUE","_DYN_EVENTS_LIMIT_IN_MEM","_DYN_ITEM","_DYN_EMIT_LINE_DELIMITED_0","_DYN_CLEAR","_DYN_MARK_AS_SENT","_DYN_CLEAR_SENT","_DYN_BUFFER_OVERRIDE","_DYN__BUFFER__KEY","_DYN__SENT__BUFFER__KEY","_DYN_CONCAT","_DYN__MAX__BUFFER__SIZE","_DYN_TRIGGER_SEND","_DYN__SENDER","_DYN_CUSTOM_HEADERS","_DYN_MAX_BATCH_SIZE_IN_BY1","_DYN_ONUNLOAD_DISABLE_BEA2","_DYN_IS_BEACON_API_DISABL3","_DYN_ALWAYS_USE_XHR_OVERR4","_DYN_DISABLE_XHR","_DYN_ENABLE_SESSION_STORA5","_DYN__BUFFER","_DYN_ONUNLOAD_DISABLE_FET6","_DYN_DISABLE_SEND_BEACON_7","_DYN_ENABLE_SEND_PROMISE","_DYN_GET_SENDER_INST","_DYN_UNLOAD_TRANSPORTS","_DYN_CONVERT_UNDEFINED","_DYN_MAX_BATCH_INTERVAL","_DYN_SERIALIZE","_DYN__ON_ERROR","_DYN__ON_PARTIAL_SUCCESS","_DYN__ON_SUCCESS","_DYN_ITEMS_ACCEPTED","_DYN_ORI_PAYLOAD","_DYN_BASE_TYPE","_DYN_SAMPLE_RATE","_DYN_EVENTS_SEND_REQUEST","_DYN_GET_SAMPLING_SCORE","_DYN_GET_HASH_CODE_SCORE","strBaseType","strBaseData","strProperties","strTrue","_setValueIf","_extractPartAExtensions","envTags","itmExt","itmTags","extUser","user","extApp","authId","localId","app","extDevice","sesId","device","web","deviceClass","ip","model","extOs","browserLang","browserVer","browser","envProps","envBaseData","envData","screenRes","userConsent","os","extTrace","osVer","tgs","tg","theTags","EnvelopeCreator","_extractPropsAndMeasurements","_convertPropsUndefinedToCustomDefinedValue","customUndefinedValue","_createEnvelope","startTime","iKeyNoDashes","EnvelopeCreatorInit","DependencyEnvelopeCreator","customMeasurements","bd","remoteDepData","responseCode","EventEnvelopeCreator","eventData","ExceptionEnvelopeCreator","exData","MetricEnvelopeCreator","baseMetricData","PageViewEnvelopeCreator","currentContextId","pageViewData","pageType","isLoggedIn","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","BaseSendBuffer","_buffer","_bufferFullMessageSent","_maxRetryCnt","maxRetryCnt","_set","buffer","getItems","batchPayloads","payloads","payloadStr_1","canUseSessionStorage","newBuffer","SessionStorageSendBuffer","ArraySendBuffer","PREVIOUS_KEYS","bufferItems","_getBuffer","itemsInSentBuffer","previousItems","_getItemsFromPreviousKey","prefixEvents","_getPreviousEvents","notDeliveredItems","_removePayloadsFromBuffer","remaining","payloadStr","_getBufferBase","bufferJson","buffer_1","_setBuffer","prefixedKey","transFormedItems_1","BUFFER_KEY","sentElements","unsentItems","sentItems","VERSION","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","Serializer","_serializeObject","circularReferenceCheck","output","contract","isRequired","isHidden","isPresent","isObj","_serializeArray","_serializeStringMap","sources","expectedType","parseFloat","MIN_INPUT_LENGTH","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","charCodeAt","abs","SamplingScoreGenerator","hashCodeGenerator","keys","Sample","samplingScoreGenerator","isSampledIn","EMPTY_STR","FetchSyncRequestSizeLimitBytes","_getResponseText","isOverrideFn","httpXHROverride","defaultAppInsightsChannelConfig","disableTelemetry","isRetryDisabled","retryCodes","EnvelopeTypeCreator","Sender","_consecutiveErrors","_retryAt","_serializer","_stamp_specific_redirects","_headers","_syncUnloadSender","_offlineListener","_endpointUrl","_orgEndpointUrl","_maxBatchSizeInBytes","_beaconSupported","_beaconOnUnloadSupported","_beaconNormalSupported","_customHeaders","_disableTelemetry","_convertUndefined","_isRetryDisabled","_maxBatchInterval","_sessionStorageUsed","_bufferOverrideUsed","_alwaysUseCustomSend","_fetchKeepAlive","_xhrSend","_fallbackSend","_disableBeaconSplit","_sendPostMgr","_retryCodes","_xdrOnLoad","_xhrReadyStateChange","countOfItemsInPayload","_checkResponsStatus","responseURL","_getPayloadArr","_validate","diagLogger","_sample","_getEnvelope","defaultEnvelopeIkey","aiEnvelope","constructEnvelope","_serialize","rlt","valid","_batch","_createPayload","_getHeaders","_doSend","sendInterface","markAsSent","payloadData","_getPayload","_onSuccess","_checkMaxSize","incomingPayload","incomingSize","responseUrl","_appId","appId","_checkAndUpdateEndPointUrl","_resendPayload","_isRetriable","_doUnloadSend","_isStringArr","_fetchKeepAliveSender","transport","payloadSize","linearFactor","payload_1","delayInSeconds","backOffDelay","pow","retryAfterTimeSpan","retryInterval","statusCode","_notifySendRequest","sendRequest","onunloadFlush","addHeader","senderConfig","bufferOverride","customHeader","shouldUpdate","disableValidation","disableInstrumentationKeyValidation","sendPostConfig","onCompleteFuncs","resValue","canSend","_onBeaconRetry","droppedPayload","thePayload","_getSendPostMgrConfig","customInterface","httpInterface","syncInterface","xhrInterface","syncTransports","filter","payloadItem","isCompletelyIdle","forcedSender","ieVer","getOfflineSupport","getUrl","createPayload","shouldProcess","_onPartialSuccess","retry","errors_1","reverse","extracted","orig","convertUndefined","STR_PROPERTIES","_DYN_REQUEST_URL","_DYN_INST","_DYN_CONTEXT","_DYN_ABORTED","_DYN_TRACE_ID0","_DYN_SPAN_ID1","_DYN_INCLUDE_CORRELATION_2","_DYN_GET_ABSOLUTE_URL","_DYN_REQUEST_HEADERS","_DYN_TRACK_DEPENDENCY_DAT3","_DYN_ENABLE_REQUEST_HEADE4","_DYN_ENABLE_AJAX_ERROR_ST5","_DYN_ENABLE_AJAX_PERF_TRA6","_DYN_MAX_AJAX_CALLS_PER_V7","_DYN_EXCLUDE_REQUEST_FROM8","_DYN_ADD_REQUEST_CONTEXT","_DYN_DISABLE_AJAX_TRACKIN9","_DYN_AJAX_PERF_LOOKUP_DEL10","_DYN_DISABLE_FETCH_TRACKI11","_DYN_ENABLE_RESPONSE_HEAD12","_DYN_STATUS_TEXT","_DYN_HEADER_MAP","_DYN_OPEN_DONE","_DYN_SEND_DONE","_DYN_REQUEST_SENT_TIME","_DYN_ABORT_DONE","_DYN_GET_TRACE_ID","_DYN_GET_TRACE_FLAGS","_DYN_ERROR_STATUS_TEXT","_DYN_STATE_CHANGE_ATTACHE13","_DYN_RESPONSE_TEXT","_DYN_RESPONSE_FINISHED_TI14","_DYN__CREATE_TRACK_ITEM","_DYN_RESPONSE","_DYN_GET_ALL_RESPONSE_HEA15","_DYN_GET_PART_APROPS","_DYN_PERF_MARK","_DYN_PERF_TIMING","_DYN_AJAX_DIAGNOSTICS_MES16","_DYN_CORRELATION_CONTEXT","_DYN_AJAX_TOTAL_DURATION","_DYN_EVENT_TRACE_CTX","_calcPerfDuration","resourceEntry","_setPerfDuration","_setPerfValue","strPerf","_populatePerfData","ajaxData","dependency","server_1","propsSet","strConnect","strConnectEnd","strRequestStart","strRequest","strResponseEnd","strResponse","strTransferSize","strEncodedBodySize","strDecodedBodySize","strServerTiming","strEnd","strRedirect","strDomainLookup","perfAttempts","XHRMonitoringState","setRequestHeaderDone","ajaxRecord","completed","requestHeadersSize","responseReceivingDuration","callbackDuration","requestSize","responseStartedTime","callbackFinishedTime","endTime","xhrMonitoringState","clientFailure","getAbsoluteUrl","getPathName","ajaxType","enableRequestHeaderTracking","getResponse","ajaxTotalDuration","requestSentTime","responseFinishedTime","headerMap","responseHeaders","responseType","traceExt","partA","strDiagLog","AJAX_DATA_CONTAINER","STR_FETCH","ERROR_HEADER","ERROR_PREFIX","ERROR_POSTFIX","ERROR_NOT_SENT","CORRELATION_HEADER_ERROR","CUSTOM_REQUEST_CONTEXT_ERROR","FAILED_TO_CALCULATE_DURATION_ERROR","_markCount","_supportsFetch","_global","strPrototype","_supportsAjaxMonitoring","ajaxMonitorInstance","ajaxDataId","abort","xhrData","xh","theOpen","_throwInternalCritical","_getAjaxData","_addSharedXhrHeaders","_isHeaderSet","_getFailedAjaxDiagnosticsMessage","_throwInternalWarning","_createErrorCallbackFunc","internalMessage","ajaxDiagnosticsMessage","_ajaxDataId","_indexOf","_addHandler","container","theHandler","_processDependencyContainer","_processDependencyListeners","aborted","BLOB_CORE","DfltAjaxCorrelationHeaderExDomains","_internalExcludeEndpoints","distributedTracingMode","maxAjaxPerfLookupAttempts","ignoreHeaders","addIntEndpoints","AjaxMonitor","_fetchInitialized","_xhrInitialized","_currentWindowHost","_enableRequestHeaderTracking","_enableAjaxErrorStatusText","_trackAjaxAttempts","_context","_isUsingW3CHeaders","_isUsingAIHeaders","_markPrefix","_enableAjaxPerfTracking","_maxAjaxCallsPerView","_enableResponseHeaderTracking","_disabledUrls","_disableAjaxTracking","_disableFetchTracking","_excludeRequestFromAutoTrackingPatterns","_addRequestContext","_dependencyHandlerId","_dependencyListeners","_dependencyInitializers","_ignoreHeaders","_maxAjaxPerfLookupAttempts","_ajaxPerfLookupDelay","_distributedTracingMode","_polyfillInitialized","_canIncludeHeaders","_hookProto","_isDisabledRequest","isDisabled","theUrl","theRegex","idx2","_isMonitoredXhrInstance","excludeAjaxDataValidation","ajaxValidation","initialized","_getDistributedTraceCtx","_attachToOnReadyStateChange","_findPerfResourceEntry","sysProperties","_getAjaxCorrelationContext","responseHeaderMap_2","ajaxResponse","shift","_reportDependencyInternal","_reportXhrError","ajaxDataCntr","exceptionText","failedProps","errorProps","responseHeadersString","getResponseHeader","_createMarkId","performance_1","mark","markId","entries","getEntriesByName","initiatorType","trackCallback","reportError","perfMark","performance","maxAttempts","retryDelay","attempt","locateResourceTiming","perfTiming","getEntries","entryType","clearMarks","_getFailedFetchDiagnosticsMessage","_reportFetchMetrics","_reportFetchError","_getFetchCorrelationContext","fetchDiagnosticsMessage","initializers","isPolyfill","req","spanID","xhrRequestData","hkErr","polyfill","forEach","fetchData","newInit","fetchData_1","responseHeaderMap_1","propExt","trackDependencyData","traceParent","currentWindowHost","addDependencyListener","dependencyListener","addDependencyInitializer","dependencyInitializer","Application","Device","Internal","unloadHookContainer","sdkExtension","sdkVersion","Location","_DYN_SESSION_MANAGER","_DYN_IS_USER_COOKIE_SET","_DYN_IS_NEW_USER","_DYN_GET_TRACE_CTX","_DYN_TELEMETRY_TRACE","_DYN_APPLY_SESSION_CONTEX0","_DYN_APPLY_APPLICATION_CO1","_DYN_APPLY_DEVICE_CONTEXT","_DYN_APPLY_OPERATION_CONT2","_DYN_APPLY_USER_CONTEXT","_DYN_APPLY_OPERATING_SYST3","_DYN_APPLY_LOCATION_CONTE4","_DYN_APPLY_INTERNAL_CONTE5","_DYN_ACCOUNT_ID","_DYN_GET_SESSION_ID","_DYN_NAME_PREFIX","_DYN_SESSION_COOKIE_POSTF6","_DYN_USER_COOKIE_POSTFIX","_DYN_ID_LENGTH","_DYN_GET_NEW_ID","_DYN_AUTOMATIC_SESSION","_DYN_AUTHENTICATED_ID","_DYN_ACQUISITION_DATE","_DYN_RENEWAL_DATE","_DYN_JOIN","_DYN_COOKIE_SEPARATOR","_DYN_AUTH_USER_COOKIE_NAM7","SESSION_COOKIE_NAME","ACQUISITION_SPAN","RENEWAL_SPAN","COOKIE_UPDATE_INTERVAL","Session","_SessionManager","_storageNamePrefix","_cookieUpdatedTimestamp","_sessionExpirationMs","_sessionRenewalMs","sessionCookiePostfix","_initializeAutomaticSessionWithData","session","sessionData","sessionReset","tokens","acqMs","renewalMs","_setCookie","nowMs","acq","renewalPeriodMs","acqTimeLeftMs","cookie","isExpired","storageValue","timeSinceAcqMs","timeSinceRenewalMs","getNewId","automaticSession","backup","renewal","TelemetryTrace","parentId","_validateUserInput","User","isNewUser","isUserCookieSet","userCookiePostfix","userCookieName","authCookie","params","_generateNewId","_setUserCookie","_generateNewCookie","authCookieString","decodeURI","acqStr","accountAcquisitionDate","setAuthenticatedUserContext","authenticatedUserId","accountId","storeInCookie","encodeURI","clearAuthenticatedUserContext","cookieSeparator","authUserCookieName","strExt","strTags","_removeEmpty","_nullResult","undefString","_c","_d","_internalSdkSrc","TelemetryContext","previousTraceCtx","application","internal","autoSession","build","agentVersion","snippetVer","sdkSrc","applyWebContext","cleanUp","nullValue","isBrowserLinkTrackingEnabled","PropertiesPlugin","_distributedTraceCtx","_previousTraceCtx","_disableUserInitMessage","disableUserInitMessage","_unloadHooks","breezeChannel","userCtx","theContext","PropertiesPlugin$1","_AUTHENTICATED_USER_CONTEXT","_TRACK","STR_SNIPPET","STR_GET_COOKIE_MGR","STR_START_TRACK_PAGE","STR_STOP_TRACK_PAGE","STR_FLUSH","STR_START_TRACK_EVENT","STR_STOP_TRACK_EVENT","STR_ADD_TELEMETRY_INITIALIZER","STR_POLL_INTERNAL_LOGS","STR_GET_PLUGIN","STR_EVT_NAMESPACE","STR_TRACK_EVENT","STR_TRACK_TRACE","STR_TRACK_METRIC","STR_TRACK_PAGE_VIEW","STR_TRACK_EXCEPTION","STR_TRACK_DEPENDENCY_DATA","STR_SET_AUTHENTICATED_USER_CONTEXT","STR_CLEAR_AUTHENTICATED_USER_CONTEXT","CONFIG_ENDPOINT_URL","_DYN_QUEUE","_DYN_CONNECTION_STRING","_DYN_INSTRUMENTATIONKEY0","_DYN_USER_OVERRIDE_ENDPOI1","_DYN_ENDPOINT_URL","_DYN_ONUNLOAD_FLUSH","_DYN_ADD_HOUSEKEEPING_BEF2","_DYN_SEND_MESSAGE","_DYN_UPDATE_SNIPPET_DEFIN3","_ignoreUpdateSnippetProperties","IKEY_USAGE","CDN_USAGE","SDK_LOADER_VER","default_limit","default_interval","default_throttle_config","defaultConfigValues","_chkDiagLevel","extensionConfig","AppInsightsSku","snippet","dependencies","_sender","_snippetVersion","_houseKeepingNamespace","_core","_analyticsPlugin","_cfgSyncPlugin","_throttleMgr","_iKeySentMessage","_cdnSentMessage","_sdkVerSentMessage","sv","_removePageEventHandlers","DependenciesPlugin","cs","ingest","configCs","_parseCs","curCs","parsedCs","ikeyPromise","flushDone","loadAppInsights","legacyMode","_findSdkSourceFile","emptyQueue","defaultEnable","length_1","appInsightsInstance","performHousekeeping_1","added_1","propertiesPlugin","loadedPlugin","_sessionManager","analyticsPlugin","excludePageUnloadEvents","disablePageUnloadEvents","getSender","scrpt","document","currentScript","src_1","url_1","ApplicationInsightsContainer","getAppInsights","theSku","_logWarn","_console","warn","getAttribute"],"mappings":"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","x_google_ignoreList":[0,6,8]}
{"version":3,"file":"ai.3.3.1.gbl.min.js","sources":["../../../common/temp/node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/AggregationError.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK.Enums/InitActiveStatusEnum.js","../../../shared/AppInsightsCore/dist-es5/__DynamicConstants.js","../../../tools/shims/dist-es5/Constants.js","../../../tools/shims/dist-es5/TsLibShims.js","../../../common/temp/node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","../../../common/temp/node_modules/@nevware21/ts-async/dist/es5/mod/ts-async.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/InternalConstants.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/HelperFuncs.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/EnvUtils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/RandomHelper.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DataCacheHelper.js","../../../shared/AppInsightsCore/dist-es5/Config/ConfigDefaults.js","../../../shared/AppInsightsCore/dist-es5/Config/DynamicSupport.js","../../../shared/AppInsightsCore/dist-es5/Config/DynamicProperty.js","../../../shared/AppInsightsCore/dist-es5/Config/DynamicState.js","../../../shared/AppInsightsCore/dist-es5/Config/DynamicConfig.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/AsyncUtils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/Constants.js","../../../shared/AppInsightsCore/dist-es5/Config/ConfigDefaultHelpers.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/DiagnosticLogger.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/CookieMgr.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/NotificationManager.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/PerfManager.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/W3cTraceParent.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/TelemetryHelpers.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/UnloadHookContainer.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/TelemetryInitializerPlugin.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/AppInsightsCore.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/ResponseHelpers.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/SenderPostManager.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/EventHelpers.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCore/dist-es5/JavaScriptSDK/InstrumentHooks.js","../../../shared/AppInsightsCommon/dist-es5/Constants.js","../../../shared/AppInsightsCommon/dist-es5/RequestResponseHeaders.js","../../../shared/AppInsightsCommon/dist-es5/__DynamicConstants.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-es5/UrlHelperFuncs.js","../../../shared/AppInsightsCommon/dist-es5/Util.js","../../../shared/AppInsightsCommon/dist-es5/Enums.js","../../../shared/AppInsightsCommon/dist-es5/StorageHelperFuncs.js","../../../shared/AppInsightsCommon/dist-es5/ThrottleMgr.js","../../../shared/AppInsightsCommon/dist-es5/ConnectionStringParser.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-es5/HelperFuncs.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-es5/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-es5/Interfaces/Contracts/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-es5/Interfaces/Contracts/ContextTagKeys.js","../../../shared/AppInsightsCommon/dist-es5/TelemetryItemCreator.js","../../../shared/AppInsightsCommon/dist-es5/Interfaces/PartAExtensions.js","../../../shared/AppInsightsCommon/dist-es5/DomHelperFuncs.js","../../../shared/AppInsightsCommon/dist-es5/Offline.js","../../../shared/AppInsightsCommon/dist-es5/applicationinsights-common.js","../../../extensions/applicationinsights-analytics-js/dist-es5/__DynamicConstants.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Telemetry/PageViewManager.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Timing.js","../../../extensions/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/AnalyticsPlugin.js","../../../extensions/applicationinsights-cfgsync-js/dist-es5/__DynamicConstants.js","../../../extensions/applicationinsights-cfgsync-js/dist-es5/CfgSyncPlugin.js","../../../extensions/applicationinsights-cfgsync-js/dist-es5/CfgSyncHelperFuncs.js","../../../channels/applicationinsights-channel-js/dist-es5/InternalConstants.js","../../../channels/applicationinsights-channel-js/dist-es5/__DynamicConstants.js","../../../channels/applicationinsights-channel-js/dist-es5/EnvelopeCreator.js","../../../channels/applicationinsights-channel-js/dist-es5/SendBuffer.js","../../../channels/applicationinsights-channel-js/dist-es5/Serializer.js","../../../channels/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","../../../channels/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","../../../channels/applicationinsights-channel-js/dist-es5/TelemetryProcessors/Sample.js","../../../channels/applicationinsights-channel-js/dist-es5/Sender.js","../../../extensions/applicationinsights-dependencies-js/dist-es5/InternalConstants.js","../../../extensions/applicationinsights-dependencies-js/dist-es5/__DynamicConstants.js","../../../extensions/applicationinsights-dependencies-js/dist-es5/ajaxRecord.js","../../../extensions/applicationinsights-dependencies-js/dist-es5/ajax.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Application.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Device.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Internal.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Location.js","../../../extensions/applicationinsights-properties-js/dist-es5/__DynamicConstants.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/Session.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/TelemetryTrace.js","../../../extensions/applicationinsights-properties-js/dist-es5/Context/User.js","../../../extensions/applicationinsights-properties-js/dist-es5/TelemetryContext.js","../../../extensions/applicationinsights-properties-js/dist-es5/PropertiesPlugin.js","../../dist-es5/AISku.js","../../dist-es5/InternalConstants.js","../../dist-es5/__DynamicConstants.js","../../dist-es5/ApplicationInsightsContainer.js","../../dist-es5/Init.js"],"sourcesContent":["/*! https://github.com/nevware21/ts-utils v0.11.3 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1;\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key, writable);\n        _assignMapValue(theMap, value, valueType ? value : key, writable);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: !!writable\n    });\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump && propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \")) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                objDeepFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto && clsProto[funcName];\n    return function (thisArg) {\n        var theFunc = (thisArg && thisArg[funcName]) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        (!cachedValue || _globalLazyTestHooks.lzy) && (cachedValue = createCachedValue(safe(getFn, theArgs).v));\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) && (_cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE));\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl = (!_cachedGlobal || useCached === false) ? getGlobal(useCached) : _cachedGlobal.v;\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        return getWindow();\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : null;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray && theArray[\"slice\"]) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = _iterSymbol.v && theArgs[_iterSymbol.v];\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString;\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = false;\n    if (value && theType === OBJECT) {\n        isPlain = isPlainObject(value);\n    }\n    else {\n        isPrim = value === NULL_VALUE || isPrimitiveType(theType);\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_perf || _globalLazyTestHooks.lzy) && (_perf = createCachedValue(safe((getInst), [\"performance\"]).v));\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        isDone = isDone || (ctx.n ? ctx.n(arguments) : true);\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step || ((start <= end) ? 1 : -1);\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = false;\n        if (theStep > 0) {\n            isDone = nextValue > end;\n        }\n        else {\n            isDone = nextValue < end;\n        }\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter && splitter[getKnownSymbol(9 )];\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : null));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = !isUndefined(length) && length < value[LENGTH] ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { createEnumStyle } from \"./EnumHelperFuncs\";\r\nexport var ActiveStatus = createEnumStyle({\r\n    NONE: 0 /* eActiveStatus.NONE */,\r\n    PENDING: 3 /* eActiveStatus.PENDING */,\r\n    INACTIVE: 1 /* eActiveStatus.INACTIVE */,\r\n    ACTIVE: 2 /* eActiveStatus.ACTIVE */\r\n});\r\n//# sourceMappingURL=InitActiveStatusEnum.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN__INACTIVE = \"INACTIVE\"; // Count: 3\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 5\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","/*!\n * NevWare21 Solutions LLC - ts-async, 0.5.2\n * https://github.com/nevware21/ts-async\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\nimport { isPromiseLike, objDefineProperties, getDocument, createCachedValue, safe, getInst, dumpObj, arrSlice, objDefineProp, hasSymbol, getKnownSymbol, isFunction, throwTypeError, iterForOf, scheduleTimeout, isNode, getWindow, getGlobal, objDefine, objToString, isUndefined, isArray, arrForEach, isIterable, createCustomError, isNumber, scheduleIdleCallback, utcNow, getLength, isIterator, fnCall, arrIndexOf } from '@nevware21/ts-utils';\n\nvar STR_PROMISE = \"Promise\";\nvar DONE = \"done\";\nvar VALUE = \"value\";\nvar RETURN = \"return\";\nvar REJECTED = \"rejected\";\n\nfunction doAwaitResponse(value, cb) {\n    return doAwait(value, function (value) {\n        return cb ? cb({\n            status: \"fulfilled\",\n            rejected: false,\n            value: value\n        }) : value;\n    }, function (reason) {\n        return cb ? cb({\n            status: REJECTED,\n            rejected: true,\n            reason: reason\n        }) : reason;\n    });\n}\nfunction doAwait(value, resolveFn, rejectFn, finallyFn) {\n    var result = value;\n    try {\n        if (isPromiseLike(value)) {\n            if (resolveFn || rejectFn) {\n                result = value.then(resolveFn, rejectFn);\n            }\n        }\n        else {\n            try {\n                if (resolveFn) {\n                    result = resolveFn(value);\n                }\n            }\n            catch (err) {\n                if (rejectFn) {\n                    result = rejectFn(err);\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n    }\n    finally {\n        if (finallyFn) {\n            doFinally(result, finallyFn);\n        }\n    }\n    return result;\n}\nfunction doFinally(value, finallyFn) {\n    var result = value;\n    if (finallyFn) {\n        if (isPromiseLike(value)) {\n            if (value.finally) {\n                result = value.finally(finallyFn);\n            }\n            else {\n                result = value.then(function (value) {\n                    finallyFn();\n                    return value;\n                }, function (reason) {\n                    finallyFn();\n                    throw reason;\n                });\n            }\n        }\n        else {\n            finallyFn();\n        }\n    }\n    return result;\n}\n\nvar _debugState;\nvar _debugResult;\nvar _debugHandled;\nvar _promiseDebugEnabled = false;\nfunction _addDebugState$1(thePromise, stateFn, resultFn, handledFn) {\n    _debugState = _debugState || { toString: function () { return \"[[PromiseState]]\"; } };\n    _debugResult = _debugResult || { toString: function () { return \"[[PromiseResult]]\"; } };\n    _debugHandled = _debugHandled || { toString: function () { return \"[[PromiseIsHandled]]\"; } };\n    var props = {};\n    props[_debugState] = { get: stateFn };\n    props[_debugResult] = { get: resultFn };\n    props[_debugHandled] = { get: handledFn };\n    objDefineProperties(thePromise, props);\n}\nfunction setPromiseDebugState(enabled, logger) {\n    _promiseDebugEnabled = enabled;\n}\n\nvar STRING_STATES =  [\n    \"pending\", \"resolving\", \"resolved\", REJECTED\n];\n\nvar DISPATCH_EVENT = \"dispatchEvent\";\nvar _hasInitEvent;\nfunction _hasInitEventFn(doc) {\n    var evt;\n    if (doc && doc.createEvent) {\n        evt = doc.createEvent(\"Event\");\n    }\n    return (!!evt && evt.initEvent);\n}\nfunction emitEvent(target, evtName, populateEvent, useNewEvent) {\n    var doc = getDocument();\n    !_hasInitEvent && (_hasInitEvent = createCachedValue(!!safe(_hasInitEventFn, [doc]).v));\n    var theEvt = _hasInitEvent.v ? doc.createEvent(\"Event\") : (useNewEvent ? new Event(evtName) : {});\n    populateEvent && populateEvent(theEvt);\n    if (_hasInitEvent.v) {\n        theEvt.initEvent(evtName, false, true);\n    }\n    if (theEvt && target[DISPATCH_EVENT]) {\n        target[DISPATCH_EVENT](theEvt);\n    }\n    else {\n        var handler = target[\"on\" + evtName];\n        if (handler) {\n            handler(theEvt);\n        }\n        else {\n            var theConsole = getInst(\"console\");\n            theConsole && (theConsole[\"error\"] || theConsole[\"log\"])(evtName, dumpObj(theEvt));\n        }\n    }\n}\n\nvar NODE_UNHANDLED_REJECTION = \"unhandledRejection\";\nvar UNHANDLED_REJECTION = NODE_UNHANDLED_REJECTION.toLowerCase();\nvar _currentPromiseId = [];\nvar _uniquePromiseId = 0;\nvar _unhandledRejectionTimeout = 10;\nvar _aggregationError;\nvar _hasPromiseRejectionEvent;\nfunction dumpFnObj(value) {\n    if (isFunction(value)) {\n        return value.toString();\n    }\n    return dumpObj(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAggregationError(values) {\n    !_aggregationError && (_aggregationError = createCachedValue(safe(getInst, [\"AggregationError\"]).v || createCustomError(\"AggregationError\", function (self, args) {\n        self.errors = args[0];\n    })));\n    return new _aggregationError.v(values);\n}\nfunction _createPromise(newPromise, processor, executor) {\n    var additionalArgs = arrSlice(arguments, 3);\n    var _state = 0 ;\n    var _hasResolved = false;\n    var _settledValue;\n    var _queue = [];\n    var _id = _uniquePromiseId++;\n    var _parentId = _currentPromiseId.length > 0 ? _currentPromiseId[_currentPromiseId.length - 1] : undefined;\n    var _handled = false;\n    var _unHandledRejectionHandler = null;\n    var _thePromise;\n    function _then(onResolved, onRejected) {\n        try {\n            _currentPromiseId.push(_id);\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            var thenPromise = newPromise(function (resolve, reject) {\n                _queue.push(function () {\n                    try {\n                        var handler = _state === 2  ? onResolved : onRejected;\n                        var value = isUndefined(handler) ? _settledValue : (isFunction(handler) ? handler(_settledValue) : handler);\n                        if (isPromiseLike(value)) {\n                            value.then(resolve, reject);\n                        }\n                        else if (handler) {\n                            resolve(value);\n                        }\n                        else if (_state === 3 ) {\n                            reject(value);\n                        }\n                        else {\n                            resolve(value);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n                if (_hasResolved) {\n                    _processQueue();\n                }\n            }, additionalArgs);\n            return thenPromise;\n        }\n        finally {\n            _currentPromiseId.pop();\n        }\n    }\n    function _catch(onRejected) {\n        return _then(undefined, onRejected);\n    }\n    function _finally(onFinally) {\n        var thenFinally = onFinally;\n        var catchFinally = onFinally;\n        if (isFunction(onFinally)) {\n            thenFinally = function (value) {\n                onFinally && onFinally();\n                return value;\n            };\n            catchFinally = function (reason) {\n                onFinally && onFinally();\n                throw reason;\n            };\n        }\n        return _then(thenFinally, catchFinally);\n    }\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    function _processQueue() {\n        if (_queue.length > 0) {\n            var pending = _queue.slice();\n            _queue = [];\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            processor(pending);\n        }\n    }\n    function _createSettleIfFn(newState, allowState) {\n        return function (theValue) {\n            if (_state === allowState) {\n                if (newState === 2  && isPromiseLike(theValue)) {\n                    _state = 1 ;\n                    theValue.then(_createSettleIfFn(2 , 1 ), _createSettleIfFn(3 , 1 ));\n                    return;\n                }\n                _state = newState;\n                _hasResolved = true;\n                _settledValue = theValue;\n                _processQueue();\n                if (!_handled && newState === 3  && !_unHandledRejectionHandler) {\n                    _unHandledRejectionHandler = scheduleTimeout(_notifyUnhandledRejection, _unhandledRejectionTimeout);\n                }\n            }\n        };\n    }\n    function _notifyUnhandledRejection() {\n        if (!_handled) {\n            _handled = true;\n            if (isNode()) {\n                process.emit(NODE_UNHANDLED_REJECTION, _settledValue, _thePromise);\n            }\n            else {\n                var gbl = getWindow() || getGlobal();\n                !_hasPromiseRejectionEvent && (_hasPromiseRejectionEvent = createCachedValue(safe((getInst), [STR_PROMISE + \"RejectionEvent\"]).v));\n                emitEvent(gbl, UNHANDLED_REJECTION, function (theEvt) {\n                    objDefine(theEvt, \"promise\", { g: function () { return _thePromise; } });\n                    theEvt.reason = _settledValue;\n                    return theEvt;\n                }, !!_hasPromiseRejectionEvent.v);\n            }\n        }\n    }\n    _thePromise = {\n        then: _then,\n        \"catch\": _catch,\n        finally: _finally\n    };\n    objDefineProp(_thePromise, \"state\", {\n        get: _strState\n    });\n    if (_promiseDebugEnabled) {\n        _addDebugState$1(_thePromise, _strState, function () { return objToString(_settledValue); }, function () { return _handled; });\n    }\n    if (hasSymbol()) {\n        _thePromise[getKnownSymbol(11 )] = \"IPromise\";\n    }\n    function _toString() {\n        return \"IPromise\" + (_promiseDebugEnabled ? \"[\" + _id + (!isUndefined(_parentId) ? (\":\" + _parentId) : \"\") + \"]\" : \"\") + \" \" + _strState() + (_hasResolved ? (\" - \" + dumpFnObj(_settledValue)) : \"\") + (\"\");\n    }\n    _thePromise.toString = _toString;\n    (function _initialize() {\n        if (!isFunction(executor)) {\n            throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpFnObj(executor));\n        }\n        var _rejectFn = _createSettleIfFn(3 , 0 );\n        try {\n            executor.call(_thePromise, _createSettleIfFn(2 , 0 ), _rejectFn);\n        }\n        catch (e) {\n            _rejectFn(e);\n        }\n    })();\n    return _thePromise;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllPromise(newPromise) {\n    return function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            try {\n                var values_1 = [];\n                var pending_1 = 1;\n                iterForOf(input, function (item, idx) {\n                    if (item) {\n                        pending_1++;\n                        doAwait(item, function (value) {\n                            values_1[idx] = value;\n                            if (--pending_1 === 0) {\n                                resolve(values_1);\n                            }\n                        }, reject);\n                    }\n                });\n                pending_1--;\n                if (pending_1 === 0) {\n                    resolve(values_1);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createResolvedPromise(newPromise) {\n    return function (value) {\n        var additionalArgs = arrSlice(arguments, 1);\n        if (isPromiseLike(value)) {\n            return value;\n        }\n        return newPromise(function (resolve) {\n            resolve(value);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRejectedPromise(newPromise) {\n    return function (reason) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (_resolve, reject) {\n            reject(reason);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllSettledPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var values = [];\n            var pending = 1;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (value.rejected) {\n                        values[idx] = {\n                            status: REJECTED,\n                            reason: value.reason\n                        };\n                    }\n                    else {\n                        values[idx] = {\n                            status: \"fulfilled\",\n                            value: value.value\n                        };\n                    }\n                    if (--pending === 0) {\n                        resolve(values);\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0) {\n                    resolve(values);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRacePromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var isDone = false;\n            function processItem(item) {\n                doAwaitResponse(item, function (value) {\n                    if (!isDone) {\n                        isDone = true;\n                        if (value.rejected) {\n                            reject(value.reason);\n                        }\n                        else {\n                            resolve(value.value);\n                        }\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAnyPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var theErros = [];\n            var pending = 1;\n            var isDone = false;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (!value.rejected) {\n                        isDone = true;\n                        resolve(value.value);\n                        return;\n                    }\n                    else {\n                        theErros[idx] = value.reason;\n                    }\n                    if (--pending === 0 && !isDone) {\n                        reject(_createAggregationError(theErros));\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0 && !isDone) {\n                    reject(_createAggregationError(theErros));\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n\nfunction syncItemProcessor(pending) {\n    arrForEach(pending, function (fn) {\n        try {\n            fn();\n        }\n        catch (e) {\n        }\n    });\n}\nfunction timeoutItemProcessor(timeout) {\n    var callbackTimeout = isNumber(timeout) ? timeout : 0;\n    return function (pending) {\n        scheduleTimeout(function () {\n            syncItemProcessor(pending);\n        }, callbackTimeout);\n    };\n}\nfunction idleItemProcessor(timeout) {\n    var options;\n    if (timeout >= 0) {\n        options = {\n            timeout: +timeout\n        };\n    }\n    return function (pending) {\n        scheduleIdleCallback(function (deadline) {\n            syncItemProcessor(pending);\n        }, options);\n    };\n}\n\nvar _allAsyncSettledCreator;\nvar _raceAsyncCreator;\nvar _anyAsyncCreator;\nfunction createAsyncPromise(executor, timeout) {\n    return _createPromise(createAsyncPromise, timeoutItemProcessor(timeout), executor, timeout);\n}\nvar createAsyncAllPromise = /*#__PURE__*/ _createAllPromise(createAsyncPromise);\nvar createAsyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createAsyncPromise);\nvar createAsyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createAsyncPromise);\nfunction createAsyncAllSettledPromise(input, timeout) {\n    !_allAsyncSettledCreator && (_allAsyncSettledCreator = _createAllSettledPromise(createAsyncPromise));\n    return _allAsyncSettledCreator.v(input, timeout);\n}\nfunction createAsyncRacePromise(values, timeout) {\n    !_raceAsyncCreator && (_raceAsyncCreator = _createRacePromise(createAsyncPromise));\n    return _raceAsyncCreator.v(values, timeout);\n}\nfunction createAsyncAnyPromise(values, timeout) {\n    !_anyAsyncCreator && (_anyAsyncCreator = _createAnyPromise(createAsyncPromise));\n    return _anyAsyncCreator.v(values, timeout);\n}\n\nvar _promiseCls;\nvar _allCreator;\nvar _allNativeSettledCreator;\nvar _raceNativeCreator;\nvar _anyNativeCreator;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createNativePromiseHelper(name, func) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    if (_promiseCls.v && _promiseCls.v[name]) {\n        return createCachedValue(function (input, timeout) {\n            return createNativePromise(function (resolve, reject) {\n                _promiseCls.v[name](input).then(resolve, reject);\n            });\n        });\n    }\n    return func();\n}\nfunction createNativePromise(executor, timeout) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    var PrmCls = _promiseCls.v;\n    if (!PrmCls) {\n        return createAsyncPromise(executor);\n    }\n    if (!isFunction(executor)) {\n        throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpObj(executor));\n    }\n    var _state = 0 ;\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    var thePromise = new PrmCls(function (resolve, reject) {\n        function _resolve(value) {\n            _state = 2 ;\n            resolve(value);\n        }\n        function _reject(reason) {\n            _state = 3 ;\n            reject(reason);\n        }\n        executor(_resolve, _reject);\n    });\n    objDefineProp(thePromise, \"state\", {\n        get: _strState\n    });\n    return thePromise;\n}\nfunction createNativeAllPromise(input, timeout) {\n    !_allCreator && (_allCreator = _createNativePromiseHelper(\"all\", function () { return createCachedValue(_createAllPromise(createNativePromise)); }));\n    return _allCreator.v(input, timeout);\n}\nvar createNativeResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createNativePromise);\nvar createNativeRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createNativePromise);\nfunction createNativeAllSettledPromise(input, timeout) {\n    !_allNativeSettledCreator && (_allNativeSettledCreator = _createNativePromiseHelper(\"allSettled\", function () { return _createAllSettledPromise(createNativePromise); }));\n    return _allNativeSettledCreator.v(input, timeout);\n}\nfunction createNativeRacePromise(values, timeout) {\n    !_raceNativeCreator && (_raceNativeCreator = _createNativePromiseHelper(\"race\", function () { return _createRacePromise(createNativePromise); }));\n    return _raceNativeCreator.v(values, timeout);\n}\nfunction createNativeAnyPromise(values, timeout) {\n    !_anyNativeCreator && (_anyNativeCreator = _createNativePromiseHelper(\"any\", function () { return _createAnyPromise(createNativePromise); }));\n    return _anyNativeCreator.v(values, timeout);\n}\n\nvar _allSyncSettledCreator;\nvar _raceSyncCreator;\nvar _anySyncCreator;\nfunction createSyncPromise(executor) {\n    return _createPromise(createSyncPromise, syncItemProcessor, executor);\n}\nvar createSyncAllPromise = /*#__PURE__*/ _createAllPromise(createSyncPromise);\nvar createSyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createSyncPromise);\nvar createSyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createSyncPromise);\nfunction createSyncAllSettledPromise(input, timeout) {\n    !_allSyncSettledCreator && (_allSyncSettledCreator = _createAllSettledPromise(createSyncPromise));\n    return _allSyncSettledCreator.v(input, timeout);\n}\nfunction createSyncRacePromise(values, timeout) {\n    !_raceSyncCreator && (_raceSyncCreator = _createRacePromise(createSyncPromise));\n    return _raceSyncCreator.v(values, timeout);\n}\nfunction createSyncAnyPromise(values, timeout) {\n    !_anySyncCreator && (_anySyncCreator = _createAnyPromise(createSyncPromise));\n    return _anySyncCreator.v(values, timeout);\n}\n\nvar _defaultIdleTimeout;\nvar _allIdleSettledCreator;\nvar _raceIdleCreator;\nvar _anyIdleCreator;\nfunction setDefaultIdlePromiseTimeout(idleDeadline) {\n    _defaultIdleTimeout = idleDeadline;\n}\nvar setDefaultIdleTimeout = ( setDefaultIdlePromiseTimeout);\nfunction createIdlePromise(executor, timeout) {\n    var theTimeout = isUndefined(timeout) ? _defaultIdleTimeout : timeout;\n    return _createPromise(createIdlePromise, idleItemProcessor(theTimeout), executor, theTimeout);\n}\nvar createIdleAllPromise = /*#__PURE__*/ _createAllPromise(createIdlePromise);\nvar createIdleResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createIdlePromise);\nvar createIdleRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createIdlePromise);\nfunction createIdleAllSettledPromise(input, timeout) {\n    !_allIdleSettledCreator && (_allIdleSettledCreator = _createAllSettledPromise(createIdlePromise));\n    return _allIdleSettledCreator.v(input, timeout);\n}\nfunction createIdleRacePromise(values, timeout) {\n    !_raceIdleCreator && (_raceIdleCreator = _createRacePromise(createIdlePromise));\n    return _raceIdleCreator.v(values, timeout);\n}\nfunction createIdleAnyPromise(values, timeout) {\n    !_anyIdleCreator && (_anyIdleCreator = _createAnyPromise(createIdlePromise));\n    return _anyIdleCreator.v(values, timeout);\n}\n\nvar _promiseCreator;\nvar _allSettledCreator;\nvar _raceCreator;\nvar _anyCreator;\nfunction setCreatePromiseImpl(creator) {\n    _promiseCreator = creator ? createCachedValue(creator) : null;\n}\nfunction createPromise(executor, timeout) {\n    !_promiseCreator && (_promiseCreator = createCachedValue(createNativePromise));\n    return _promiseCreator.v.call(this, executor, timeout);\n}\nvar createAllPromise = /*#__PURE__*/ _createAllPromise(createPromise);\nvar createResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createPromise);\nvar createRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createPromise);\nfunction createAllSettledPromise(input, timeout) {\n    !_allSettledCreator && (_allSettledCreator = _createAllSettledPromise(createPromise));\n    return _allSettledCreator.v(input, timeout);\n}\nfunction createRacePromise(values, timeout) {\n    !_raceCreator && (_raceCreator = _createRacePromise(createPromise));\n    return _raceCreator.v(values, timeout);\n}\nfunction createAnyPromise(values, timeout) {\n    !_anyCreator && (_anyCreator = _createAnyPromise(createPromise));\n    return _anyCreator.v(values, timeout);\n}\n\nfunction createTimeoutPromise(timeout, resolveReject, message) {\n    return createPromise(function (resolve, reject) {\n        scheduleTimeout(function () {\n            (resolveReject ? resolve : reject)(!isUndefined(message) ? message : \"Timeout of \" + timeout + \"ms exceeded\");\n        }, timeout);\n    });\n}\n\nfunction _doneChk(isDone, state, value, thisArg) {\n    var result = isDone;\n    state.res = value;\n    if (!result) {\n        if (state.isDone && isFunction(state.isDone)) {\n            return doAwait(state.isDone.call(thisArg, state), function (done) {\n                state.iter++;\n                return !!done;\n            });\n        }\n        else {\n            result = !!state.isDone;\n        }\n    }\n    state.iter++;\n    return result;\n}\nfunction doWhileAsync(callbackFn, isDoneFn, thisArg) {\n    var promise;\n    var resolve;\n    var reject = function (reason) {\n        isDone = true;\n        throw reason;\n    };\n    var isDone = false;\n    var state = {\n        st: utcNow(),\n        iter: 0,\n        isDone: isDoneFn || false\n    };\n    if (callbackFn) {\n        var _createPromise_1 = function () {\n            return createPromise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n        };\n        var _handleAsyncDone_1 = function (done) {\n            isDone = !!done;\n            if (!isDone) {\n                _processNext_1();\n            }\n            else {\n                resolve(state.res);\n            }\n        };\n        var _processNext_1 = function () {\n            while (!isDone) {\n                try {\n                    var cbResult = callbackFn.call(thisArg, state);\n                    if (isPromiseLike(cbResult)) {\n                        promise = promise || _createPromise_1();\n                        doAwait(cbResult, function (res) {\n                            try {\n                                doAwait(_doneChk(isDone, state, res, thisArg), _handleAsyncDone_1, reject);\n                            }\n                            catch (e) {\n                                reject(e);\n                            }\n                        }, reject);\n                        return promise;\n                    }\n                    else {\n                        var dnRes = _doneChk(isDone, state, cbResult, thisArg);\n                        if (isPromiseLike(dnRes)) {\n                            promise = promise || _createPromise_1();\n                            doAwait(dnRes, _handleAsyncDone_1, reject);\n                            return promise;\n                        }\n                        else {\n                            isDone = !!dnRes;\n                        }\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                    return promise;\n                }\n            }\n            if (isDone && resolve) {\n                resolve(state.res);\n            }\n            return promise || state.res;\n        };\n        return _processNext_1();\n    }\n}\n\nfunction arrForEachAsync(theArray, callbackFn, thisArg) {\n    if (theArray) {\n        var len_1 = getLength(theArray);\n        if (len_1) {\n            var isDone = function (state) {\n                if (state.iter >= len_1 || state.res === -1) {\n                    return true;\n                }\n            };\n            return doWhileAsync(function (state) {\n                var idx = state.iter;\n                if (idx in theArray) {\n                    return callbackFn.call(thisArg || theArray, theArray[idx], idx, theArray);\n                }\n            }, isDone);\n        }\n    }\n}\n\nvar _iterSymbol;\nvar _iterAsyncSymbol;\nfunction iterForOfAsync(iter, callbackFn, thisArg) {\n    var err;\n    var iterResult;\n    var theIter = iter;\n    function onFailed(failed) {\n        err = { e: failed };\n        if (theIter.throw) {\n            iterResult = null;\n            theIter.throw(err);\n        }\n        throw failed;\n    }\n    function onFinally() {\n        try {\n            if (iterResult && !iterResult[DONE]) {\n                theIter[RETURN] && theIter[RETURN](iterResult);\n            }\n        }\n        finally {\n            if (err) {\n                throw err.e;\n            }\n        }\n    }\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterAsyncSymbol && (_iterAsyncSymbol = createCachedValue(getKnownSymbol(0 )));\n            theIter = iter[_iterAsyncSymbol.v] ? iter[_iterAsyncSymbol.v]() : null;\n            if (!theIter) {\n                !_iterSymbol && (_iterSymbol = createCachedValue(getKnownSymbol(3 )));\n                theIter = iter[_iterSymbol.v] ? iter[_iterSymbol.v]() : null;\n            }\n        }\n        if (theIter && isIterator(theIter)) {\n            var result = void 0;\n            try {\n                result = doWhileAsync(function (state) {\n                    return doAwait(theIter.next(), function (res) {\n                        iterResult = res;\n                        if (!res[DONE]) {\n                            return fnCall(callbackFn, thisArg || theIter, iterResult[VALUE], state.iter, theIter);\n                        }\n                    }, function (reason) {\n                        state.isDone = true;\n                        onFailed(reason);\n                    });\n                }, function (state) {\n                    if (!iterResult || iterResult[DONE] || state.res === -1) {\n                        onFinally();\n                        return true;\n                    }\n                }, thisArg || theIter);\n                if (isPromiseLike(result)) {\n                    result = doFinally(result.catch(onFailed), onFinally);\n                }\n                return result;\n            }\n            catch (failed) {\n                onFailed(failed);\n            }\n            finally {\n                if (result && !isPromiseLike(result)) {\n                    onFinally();\n                }\n            }\n        }\n    }\n}\n\nvar REJECT = \"reject\";\nvar REJECTED_ERROR = \"Rejected\";\nvar _schedulerId = 0;\nvar _debugName;\nvar _debugIntState;\nvar _customErrors = {};\nfunction _rejectDone() {\n}\nfunction _createError(type, evt, message) {\n    !_customErrors[type] && (_customErrors[type] = createCustomError(type));\n    var now = utcNow();\n    return new (_customErrors[type])(\"Task [\".concat(evt.id, \"] \").concat(message || \"\", \"- \").concat((evt.st ? \"Running\" : \"Waiting\"), \": \").concat(_calcTime(now, evt.st || evt.cr)));\n}\nfunction _calcTime(now, start) {\n    return ((now - start) || \"0\") + \" ms\";\n}\nfunction _abortStaleTasks(taskQueue, staleTimeoutPeriod) {\n    var now = utcNow();\n    var expired = now - staleTimeoutPeriod;\n    arrForEach(taskQueue, function (evt) {\n        if (evt && !evt.rj && (evt.st && evt.st < expired) || (!evt.st && evt.cr && evt.cr < expired)) {\n            evt && evt[REJECT](evt.rj || _createError(\"Aborted\", evt, \"Stale \"));\n        }\n    });\n}\nfunction _removeTask(queue, taskDetail) {\n    var idx = arrIndexOf(queue, taskDetail);\n    if (idx !== -1) {\n        queue.splice(idx, 1);\n    }\n}\nfunction _addDebugState(theScheduler, nameFn, stateFn) {\n    _debugName = _debugName || { toString: function () { return \"[[SchedulerName]]\"; } };\n    _debugIntState = _debugIntState || { toString: function () { return \"[[SchedulerState]]\"; } };\n    objDefineProp(theScheduler, _debugName, { get: nameFn });\n    objDefineProp(theScheduler, _debugIntState, { get: stateFn });\n}\nfunction createTaskScheduler(newPromise, name) {\n    var _theTask;\n    var _running = [];\n    var _waiting = [];\n    var _staleTimeoutPeriod = 600000;\n    var _staleTimeoutCheckPeriod = _staleTimeoutPeriod / 10;\n    var _taskCount = 0;\n    var _schedulerName = (name ? (name + \".\") : \"\") + _schedulerId++;\n    var _blockedTimer;\n    newPromise = newPromise || createPromise;\n    var _startBlockedTimer = function () {\n        var hasTasks = (getLength(_running) + getLength(_waiting)) > 0;\n        if (_staleTimeoutPeriod > 0) {\n            if (!_blockedTimer) {\n                _blockedTimer = scheduleTimeout(function () {\n                    _abortStaleTasks(_running, _staleTimeoutPeriod);\n                    _abortStaleTasks(_waiting, _staleTimeoutPeriod);\n                    _blockedTimer && (_blockedTimer.enabled = ((getLength(_running) + getLength(_waiting)) > 0));\n                }, _staleTimeoutCheckPeriod);\n                _blockedTimer.unref();\n            }\n            _blockedTimer && (_blockedTimer.enabled = hasTasks);\n        }\n    };\n    var _queueTask = function (startAction, taskName, timeout) {\n        var _a;\n        var taskId = _schedulerName + \".\" + _taskCount++;\n        if (taskName) {\n            taskId += \"-(\" + taskName + \")\";\n        }\n        var newTask = (_a = {\n                id: taskId,\n                cr: utcNow(),\n                to: timeout\n            },\n            _a[REJECT] = function (reason) {\n                newTask.rj = reason || _createError(REJECTED_ERROR, newTask);\n                newTask[REJECT] = _rejectDone;\n            },\n            _a);\n        if (!_theTask) {\n            newTask.p = newPromise(_runTask(newTask, startAction));\n        }\n        else {\n            newTask.p = _waitForPreviousTask(newTask, _theTask, startAction);\n        }\n        _theTask = newTask;\n        return newTask.p;\n    };\n    var _runTask = function (taskDetail, startAction) {\n        taskDetail.st = utcNow();\n        _running.push(taskDetail);\n        _startBlockedTimer();\n        return function (onTaskResolve, onTaskReject) {\n            var _promiseReject = function (reason) {\n                taskDetail.rj = taskDetail.rj || reason || _createError(REJECTED_ERROR, taskDetail);\n                taskDetail[REJECT] = _rejectDone;\n                _doCleanup(taskDetail);\n                onTaskResolve = null;\n                onTaskReject && onTaskReject(reason);\n                onTaskReject = null;\n            };\n            var taskId = taskDetail.id;\n            if (taskDetail.rj) {\n                _promiseReject(taskDetail.rj);\n            }\n            else {\n                taskDetail[REJECT] = _promiseReject;\n                try {\n                    var startResult = startAction(taskId);\n                    if (taskDetail.to && isPromiseLike(startResult)) {\n                        taskDetail.t = scheduleTimeout(function () {\n                            _promiseReject(_createError(\"Timeout\", taskDetail));\n                        }, taskDetail.to);\n                    }\n                    doAwait(startResult, function (theResult) {\n                        _doCleanup(taskDetail);\n                        try {\n                            onTaskResolve && onTaskResolve(theResult);\n                        }\n                        catch (e) {\n                            onTaskReject && onTaskReject(e);\n                        }\n                        onTaskReject = null;\n                        onTaskResolve = null;\n                    }, _promiseReject);\n                }\n                catch (e) {\n                    _promiseReject(e);\n                }\n            }\n        };\n    };\n    var _waitForPreviousTask = function (taskDetail, prevTask, startAction) {\n        _waiting.push(taskDetail);\n        _startBlockedTimer();\n        return newPromise(function (onWaitResolve, onWaitReject) {\n            doAwaitResponse(prevTask.p, function () {\n                _removeTask(_waiting, taskDetail);\n                _runTask(taskDetail, startAction)(onWaitResolve, onWaitReject);\n            });\n        });\n    };\n    var _doCleanup = function (taskDetail) {\n        _removeTask(_running, taskDetail);\n        taskDetail.t && taskDetail.t.cancel();\n        taskDetail.t = null;\n        if (_theTask && _theTask === taskDetail) {\n            _theTask = null;\n            if (getLength(_running) + getLength(_waiting) === 0) {\n                _blockedTimer && _blockedTimer.cancel();\n                _blockedTimer = null;\n            }\n        }\n    };\n    var theScheduler = {\n        idle: true,\n        queue: _queueTask,\n        setStaleTimeout: function (staleTimeout, staleCheckPeriod) {\n            _blockedTimer && _blockedTimer.cancel();\n            _blockedTimer = null;\n            _staleTimeoutPeriod = staleTimeout;\n            _staleTimeoutCheckPeriod = staleCheckPeriod || staleTimeout / 10;\n            _startBlockedTimer();\n        }\n    };\n    objDefine(theScheduler, \"idle\", {\n        g: function () {\n            return getLength(_running) + getLength(_waiting) === 0;\n        }\n    });\n    _addDebugState(theScheduler, function () { return _schedulerName; }, function () {\n        return {\n            l: _theTask,\n            r: _running,\n            w: _waiting\n        };\n    });\n    return theScheduler;\n}\n\nvar toStringTagSymbol = getKnownSymbol(11 );\nvar PolyPromise = /*#__PURE__*/ (function () {\n    function PolyPromiseImpl(executor) {\n        this._$ = createAsyncPromise(executor);\n        if (toStringTagSymbol) {\n            this[toStringTagSymbol] = \"Promise\";\n        }\n        objDefineProp(this, \"state\", {\n            get: function () {\n                return this._$.state;\n            }\n        });\n    }\n    PolyPromiseImpl.all = createAsyncAllPromise;\n    PolyPromiseImpl.race = createAsyncRacePromise;\n    PolyPromiseImpl.any = createAsyncAnyPromise;\n    PolyPromiseImpl.reject = createAsyncRejectedPromise;\n    PolyPromiseImpl.resolve = createAsyncResolvedPromise;\n    PolyPromiseImpl.allSettled = createAsyncAllSettledPromise;\n    var theProto = PolyPromiseImpl.prototype;\n    theProto.then = function (onResolved, onRejected) {\n        return this._$.then(onResolved, onRejected);\n    };\n    theProto.catch = function (onRejected) {\n        return this._$.catch(onRejected);\n    };\n    theProto.finally = function (onfinally) {\n        return this._$.finally(onfinally);\n    };\n    return PolyPromiseImpl;\n}());\n\nexport { PolyPromise, arrForEachAsync, createAllPromise, createAllSettledPromise, createAnyPromise, createAsyncAllPromise, createAsyncAllSettledPromise, createAsyncAnyPromise, createAsyncPromise, createAsyncRacePromise, createAsyncRejectedPromise, createAsyncResolvedPromise, createIdleAllPromise, createIdleAllSettledPromise, createIdleAnyPromise, createIdlePromise, createIdleRacePromise, createIdleRejectedPromise, createIdleResolvedPromise, createNativeAllPromise, createNativeAllSettledPromise, createNativeAnyPromise, createNativePromise, createNativeRacePromise, createNativeRejectedPromise, createNativeResolvedPromise, createPromise, createRacePromise, createRejectedPromise, createResolvedPromise, createSyncAllPromise, createSyncAllSettledPromise, createSyncAnyPromise, createSyncPromise, createSyncRacePromise, createSyncRejectedPromise, createSyncResolvedPromise, createTaskScheduler, createTimeoutPromise, doAwait, doAwaitResponse, doFinally, doWhileAsync, iterForOfAsync, setCreatePromiseImpl, setDefaultIdlePromiseTimeout, setDefaultIdleTimeout, setPromiseDebugState };\n//# sourceMappingURL=ts-async.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.1';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrSlice, getLength } from \"@nevware21/ts-utils\";\r\nimport { _DYN_UNLOAD } from \"../__DynamicConstants\";\r\n/**\r\n * Run the unload function of the target object if it exists\r\n * @param target - The target object that contains the unload function\r\n * @param isAsync - The caller identifies whether it is expecting the operation to complete synchronously or asynchronously. Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @returns The result of the target function\r\n */\r\nexport function runTargetUnload(target, isAsync) {\r\n    if (target && target[_DYN_UNLOAD /* @min:%2eunload */]) {\r\n        return target[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n    }\r\n}\r\n/**\r\n * Call the unload function on all targets handling any returned [IPromise](https://nevware21.github.io/ts-async/typedoc/interfaces/IPromise.html)\r\n * / Promise before calling the next targets unload\r\n * @param targets - An array of the targets to unload\r\n * @param isAsync - The caller identifies whether it is expecting the operations to complete synchronously or asynchronously.  Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @param done - Optional callback function to call once all of the unload functions have been called.\r\n */\r\nexport function doUnloadAll(targets, isAsync, done) {\r\n    var result;\r\n    if (!done) {\r\n        result = createPromise(function (resolved) {\r\n            done = resolved;\r\n        });\r\n    }\r\n    if (targets && getLength(targets) > 0) {\r\n        doAwaitResponse(runTargetUnload(targets[0], isAsync), function () {\r\n            doUnloadAll(arrSlice(targets, 1), isAsync, done);\r\n        });\r\n    }\r\n    else {\r\n        done();\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=AsyncUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var ChannelControllerPriority = 500;\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n// export const SampleRate = \"sampleRate\";\r\n// export const ProcessLegacy = \"ProcessLegacy\";\r\n// export const HttpMethod = \"http.method\";\r\n// export const DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n// export const DEFAULT_BREEZE_PATH = \"/v2/track\";\r\n// export const strNotSpecified = \"not_specified\";\r\n// export const strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = true,\r\n        _a.v = defaultValue,\r\n        _a;\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { arrForEach, arrIndexOf, dumpObj, getDocument, getLazy, getNavigator, isArray, isFunction, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, strEndsWith, strIndexOf, strLeft, strSubstring, strTrim, utcNow } from \"@nevware21/ts-utils\";\r\nimport { cfgDfMerge } from \"../Config/ConfigDefaultHelpers\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ENABLED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROTOCOL, _DYN_SET_DF, _DYN_SPLIT, _DYN_UNLOAD, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getLocation, isIE } from \"./EnvUtils\";\r\nimport { getExceptionName, isNotNullOrUndefined, setValue, strContains } from \"./HelperFuncs\";\r\nimport { STR_DOMAIN, STR_EMPTY, STR_PATH, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc;\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n// // `isCookieUseDisabled` is deprecated, so explicitly casting as a key of IConfiguration to avoid typing error\r\n// // when both isCookieUseDisabled and disableCookiesUsage are used disableCookiesUsage will take precedent, which is\r\n// // why its listed first\r\n/**\r\n * Set the supported dynamic config values as undefined (or an empty object) so that\r\n * any listeners will be informed of any changes.\r\n * Explicitly NOT including the deprecated `isCookieUseDisabled` as we don't want to support\r\n * the v1 deprecated field as dynamic for updates\r\n */\r\nvar rootDefaultConfig = (_a = {\r\n        cookieCfg: cfgDfMerge((_b = {},\r\n            _b[STR_DOMAIN] = { fb: \"cookieDomain\", dfVal: isNotNullOrUndefined },\r\n            _b.path = { fb: \"cookiePath\", dfVal: isNotNullOrUndefined },\r\n            _b.enabled = UNDEFINED_VALUE,\r\n            _b.ignoreCookies = UNDEFINED_VALUE,\r\n            _b.blockedCookies = UNDEFINED_VALUE,\r\n            _b)),\r\n        cookieDomain: UNDEFINED_VALUE,\r\n        cookiePath: UNDEFINED_VALUE\r\n    },\r\n    _a[strDisableCookiesUsage] = UNDEFINED_VALUE,\r\n    _a);\r\nfunction _getDoc() {\r\n    !_doc && (_doc = getLazy(function () { return getDocument(); }));\r\n}\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nfunction _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _isIgnoredCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.ignoreCookies)) {\r\n        return arrIndexOf(cookieMgrCfg.ignoreCookies, name) !== -1;\r\n    }\r\n    return false;\r\n}\r\nfunction _isBlockedCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.blockedCookies)) {\r\n        if (arrIndexOf(cookieMgrCfg.blockedCookies, name) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return _isIgnoredCookie(cookieMgrCfg, name);\r\n}\r\nfunction _isCfgEnabled(rootConfig, cookieMgrConfig) {\r\n    var isCfgEnabled = cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */];\r\n    if (isNullOrUndefined(isCfgEnabled)) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        // This field is deprecated and dynamic updates will not be fully supported\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        // If this value is defined it takes precedent over the above\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        // Not setting the cookieMgrConfig.enabled as that will update (set) the global dynamic config\r\n        // So future \"updates\" then may not be as expected\r\n        isCfgEnabled = cookieEnabled;\r\n    }\r\n    return isCfgEnabled;\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core\r\n * @param config\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config.cookieCfg;\r\n        if (cookieCfg && cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {})[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var _a;\r\n    var cookieMgrConfig;\r\n    var _path;\r\n    var _domain;\r\n    var unloadHandler;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled;\r\n    var _getCookieFn;\r\n    var _setCookieFn;\r\n    var _delCookieFn;\r\n    // Make sure the root config is dynamic as it may be the global config\r\n    rootConfig = createDynamicConfig(rootConfig || _globalCookieConfig, null, logger).cfg;\r\n    // Will get recalled if the referenced configuration is changed\r\n    unloadHandler = onConfigChange(rootConfig, function (details) {\r\n        // Make sure the root config has all of the the defaults to the root config to ensure they are dynamic\r\n        details[_DYN_SET_DF /* @min:%2esetDf */](details.cfg, rootDefaultConfig);\r\n        // Create and apply the defaults to the cookieCfg element\r\n        cookieMgrConfig = details.ref(details.cfg, \"cookieCfg\"); // details.setDf(details.cfg.cookieCfg, defaultConfig);\r\n        _path = cookieMgrConfig[STR_PATH /* @min:%2epath */] || \"/\";\r\n        _domain = cookieMgrConfig[STR_DOMAIN /* @min:%2edomain */];\r\n        // Explicitly checking against false, so that setting to undefined will === true\r\n        _enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false;\r\n        _getCookieFn = cookieMgrConfig.getCookie || _getCookieValue;\r\n        _setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n        _delCookieFn = cookieMgrConfig.delCookie || _setCookieValue;\r\n    }, logger);\r\n    var cookieMgr = (_a = {\r\n            isEnabled: function () {\r\n                var enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false && _enabled && areCookiesSupported(logger);\r\n                // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n                // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n                var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n                if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                    // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                    // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                    enabled = _isMgrEnabled(gblManager);\r\n                }\r\n                return enabled;\r\n            },\r\n            setEnabled: function (value) {\r\n                // Explicitly checking against false, so that setting to undefined will === true\r\n                _enabled = value !== false;\r\n                cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */] = value;\r\n            },\r\n            set: function (name, value, maxAgeSec, domain, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr) && !_isBlockedCookie(cookieMgrConfig, name)) {\r\n                    var values = {};\r\n                    var theValue = strTrim(value || STR_EMPTY);\r\n                    var idx = strIndexOf(theValue, \";\");\r\n                    if (idx !== -1) {\r\n                        theValue = strTrim(strLeft(value, idx));\r\n                        values = _extractParts(strSubstring(value, idx + 1));\r\n                    }\r\n                    // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                    setValue(values, STR_DOMAIN, domain || _domain, isTruthy, isUndefined);\r\n                    if (!isNullOrUndefined(maxAgeSec)) {\r\n                        var _isIE = isIE();\r\n                        if (isUndefined(values[strExpires])) {\r\n                            var nowMs = utcNow();\r\n                            // Only add expires if not already present\r\n                            var expireMs = nowMs + (maxAgeSec * 1000);\r\n                            // Sanity check, if zero or -ve then ignore\r\n                            if (expireMs > 0) {\r\n                                var expiry = new Date();\r\n                                expiry.setTime(expireMs);\r\n                                setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || STR_EMPTY, isTruthy);\r\n                            }\r\n                        }\r\n                        if (!_isIE) {\r\n                            // Only replace if not already present\r\n                            setValue(values, \"max-age\", STR_EMPTY + maxAgeSec, null, isUndefined);\r\n                        }\r\n                    }\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1[_DYN_PROTOCOL /* @min:%2eprotocol */] === \"https:\") {\r\n                        setValue(values, \"secure\", null, null, isUndefined);\r\n                        // Only set same site if not also secure\r\n                        if (_allowUaSameSite === null) {\r\n                            _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {})[_DYN_USER_AGENT /* @min:%2euserAgent */]);\r\n                        }\r\n                        if (_allowUaSameSite) {\r\n                            setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                        }\r\n                    }\r\n                    setValue(values, STR_PATH, path || _path, null, isUndefined);\r\n                    //let setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                    _setCookieFn(name, _formatCookieValue(theValue, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            },\r\n            get: function (name) {\r\n                var value = STR_EMPTY;\r\n                if (_isMgrEnabled(cookieMgr) && !_isIgnoredCookie(cookieMgrConfig, name)) {\r\n                    value = _getCookieFn(name);\r\n                }\r\n                return value;\r\n            },\r\n            del: function (name, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr)) {\r\n                    // Only remove the cookie if the manager and cookie support has not been disabled\r\n                    result = cookieMgr.purge(name, path);\r\n                }\r\n                return result;\r\n            },\r\n            purge: function (name, path) {\r\n                var _a;\r\n                var result = false;\r\n                if (areCookiesSupported(logger)) {\r\n                    // Setting the expiration date in the past immediately removes the cookie\r\n                    var values = (_a = {},\r\n                        _a[STR_PATH] = path ? path : \"/\",\r\n                        _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                        _a);\r\n                    if (!isIE()) {\r\n                        // Set max age to expire now\r\n                        values[\"max-age\"] = \"0\";\r\n                    }\r\n                    // let delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                    _delCookieFn(name, _formatCookieValue(STR_EMPTY, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        _a[_DYN_UNLOAD /* @min:unload */] = function (isAsync) {\r\n            unloadHandler && unloadHandler.rm();\r\n            unloadHandler = null;\r\n        },\r\n        _a);\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        !_doc && _getDoc();\r\n        try {\r\n            var doc = _doc.v || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 68 /* _eInternalMessageId.CannotAccessCookie */, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue[_DYN_LENGTH /* @min:%2elength */]) {\r\n        var parts = strTrim(theValue)[_DYN_SPLIT /* @min:%2esplit */](\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || STR_EMPTY);\r\n            if (thePart) {\r\n                var idx = strIndexOf(thePart, \"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(strLeft(thePart, idx))] = strTrim(strSubstring(thePart, idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || STR_EMPTY;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : STR_EMPTY);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = STR_EMPTY;\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        var theCookie = _doc.v[strCookie] || STR_EMPTY;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || STR_EMPTY);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        _doc.v[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, objDefine, safe, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_DATA, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SPLICE, _DYN_UNLOAD, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_OFFLINE_DROP, STR_OFFLINE_SENT, STR_OFFLINE_STORE, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar defaultValues = {\r\n    perfEvtsSendAll: false\r\n};\r\nfunction _runScheduledListeners(asyncNotifications) {\r\n    asyncNotifications.h = null;\r\n    var callbacks = asyncNotifications.cb;\r\n    asyncNotifications.cb = [];\r\n    arrForEach(callbacks, function (cb) {\r\n        // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n        safe(cb.fn, [cb.arg]);\r\n    });\r\n}\r\n// This function is used to combine the logic of running the listeners and handling the async notifications so that they don't\r\n// create multiple timers if there are multiple async listeners.\r\nfunction _runListeners(listeners, name, asyncNotifications, callback) {\r\n    arrForEach(listeners, function (listener) {\r\n        if (listener && listener[name]) {\r\n            if (asyncNotifications) {\r\n                // Schedule the callback to be called after the current call stack has cleared.\r\n                asyncNotifications.cb[_DYN_PUSH /* @min:%2epush */]({\r\n                    fn: callback,\r\n                    arg: listener\r\n                });\r\n                asyncNotifications.h = asyncNotifications.h || scheduleTimeout(_runScheduledListeners, 0, asyncNotifications);\r\n            }\r\n            else {\r\n                // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n                safe(callback, [listener]);\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var perfEvtsSendAll;\r\n        var unloadHandler;\r\n        var _listeners = [];\r\n        var _asyncNotifications = {\r\n            h: null,\r\n            cb: []\r\n        };\r\n        var cfgHandler = createDynamicConfig(config, defaultValues);\r\n        unloadHandler = cfgHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n            perfEvtsSendAll = !!details.cfg.perfEvtsSendAll;\r\n        });\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            objDefine(_self, \"listeners\", {\r\n                g: function () { return _listeners; }\r\n            });\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _listeners[_DYN_PUSH /* @min:%2epush */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - AWTNotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                var index = arrIndexOf(_listeners, listener);\r\n                while (index > -1) {\r\n                    _listeners[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                    index = arrIndexOf(_listeners, listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param events - The array of events that have been sent.\r\n             */\r\n            _self[STR_EVENTS_SENT /* @min:%2eeventsSent */] = function (events) {\r\n                _runListeners(_listeners, STR_EVENTS_SENT, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_SENT /* @min:%2eeventsSent */](events);\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param events - The array of events that have been discarded by the SDK.\r\n             * @param reason - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */] = function (events, reason) {\r\n                _runListeners(_listeners, STR_EVENTS_DISCARDED, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */](events, reason);\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param sendReason - The reason why the event batch is being sent.\r\n             * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */] = function (sendReason, isAsync) {\r\n                _runListeners(_listeners, STR_EVENTS_SEND_REQUEST, isAsync ? _asyncNotifications : null, function (listener) {\r\n                    listener[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendReason, isAsync);\r\n                });\r\n            };\r\n            _self[STR_PERF_EVENT /* @min:%2eperfEvent */] = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */]()) {\r\n                        _runListeners(_listeners, STR_PERF_EVENT, null, function (listener) {\r\n                            if (perfEvent[_DYN_IS_ASYNC /* @min:%2eisAsync */]) {\r\n                                scheduleTimeout(function () { return listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent); }, 0);\r\n                            }\r\n                            else {\r\n                                listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */] = function (events) {\r\n                if (events && events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_STORE, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */](events);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */] = function (batch) {\r\n                if (batch && batch[_DYN_DATA /* @min:%2edata */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_SENT, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */](batch);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */] = function (cnt, reason) {\r\n                if (cnt > 0) {\r\n                    var rn_1 = reason || 0; // default is unknown\r\n                    _runListeners(_listeners, STR_OFFLINE_DROP, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */](cnt, rn_1);\r\n                    });\r\n                }\r\n            };\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                var _finishUnload = function () {\r\n                    unloadHandler && unloadHandler.rm();\r\n                    unloadHandler = null;\r\n                    _listeners = [];\r\n                    // Clear any async listener\r\n                    _asyncNotifications.h && _asyncNotifications.h[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                    _asyncNotifications.h = null;\r\n                    _asyncNotifications.cb = [];\r\n                };\r\n                var waiting;\r\n                _runListeners(_listeners, \"unload\", null, function (listener) {\r\n                    var asyncUnload = listener[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n                    if (asyncUnload) {\r\n                        if (!waiting) {\r\n                            waiting = [];\r\n                        }\r\n                        waiting[_DYN_PUSH /* @min:%2epush */](asyncUnload);\r\n                    }\r\n                });\r\n                if (waiting) {\r\n                    return createPromise(function (resolve) {\r\n                        return doAwaitResponse(createAllPromise(waiting), function () {\r\n                            _finishUnload();\r\n                            resolve();\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    _finishUnload();\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for NotificationManager.prototype.addNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.removeNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.eventsSent.\r\n// Removed Stub for NotificationManager.prototype.eventsDiscarded.\r\n// Removed Stub for NotificationManager.prototype.eventsSendRequest.\r\n// Removed Stub for NotificationManager.prototype.perfEvent.\r\n// Removed Stub for NotificationManager.prototype.unload.\r\n// Removed Stub for NotificationManager.prototype.offlineEventsStored.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchSent.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchDrop.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    NotificationManager.__ieDyn=1;\n\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = utcNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { random32 } from \"./RandomHelper\";\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nexport function newGuid() {\r\n    var uuid = generateW3CId();\r\n    return strSubstring(uuid, 0, 8) + \"-\" + strSubstring(uuid, 8, 12) + \"-\" + strSubstring(uuid, 12, 16) + \"-\" + strSubstring(uuid, 16, 20) + \"-\" + strSubstring(uuid, 20);\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value[_DYN_LENGTH /* @min:%2elength */];\r\n        var start = len - search[_DYN_LENGTH /* @min:%2elength */];\r\n        return strSubstring(value, start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = STR_EMPTY, tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return strSubstr(oct, 0, 8) + strSubstr(oct, 9, 4) + \"4\" + strSubstr(oct, 13, 3) + clockSequenceHi + strSubstr(oct, 16, 3) + strSubstr(oct, 19, 12);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, isArray, isString, strLeft, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_ATTRIBUTE, _DYN_LENGTH, _DYN_PUSH, _DYN_SPAN_ID, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_VERSION } from \"../__DynamicConstants\";\r\nimport { generateW3CId } from \"./CoreUtils\";\r\nimport { findMetaTag, findNamedServerTiming } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// using {0,16} for leading and trailing whitespace just to constrain the possible runtime of a random string\r\nvar TRACE_PARENT_REGEX = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})(-[^\\s]{1,64})?$/i;\r\nvar DEFAULT_VERSION = \"00\";\r\nvar INVALID_VERSION = \"ff\";\r\nvar INVALID_TRACE_ID = \"00000000000000000000000000000000\";\r\nvar INVALID_SPAN_ID = \"0000000000000000\";\r\nvar SAMPLED_FLAG = 0x01;\r\nfunction _isValid(value, len, invalidValue) {\r\n    if (value && value[_DYN_LENGTH /* @min:%2elength */] === len && value !== invalidValue) {\r\n        return !!value.match(/^[\\da-f]*$/i);\r\n    }\r\n    return false;\r\n}\r\nfunction _formatValue(value, len, defValue) {\r\n    if (_isValid(value, len)) {\r\n        return value;\r\n    }\r\n    return defValue;\r\n}\r\nfunction _formatFlags(value) {\r\n    if (isNaN(value) || value < 0 || value > 255) {\r\n        value = 0x01;\r\n    }\r\n    var result = value.toString(16);\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < 2) {\r\n        result = \"0\" + result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new ITraceParent instance using the provided values.\r\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\r\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\r\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\r\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\r\n * @returns\r\n */\r\nexport function createTraceParent(traceId, spanId, flags, version) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = _isValid(version, 2, INVALID_VERSION) ? version : DEFAULT_VERSION,\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = isValidTraceId(traceId) ? traceId : generateW3CId(),\r\n        _a[_DYN_SPAN_ID /* @min:spanId */] = isValidSpanId(spanId) ? spanId : strLeft(generateW3CId(), 16),\r\n        _a.traceFlags = flags >= 0 && flags <= 0xFF ? flags : 1,\r\n        _a;\r\n}\r\n/**\r\n * Attempt to parse the provided string as a W3C TraceParent header value (https://www.w3.org/TR/trace-context/#traceparent-header)\r\n *\r\n * @param value - The value to be parsed\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function parseTraceParent(value, selectIdx) {\r\n    var _a;\r\n    if (!value) {\r\n        // Don't pass a null/undefined or empty string\r\n        return null;\r\n    }\r\n    if (isArray(value)) {\r\n        // The value may have been encoded on the page into an array so handle this automatically\r\n        value = value[0] || \"\";\r\n    }\r\n    if (!value || !isString(value) || value[_DYN_LENGTH /* @min:%2elength */] > 8192) {\r\n        // limit potential processing based on total length\r\n        return null;\r\n    }\r\n    if (value.indexOf(\",\") !== -1) {\r\n        var values = value[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        value = values[selectIdx > 0 && values[_DYN_LENGTH /* @min:%2elength */] > selectIdx ? selectIdx : 0];\r\n    }\r\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\r\n    var match = TRACE_PARENT_REGEX.exec(strTrim(value));\r\n    if (!match || // No match\r\n        match[1] === INVALID_VERSION || // version ff is forbidden\r\n        match[2] === INVALID_TRACE_ID || // All zeros is considered to be invalid\r\n        match[3] === INVALID_SPAN_ID) { // All zeros is considered to be invalid\r\n        return null;\r\n    }\r\n    return _a = {\r\n            version: (match[1] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            traceId: (match[2] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            spanId: (match[3] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()\r\n        },\r\n        _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = parseInt(match[4], 16),\r\n        _a;\r\n}\r\n/**\r\n * Is the provided W3c Trace Id a valid string representation, it must be a 32-character string\r\n * of lowercase hexadecimal characters for example, 4bf92f3577b34da6a3ce929d0e0e4736.\r\n * If all characters as zero (00000000000000000000000000000000) it will be considered an invalid value.\r\n * @param value - The W3c trace Id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidTraceId(value) {\r\n    return _isValid(value, 32, INVALID_TRACE_ID);\r\n}\r\n/**\r\n * Is the provided W3c span id (aka. parent id) a valid string representation, it must be a 16-character\r\n * string of lowercase hexadecimal characters, for example, 00f067aa0ba902b7.\r\n * If all characters are zero (0000000000000000) this is considered an invalid value.\r\n * @param value - The W3c span id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidSpanId(value) {\r\n    return _isValid(value, 16, INVALID_SPAN_ID);\r\n}\r\n/**\r\n * Validates that the provided ITraceParent instance conforms to the currently supported specifications\r\n * @param value\r\n * @returns\r\n */\r\nexport function isValidTraceParent(value) {\r\n    if (!value ||\r\n        !_isValid(value[_DYN_VERSION /* @min:%2eversion */], 2, INVALID_VERSION) ||\r\n        !_isValid(value[_DYN_TRACE_ID /* @min:%2etraceId */], 32, INVALID_TRACE_ID) ||\r\n        !_isValid(value[_DYN_SPAN_ID /* @min:%2espanId */], 16, INVALID_SPAN_ID) ||\r\n        !_isValid(_formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]), 2)) {\r\n        // Each known field must contain a valid value\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Is the parsed traceParent indicating that the trace is currently sampled.\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function isSampledFlag(value) {\r\n    if (isValidTraceParent(value)) {\r\n        return (value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] & SAMPLED_FLAG) === SAMPLED_FLAG;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Format the ITraceParent value as a string using the supported and know version formats.\r\n * So even if the passed traceParent is a later version the string value returned from this\r\n * function will convert it to only the known version formats.\r\n * This currently only supports version \"00\" and invalid \"ff\"\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function formatTraceParent(value) {\r\n    if (value) {\r\n        // Special Note: This only supports formatting as version 00, future versions should encode any known supported version\r\n        // So parsing a future version will populate the correct version value but reformatting will reduce it to version 00.\r\n        var flags = _formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]);\r\n        if (!_isValid(flags, 2)) {\r\n            flags = \"01\";\r\n        }\r\n        var version = value[_DYN_VERSION /* @min:%2eversion */] || DEFAULT_VERSION;\r\n        if (version !== \"00\" && version !== \"ff\") {\r\n            // Reduce version to \"00\"\r\n            version = DEFAULT_VERSION;\r\n        }\r\n        // Format as version 00\r\n        return \"\".concat(version.toLowerCase(), \"-\").concat(_formatValue(value.traceId, 32, INVALID_TRACE_ID).toLowerCase(), \"-\").concat(_formatValue(value.spanId, 16, INVALID_SPAN_ID).toLowerCase(), \"-\").concat(flags.toLowerCase());\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function findW3cTraceParent(selectIdx) {\r\n    var name = \"traceparent\";\r\n    var traceParent = parseTraceParent(findMetaTag(name), selectIdx);\r\n    if (!traceParent) {\r\n        traceParent = parseTraceParent(findNamedServerTiming(name), selectIdx);\r\n    }\r\n    return traceParent;\r\n}\r\n/**\r\n * Find all script tags in the provided document and return the information about them.\r\n * @param doc\r\n * @returns\r\n */\r\nexport function findAllScripts(doc) {\r\n    var scripts = doc.getElementsByTagName(\"script\");\r\n    var result = [];\r\n    arrForEach(scripts, function (script) {\r\n        var src = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"src\");\r\n        if (src) {\r\n            var crossOrigin = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"crossorigin\");\r\n            var async = script.hasAttribute(\"async\") === true;\r\n            var defer = script.hasAttribute(\"defer\") === true;\r\n            var referrerPolicy = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"referrerpolicy\");\r\n            var info = { url: src };\r\n            if (crossOrigin) {\r\n                info.crossOrigin = crossOrigin;\r\n            }\r\n            if (async) {\r\n                info.async = async;\r\n            }\r\n            if (defer) {\r\n                info.defer = defer;\r\n            }\r\n            if (referrerPolicy) {\r\n                info.referrerPolicy = referrerPolicy;\r\n            }\r\n            result[_DYN_PUSH /* @min:%2epush */](info);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//# sourceMappingURL=W3cTraceParent.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_DF, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \r\n// \r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nfunction _addInitializer(_initializers, id, telemetryInitializer) {\r\n    var theInitializer = {\r\n        id: id,\r\n        fn: telemetryInitializer\r\n    };\r\n    arrAppend(_initializers, theInitializer);\r\n    var handler = {\r\n        remove: function () {\r\n            arrForEach(_initializers, function (initializer, idx) {\r\n                if (initializer.id === theInitializer.id) {\r\n                    _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return handler;\r\n}\r\nfunction _runInitializers(_initializers, item, logger) {\r\n    var doNotSendItem = false;\r\n    var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n    for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n        var telemetryInitializer = _initializers[i];\r\n        if (telemetryInitializer) {\r\n            try {\r\n                if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                    doNotSendItem = true;\r\n                    break;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // log error but dont stop executing rest of the telemetry initializers\r\n                // doNotSendItem = true;\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Telemetry initializer failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n            }\r\n        }\r\n    }\r\n    return !doNotSendItem;\r\n}\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                return _addInitializer(_initializers, _id++, telemetryInitializer);\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                if (_runInitializers(_initializers, item, itemCtx ? itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]() : _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]())) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryInitializerPlugin.__ieDyn=1;\n\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport { __spreadArrayFn as __spreadArray } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllSettledPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrAppend, arrForEach, arrIndexOf, createTimeout, deepExtend, hasDocument, isFunction, isNullOrUndefined, isPlainObject, isPromiseLike, objDeepFreeze, objDefine, objForEachKey, objFreeze, objHasOwn, scheduleTimeout, throwError } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { ActiveStatus } from \"../JavaScriptSDK.Enums/InitActiveStatusEnum\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_CREATE_NEW, _DYN_ENABLED, _DYN_GET_NOTIFY_MGR, _DYN_GET_PLUGIN, _DYN_GET_PROCESS_TEL_CONT2, _DYN_IDENTIFIER, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_I_KEY, _DYN_LENGTH, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_NAME, _DYN_NOTIFY, _DYN_ON_COMPLETE, _DYN_POLL_INTERNAL_LOGS, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SET_DF, _DYN_SPLICE, _DYN_STOP_POLLING_INTERNA3, _DYN_TEARDOWN, _DYN_TIME, _DYN_UNLOAD, _DYN_VALUE, _DYN_VERSION, _DYN_WATCH, _DYN__INACTIVE } from \"../__DynamicConstants\";\r\nimport { doUnloadAll, runTargetUnload } from \"./AsyncUtils\";\r\nimport { ChannelControllerPriority } from \"./Constants\";\r\nimport { createCookieMgr } from \"./CookieMgr\";\r\nimport { createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { getDebugListener } from \"./DbgExtensionUtils\";\r\nimport { DiagnosticLogger, _InternalLogMessage, _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getSetValue, isNotNullOrUndefined, proxyFunctionAs, proxyFunctions, toISOString } from \"./HelperFuncs\";\r\nimport { STR_CHANNELS, STR_CORE, STR_CREATE_PERF_MGR, STR_DISABLED, STR_EMPTY, STR_EVENTS_DISCARDED, STR_EXTENSIONS, STR_EXTENSION_CONFIG, STR_GET_PERF_MGR, STR_PRIORITY, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { PerfManager, doPerf, getGblPerfMgr } from \"./PerfManager\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext, createTelemetryProxyChain } from \"./ProcessTelemetryContext\";\r\nimport { _getPluginState, createDistributedTraceContext, initializePlugins, sortPlugins } from \"./TelemetryHelpers\";\r\nimport { TelemetryInitializerPlugin } from \"./TelemetryInitializerPlugin\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strValidationError = \"Plugins must provide initialize method\";\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar strSdkUnloadingError = \"SDK is still unloading...\";\r\nvar strSdkNotInitialized = \"SDK is not initialized\";\r\nvar maxInitQueueSize = 100;\r\nvar maxInitTimeout = 50000;\r\n// const strPluginUnloadFailed = \"Failed to unload plugin\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze((_a = {\r\n        cookieCfg: {}\r\n    },\r\n    _a[STR_EXTENSIONS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_CHANNELS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_EXTENSION_CONFIG] = { ref: true, v: {} },\r\n    _a[STR_CREATE_PERF_MGR] = UNDEFINED_VALUE,\r\n    _a.loggingLevelConsole = 0 /* eLoggingSeverity.DISABLED */,\r\n    _a.diagnosticLogInterval = UNDEFINED_VALUE,\r\n    _a));\r\n/**\r\n * Helper to create the default performance manager\r\n * @param core\r\n * @param notificationMgr\r\n */\r\nfunction _createPerfManager(core, notificationMgr) {\r\n    return new PerfManager(notificationMgr);\r\n}\r\nfunction _validateExtensions(logger, channelPriority, allExtensions) {\r\n    var _a;\r\n    // Concat all available extensions\r\n    var coreExtensions = [];\r\n    var channels = [];\r\n    // Check if any two extensions have the same priority, then warn to console\r\n    // And extract the local extensions from the\r\n    var extPriorities = {};\r\n    // Extension validation\r\n    arrForEach(allExtensions, function (ext) {\r\n        // Check for ext.initialize\r\n        if (isNullOrUndefined(ext) || isNullOrUndefined(ext[_DYN_INITIALIZE /* @min:%2einitialize */])) {\r\n            throwError(strValidationError);\r\n        }\r\n        var extPriority = ext[STR_PRIORITY /* @min:%2epriority */];\r\n        var identifier = ext[_DYN_IDENTIFIER /* @min:%2eidentifier */];\r\n        if (ext && extPriority) {\r\n            if (!isNullOrUndefined(extPriorities[extPriority])) {\r\n                _warnToConsole(logger, \"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n            }\r\n            else {\r\n                // set a value\r\n                extPriorities[extPriority] = identifier;\r\n            }\r\n        }\r\n        // Split extensions to core and channels\r\n        if (!extPriority || extPriority < channelPriority) {\r\n            // Add to core extension that will be managed by AppInsightsCore\r\n            coreExtensions[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n        else {\r\n            channels[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n    });\r\n    return _a = {},\r\n        _a[STR_CORE /* @min:core */] = coreExtensions,\r\n        _a[STR_CHANNELS /* @min:channels */] = channels,\r\n        _a;\r\n}\r\nfunction _isPluginPresent(thePlugin, plugins) {\r\n    var exists = false;\r\n    arrForEach(plugins, function (plugin) {\r\n        if (plugin === thePlugin) {\r\n            exists = true;\r\n            return -1;\r\n        }\r\n    });\r\n    return exists;\r\n}\r\nfunction _deepMergeConfig(details, target, newValues, merge) {\r\n    // Lets assign the new values to the existing config\r\n    if (newValues) {\r\n        objForEachKey(newValues, function (key, value) {\r\n            if (merge) {\r\n                if (isPlainObject(value) && isPlainObject(target[key])) {\r\n                    // The target is an object and it has a value\r\n                    _deepMergeConfig(details, target[key], value, merge);\r\n                }\r\n            }\r\n            if (merge && isPlainObject(value) && isPlainObject(target[key])) {\r\n                // The target is an object and it has a value\r\n                _deepMergeConfig(details, target[key], value, merge);\r\n            }\r\n            else {\r\n                // Just Assign (replace) and/or make the property dynamic\r\n                details.set(target, key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _findWatcher(listeners, newWatcher) {\r\n    var theListener = null;\r\n    var idx = -1;\r\n    arrForEach(listeners, function (listener, lp) {\r\n        if (listener.w === newWatcher) {\r\n            theListener = listener;\r\n            idx = lp;\r\n            return -1;\r\n        }\r\n    });\r\n    return { i: idx, l: theListener };\r\n}\r\nfunction _addDelayedCfgListener(listeners, newWatcher) {\r\n    var theListener = _findWatcher(listeners, newWatcher).l;\r\n    if (!theListener) {\r\n        theListener = {\r\n            w: newWatcher,\r\n            rm: function () {\r\n                var fnd = _findWatcher(listeners, newWatcher);\r\n                if (fnd.i !== -1) {\r\n                    listeners[_DYN_SPLICE /* @min:%2esplice */](fnd.i, 1);\r\n                }\r\n            }\r\n        };\r\n        listeners[_DYN_PUSH /* @min:%2epush */](theListener);\r\n    }\r\n    return theListener;\r\n}\r\nfunction _registerDelayedCfgListener(config, listeners, logger) {\r\n    arrForEach(listeners, function (listener) {\r\n        var unloadHdl = onConfigChange(config, listener.w, logger);\r\n        delete listener.w; // Clear the listener reference so it will get garbage collected.\r\n        // replace the remove function\r\n        listener.rm = function () {\r\n            unloadHdl.rm();\r\n        };\r\n    });\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _initDebugListener(configHandler, unloadContainer, notificationManager, debugListener) {\r\n    // Will get recalled if any referenced config values are changed\r\n    unloadContainer.add(configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n        var disableDbgExt = details.cfg.disableDbgExt;\r\n        if (disableDbgExt === true && debugListener) {\r\n            // Remove any previously loaded debug listener\r\n            notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](debugListener);\r\n            debugListener = null;\r\n        }\r\n        if (notificationManager && !debugListener && disableDbgExt !== true) {\r\n            debugListener = getDebugListener(details.cfg);\r\n            notificationManager[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](debugListener);\r\n        }\r\n    }));\r\n    return debugListener;\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _createUnloadHook(unloadHook) {\r\n    return objDefine({\r\n        rm: function () {\r\n            unloadHook.rm();\r\n        }\r\n    }, \"toJSON\", { v: function () { return \"aicore::onCfgChange<\" + JSON.stringify(unloadHook) + \">\"; } });\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _configHandler;\r\n        var _isInitialized;\r\n        var _logger;\r\n        var _eventQueue;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        var _cfgPerfManager;\r\n        var _cookieManager;\r\n        var _pluginChain;\r\n        var _configExtensions;\r\n        var _channelConfig;\r\n        var _channels;\r\n        var _isUnloading;\r\n        var _telemetryInitializerPlugin;\r\n        var _internalLogsEventName;\r\n        var _evtNamespace;\r\n        var _unloadHandlers;\r\n        var _hookContainer;\r\n        var _debugListener;\r\n        var _traceCtx;\r\n        var _instrumentationKey;\r\n        var _cfgListeners;\r\n        var _extensions;\r\n        var _pluginVersionStringArr;\r\n        var _pluginVersionString;\r\n        var _activeStatus; // to indicate if ikey or endpoint url promised is resolved or not\r\n        var _endpoint;\r\n        var _initInMemoMaxSize; // max event count limit during wait for init promises to be resolved\r\n        var _isStatusSet; // track if active status is set in case of init timeout and init promises setting the status twice\r\n        var _initTimer;\r\n        /**\r\n         * Internal log poller\r\n         */\r\n        var _internalLogPoller;\r\n        var _internalLogPollerListening;\r\n        var _forceStopInternalLogPoller;\r\n        dynamicProto(AppInsightsCore, this, function (_self) {\r\n            // Set the default values (also called during teardown)\r\n            _initDefaults();\r\n            // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_extensions, _eventQueue];\r\n            };\r\n            _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () { return _isInitialized; };\r\n            // since version 3.3.0\r\n            _self.activeStatus = function () { return _activeStatus; };\r\n            // since version 3.3.0\r\n            // internal\r\n            _self._setPendingStatus = function () {\r\n                _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n            };\r\n            // Creating the self.initialize = ()\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                if (_isUnloading) {\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                // Make sure core is only initialized once\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    throwError(\"Core cannot be initialized more than once\");\r\n                }\r\n                _configHandler = createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false);\r\n                // Re-assigning the local config property so we don't have any references to the passed value and it can be garbage collected\r\n                config = _configHandler.cfg;\r\n                // This will be \"re-run\" if the referenced config properties are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var rootCfg = details.cfg;\r\n                    var isPending = _activeStatus === 3 /* eActiveStatus.PENDING */;\r\n                    if (isPending) {\r\n                        // means waiting for previous promises to be resolved, won't apply new changes\r\n                        return;\r\n                    }\r\n                    _initInMemoMaxSize = rootCfg.initInMemoMaxSize || maxInitQueueSize;\r\n                    // app Insights core only handle ikey and endpointurl, aisku will handle cs\r\n                    var ikey = rootCfg[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    var endpointUrl = rootCfg.endpointUrl; // do not need to validate endpoint url, if it is null, default one will be set by sender\r\n                    if (isNullOrUndefined(ikey)) {\r\n                        _instrumentationKey = null;\r\n                        // if new ikey is null, set status to be inactive, all new events will be saved in memory or dropped\r\n                        _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                        var msg = \"Please provide instrumentation key\";\r\n                        if (!_isInitialized) {\r\n                            // only throw error during initialization\r\n                            throwError(msg);\r\n                        }\r\n                        else {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, msg);\r\n                            _releaseQueues();\r\n                        }\r\n                        return;\r\n                    }\r\n                    var promises = [];\r\n                    if (isPromiseLike(ikey)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](ikey);\r\n                        _instrumentationKey = null; // reset current local ikey variable (otherwise it will always be the previous ikeys if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string\r\n                        _instrumentationKey = ikey;\r\n                    }\r\n                    if (isPromiseLike(endpointUrl)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](endpointUrl);\r\n                        _endpoint = null; // reset current local endpoint variable (otherwise it will always be the previous urls if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string or null\r\n                        _endpoint = endpointUrl;\r\n                    }\r\n                    // at least have one promise\r\n                    if (promises[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        // reset to false for new dynamic changes\r\n                        _isStatusSet = false;\r\n                        _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n                        var initTimeout = isNotNullOrUndefined(rootCfg.initTimeOut) ? rootCfg.initTimeOut : maxInitTimeout; // rootCfg.initTimeOut could be 0\r\n                        var allPromises = createAllSettledPromise(promises);\r\n                        _initTimer = scheduleTimeout(function () {\r\n                            // set _isStatusSet to true\r\n                            // set active status\r\n                            // release queues\r\n                            _initTimer = null;\r\n                            if (!_isStatusSet) {\r\n                                _setStatus();\r\n                            }\r\n                        }, initTimeout);\r\n                        doAwaitResponse(allPromises, function (response) {\r\n                            try {\r\n                                if (_isStatusSet) {\r\n                                    // promises take too long to resolve, ignore them\r\n                                    // active status should be set by timeout already\r\n                                    return;\r\n                                }\r\n                                if (!response.rejected) {\r\n                                    var values = response[_DYN_VALUE /* @min:%2evalue */];\r\n                                    if (values && values[_DYN_LENGTH /* @min:%2elength */]) {\r\n                                        // ikey\r\n                                        var ikeyRes = values[0];\r\n                                        _instrumentationKey = ikeyRes && ikeyRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        // endpoint\r\n                                        if (values[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                                            var endpointRes = values[1];\r\n                                            _endpoint = endpointRes && endpointRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        }\r\n                                    }\r\n                                    if (_instrumentationKey) {\r\n                                        // if ikey is null, no need to trigger extra dynamic changes for extensions\r\n                                        config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = _instrumentationKey; // set config.instrumentationKey for extensions to consume\r\n                                        config.endpointUrl = _endpoint; // set config.endpointUrl for extensions to consume\r\n                                    }\r\n                                }\r\n                                // set _isStatusSet to true\r\n                                // set active status\r\n                                // release queues\r\n                                _setStatus();\r\n                            }\r\n                            catch (e) {\r\n                                if (!_isStatusSet) {\r\n                                    _setStatus();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        // means no promises\r\n                        _setStatus();\r\n                    }\r\n                    //_instrumentationKey = details.cfg.instrumentationKey;\r\n                    // Mark the extensionConfig and all first level keys as referenced\r\n                    // This is so that calls to getExtCfg() will always return the same object\r\n                    // Even when a user may \"re-assign\" the plugin properties (or it's unloaded/reloaded)\r\n                    var extCfg = details.ref(details.cfg, STR_EXTENSION_CONFIG);\r\n                    objForEachKey(extCfg, function (key) {\r\n                        details.ref(extCfg, key);\r\n                    });\r\n                }));\r\n                _notificationManager = notificationManager;\r\n                // Initialize the debug listener outside of the closure to reduce the retained memory footprint\r\n                _debugListener = _initDebugListener(_configHandler, _hookContainer, _notificationManager && _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */](), _debugListener);\r\n                _initPerfManager();\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = logger;\r\n                var cfgExtensions = config[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                // Extension validation\r\n                _configExtensions = [];\r\n                _configExtensions[_DYN_PUSH /* @min:%2epush */].apply(_configExtensions, __spreadArray(__spreadArray([], extensions, false), cfgExtensions, false));\r\n                _channelConfig = config[STR_CHANNELS /* @min:%2echannels */];\r\n                _initPluginChain(null);\r\n                if (!_channels || _channels[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    throwError(\"No \" + STR_CHANNELS + \" available\");\r\n                }\r\n                if (_channelConfig && _channelConfig[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                    var teeController = _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */](\"TeeChannelController\");\r\n                    if (!teeController || !teeController.plugin) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"TeeChannel required\");\r\n                    }\r\n                }\r\n                _registerDelayedCfgListener(config, _cfgListeners, _logger);\r\n                _cfgListeners = null;\r\n                _isInitialized = true;\r\n                if (_activeStatus === ActiveStatus.ACTIVE) {\r\n                    _releaseQueues();\r\n                }\r\n            };\r\n            _self.getChannels = function () {\r\n                var controls = [];\r\n                if (_channels) {\r\n                    arrForEach(_channels, function (channel) {\r\n                        controls[_DYN_PUSH /* @min:%2epush */](channel);\r\n                    });\r\n                }\r\n                return objFreeze(controls);\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */](), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throwError(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    if (!telemetryItem[_DYN_NAME /* @min:%2ename */] && isNullOrUndefined(telemetryItem[_DYN_NAME /* @min:%2ename */])) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        throwError(\"telemetry name required\");\r\n                    }\r\n                    // setup default iKey if not passed in\r\n                    telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] = telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                    // add default timestamp if not passed in\r\n                    telemetryItem[_DYN_TIME /* @min:%2etime */] = telemetryItem[_DYN_TIME /* @min:%2etime */] || toISOString(new Date());\r\n                    // Common Schema 4.0\r\n                    telemetryItem.ver = telemetryItem.ver || \"4.0\";\r\n                    if (!_isUnloading && _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]() && _activeStatus === ActiveStatus.ACTIVE) {\r\n                        // Process the telemetry plugin chain\r\n                        _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](telemetryItem);\r\n                    }\r\n                    else if (_activeStatus !== ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */]) {\r\n                        // Queue events until all extensions are initialized\r\n                        if (_eventQueue[_DYN_LENGTH /* @min:%2elength */] <= _initInMemoMaxSize) {\r\n                            // set limit, if full, stop adding new events\r\n                            _eventQueue[_DYN_PUSH /* @min:%2epush */](telemetryItem);\r\n                        }\r\n                    }\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            _self[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */] = _createTelCtx;\r\n            _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */] = function () {\r\n                if (!_notificationManager) {\r\n                    _notificationManager = new NotificationManager(_configHandler.cfg);\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param listener - An INotificationListener object.\r\n             */\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _self.getNotifyMgr()[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - INotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                if (_notificationManager) {\r\n                    _notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](listener);\r\n                }\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                if (!_cookieManager) {\r\n                    _cookieManager = createCookieMgr(_configHandler.cfg, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _cookieManager;\r\n            };\r\n            _self.setCookieMgr = function (cookieMgr) {\r\n                if (_cookieManager !== cookieMgr) {\r\n                    runTargetUnload(_cookieManager, false);\r\n                    _cookieManager = cookieMgr;\r\n                }\r\n            };\r\n            _self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */] = function () {\r\n                return _perfManager || _cfgPerfManager || getGblPerfMgr();\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_isInitialized && _eventQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var eventQueue = _eventQueue;\r\n                    _eventQueue = [];\r\n                    if (_activeStatus === 2 /* eActiveStatus.ACTIVE */) {\r\n                        arrForEach(eventQueue, function (event) {\r\n                            event[_DYN_I_KEY /* @min:%2eiKey */] = event[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                            _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](event);\r\n                        });\r\n                    }\r\n                    else {\r\n                        // new one for msg ikey\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"core init status is not active\");\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                _internalLogsEventName = eventName || null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                return _startLogPoller(true);\r\n            };\r\n            function _setStatus() {\r\n                _isStatusSet = true;\r\n                if (isNullOrUndefined(_instrumentationKey)) {\r\n                    _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 112 /* _eInternalMessageId.InitPromiseException */, \"ikey can't be resolved from promises\");\r\n                }\r\n                else {\r\n                    _activeStatus = ActiveStatus.ACTIVE;\r\n                }\r\n                _releaseQueues();\r\n            }\r\n            function _releaseQueues() {\r\n                if (_isInitialized) {\r\n                    _self.releaseQueue();\r\n                    _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n                }\r\n            }\r\n            function _startLogPoller(alwaysStart) {\r\n                if ((!_internalLogPoller || !_internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */]) && !_forceStopInternalLogPoller) {\r\n                    var shouldStart = alwaysStart || (_logger && _logger.queue[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                    if (shouldStart) {\r\n                        if (!_internalLogPollerListening) {\r\n                            _internalLogPollerListening = true;\r\n                            // listen for any configuration changes so that changes to the\r\n                            // interval will cause the timer to be re-initialized\r\n                            _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                                var interval = details.cfg.diagnosticLogInterval;\r\n                                if (!interval || !(interval > 0)) {\r\n                                    interval = 10000;\r\n                                }\r\n                                var isRunning = false;\r\n                                if (_internalLogPoller) {\r\n                                    // It was already created so remember it's running and cancel\r\n                                    isRunning = _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */];\r\n                                    _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                                }\r\n                                // Create / reconfigure\r\n                                _internalLogPoller = createTimeout(_flushInternalLogs, interval);\r\n                                _internalLogPoller.unref();\r\n                                // Restart if previously running\r\n                                _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = isRunning;\r\n                            }));\r\n                        }\r\n                        _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = true;\r\n                    }\r\n                }\r\n                return _internalLogPoller;\r\n            }\r\n            _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */] = function () {\r\n                _forceStopInternalLogPoller = true;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                _flushInternalLogs();\r\n            };\r\n            // Add addTelemetryInitializer\r\n            proxyFunctions(_self, function () { return _telemetryInitializerPlugin; }, [\"addTelemetryInitializer\"]);\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync, unloadComplete, cbTimeout) {\r\n                var _a;\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_isInitialized) {\r\n                    // The SDK is not initialized\r\n                    throwError(strSdkNotInitialized);\r\n                }\r\n                // Check if the SDK still unloading so throw\r\n                if (_isUnloading) {\r\n                    // The SDK is already unloading\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                var unloadState = (_a = {\r\n                        reason: 50 /* TelemetryUnloadReason.SdkUnload */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                    _a.flushComplete = false,\r\n                    _a);\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                var processUnloadCtx = createProcessTelemetryUnloadContext(_getPluginChain(), _self);\r\n                processUnloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                    _hookContainer.run(_self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                    // Run any \"unload\" functions for the _cookieManager, _notificationManager and _logger\r\n                    doUnloadAll([_cookieManager, _notificationManager, _logger], isAsync, function () {\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    });\r\n                }, _self);\r\n                function _doUnload(flushComplete) {\r\n                    unloadState.flushComplete = flushComplete;\r\n                    _isUnloading = true;\r\n                    // Run all of the unload handlers first (before unloading the plugins)\r\n                    _unloadHandlers.run(processUnloadCtx, unloadState);\r\n                    // Stop polling the internal logs\r\n                    _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */]();\r\n                    // Start unloading the components, from this point onwards the SDK should be considered to be in an unstable state\r\n                    processUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                _flushInternalLogs();\r\n                if (!_flushChannels(isAsync, _doUnload, 6 /* SendRequestReason.SdkUnload */, cbTimeout)) {\r\n                    _doUnload(false);\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */] = _getPlugin;\r\n            _self.addPlugin = function (plugin, replaceExisting, isAsync, addCb) {\r\n                if (!plugin) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(strValidationError);\r\n                    return;\r\n                }\r\n                var existingPlugin = _getPlugin(plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                if (existingPlugin && !replaceExisting) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(\"Plugin [\" + plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"] is already loaded!\");\r\n                    return;\r\n                }\r\n                var updateState = {\r\n                    reason: 16 /* TelemetryUpdateReason.PluginAdded */\r\n                };\r\n                function _addPlugin(removed) {\r\n                    _configExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                    updateState.added = [plugin];\r\n                    // Re-Initialize the plugin chain\r\n                    _initPluginChain(updateState);\r\n                    addCb && addCb(true);\r\n                }\r\n                if (existingPlugin) {\r\n                    var removedPlugins_1 = [existingPlugin.plugin];\r\n                    var unloadState = {\r\n                        reason: 2 /* TelemetryUnloadReason.PluginReplace */,\r\n                        isAsync: !!isAsync\r\n                    };\r\n                    _removePlugins(removedPlugins_1, unloadState, function (removed) {\r\n                        if (!removed) {\r\n                            // Previous plugin was successfully removed or was not installed\r\n                            addCb && addCb(false);\r\n                        }\r\n                        else {\r\n                            updateState.removed = removedPlugins_1;\r\n                            updateState.reason |= 32 /* TelemetryUpdateReason.PluginRemoved */;\r\n                            _addPlugin(true);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    _addPlugin(false);\r\n                }\r\n            };\r\n            _self.updateCfg = function (newConfig, mergeExisting) {\r\n                if (mergeExisting === void 0) { mergeExisting = true; }\r\n                var updateState;\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    updateState = {\r\n                        reason: 1 /* TelemetryUpdateReason.ConfigurationChanged */,\r\n                        cfg: _configHandler.cfg,\r\n                        oldCfg: deepExtend({}, _configHandler.cfg),\r\n                        newConfig: deepExtend({}, newConfig),\r\n                        merge: mergeExisting\r\n                    };\r\n                    newConfig = updateState.newConfig;\r\n                    var cfg = _configHandler.cfg;\r\n                    // replace the immutable (if initialized) values\r\n                    // We don't currently allow updating the extensions and channels via the update config\r\n                    // So overwriting any user provided values to reuse the existing values\r\n                    newConfig[STR_EXTENSIONS /* @min:%2eextensions */] = cfg[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                    newConfig[STR_CHANNELS /* @min:%2echannels */] = cfg[STR_CHANNELS /* @min:%2echannels */];\r\n                }\r\n                // Explicitly blocking any previous config watchers so that they don't get called because\r\n                // of this bulk update (Probably not necessary)\r\n                _configHandler._block(function (details) {\r\n                    // Lets assign the new values to the existing config either overwriting or re-assigning\r\n                    var theConfig = details.cfg;\r\n                    _deepMergeConfig(details, theConfig, newConfig, mergeExisting);\r\n                    if (!mergeExisting) {\r\n                        // Remove (unassign) the values \"missing\" from the newConfig and also not in the default config\r\n                        objForEachKey(theConfig, function (key) {\r\n                            if (!objHasOwn(newConfig, key)) {\r\n                                // Set the value to undefined\r\n                                details.set(theConfig, key, UNDEFINED_VALUE);\r\n                            }\r\n                        });\r\n                    }\r\n                    // Apply defaults to the new config\r\n                    details[_DYN_SET_DF /* @min:%2esetDf */](theConfig, defaultConfig);\r\n                }, true);\r\n                // Now execute all of the listeners (synchronously) so they update their values immediately\r\n                _configHandler[_DYN_NOTIFY /* @min:%2enotify */]();\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            };\r\n            _self.evtNamespace = function () {\r\n                return _evtNamespace;\r\n            };\r\n            _self.flush = _flushChannels;\r\n            _self.getTraceCtx = function (createNew) {\r\n                if (!_traceCtx) {\r\n                    _traceCtx = createDistributedTraceContext();\r\n                }\r\n                return _traceCtx;\r\n            };\r\n            _self.setTraceCtx = function (traceCtx) {\r\n                _traceCtx = traceCtx || null;\r\n            };\r\n            _self.addUnloadHook = _addUnloadHook;\r\n            // Create the addUnloadCb\r\n            proxyFunctionAs(_self, \"addUnloadCb\", function () { return _unloadHandlers; }, \"add\");\r\n            _self.onCfgChange = function (handler) {\r\n                var unloadHook;\r\n                if (!_isInitialized) {\r\n                    unloadHook = _addDelayedCfgListener(_cfgListeners, handler);\r\n                }\r\n                else {\r\n                    unloadHook = onConfigChange(_configHandler.cfg, handler, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _createUnloadHook(unloadHook);\r\n            };\r\n            _self.getWParam = function () {\r\n                return (hasDocument() || !!_configHandler.cfg.enableWParam) ? 0 : -1;\r\n            };\r\n            function _setPluginVersions() {\r\n                var thePlugins = {};\r\n                _pluginVersionStringArr = [];\r\n                var _addPluginVersions = function (plugins) {\r\n                    if (plugins) {\r\n                        arrForEach(plugins, function (plugin) {\r\n                            if (plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] && plugin[_DYN_VERSION /* @min:%2eversion */] && !thePlugins[plugin.identifier]) {\r\n                                var ver = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"=\" + plugin[_DYN_VERSION /* @min:%2eversion */];\r\n                                _pluginVersionStringArr[_DYN_PUSH /* @min:%2epush */](ver);\r\n                                thePlugins[plugin.identifier] = plugin;\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                _addPluginVersions(_channels);\r\n                if (_channelConfig) {\r\n                    arrForEach(_channelConfig, function (channels) {\r\n                        _addPluginVersions(channels);\r\n                    });\r\n                }\r\n                _addPluginVersions(_configExtensions);\r\n            }\r\n            function _initDefaults() {\r\n                _isInitialized = false;\r\n                // Use a default logger so initialization errors are not dropped on the floor with full logging\r\n                _configHandler = createDynamicConfig({}, defaultConfig, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                // Set the logging level to critical so that any critical initialization failures are displayed on the console\r\n                _configHandler.cfg[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */] = 1 /* eLoggingSeverity.CRITICAL */;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _configHandler.cfg; },\r\n                    s: function (newValue) {\r\n                        _self.updateCfg(newValue, false);\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionStringArr\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionStringArr) {\r\n                            _setPluginVersions();\r\n                        }\r\n                        return _pluginVersionStringArr;\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionString\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionString) {\r\n                            if (!_pluginVersionStringArr) {\r\n                                _setPluginVersions();\r\n                            }\r\n                            _pluginVersionString = _pluginVersionStringArr.join(\";\");\r\n                        }\r\n                        return _pluginVersionString || STR_EMPTY;\r\n                    }\r\n                });\r\n                objDefine(_self, \"logger\", {\r\n                    g: function () {\r\n                        if (!_logger) {\r\n                            _logger = new DiagnosticLogger(_configHandler.cfg);\r\n                            _configHandler[_DYN_LOGGER /* @min:%2elogger */] = _logger;\r\n                        }\r\n                        return _logger;\r\n                    },\r\n                    s: function (newLogger) {\r\n                        _configHandler[_DYN_LOGGER /* @min:%2elogger */] = newLogger;\r\n                        if (_logger !== newLogger) {\r\n                            runTargetUnload(_logger, false);\r\n                            _logger = newLogger;\r\n                        }\r\n                    }\r\n                });\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = new DiagnosticLogger(_configHandler.cfg);\r\n                _extensions = [];\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                _telemetryInitializerPlugin = new TelemetryInitializerPlugin();\r\n                _eventQueue = [];\r\n                runTargetUnload(_notificationManager, false);\r\n                _notificationManager = null;\r\n                _perfManager = null;\r\n                _cfgPerfManager = null;\r\n                runTargetUnload(_cookieManager, false);\r\n                _cookieManager = null;\r\n                _pluginChain = null;\r\n                _configExtensions = [];\r\n                _channelConfig = null;\r\n                _channels = null;\r\n                _isUnloading = false;\r\n                _internalLogsEventName = null;\r\n                _evtNamespace = createUniqueNamespace(\"AIBaseCore\", true);\r\n                _unloadHandlers = createUnloadHandlerContainer();\r\n                _traceCtx = null;\r\n                _instrumentationKey = null;\r\n                _hookContainer = createUnloadHookContainer();\r\n                _cfgListeners = [];\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller = null;\r\n                _internalLogPollerListening = false;\r\n                _activeStatus = 0 /* eActiveStatus.NONE */; // default is None\r\n                _endpoint = null;\r\n                _initInMemoMaxSize = null;\r\n                _isStatusSet = false;\r\n                _initTimer = null;\r\n            }\r\n            function _createTelCtx() {\r\n                var theCtx = createProcessTelemetryContext(_getPluginChain(), _configHandler.cfg, _self);\r\n                theCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                return theCtx;\r\n            }\r\n            // Initialize or Re-initialize the plugins\r\n            function _initPluginChain(updateState) {\r\n                // Extension validation\r\n                var theExtensions = _validateExtensions(_self[_DYN_LOGGER /* @min:%2elogger */], ChannelControllerPriority, _configExtensions);\r\n                _pluginChain = null;\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                // Get the primary channel queue and include as part of the normal extensions\r\n                _channels = (_channelConfig || [])[0] || [];\r\n                // Add any channels provided in the extensions and sort them\r\n                _channels = sortPlugins(arrAppend(_channels, theExtensions[STR_CHANNELS /* @min:%2echannels */]));\r\n                // Create an array of all extensions, including the _channels\r\n                var allExtensions = arrAppend(sortPlugins(theExtensions[STR_CORE /* @min:%2ecore */]), _channels);\r\n                // Required to allow plugins to call core.getPlugin() during their own initialization\r\n                _extensions = objFreeze(allExtensions);\r\n                // This has a side effect of adding the extensions passed during initialization\r\n                // into the config.extensions, so you can see all of the extensions loaded.\r\n                // This will also get updated by the addPlugin() and remove plugin code.\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                var rootCtx = _createTelCtx();\r\n                // Initializing the channels first\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    initializePlugins(rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels), allExtensions);\r\n                }\r\n                // Now initialize the normal extensions (explicitly not including the _channels as this can cause duplicate initialization)\r\n                initializePlugins(rootCtx, allExtensions);\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            }\r\n            function _getPlugin(pluginIdentifier) {\r\n                var theExt = null;\r\n                var thePlugin = null;\r\n                var channelHosts = [];\r\n                arrForEach(_extensions, function (ext) {\r\n                    if (ext[_DYN_IDENTIFIER /* @min:%2eidentifier */] === pluginIdentifier && ext !== _telemetryInitializerPlugin) {\r\n                        thePlugin = ext;\r\n                        return -1;\r\n                    }\r\n                    if (ext.getChannel) {\r\n                        channelHosts[_DYN_PUSH /* @min:%2epush */](ext);\r\n                    }\r\n                });\r\n                if (!thePlugin && channelHosts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(channelHosts, function (host) {\r\n                        thePlugin = host.getChannel(pluginIdentifier);\r\n                        if (!thePlugin) {\r\n                            return -1;\r\n                        }\r\n                    });\r\n                }\r\n                if (thePlugin) {\r\n                    theExt = {\r\n                        plugin: thePlugin,\r\n                        setEnabled: function (enabled) {\r\n                            _getPluginState(thePlugin)[STR_DISABLED] = !enabled;\r\n                        },\r\n                        isEnabled: function () {\r\n                            var pluginState = _getPluginState(thePlugin);\r\n                            return !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] && !pluginState[STR_DISABLED];\r\n                        },\r\n                        remove: function (isAsync, removeCb) {\r\n                            var _a;\r\n                            if (isAsync === void 0) { isAsync = true; }\r\n                            var pluginsToRemove = [thePlugin];\r\n                            var unloadState = (_a = {\r\n                                    reason: 1 /* TelemetryUnloadReason.PluginUnload */\r\n                                },\r\n                                _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                                _a);\r\n                            _removePlugins(pluginsToRemove, unloadState, function (removed) {\r\n                                if (removed) {\r\n                                    // Re-Initialize the plugin chain\r\n                                    _initPluginChain({\r\n                                        reason: 32 /* TelemetryUpdateReason.PluginRemoved */,\r\n                                        removed: pluginsToRemove\r\n                                    });\r\n                                }\r\n                                removeCb && removeCb(removed);\r\n                            });\r\n                        }\r\n                    };\r\n                }\r\n                return theExt;\r\n            }\r\n            function _getPluginChain() {\r\n                if (!_pluginChain) {\r\n                    // copy the collection of extensions\r\n                    var extensions = (_extensions || []).slice();\r\n                    // During add / remove this may get called again, so don't read if already present\r\n                    if (arrIndexOf(extensions, _telemetryInitializerPlugin) === -1) {\r\n                        extensions[_DYN_PUSH /* @min:%2epush */](_telemetryInitializerPlugin);\r\n                    }\r\n                    _pluginChain = createTelemetryProxyChain(sortPlugins(extensions), _configHandler.cfg, _self);\r\n                }\r\n                return _pluginChain;\r\n            }\r\n            function _removePlugins(thePlugins, unloadState, removeComplete) {\r\n                if (thePlugins && thePlugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var unloadChain = createTelemetryProxyChain(thePlugins, _configHandler.cfg, _self);\r\n                    var unloadCtx = createProcessTelemetryUnloadContext(unloadChain, _self);\r\n                    unloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                        var removed = false;\r\n                        // Remove the listed config extensions\r\n                        var newConfigExtensions = [];\r\n                        arrForEach(_configExtensions, function (plugin, idx) {\r\n                            if (!_isPluginPresent(plugin, thePlugins)) {\r\n                                newConfigExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                            }\r\n                            else {\r\n                                removed = true;\r\n                            }\r\n                        });\r\n                        _configExtensions = newConfigExtensions;\r\n                        _pluginVersionString = null;\r\n                        _pluginVersionStringArr = null;\r\n                        // Re-Create the channel config\r\n                        var newChannelConfig = [];\r\n                        if (_channelConfig) {\r\n                            arrForEach(_channelConfig, function (queue, idx) {\r\n                                var newQueue = [];\r\n                                arrForEach(queue, function (channel) {\r\n                                    if (!_isPluginPresent(channel, thePlugins)) {\r\n                                        newQueue[_DYN_PUSH /* @min:%2epush */](channel);\r\n                                    }\r\n                                    else {\r\n                                        removed = true;\r\n                                    }\r\n                                });\r\n                                newChannelConfig[_DYN_PUSH /* @min:%2epush */](newQueue);\r\n                            });\r\n                            _channelConfig = newChannelConfig;\r\n                        }\r\n                        removeComplete && removeComplete(removed);\r\n                        _startLogPoller();\r\n                    });\r\n                    unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                else {\r\n                    removeComplete(false);\r\n                }\r\n            }\r\n            function _flushInternalLogs() {\r\n                if (_logger && _logger.queue) {\r\n                    var queue = _logger.queue.slice(0);\r\n                    _logger.queue[_DYN_LENGTH /* @min:%2elength */] = 0;\r\n                    arrForEach(queue, function (logMessage) {\r\n                        var _a;\r\n                        var item = (_a = {},\r\n                            _a[_DYN_NAME /* @min:name */] = _internalLogsEventName ? _internalLogsEventName : \"InternalMessageId: \" + logMessage[_DYN_MESSAGE_ID /* @min:%2emessageId */],\r\n                            _a[_DYN_I_KEY /* @min:iKey */] = _instrumentationKey,\r\n                            _a[_DYN_TIME /* @min:time */] = toISOString(new Date()),\r\n                            _a.baseType = _InternalLogMessage.dataType,\r\n                            _a.baseData = { message: logMessage[_DYN_MESSAGE /* @min:%2emessage */] },\r\n                            _a);\r\n                        _self.track(item);\r\n                    });\r\n                }\r\n            }\r\n            function _flushChannels(isAsync, callBack, sendReason, cbTimeout) {\r\n                // Setting waiting to one so that we don't call the callBack until we finish iterating\r\n                var waiting = 1;\r\n                var doneIterating = false;\r\n                var cbTimer = null;\r\n                cbTimeout = cbTimeout || 5000;\r\n                function doCallback() {\r\n                    waiting--;\r\n                    if (doneIterating && waiting === 0) {\r\n                        cbTimer && cbTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                        cbTimer = null;\r\n                        callBack && callBack(doneIterating);\r\n                        callBack = null;\r\n                    }\r\n                }\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var flushCtx = _createTelCtx()[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels);\r\n                    flushCtx.iterate(function (plugin) {\r\n                        if (plugin.flush) {\r\n                            waiting++;\r\n                            var handled_1 = false;\r\n                            // Not all channels will call this callback for every scenario\r\n                            if (!plugin.flush(isAsync, function () {\r\n                                handled_1 = true;\r\n                                doCallback();\r\n                            }, sendReason)) {\r\n                                if (!handled_1) {\r\n                                    // If any channel doesn't return true and it didn't call the callback, then we should assume that the callback\r\n                                    // will never be called, so use a timeout to allow the channel(s) some time to \"finish\" before triggering any\r\n                                    // followup function (such as unloading)\r\n                                    if (isAsync && cbTimer == null) {\r\n                                        cbTimer = scheduleTimeout(function () {\r\n                                            cbTimer = null;\r\n                                            doCallback();\r\n                                        }, cbTimeout);\r\n                                    }\r\n                                    else {\r\n                                        doCallback();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                doneIterating = true;\r\n                doCallback();\r\n                return true;\r\n            }\r\n            function _initPerfManager() {\r\n                // Save the previous config based performance manager creator to avoid creating new perf manager instances if unchanged\r\n                var prevCfgPerfMgr;\r\n                // Will get recalled if any referenced config values are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var enablePerfMgr = details.cfg.enablePerfMgr;\r\n                    if (enablePerfMgr) {\r\n                        var createPerfMgr = details.cfg[STR_CREATE_PERF_MGR /* @min:%2ecreatePerfMgr */];\r\n                        if (prevCfgPerfMgr !== createPerfMgr) {\r\n                            if (!createPerfMgr) {\r\n                                createPerfMgr = _createPerfManager;\r\n                            }\r\n                            // Set the performance manager creation function if not defined\r\n                            getSetValue(details.cfg, STR_CREATE_PERF_MGR, createPerfMgr);\r\n                            prevCfgPerfMgr = createPerfMgr;\r\n                            // Remove any existing config based performance manager\r\n                            _cfgPerfManager = null;\r\n                        }\r\n                        // Only create the performance manager if it's not already created or manually set\r\n                        if (!_perfManager && !_cfgPerfManager && isFunction(createPerfMgr)) {\r\n                            // Create a new config based performance manager\r\n                            _cfgPerfManager = createPerfMgr(_self, _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]());\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Remove any existing config based performance manager\r\n                        _cfgPerfManager = null;\r\n                        // Clear the previous cached value so it can be GC'd\r\n                        prevCfgPerfMgr = null;\r\n                    }\r\n                }));\r\n            }\r\n            function _doUpdate(updateState) {\r\n                var updateCtx = createProcessTelemetryUpdateContext(_getPluginChain(), _self);\r\n                updateCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                if (!_self._updateHook || _self._updateHook(updateCtx, updateState) !== true) {\r\n                    updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n                }\r\n            }\r\n            function _logOrThrowError(message) {\r\n                var logger = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                if (logger) {\r\n                    // there should always be a logger\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, message);\r\n                    _startLogPoller();\r\n                }\r\n                else {\r\n                    throwError(message);\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]();\r\n                if (manager) {\r\n                    manager[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */]([telemetryItem], 2 /* eEventsDiscardedReason.InvalidEvent */);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _hookContainer.add(hooks);\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.getChannels.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.getProcessTelContext.\r\n// Removed Stub for AppInsightsCore.prototype.getNotifyMgr.\r\n// Removed Stub for AppInsightsCore.prototype.addNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.removeNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.getPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.eventCnt.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.addTelemetryInitializer.\r\n// Removed Stub for AppInsightsCore.prototype.unload.\r\n// Removed Stub for AppInsightsCore.prototype.getPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.addPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.updateCfg.\r\n// Removed Stub for AppInsightsCore.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsCore.prototype.flush.\r\n// Removed Stub for AppInsightsCore.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.setTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadHook.\r\n// Removed Stub for AppInsightsCore.prototype.onCfgChange.\r\n// Removed Stub for AppInsightsCore.prototype.activeStatus.\r\n// Removed Stub for AppInsightsCore.prototype._setPendingStatus.\r\n// Removed Stub for AppInsightsCore.prototype.releaseQueue.\r\n// Removed Stub for AppInsightsCore.prototype._updateHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_NAME } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getJSON } from \"./EnvUtils\";\r\n/**\r\n * Parses the response from the backend.\r\n * @param response - XMLHttpRequest or XDomainRequest response\r\n */\r\nexport function parseResponse(response, diagLog) {\r\n    try {\r\n        if (response && response !== \"\") {\r\n            var result = getJSON().parse(response);\r\n            if (result && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] >= result.itemsAccepted &&\r\n                result.itemsReceived - result.itemsAccepted === result.errors[_DYN_LENGTH /* @min:%2elength */]) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 43 /* _eInternalMessageId.InvalidBackendResponse */, \"Cannot parse the response. \" + (e[_DYN_NAME /* @min:%2ename */] || dumpObj(e)), {\r\n            response: response\r\n        });\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=ResponseHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, dumpObj, getNavigator, getWindow, isFunction, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DATA, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PROTOCOL, _DYN_REPLACE, _DYN_SEND_POST, _DYN_SET_REQUEST_HEADER, _DYN_STATUS, _DYN_TIMEOUT, _DYN_TO_LOWER_CASE, _DYN_URL_STRING, _DYN_VALUE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { DisabledPropertyName } from \"./Constants\";\r\nimport { _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getLocation, isBeaconsSupported, isFetchSupported, isXhrSupported, useXDomainRequest } from \"./EnvUtils\";\r\nimport { _getAllResponseHeaders, formatErrorMessageXdr, formatErrorMessageXhr, getResponseText, openXhr } from \"./HelperFuncs\";\r\nvar STR_EMPTY = \"\";\r\nvar STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar STR_POST_METHOD = \"POST\";\r\n/**\r\n * This Internal component\r\n * Manager SendPost functions\r\n * SendPostManger\r\n * @internal for internal use only\r\n */\r\nvar SenderPostManager = /** @class */ (function () {\r\n    function SenderPostManager() {\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _enableSendPromise;\r\n        var _isInitialized;\r\n        var _diagLog;\r\n        var _isOneDs;\r\n        var _onCompleteFuncs;\r\n        var _disableCredentials;\r\n        var _fetchCredentials;\r\n        var _fallbackInst;\r\n        var _disableXhr;\r\n        var _disableBeacon;\r\n        var _disableBeaconSync;\r\n        var _disableFetchKeepAlive;\r\n        var _addNoResponse;\r\n        var _timeoutWrapper;\r\n        dynamicProto(SenderPostManager, this, function (_self, _base) {\r\n            var _sendCredentials = true; // for 1ds\r\n            _initDefaults();\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, diagLog) {\r\n                _diagLog = diagLog;\r\n                if (_isInitialized) {\r\n                    _throwInternal(_diagLog, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _self.SetConfig(config);\r\n                _isInitialized = true;\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_isInitialized, _isOneDs, _disableCredentials, _enableSendPromise];\r\n            };\r\n            // This componet might get its config from sender, offline sender, 1ds post\r\n            // so set this function to mock dynamic changes\r\n            _self.SetConfig = function (config) {\r\n                try {\r\n                    _onCompleteFuncs = config.senderOnCompleteCallBack || {};\r\n                    _disableCredentials = !!config.disableCredentials;\r\n                    _fetchCredentials = config.fetchCredentials;\r\n                    _isOneDs = !!config.isOneDs;\r\n                    _enableSendPromise = !!config.enableSendPromise;\r\n                    _disableXhr = !!config.disableXhr;\r\n                    _disableBeacon = !!config.disableBeacon;\r\n                    _disableBeaconSync = !!config.disableBeaconSync;\r\n                    _timeoutWrapper = config.timeWrapper;\r\n                    _addNoResponse = !!config.addNoResponse;\r\n                    _disableFetchKeepAlive = !!config.disableFetchKeepAlive;\r\n                    _fallbackInst = { sendPOST: _xhrSender };\r\n                    if (!_isOneDs) {\r\n                        _sendCredentials = false; // for appInsights, set it to false always\r\n                    }\r\n                    if (_disableCredentials) {\r\n                        var location_1 = getLocation();\r\n                        if (location_1 && location_1.protocol && location_1.protocol[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"file:\") {\r\n                            // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            _sendCredentials = false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            };\r\n            _self.getSyncFetchPayload = function () {\r\n                return _syncFetchPayload;\r\n            };\r\n            _self.getSenderInst = function (transports, sync) {\r\n                if (transports && transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    return _getSenderInterface(transports, sync);\r\n                }\r\n                return null;\r\n            };\r\n            _self.getFallbackInst = function () {\r\n                return _fallbackInst;\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function (unloadCtx, unloadState) {\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(res, onComplete) {\r\n                _doOnComplete(onComplete, 200, {}, res);\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(message, onComplete) {\r\n                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _doOnComplete(onComplete, 400, {});\r\n            }\r\n            function _onNoPayloadUrl(onComplete) {\r\n                _onError(\"No endpoint url is provided for the batch\", onComplete);\r\n            }\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                var _a;\r\n                var transportType = 0 /* TransportType.NotSet */;\r\n                var sendPostFunc = null;\r\n                var lp = 0;\r\n                while (sendPostFunc == null && lp < transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    transportType = transports[lp];\r\n                    if (!_disableXhr && transportType === 1 /* TransportType.Xhr */) {\r\n                        if (useXDomainRequest()) {\r\n                            // IE 8 and 9\r\n                            sendPostFunc = _xdrSender;\r\n                        }\r\n                        else if (isXhrSupported()) {\r\n                            sendPostFunc = _xhrSender;\r\n                        }\r\n                    }\r\n                    else if (transportType === 2 /* TransportType.Fetch */ && isFetchSupported(syncSupport) && (!syncSupport || !_disableFetchKeepAlive)) {\r\n                        sendPostFunc = _doFetchSender;\r\n                    }\r\n                    else if (transportType === 3 /* TransportType.Beacon */ && isBeaconsSupported() && (syncSupport ? !_disableBeaconSync : !_disableBeacon)) {\r\n                        sendPostFunc = _beaconSender;\r\n                    }\r\n                    lp++;\r\n                }\r\n                if (sendPostFunc) {\r\n                    return _a = {\r\n                            _transport: transportType,\r\n                            _isSync: syncSupport\r\n                        },\r\n                        _a[_DYN_SEND_POST /* @min:sendPOST */] = sendPostFunc,\r\n                        _a;\r\n                }\r\n                return null;\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete && oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doBeaconSend(payload, oncomplete) {\r\n                var nav = getNavigator();\r\n                var url = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!url) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    // return true here, because we don't want to retry it with fallback sender\r\n                    return true;\r\n                }\r\n                url = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                var plainTextBatch = _isOneDs ? data : new Blob([data], { type: \"text/plain;charset=UTF-8\" });\r\n                // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                var queued = nav.sendBeacon(url, plainTextBatch);\r\n                return queued;\r\n            }\r\n            /**\r\n             * Send Beacon API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - not used\r\n             * Note: Beacon API does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _beaconSender(payload, oncomplete, sync) {\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                try {\r\n                    if (data) {\r\n                        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                        if (!_doBeaconSend(payload, oncomplete)) {\r\n                            var onRetry = _onCompleteFuncs && _onCompleteFuncs.beaconOnRetry;\r\n                            if (onRetry && isFunction(onRetry)) {\r\n                                onRetry(payload, oncomplete, _doBeaconSend);\r\n                            }\r\n                            else {\r\n                                _fallbackInst && _fallbackInst[_DYN_SEND_POST /* @min:%2esendPOST */](payload, oncomplete, true);\r\n                                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // if can send\r\n                            _onSuccess(STR_EMPTY, oncomplete);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _isOneDs && _warnToConsole(_diagLog, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(e));\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, STR_EMPTY);\r\n                }\r\n                return;\r\n            }\r\n            /**\r\n             * Send XMLHttpRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             */\r\n            function _xhrSender(payload, oncomplete, sync) {\r\n                //let  internalPayload = payload as IInternalPayloadData;\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (_isOneDs && sync && payload.disableXhrSync) {\r\n                    sync = false;\r\n                }\r\n                //const xhr = new XMLHttpRequest();\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                var xhr = openXhr(STR_POST_METHOD, endPointUrl, _sendCredentials, true, sync, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                if (!_isOneDs) {\r\n                    // application/json should NOT add to 1ds post by default\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](\"Content-type\", \"application/json\");\r\n                }\r\n                arrForEach(objKeys(headers), function (headerName) {\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](headerName, headers[headerName]);\r\n                });\r\n                xhr.onreadystatechange = function () {\r\n                    if (!_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                        if (xhr.readyState === 4) {\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }\r\n                };\r\n                xhr.onload = function () {\r\n                    if (_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                    }\r\n                };\r\n                function _doOnReadyFunc(xhr) {\r\n                    var onReadyFunc = _onCompleteFuncs && _onCompleteFuncs.xhrOnComplete;\r\n                    var onReadyFuncExist = onReadyFunc && isFunction(onReadyFunc);\r\n                    if (onReadyFuncExist) {\r\n                        onReadyFunc(xhr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        var response = getResponseText(xhr);\r\n                        _doOnComplete(oncomplete, xhr[_DYN_STATUS /* @min:%2estatus */], _getAllResponseHeaders(xhr, _isOneDs), response);\r\n                    }\r\n                }\r\n                xhr.onerror = function (event) {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 400, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    rejectFunc && rejectFunc(event);\r\n                };\r\n                xhr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 500, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    resolveFunc && resolveFunc(false);\r\n                };\r\n                xhr.send(payload[_DYN_DATA /* @min:%2edata */]);\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send fetch API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - For fetch this identifies whether we are \"unloading\" (false) or a normal request\r\n             */\r\n            function _doFetchSender(payload, oncomplete, sync) {\r\n                var _a;\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                var batch = payload[_DYN_DATA /* @min:%2edata */];\r\n                var plainTextBatch = _isOneDs ? batch : new Blob([batch], { type: \"application/json\" });\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var requestHeaders = new Headers();\r\n                var batchLength = batch[_DYN_LENGTH /* @min:%2elength */];\r\n                var ignoreResponse = false;\r\n                var responseHandled = false;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                //TODO: handle time out for 1ds\r\n                var init = (_a = {\r\n                        method: STR_POST_METHOD,\r\n                        body: plainTextBatch\r\n                    },\r\n                    _a[DisabledPropertyName] = true // Mark so we don't attempt to track this request\r\n                ,\r\n                    _a);\r\n                // Only add headers if there are headers to add, due to issue with some polyfills\r\n                if (payload.headers && objKeys(payload.headers)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(objKeys(headers), function (headerName) {\r\n                        requestHeaders.append(headerName, headers[headerName]);\r\n                    });\r\n                    init[_DYN_HEADERS /* @min:%2eheaders */] = requestHeaders;\r\n                }\r\n                if (_fetchCredentials) { // if user passed in this value via post channel (1ds), then use it\r\n                    init.credentials = _fetchCredentials;\r\n                }\r\n                else if (_sendCredentials && _isOneDs) {\r\n                    // for 1ds, Don't send credentials when URL is file://\r\n                    init.credentials = \"include\";\r\n                }\r\n                if (sync) {\r\n                    init.keepalive = true;\r\n                    _syncFetchPayload += batchLength;\r\n                    if (_isOneDs) {\r\n                        if (payload[\"_sendReason\"] === 2 /* SendRequestReason.Unload */) {\r\n                            // As a sync request (during unload), it is unlikely that we will get a chance to process the response so\r\n                            // just like beacon send assume that the events have been accepted and processed\r\n                            ignoreResponse = true;\r\n                            if (_addNoResponse) {\r\n                                endPointUrl += _noResponseQs;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // for appinsights, set to true for all sync request\r\n                        ignoreResponse = true;\r\n                    }\r\n                }\r\n                var request = new Request(endPointUrl, init);\r\n                try {\r\n                    // Also try and tag the request (just in case the value in init is not copied over)\r\n                    request[DisabledPropertyName] = true;\r\n                }\r\n                catch (e) {\r\n                    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n                    // cause the request to fail and we no telemetry would be sent\r\n                }\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                function _handleError(res) {\r\n                    // In case there is an error in the request. Set the status to 0 for 1ds and 400 for appInsights\r\n                    // so that the events can be retried later.\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, _isOneDs ? STR_EMPTY : res);\r\n                }\r\n                function _onFetchComplete(response, payload, value) {\r\n                    var status = response[_DYN_STATUS /* @min:%2estatus */];\r\n                    var onCompleteFunc = _onCompleteFuncs.fetchOnComplete;\r\n                    if (onCompleteFunc && isFunction(onCompleteFunc)) {\r\n                        onCompleteFunc(response, oncomplete, value || STR_EMPTY, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, status, {}, value || STR_EMPTY);\r\n                    }\r\n                }\r\n                try {\r\n                    doAwaitResponse(fetch(_isOneDs ? endPointUrl : request, _isOneDs ? init : null), function (result) {\r\n                        if (sync) {\r\n                            _syncFetchPayload -= batchLength;\r\n                            batchLength = 0;\r\n                        }\r\n                        if (!responseHandled) {\r\n                            responseHandled = true;\r\n                            if (!result.rejected) {\r\n                                var response_1 = result[_DYN_VALUE /* @min:%2evalue */];\r\n                                try {\r\n                                    /**\r\n                                     * The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.\r\n                                     * Instead, it will resolve normally (with ok status set to false), and it will only reject on network failure\r\n                                     * or if anything prevented the request from completing.\r\n                                     */\r\n                                    if (!_isOneDs && !response_1.ok) {\r\n                                        // this is for appInsights only\r\n                                        _handleError(response_1.statusText);\r\n                                        resolveFunc && resolveFunc(false);\r\n                                    }\r\n                                    else {\r\n                                        if (_isOneDs && !response_1.body) {\r\n                                            _onFetchComplete(response_1, null, STR_EMPTY);\r\n                                            resolveFunc && resolveFunc(true);\r\n                                        }\r\n                                        else {\r\n                                            doAwaitResponse(response_1.text(), function (resp) {\r\n                                                _onFetchComplete(response_1, payload, resp[_DYN_VALUE /* @min:%2evalue */]);\r\n                                                resolveFunc && resolveFunc(true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e) {\r\n                                    _handleError(dumpObj(e));\r\n                                    rejectFunc && rejectFunc(e);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _handleError(result.reason && result.reason[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                rejectFunc && rejectFunc(result.reason);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    if (!responseHandled) {\r\n                        _handleError(dumpObj(e));\r\n                        rejectFunc && rejectFunc(e);\r\n                    }\r\n                }\r\n                if (ignoreResponse && !responseHandled) {\r\n                    // Assume success during unload processing as we most likely won't get the response\r\n                    responseHandled = true;\r\n                    _doOnComplete(oncomplete, 200, {});\r\n                    resolveFunc && resolveFunc(true);\r\n                }\r\n                if (_isOneDs && !responseHandled && payload[_DYN_TIMEOUT /* @min:%2etimeout */] > 0) {\r\n                    // Simulate timeout\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        if (!responseHandled) {\r\n                            // Assume a 500 response (which will cause a retry)\r\n                            responseHandled = true;\r\n                            _doOnComplete(oncomplete, 500, {});\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                }\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send XDomainRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             *\r\n             * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n             * to maintain consistency with the xhrSender's contract\r\n             * Note: XDomainRequest does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _xdrSender(payload, oncomplete, sync) {\r\n                // It doesn't support custom headers, so no action is taken with current requestHeaders\r\n                var _window = getWindow();\r\n                var xdr = new XDomainRequest();\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                xdr.onload = function () {\r\n                    var response = getResponseText(xdr);\r\n                    var onloadFunc = _onCompleteFuncs && _onCompleteFuncs.xdrOnComplete;\r\n                    if (onloadFunc && isFunction(onloadFunc)) {\r\n                        onloadFunc(xdr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, 200, {}, response);\r\n                    }\r\n                };\r\n                xdr.onerror = function () {\r\n                    _doOnComplete(oncomplete, 400, {}, _isOneDs ? STR_EMPTY : formatErrorMessageXdr(xdr));\r\n                };\r\n                xdr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, 500, {});\r\n                };\r\n                xdr.onprogress = function () { };\r\n                // XDomainRequest requires the same protocol as the hosting page.\r\n                // If the protocol doesn't match, we can't send the telemetry :(.\r\n                var hostingProtocol = _window && _window.location && _window.location[_DYN_PROTOCOL /* @min:%2eprotocol */] || \"\";\r\n                var endpoint = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endpoint) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    return;\r\n                }\r\n                if (!_isOneDs && endpoint.lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                    var msg = \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\";\r\n                    _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + msg);\r\n                    _onError(msg, oncomplete);\r\n                    return;\r\n                }\r\n                var endpointUrl = _isOneDs ? endpoint : endpoint[_DYN_REPLACE /* @min:%2ereplace */](/^(https?:)/, \"\");\r\n                xdr.open(STR_POST_METHOD, endpointUrl);\r\n                if (payload[_DYN_TIMEOUT /* @min:%2etimeout */]) {\r\n                    xdr[_DYN_TIMEOUT /* @min:%2etimeout */] = payload[_DYN_TIMEOUT /* @min:%2etimeout */];\r\n                }\r\n                xdr.send(data);\r\n                if (_isOneDs && sync) {\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        xdr.send(data);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    xdr.send(data);\r\n                }\r\n            }\r\n            function _initDefaults() {\r\n                _syncFetchPayload = 0;\r\n                _isInitialized = false;\r\n                _enableSendPromise = false;\r\n                _diagLog = null;\r\n                _isOneDs = null;\r\n                _onCompleteFuncs = null;\r\n                _disableCredentials = null;\r\n                _fetchCredentials = null;\r\n                _fallbackInst = null;\r\n                _disableXhr = false;\r\n                _disableBeacon = false;\r\n                _disableBeaconSync = false;\r\n                _disableFetchKeepAlive = false;\r\n                _addNoResponse = false;\r\n                _timeoutWrapper = null;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SenderPostManager.prototype.initialize.\r\n// Removed Stub for SenderPostManager.prototype.getSyncFetchPayload.\r\n// Removed Stub for SenderPostManager.prototype.SetConfig.\r\n// Removed Stub for SenderPostManager.prototype.getSenderInst.\r\n// Removed Stub for SenderPostManager.prototype.getFallbackInst.\r\n// Removed Stub for SenderPostManager.prototype._doTeardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    SenderPostManager.__ieDyn=1;\n\n    return SenderPostManager;\r\n}());\r\nexport { SenderPostManager };\r\n//# sourceMappingURL=SenderPostManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n//  @skip-file-minify\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\nexport var LoggingSeverity = createEnumStyle({\r\n    DISABLED: 0 /* eLoggingSeverity.DISABLED */,\r\n    CRITICAL: 1 /* eLoggingSeverity.CRITICAL */,\r\n    WARNING: 2 /* eLoggingSeverity.WARNING */,\r\n    DEBUG: 3 /* eLoggingSeverity.DEBUG */\r\n});\r\n//# sourceMappingURL=LoggingEnums.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strShimFunction, strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\nimport { getInst, objHasOwnProperty } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SPLICE } from \"../__DynamicConstants\";\r\nimport { _getObjProto } from \"./HelperFuncs\";\r\nvar aiInstrumentHooks = \"_aiHooks\";\r\nvar cbNames = [\r\n    \"req\", \"rsp\", \"hkErr\", \"fnErr\"\r\n];\r\n/** @ignore */\r\nfunction _arrLoop(arr, fn) {\r\n    if (arr) {\r\n        for (var lp = 0; lp < arr[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            if (fn(arr[lp], lp)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _doCallbacks(hooks, callDetails, cbArgs, hookCtx, type) {\r\n    if (type >= 0 /* CallbackType.Request */ && type <= 2 /* CallbackType.HookError */) {\r\n        _arrLoop(hooks, function (hook, idx) {\r\n            var cbks = hook.cbks;\r\n            var cb = cbks[cbNames[type]];\r\n            if (cb) {\r\n                // Set the specific hook context implementation using a lazy creation pattern\r\n                callDetails.ctx = function () {\r\n                    var ctx = hookCtx[idx] = (hookCtx[idx] || {});\r\n                    return ctx;\r\n                };\r\n                try {\r\n                    cb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                }\r\n                catch (err) {\r\n                    var orgEx = callDetails.err;\r\n                    try {\r\n                        // Report Hook error via the callback\r\n                        var hookErrorCb = cbks[cbNames[2 /* CallbackType.HookError */]];\r\n                        if (hookErrorCb) {\r\n                            callDetails.err = err;\r\n                            hookErrorCb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // Not much we can do here -- swallowing the exception to avoid crashing the hosting app\r\n                    }\r\n                    finally {\r\n                        // restore the original exception (if any)\r\n                        callDetails.err = orgEx;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _createFunctionHook(aiHook) {\r\n    // Define a temporary method that queues-up a the real method call\r\n    return function () {\r\n        var _a;\r\n        var funcThis = this;\r\n        // Capture the original arguments passed to the method\r\n        var orgArgs = arguments;\r\n        var hooks = aiHook.h;\r\n        var funcArgs = (_a = {},\r\n            _a[_DYN_NAME /* @min:name */] = aiHook.n,\r\n            _a.inst = funcThis,\r\n            _a.ctx = null,\r\n            _a.set = _replaceArg,\r\n            _a);\r\n        var hookCtx = [];\r\n        var cbArgs = _createArgs([funcArgs], orgArgs);\r\n        funcArgs.evt = getInst(\"event\");\r\n        function _createArgs(target, theArgs) {\r\n            _arrLoop(theArgs, function (arg) {\r\n                target[_DYN_PUSH /* @min:%2epush */](arg);\r\n            });\r\n            return target;\r\n        }\r\n        function _replaceArg(idx, value) {\r\n            orgArgs = _createArgs([], orgArgs);\r\n            orgArgs[idx] = value;\r\n            cbArgs = _createArgs([funcArgs], orgArgs);\r\n        }\r\n        // Call the pre-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 0 /* CallbackType.Request */);\r\n        // Call the original function was called\r\n        var theFunc = aiHook.f;\r\n        if (theFunc) {\r\n            try {\r\n                funcArgs.rslt = theFunc[_DYN_APPLY /* @min:%2eapply */](funcThis, orgArgs);\r\n            }\r\n            catch (err) {\r\n                // Report the request callback\r\n                funcArgs.err = err;\r\n                _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 3 /* CallbackType.FunctionError */);\r\n                // rethrow the original exception so anyone listening for it can catch the exception\r\n                throw err;\r\n            }\r\n        }\r\n        // Call the post-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 1 /* CallbackType.Response */);\r\n        return funcArgs.rslt;\r\n    };\r\n}\r\n/** @ignore */\r\nfunction _getOwner(target, name, checkPrototype, checkParentProto) {\r\n    var owner = null;\r\n    if (target) {\r\n        if (objHasOwnProperty(target, name)) {\r\n            owner = target;\r\n        }\r\n        else if (checkPrototype) {\r\n            owner = _getOwner(_getObjProto(target), name, checkParentProto, false);\r\n        }\r\n    }\r\n    return owner;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProto(target, funcName, callbacks) {\r\n    if (target) {\r\n        return InstrumentFunc(target[strShimPrototype], funcName, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProtos(target, funcNames, callbacks) {\r\n    if (target) {\r\n        return InstrumentFuncs(target[strShimPrototype], funcNames, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\nfunction _createInstrumentHook(owner, funcName, fn, callbacks) {\r\n    var aiHook = fn && fn[aiInstrumentHooks];\r\n    if (!aiHook) {\r\n        // Only hook the function once\r\n        aiHook = {\r\n            i: 0,\r\n            n: funcName,\r\n            f: fn,\r\n            h: []\r\n        };\r\n        // Override (hook) the original function\r\n        var newFunc = _createFunctionHook(aiHook);\r\n        newFunc[aiInstrumentHooks] = aiHook; // Tag and store the function hooks\r\n        owner[funcName] = newFunc;\r\n    }\r\n    var theHook = {\r\n        // tslint:disable:object-literal-shorthand\r\n        id: aiHook.i,\r\n        cbks: callbacks,\r\n        rm: function () {\r\n            // DO NOT Use () => { shorthand for the function as the this gets replaced\r\n            // with the outer this and not the this for theHook instance.\r\n            var id = this.id;\r\n            _arrLoop(aiHook.h, function (hook, idx) {\r\n                if (hook.id === id) {\r\n                    aiHook.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return 1;\r\n                }\r\n            });\r\n        }\r\n        // tslint:enable:object-literal-shorthand\r\n    };\r\n    aiHook.i++;\r\n    aiHook.h[_DYN_PUSH /* @min:%2epush */](theHook);\r\n    return theHook;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    if (target && funcName && callbacks) {\r\n        var owner = _getOwner(target, funcName, checkPrototype, checkParentProto);\r\n        if (owner) {\r\n            var fn = owner[funcName];\r\n            if (typeof fn === strShimFunction) {\r\n                return _createInstrumentHook(owner, funcName, fn, callbacks);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFuncs(target, funcNames, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    var hooks = null;\r\n    _arrLoop(funcNames, function (funcName) {\r\n        var hook = InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto);\r\n        if (hook) {\r\n            if (!hooks) {\r\n                hooks = [];\r\n            }\r\n            hooks[_DYN_PUSH /* @min:%2epush */](hook);\r\n        }\r\n    });\r\n    return hooks;\r\n}\r\n/**\r\n * Add an instrumentation hook to the provided named \"event\" for the target class / object, this doesn't check whether the\r\n * named \"event\" is in fact a function and just assigns the instrumentation hook to the target[evtName]\r\n * @param target - The target object\r\n * @param evtName - The name of the event\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentEvent(target, evtName, callbacks, checkPrototype, checkParentProto) {\r\n    if (target && evtName && callbacks) {\r\n        var owner = _getOwner(target, evtName, checkPrototype, checkParentProto) || target;\r\n        if (owner) {\r\n            return _createInstrumentHook(owner, evtName, owner[evtName], callbacks);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=InstrumentHooks.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nexport var RequestHeaders = createValueMap({\r\n    requestContextHeader: [0 /* eRequestHeaders.requestContextHeader */, \"Request-Context\"],\r\n    requestContextTargetKey: [1 /* eRequestHeaders.requestContextTargetKey */, \"appId\"],\r\n    requestContextAppIdFormat: [2 /* eRequestHeaders.requestContextAppIdFormat */, \"appId=cid-v1:\"],\r\n    requestIdHeader: [3 /* eRequestHeaders.requestIdHeader */, \"Request-Id\"],\r\n    traceParentHeader: [4 /* eRequestHeaders.traceParentHeader */, \"traceparent\"],\r\n    traceStateHeader: [5 /* eRequestHeaders.traceStateHeader */, \"tracestate\"],\r\n    sdkContextHeader: [6 /* eRequestHeaders.sdkContextHeader */, \"Sdk-Context\"],\r\n    sdkContextHeaderAppIdRequest: [7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */, \"appId\"],\r\n    requestContextHeaderLowerCase: [8 /* eRequestHeaders.requestContextHeaderLowerCase */, \"request-context\"]\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_LENGTH = \"length\"; // Count: 41\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 6\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 9\r\nexport var _DYN_PUSH = \"push\"; // Count: 5\r\nexport var _DYN_REMOVE_ITEM = \"removeItem\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 10\r\nexport var _DYN_COUNT = \"count\"; // Count: 8\r\nexport var _DYN_PRE_TRIGGER_DATE = \"preTriggerDate\"; // Count: 4\r\nexport var _DYN_DISABLED = \"disabled\"; // Count: 3\r\nexport var _DYN_INTERVAL = \"interval\"; // Count: 3\r\nexport var _DYN_DAYS_OF_MONTH = \"daysOfMonth\"; // Count: 3\r\nexport var _DYN_DATE = \"date\"; // Count: 5\r\nexport var _DYN_GET_UTCDATE = \"getUTCDate\"; // Count: 3\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 4\r\nexport var _DYN_CORRELATION_HEADER_E0 = \"correlationHeaderExcludePatterns\"; // Count: 2\r\nexport var _DYN_EXTENSION_CONFIG = \"extensionConfig\"; // Count: 4\r\nexport var _DYN_EXCEPTIONS = \"exceptions\"; // Count: 6\r\nexport var _DYN_PARSED_STACK = \"parsedStack\"; // Count: 13\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 9\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 9\r\nexport var _DYN_SIZE_IN_BYTES = \"sizeInBytes\"; // Count: 11\r\nexport var _DYN_TYPE_NAME = \"typeName\"; // Count: 11\r\nexport var _DYN_SEVERITY_LEVEL = \"severityLevel\"; // Count: 5\r\nexport var _DYN_PROBLEM_GROUP = \"problemGroup\"; // Count: 3\r\nexport var _DYN_IS_MANUAL = \"isManual\"; // Count: 3\r\nexport var _DYN__CREATE_FROM_INTERFA1 = \"CreateFromInterface\"; // Count: 2\r\nexport var _DYN_ASSEMBLY = \"assembly\"; // Count: 7\r\nexport var _DYN_FILE_NAME = \"fileName\"; // Count: 8\r\nexport var _DYN_HAS_FULL_STACK = \"hasFullStack\"; // Count: 6\r\nexport var _DYN_LEVEL = \"level\"; // Count: 5\r\nexport var _DYN_METHOD = \"method\"; // Count: 7\r\nexport var _DYN_LINE = \"line\"; // Count: 6\r\nexport var _DYN_DURATION = \"duration\"; // Count: 4\r\nexport var _DYN_RECEIVED_RESPONSE = \"receivedResponse\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, getJSON, hasJSON, isObject, objForEachKey, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { asString, strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_STRINGIFY, _DYN_TO_STRING } from \"../../__DynamicConstants\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key[_DYN_LENGTH /* @min:%2elength */];\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field[_DYN_LENGTH /* @min:%2elength */] !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = strSubstring(field, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(asString(name));\r\n        // truncate the string to 150 chars\r\n        if (name[_DYN_LENGTH /* @min:%2elength */] > 150 /* DataSanitizerValues.MAX_NAME_LENGTH */) {\r\n            nameTrunc = strSubstring(name, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 57 /* _eInternalMessageId.NameTooLong */, \"name is too long.  It has been truncated to \" + 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(asString(value));\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            valueTrunc = strSubstring(value, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 61 /* _eInternalMessageId.StringValueTooLong */, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* DataSanitizerValues.MAX_URL_LENGTH */, 66 /* _eInternalMessageId.UrlTooLong */);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = strSubstring(message, 0, 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 56 /* _eInternalMessageId.MessageTruncated */, \"message is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = strSubstring(value, 0, 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 52 /* _eInternalMessageId.ExceptionTruncated */, \"exception is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* DataSanitizerValues.MAX_ID_LENGTH */, 69 /* _eInternalMessageId.IdTooLong */)[_DYN_TO_STRING /* @min:%2etoString */]() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(asString(input));\r\n        if (input[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            inputTrunc = strSubstring(input, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return strSubstr(s, s[_DYN_LENGTH /* @min:%2elength */] - 3);\r\n}\r\n//# sourceMappingURL=DataSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PATHNAME, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _document = getDocument() || {};\r\nvar _htmlAnchorIdx = 0;\r\n// Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\nvar _htmlAnchorElement = [null, null, null, null, null];\r\nexport function urlParseUrl(url) {\r\n    var anchorIdx = _htmlAnchorIdx;\r\n    var anchorCache = _htmlAnchorElement;\r\n    var tempAnchor = anchorCache[anchorIdx];\r\n    if (!_document.createElement) {\r\n        // Always create the temp instance if createElement is not available\r\n        tempAnchor = { host: urlParseHost(url, true) };\r\n    }\r\n    else if (!anchorCache[anchorIdx]) {\r\n        // Create and cache the unattached anchor instance\r\n        tempAnchor = anchorCache[anchorIdx] = _document.createElement(\"a\");\r\n    }\r\n    tempAnchor.href = url;\r\n    // Move the cache index forward\r\n    anchorIdx++;\r\n    if (anchorIdx >= anchorCache[_DYN_LENGTH /* @min:%2elength */]) {\r\n        anchorIdx = 0;\r\n    }\r\n    _htmlAnchorIdx = anchorIdx;\r\n    return tempAnchor;\r\n}\r\nexport function urlGetAbsoluteUrl(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a.href;\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetPathName(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a[_DYN_PATHNAME /* @min:%2epathname */];\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetCompleteUrl(method, absoluteUrl) {\r\n    if (method) {\r\n        return method.toUpperCase() + \" \" + absoluteUrl;\r\n    }\r\n    return absoluteUrl;\r\n}\r\n// Fallback method to grab host from url if document.createElement method is not available\r\nexport function urlParseHost(url, inclPort) {\r\n    var fullHost = urlParseFullHost(url, inclPort) || \"\";\r\n    if (fullHost) {\r\n        var match = fullHost.match(/(www\\d{0,5}\\.)?([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 3 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            return match[2] + (match[3] || \"\");\r\n        }\r\n    }\r\n    return fullHost;\r\n}\r\nexport function urlParseFullHost(url, inclPort) {\r\n    var result = null;\r\n    if (url) {\r\n        var match = url.match(/(\\w{1,150}):\\/\\/([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 2 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            result = match[2] || \"\";\r\n            if (inclPort && match[_DYN_LENGTH /* @min:%2elength */] > 2) {\r\n                var protocol = (match[1] || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                var port = match[3] || \"\";\r\n                // IE includes the standard port so pass it off if it's the same as the protocol\r\n                if (protocol === \"http\" && port === \":80\") {\r\n                    port = \"\";\r\n                }\r\n                else if (protocol === \"https\" && port === \":443\") {\r\n                    port = \"\";\r\n                }\r\n                result += port;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=UrlHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dateNow, getPerformance, isNullOrUndefined, isValidSpanId, isValidTraceId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH } from \"./Constants\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { urlParseFullHost, urlParseUrl } from \"./UrlHelperFuncs\";\r\nimport { _DYN_CORRELATION_HEADER_E0, _DYN_LENGTH, _DYN_NAME, _DYN_PATHNAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\n// listing only non-geo specific locations\r\nvar _internalEndpoints = [\r\n    DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH,\r\n    \"https://breeze.aimon.applicationinsights.io\" + DEFAULT_BREEZE_PATH,\r\n    \"https://dc-int.services.visualstudio.com\" + DEFAULT_BREEZE_PATH\r\n];\r\nvar _correlationIdPrefix = \"cid-v1:\";\r\nexport function isInternalApplicationInsightsEndpoint(endpointUrl) {\r\n    return arrIndexOf(_internalEndpoints, endpointUrl[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) !== -1;\r\n}\r\nexport function correlationIdSetPrefix(prefix) {\r\n    _correlationIdPrefix = prefix;\r\n}\r\nexport function correlationIdGetPrefix() {\r\n    return _correlationIdPrefix;\r\n}\r\n/**\r\n * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n */\r\nexport function correlationIdCanIncludeCorrelationHeader(config, requestUrl, currentHost) {\r\n    if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n        return false;\r\n    }\r\n    if (config && config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */]) {\r\n        for (var i = 0; i < config.correlationHeaderExcludePatterns[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */][i].test(requestUrl)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    var requestHost = urlParseUrl(requestUrl).host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    if (requestHost && (strIndexOf(requestHost, \":443\") !== -1 || strIndexOf(requestHost, \":80\") !== -1)) {\r\n        // [Bug #1260] IE can include the port even for http and https URLs so if present\r\n        // try and parse it to remove if it matches the default protocol port\r\n        requestHost = (urlParseFullHost(requestUrl, true) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    }\r\n    if ((!config || !config.enableCorsCorrelation) && (requestHost && requestHost !== currentHost)) {\r\n        return false;\r\n    }\r\n    var includedDomains = config && config.correlationHeaderDomains;\r\n    if (includedDomains) {\r\n        var matchExists_1;\r\n        arrForEach(includedDomains, function (domain) {\r\n            var regex = new RegExp(domain.toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n            matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n        });\r\n        if (!matchExists_1) {\r\n            return false;\r\n        }\r\n    }\r\n    var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n    if (!excludedDomains || excludedDomains[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < excludedDomains[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n        if (regex.test(requestHost)) {\r\n            return false;\r\n        }\r\n    }\r\n    // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n    // Previously we always returned false for a falsy requestHost\r\n    return requestHost && requestHost[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\n/**\r\n * Combines target appId and target role name from response header.\r\n */\r\nexport function correlationIdGetCorrelationContext(responseHeader) {\r\n    if (responseHeader) {\r\n        var correlationId = correlationIdGetCorrelationContextValue(responseHeader, RequestHeaders[1 /* eRequestHeaders.requestContextTargetKey */]);\r\n        if (correlationId && correlationId !== _correlationIdPrefix) {\r\n            return correlationId;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets key from correlation response header\r\n */\r\nexport function correlationIdGetCorrelationContextValue(responseHeader, key) {\r\n    if (responseHeader) {\r\n        var keyValues = responseHeader[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        for (var i = 0; i < keyValues[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            var keyValue = keyValues[i][_DYN_SPLIT /* @min:%2esplit */](\"=\");\r\n            if (keyValue[_DYN_LENGTH /* @min:%2elength */] === 2 && keyValue[0] === key) {\r\n                return keyValue[1];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {\r\n    var target, name = commandName, data = commandName;\r\n    if (absoluteUrl && absoluteUrl[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        var parsedUrl = urlParseUrl(absoluteUrl);\r\n        target = parsedUrl.host;\r\n        if (!name) {\r\n            if (parsedUrl[_DYN_PATHNAME /* @min:%2epathname */] != null) {\r\n                var pathName = (parsedUrl.pathname[_DYN_LENGTH /* @min:%2elength */] === 0) ? \"/\" : parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                if (pathName.charAt(0) !== \"/\") {\r\n                    pathName = \"/\" + pathName;\r\n                }\r\n                data = parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                name = dataSanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n            }\r\n            else {\r\n                name = dataSanitizeString(logger, absoluteUrl);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        target = commandName;\r\n        name = commandName;\r\n    }\r\n    return {\r\n        target: target,\r\n        name: name,\r\n        data: data\r\n    };\r\n}\r\nexport function dateTimeUtilsNow() {\r\n    // returns the window or webworker performance object\r\n    var perf = getPerformance();\r\n    if (perf && perf.now && perf.timing) {\r\n        var now = perf.now() + perf.timing.navigationStart;\r\n        // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n        if (now > 0) {\r\n            return now;\r\n        }\r\n    }\r\n    return dateNow();\r\n}\r\nexport function dateTimeUtilsDuration(start, end) {\r\n    var result = null;\r\n    if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {\r\n        result = end - start;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param telemetryTrace - The telemetryTrace instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the telemetryTrace or temporary object\r\n */\r\nexport function createDistributedTraceContextFromTrace(telemetryTrace, parentCtx) {\r\n    var trace = telemetryTrace || {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceID;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceID = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentID;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentID = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Util.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\nexport var StorageType = createEnumStyle({\r\n    LocalStorage: 0 /* eStorageType.LocalStorage */,\r\n    SessionStorage: 1 /* eStorageType.SessionStorage */\r\n});\r\nexport var DistributedTracingModes = createEnumStyle({\r\n    AI: 0 /* eDistributedTracingModes.AI */,\r\n    AI_AND_W3C: 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    W3C: 2 /* eDistributedTracingModes.W3C */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nimport { _DYN_PUSH, _DYN_REMOVE_ITEM, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\nvar _storagePrefix = \"\";\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType - Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = (new Date)[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        var name_1 = _storagePrefix + uid;\r\n        storage.setItem(name_1, uid);\r\n        var fail = storage.getItem(name_1) !== uid;\r\n        storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name_1);\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Disables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\nexport function utlSetStoragePrefix(storagePrefix) {\r\n    _storagePrefix = storagePrefix || \"\";\r\n}\r\n/**\r\n * Re-enables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlEnableStorage() {\r\n    _canUseLocalStorage = utlCanUseLocalStorage(true);\r\n    _canUseSessionStorage = utlCanUseSessionStorage(true);\r\n}\r\n/**\r\n * Returns whether LocalStorage can be used, if the reset parameter is passed a true this will override\r\n * any previous disable calls.\r\n * @param reset - Should the usage be reset and determined only based on whether LocalStorage is available\r\n */\r\nexport function utlCanUseLocalStorage(reset) {\r\n    if (reset || _canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 1 /* _eInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 3 /* _eInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 5 /* _eInternalMessageId.BrowserFailedRemovalFromLocalStorage */, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage(reset) {\r\n    if (reset || _canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys[_DYN_PUSH /* @min:%2epush */](key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 2 /* _eInternalMessageId.BrowserCannotReadSessionStorage */, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 4 /* _eInternalMessageId.BrowserCannotWriteSessionStorage */, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 6 /* _eInternalMessageId.BrowserFailedRemovalFromSessionStorage */, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { _throwInternal, arrIndexOf, isNotNullOrUndefined, isNullOrUndefined, onConfigChange, randomValue, safeGetLogger, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { arrForEach, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage } from \"./StorageHelperFuncs\";\r\nimport { _DYN_COUNT, _DYN_DATE, _DYN_DAYS_OF_MONTH, _DYN_DISABLED, _DYN_GET_UTCDATE, _DYN_INTERVAL, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PRE_TRIGGER_DATE, _DYN_PUSH, _DYN_STRINGIFY } from \"./__DynamicConstants\";\r\nvar THROTTLE_STORAGE_PREFIX = \"appInsightsThrottle\";\r\nvar ThrottleMgr = /** @class */ (function () {\r\n    function ThrottleMgr(core, namePrefix) {\r\n        var _self = this;\r\n        var _canUseLocalStorage;\r\n        var _logger;\r\n        var _config;\r\n        var _localStorageObj;\r\n        var _isTriggered; //_isTriggered is to make sure that we only trigger throttle once a day\r\n        var _namePrefix;\r\n        var _queue;\r\n        var _isReady = false;\r\n        var _isSpecificDaysGiven = false;\r\n        _initConfig();\r\n        // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n        _self[\"_getDbgPlgTargets\"] = function () {\r\n            return [_queue];\r\n        };\r\n        _self.getConfig = function () {\r\n            return _config;\r\n        };\r\n        /**\r\n         * Check if it is the correct day to send message.\r\n         * If _isTriggered is true, even if canThrottle returns true, message will not be sent,\r\n         * because we only allow triggering sendMessage() once a day.\r\n         * @returns if the current date is the valid date to send message\r\n         */\r\n        _self.canThrottle = function (msgId) {\r\n            var localObj = _getLocalStorageObjByKey(msgId);\r\n            var cfg = _getCfgByKey(msgId);\r\n            return _canThrottle(cfg, _canUseLocalStorage, localObj);\r\n        };\r\n        /**\r\n         * Check if throttle is triggered on current day(UTC)\r\n         * if canThrottle returns false, isTriggered will return false\r\n         * @returns if throttle is triggered on current day(UTC)\r\n         */\r\n        _self.isTriggered = function (msgId) {\r\n            return _isTrigger(msgId);\r\n        };\r\n        /**\r\n         * Before isReady set to true, all message will be stored in queue.\r\n         * Message will only be sent out after isReady set to true.\r\n         * Initial and default value: false\r\n         * @returns isReady state\r\n         */\r\n        _self.isReady = function () {\r\n            return _isReady;\r\n        };\r\n        /**\r\n         * Flush all message with given message key in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flush = function (msgId) {\r\n            try {\r\n                var queue = _getQueueByKey(msgId);\r\n                if (queue && queue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var items = queue.slice(0);\r\n                    _queue[msgId] = [];\r\n                    arrForEach(items, function (item) {\r\n                        _flushMessage(item.msgID, item[_DYN_MESSAGE /* @min:%2emessage */], item.severity, false);\r\n                    });\r\n                    return true;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Flush all message in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flushAll = function () {\r\n            try {\r\n                if (_queue) {\r\n                    var result_1 = true;\r\n                    objForEachKey(_queue, function (key) {\r\n                        var isFlushed = _self.flush(parseInt(key));\r\n                        result_1 = result_1 && isFlushed;\r\n                    });\r\n                    return result_1;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Set isReady State\r\n         * if isReady set to true, message queue will be flushed automatically.\r\n         * @param isReady isReady State\r\n         * @pa\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.onReadyState = function (isReady, flushAll) {\r\n            if (flushAll === void 0) { flushAll = true; }\r\n            _isReady = isNullOrUndefined(isReady) ? true : isReady;\r\n            if (_isReady && flushAll) {\r\n                return _self.flushAll();\r\n            }\r\n            return null;\r\n        };\r\n        _self.sendMessage = function (msgID, message, severity) {\r\n            return _flushMessage(msgID, message, severity, true);\r\n        };\r\n        function _flushMessage(msgID, message, severity, saveUnsentMsg) {\r\n            if (_isReady) {\r\n                var isSampledIn = _canSampledIn(msgID);\r\n                if (!isSampledIn) {\r\n                    return;\r\n                }\r\n                var cfg = _getCfgByKey(msgID);\r\n                var localStorageObj = _getLocalStorageObjByKey(msgID);\r\n                var canThrottle = _canThrottle(cfg, _canUseLocalStorage, localStorageObj);\r\n                var throttled = false;\r\n                var number = 0;\r\n                var isTriggered = _isTrigger(msgID);\r\n                try {\r\n                    if (canThrottle && !isTriggered) {\r\n                        number = Math.min(cfg.limit.maxSendNumber, localStorageObj[_DYN_COUNT /* @min:%2ecount */] + 1);\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] = 0;\r\n                        throttled = true;\r\n                        _isTriggered[msgID] = true;\r\n                        localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */] = new Date();\r\n                    }\r\n                    else {\r\n                        _isTriggered[msgID] = canThrottle;\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] += 1;\r\n                    }\r\n                    var localStorageName = _getLocalStorageName(msgID);\r\n                    _resetLocalStorage(_logger, localStorageName, localStorageObj);\r\n                    for (var i = 0; i < number; i++) {\r\n                        _sendMessage(msgID, _logger, message, severity);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return {\r\n                    isThrottled: throttled,\r\n                    throttleNum: number\r\n                };\r\n            }\r\n            else {\r\n                if (!!saveUnsentMsg) {\r\n                    var queue = _getQueueByKey(msgID);\r\n                    queue[_DYN_PUSH /* @min:%2epush */]({\r\n                        msgID: msgID,\r\n                        message: message,\r\n                        severity: severity\r\n                    });\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        function _initConfig() {\r\n            _logger = safeGetLogger(core);\r\n            _isTriggered = {};\r\n            _localStorageObj = {};\r\n            _queue = {};\r\n            _config = {};\r\n            _setCfgByKey(109 /* _eInternalMessageId.DefaultThrottleMsgKey */);\r\n            _namePrefix = isNotNullOrUndefined(namePrefix) ? namePrefix : \"\";\r\n            core.addUnloadHook(onConfigChange(core.config, function (details) {\r\n                var coreConfig = details.cfg;\r\n                _canUseLocalStorage = utlCanUseLocalStorage();\r\n                var configMgr = coreConfig.throttleMgrCfg || {};\r\n                objForEachKey(configMgr, function (key, cfg) {\r\n                    _setCfgByKey(parseInt(key), cfg);\r\n                });\r\n            }));\r\n        }\r\n        function _getCfgByKey(msgID) {\r\n            return _config[msgID] || _config[109 /* _eInternalMessageId.DefaultThrottleMsgKey */];\r\n        }\r\n        function _setCfgByKey(msgID, config) {\r\n            var _a, _b;\r\n            try {\r\n                var cfg = config || {};\r\n                var curCfg = {};\r\n                curCfg[_DYN_DISABLED /* @min:%2edisabled */] = !!cfg[_DYN_DISABLED /* @min:%2edisabled */];\r\n                var configInterval = cfg[_DYN_INTERVAL /* @min:%2einterval */] || {};\r\n                _isSpecificDaysGiven = (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth) && (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth[_DYN_LENGTH /* @min:%2elength */]) > 0;\r\n                curCfg[_DYN_INTERVAL /* @min:%2einterval */] = _getIntervalConfig(configInterval);\r\n                var limit = {\r\n                    samplingRate: ((_a = cfg.limit) === null || _a === void 0 ? void 0 : _a.samplingRate) || 100,\r\n                    // dafault: every time sent only 1 event\r\n                    maxSendNumber: ((_b = cfg.limit) === null || _b === void 0 ? void 0 : _b.maxSendNumber) || 1\r\n                };\r\n                curCfg.limit = limit;\r\n                _config[msgID] = curCfg;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n        }\r\n        function _getIntervalConfig(interval) {\r\n            interval = interval || {};\r\n            var monthInterval = interval === null || interval === void 0 ? void 0 : interval.monthInterval;\r\n            var dayInterval = interval === null || interval === void 0 ? void 0 : interval.dayInterval;\r\n            // default: send data every 3 month each year\r\n            if (isNullOrUndefined(monthInterval) && isNullOrUndefined(dayInterval)) {\r\n                interval.monthInterval = 3;\r\n                if (!_isSpecificDaysGiven) {\r\n                    // default: send data on 28th\r\n                    interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */] = [28];\r\n                    _isSpecificDaysGiven = true;\r\n                }\r\n            }\r\n            interval = {\r\n                // dafault: sent every three months\r\n                monthInterval: interval === null || interval === void 0 ? void 0 : interval.monthInterval,\r\n                dayInterval: interval === null || interval === void 0 ? void 0 : interval.dayInterval,\r\n                daysOfMonth: interval === null || interval === void 0 ? void 0 : interval.daysOfMonth\r\n            };\r\n            return interval;\r\n        }\r\n        function _canThrottle(config, canUseLocalStorage, localStorageObj) {\r\n            if (config && !config[_DYN_DISABLED /* @min:%2edisabled */] && canUseLocalStorage && isNotNullOrUndefined(localStorageObj)) {\r\n                var curDate = _getThrottleDate();\r\n                var date = localStorageObj[_DYN_DATE /* @min:%2edate */];\r\n                var interval = config[_DYN_INTERVAL /* @min:%2einterval */];\r\n                var monthCheck = 1;\r\n                if (interval === null || interval === void 0 ? void 0 : interval.monthInterval) {\r\n                    var monthExpand = (curDate.getUTCFullYear() - date.getUTCFullYear()) * 12 + curDate.getUTCMonth() - date.getUTCMonth();\r\n                    monthCheck = _checkInterval(interval.monthInterval, 0, monthExpand);\r\n                }\r\n                var dayCheck = 1;\r\n                if (_isSpecificDaysGiven) {\r\n                    dayCheck = arrIndexOf(interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */], curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]());\r\n                }\r\n                else if (interval === null || interval === void 0 ? void 0 : interval.dayInterval) {\r\n                    var daySpan = Math.floor((curDate.getTime() - date.getTime()) / 86400000);\r\n                    dayCheck = _checkInterval(interval.dayInterval, 0, daySpan);\r\n                }\r\n                return monthCheck >= 0 && dayCheck >= 0;\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageName(msgKey, prefix) {\r\n            var fix = isNotNullOrUndefined(prefix) ? prefix : \"\";\r\n            if (msgKey) {\r\n                return THROTTLE_STORAGE_PREFIX + fix + \"-\" + msgKey;\r\n            }\r\n            return null;\r\n        }\r\n        // returns if throttle is triggered on current Date\r\n        function _isTriggeredOnCurDate(preTriggerDate) {\r\n            try {\r\n                if (preTriggerDate) {\r\n                    var curDate = new Date();\r\n                    return preTriggerDate.getUTCFullYear() === curDate.getUTCFullYear() &&\r\n                        preTriggerDate.getUTCMonth() === curDate.getUTCMonth() &&\r\n                        preTriggerDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]() === curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        // transfer local storage string value to object that identifies start date, current count and preTriggerDate\r\n        function _getLocalStorageObj(value, logger, storageName) {\r\n            try {\r\n                var storageObj = {\r\n                    date: _getThrottleDate(),\r\n                    count: 0\r\n                };\r\n                if (value) {\r\n                    var obj = JSON.parse(value);\r\n                    var curObj = {\r\n                        date: _getThrottleDate(obj[_DYN_DATE /* @min:%2edate */]) || storageObj[_DYN_DATE /* @min:%2edate */],\r\n                        count: obj[_DYN_COUNT /* @min:%2ecount */] || storageObj[_DYN_COUNT /* @min:%2ecount */],\r\n                        preTriggerDate: obj.preTriggerDate ? _getThrottleDate(obj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]) : undefined\r\n                    };\r\n                    return curObj;\r\n                }\r\n                else {\r\n                    _resetLocalStorage(logger, storageName, storageObj);\r\n                    return storageObj;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        // if datestr is not defined, current date will be returned\r\n        function _getThrottleDate(dateStr) {\r\n            // if new Date() can't be created through the provided dateStr, null will be returned.\r\n            try {\r\n                if (dateStr) {\r\n                    var date = new Date(dateStr);\r\n                    //make sure it is a valid Date Object\r\n                    if (!isNaN(date.getDate())) {\r\n                        return date;\r\n                    }\r\n                }\r\n                else {\r\n                    return new Date();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _resetLocalStorage(logger, storageName, obj) {\r\n            try {\r\n                return utlSetLocalStorage(logger, storageName, strTrim(JSON[_DYN_STRINGIFY /* @min:%2estringify */](obj)));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _checkInterval(interval, start, current) {\r\n            if (interval <= 0) {\r\n                return 1;\r\n            }\r\n            // count from start year\r\n            return (current >= start) && (current - start) % interval == 0 ? Math.floor((current - start) / interval) + 1 : -1;\r\n        }\r\n        function _sendMessage(msgID, logger, message, severity) {\r\n            _throwInternal(logger, severity || 1 /* eLoggingSeverity.CRITICAL */, msgID, message);\r\n        }\r\n        // NOTE: config.limit.samplingRate is set to 4 decimal places,\r\n        // so config.limit.samplingRate = 1 means 0.0001%\r\n        function _canSampledIn(msgID) {\r\n            try {\r\n                var cfg = _getCfgByKey(msgID);\r\n                return randomValue(1000000) <= cfg.limit.samplingRate;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageObjByKey(key) {\r\n            try {\r\n                var curObj = _localStorageObj[key];\r\n                if (!curObj) {\r\n                    var localStorageName = _getLocalStorageName(key, _namePrefix);\r\n                    curObj = _getLocalStorageObj(utlGetLocalStorage(_logger, localStorageName), _logger, localStorageName);\r\n                    _localStorageObj[key] = curObj;\r\n                }\r\n                return _localStorageObj[key];\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _isTrigger(key) {\r\n            var isTrigger = _isTriggered[key];\r\n            if (isNullOrUndefined(isTrigger)) {\r\n                isTrigger = false;\r\n                var localStorageObj = _getLocalStorageObjByKey(key);\r\n                if (localStorageObj) {\r\n                    isTrigger = _isTriggeredOnCurDate(localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]);\r\n                }\r\n                _isTriggered[key] = isTrigger;\r\n            }\r\n            return _isTriggered[key];\r\n        }\r\n        function _getQueueByKey(key) {\r\n            _queue = _queue || {};\r\n            if (isNullOrUndefined(_queue[key])) {\r\n                _queue[key] = [];\r\n            }\r\n            return _queue[key];\r\n        }\r\n    }\r\n    return ThrottleMgr;\r\n}());\r\nexport { ThrottleMgr };\r\n//# sourceMappingURL=ThrottleMgr.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrReduce, objKeys, strEndsWith } from \"@microsoft/applicationinsights-core-js\";\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { _DYN_INGESTIONENDPOINT, _DYN_LENGTH, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _FIELDS_SEPARATOR = \";\";\r\nvar _FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\nexport function parseConnectionString(connectionString) {\r\n    if (!connectionString) {\r\n        return {};\r\n    }\r\n    var kvPairs = connectionString[_DYN_SPLIT /* @min:%2esplit */](_FIELDS_SEPARATOR);\r\n    var result = arrReduce(kvPairs, function (fields, kv) {\r\n        var kvParts = kv[_DYN_SPLIT /* @min:%2esplit */](_FIELD_KEY_VALUE_SEPARATOR);\r\n        if (kvParts[_DYN_LENGTH /* @min:%2elength */] === 2) { // only save fields with valid formats\r\n            var key = kvParts[0][_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            var value = kvParts[1];\r\n            fields[key] = value;\r\n        }\r\n        return fields;\r\n    }, {});\r\n    if (objKeys(result)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // this is a valid connection string, so parse the results\r\n        if (result.endpointsuffix) {\r\n            // apply the default endpoints\r\n            var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n        }\r\n        // apply user override endpoint or the default endpoints\r\n        result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || DEFAULT_BREEZE_ENDPOINT;\r\n        if (strEndsWith(result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */], \"/\")) {\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */].slice(0, -1);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport var ConnectionStringParser = {\r\n    parse: parseConnectionString\r\n};\r\n//# sourceMappingURL=ConnectionStringParser.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strNotSpecified } from \"../../Constants\";\r\nimport { _DYN_NAME } from \"../../__DynamicConstants\";\r\nimport { dataSanitizeString } from \"./DataSanitizer\";\r\nvar Envelope = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = this;\r\n        var _self = this;\r\n        _self.ver = 1;\r\n        _self.sampleRate = 100.0;\r\n        _self.tags = {};\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self.data = data;\r\n        _self.time = toISOString(new Date());\r\n        _self.aiDataContract = {\r\n            time: 1 /* FieldType.Required */,\r\n            iKey: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? 4 /* FieldType.Hidden */ : 1 /* FieldType.Required */;\r\n            },\r\n            tags: 1 /* FieldType.Required */,\r\n            data: 1 /* FieldType.Required */\r\n        };\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}());\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, arrMap, isArray, isError, isFunction, isNullOrUndefined, isObject, isString, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getWindow, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_ASSEMBLY, _DYN_EXCEPTIONS, _DYN_FILE_NAME, _DYN_HAS_FULL_STACK, _DYN_IS_MANUAL, _DYN_LENGTH, _DYN_LEVEL, _DYN_LINE, _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_METHOD, _DYN_NAME, _DYN_PARSED_STACK, _DYN_PROBLEM_GROUP, _DYN_PROPERTIES, _DYN_PUSH, _DYN_SEVERITY_LEVEL, _DYN_SIZE_IN_BYTES, _DYN_SPLIT, _DYN_STRINGIFY, _DYN_TO_STRING, _DYN_TYPE_NAME, _DYN__CREATE_FROM_INTERFA1 } from \"../__DynamicConstants\";\r\nimport { dataSanitizeException, dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar NoMethod = \"<no_method>\";\r\nvar strError = \"error\";\r\nvar strStack = \"stack\";\r\nvar strStackDetails = \"stackDetails\";\r\nvar strErrorSrc = \"errorSrc\";\r\nvar strMessage = \"message\";\r\nvar strDescription = \"description\";\r\nfunction _stringify(value, convertToString) {\r\n    var result = value;\r\n    if (result && !isString(result)) {\r\n        if (JSON && JSON[_DYN_STRINGIFY /* @min:%2estringify */]) {\r\n            result = JSON[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            if (convertToString && (!result || result === \"{}\")) {\r\n                if (isFunction(value[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n                    result = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                }\r\n                else {\r\n                    result = \"\" + value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = \"\" + value + \" - (Missing JSON.stringify)\";\r\n        }\r\n    }\r\n    return result || \"\";\r\n}\r\nfunction _formatMessage(theEvent, errorType) {\r\n    var evtMessage = theEvent;\r\n    if (theEvent) {\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;\r\n        }\r\n        // Make sure the message is a string\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            // tslint:disable-next-line: prefer-conditional-expression\r\n            evtMessage = _stringify(evtMessage, true);\r\n        }\r\n        if (theEvent[\"filename\"]) {\r\n            // Looks like an event object with filename\r\n            evtMessage = evtMessage + \" @\" + (theEvent[\"filename\"] || \"\") + \":\" + (theEvent[\"lineno\"] || \"?\") + \":\" + (theEvent[\"colno\"] || \"?\");\r\n        }\r\n    }\r\n    // Automatically add the error type to the message if it does already appear to be present\r\n    if (errorType && errorType !== \"String\" && errorType !== \"Object\" && errorType !== \"Error\" && strIndexOf(evtMessage || \"\", errorType) === -1) {\r\n        evtMessage = errorType + \": \" + evtMessage;\r\n    }\r\n    return evtMessage || \"\";\r\n}\r\nfunction _isExceptionDetailsInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return \"hasFullStack\" in value && \"typeName\" in value;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isStackDetails(details) {\r\n    return details && details.src && isString(details.src) && details.obj && isArray(details.obj);\r\n}\r\nfunction _convertStackObj(errorStack) {\r\n    var src = errorStack || \"\";\r\n    if (!isString(src)) {\r\n        if (isString(src[strStack])) {\r\n            src = src[strStack];\r\n        }\r\n        else {\r\n            src = \"\" + src;\r\n        }\r\n    }\r\n    var items = src[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    return {\r\n        src: src,\r\n        obj: items\r\n    };\r\n}\r\nfunction _getOperaStack(errorMessage) {\r\n    var stack = [];\r\n    var lines = errorMessage[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    for (var lp = 0; lp < lines[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        var entry = lines[lp];\r\n        if (lines[lp + 1]) {\r\n            entry += \"@\" + lines[lp + 1];\r\n            lp++;\r\n        }\r\n        stack[_DYN_PUSH /* @min:%2epush */](entry);\r\n    }\r\n    return {\r\n        src: errorMessage,\r\n        obj: stack\r\n    };\r\n}\r\nfunction _getStackFromErrorObj(errorObj) {\r\n    var details = null;\r\n    if (errorObj) {\r\n        try {\r\n            /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot\r\n            notation for undefined objects and we don't want to loose the error from being reported */\r\n            if (errorObj[strStack]) {\r\n                // Chrome/Firefox\r\n                details = _convertStackObj(errorObj[strStack]);\r\n            }\r\n            else if (errorObj[strError] && errorObj[strError][strStack]) {\r\n                // Edge error event provides the stack and error object\r\n                details = _convertStackObj(errorObj[strError][strStack]);\r\n            }\r\n            else if (errorObj[\"exception\"] && errorObj.exception[strStack]) {\r\n                details = _convertStackObj(errorObj.exception[strStack]);\r\n            }\r\n            else if (_isStackDetails(errorObj)) {\r\n                details = errorObj;\r\n            }\r\n            else if (_isStackDetails(errorObj[strStackDetails])) {\r\n                details = errorObj[strStackDetails];\r\n            }\r\n            else if (getWindow() && getWindow()[\"opera\"] && errorObj[strMessage]) {\r\n                // Opera\r\n                details = _getOperaStack(errorObj[_DYN_MESSAGE /* @min:%2emessage */]);\r\n            }\r\n            else if (errorObj[\"reason\"] && errorObj.reason[strStack]) {\r\n                // UnhandledPromiseRejection\r\n                details = _convertStackObj(errorObj.reason[strStack]);\r\n            }\r\n            else if (isString(errorObj)) {\r\n                details = _convertStackObj(errorObj);\r\n            }\r\n            else {\r\n                var evtMessage = errorObj[strMessage] || errorObj[strDescription] || \"\";\r\n                if (isString(errorObj[strErrorSrc])) {\r\n                    if (evtMessage) {\r\n                        evtMessage += \"\\n\";\r\n                    }\r\n                    evtMessage += \" from \" + errorObj[strErrorSrc];\r\n                }\r\n                if (evtMessage) {\r\n                    details = _convertStackObj(evtMessage);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // something unexpected happened so to avoid failing to report any error lets swallow the exception\r\n            // and fallback to the callee/caller method\r\n            details = _convertStackObj(e);\r\n        }\r\n    }\r\n    return details || {\r\n        src: \"\",\r\n        obj: null\r\n    };\r\n}\r\nfunction _formatStackTrace(stackDetails) {\r\n    var stack = \"\";\r\n    if (stackDetails) {\r\n        if (stackDetails.obj) {\r\n            arrForEach(stackDetails.obj, function (entry) {\r\n                stack += entry + \"\\n\";\r\n            });\r\n        }\r\n        else {\r\n            stack = stackDetails.src || \"\";\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nfunction _parseStack(stack) {\r\n    var parsedStack;\r\n    var frames = stack.obj;\r\n    if (frames && frames[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        parsedStack = [];\r\n        var level_1 = 0;\r\n        var totalSizeInBytes_1 = 0;\r\n        arrForEach(frames, function (frame) {\r\n            var theFrame = frame[_DYN_TO_STRING /* @min:%2etoString */]();\r\n            if (_StackFrame.regex.test(theFrame)) {\r\n                var parsedFrame = new _StackFrame(theFrame, level_1++);\r\n                totalSizeInBytes_1 += parsedFrame[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                parsedStack[_DYN_PUSH /* @min:%2epush */](parsedFrame);\r\n            }\r\n        });\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        var exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {\r\n            var left = 0;\r\n            var right = parsedStack[_DYN_LENGTH /* @min:%2elength */] - 1;\r\n            var size = 0;\r\n            var acceptedLeft = left;\r\n            var acceptedRight = right;\r\n            while (left < right) {\r\n                // check size\r\n                var lSize = parsedStack[left][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                var rSize = parsedStack[right][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                size += lSize + rSize;\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    var howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n    return parsedStack;\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType[_DYN_NAME /* @min:%2ename */] || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,200})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor[_DYN_TO_STRING /* @min:%2etoString */]());\r\n                typeName = (results && results[_DYN_LENGTH /* @min:%2elength */] > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\n/**\r\n * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.\r\n * @param errorObj - The supplied errorObj\r\n */\r\nexport function _formatErrorCode(errorObj) {\r\n    if (errorObj) {\r\n        try {\r\n            if (!isString(errorObj)) {\r\n                var errorType = _getErrorType(errorObj);\r\n                var result = _stringify(errorObj, false);\r\n                if (!result || result === \"{}\") {\r\n                    if (errorObj[strError]) {\r\n                        // Looks like an MS Error Event\r\n                        errorObj = errorObj[strError];\r\n                        errorType = _getErrorType(errorObj);\r\n                    }\r\n                    result = _stringify(errorObj, true);\r\n                }\r\n                if (strIndexOf(result, errorType) !== 0 && errorType !== \"String\") {\r\n                    return errorType + \":\" + result;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n        }\r\n    }\r\n    // Fallback to just letting the object format itself into a string\r\n    return \"\" + (errorObj || \"\");\r\n}\r\nvar Exception = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            exceptions: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n        if (!_isExceptionInternal(exception)) {\r\n            if (!properties) {\r\n                properties = {};\r\n            }\r\n            if (id) {\r\n                properties.id = id;\r\n            }\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = [new _ExceptionDetails(logger, exception, properties)];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n            }\r\n            if (id) {\r\n                _self.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */] || [];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = exception[_DYN_PROPERTIES /* @min:%2eproperties */];\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = exception[_DYN_MEASUREMENTS /* @min:%2emeasurements */];\r\n            if (exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */]) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */];\r\n            }\r\n            if (exception.id) {\r\n                _self.id = exception.id;\r\n                exception[_DYN_PROPERTIES /* @min:%2eproperties */].id = exception.id;\r\n            }\r\n            if (exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */]) {\r\n                _self[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */] = exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */];\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!isNullOrUndefined(exception[_DYN_IS_MANUAL /* @min:%2eisManual */])) {\r\n                _self[_DYN_IS_MANUAL /* @min:%2eisManual */] = exception[_DYN_IS_MANUAL /* @min:%2eisManual */];\r\n            }\r\n        }\r\n    }\r\n    Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {\r\n        var _a;\r\n        var errorType = _getErrorType(error || evt || message);\r\n        return _a = {},\r\n            _a[_DYN_MESSAGE /* @min:message */] = _formatMessage(message, errorType),\r\n            _a.url = url,\r\n            _a.lineNumber = lineNumber,\r\n            _a.columnNumber = columnNumber,\r\n            _a.error = _formatErrorCode(error || evt || message),\r\n            _a.evt = _formatErrorCode(evt || message),\r\n            _a[_DYN_TYPE_NAME /* @min:typeName */] = errorType,\r\n            _a.stackDetails = _getStackFromErrorObj(stack || error || evt),\r\n            _a.errorSrc = errorSrc,\r\n            _a;\r\n    };\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */]\r\n            && arrMap(exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */], function (ex) { return _ExceptionDetails[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign(__assign({}, exception), { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a;\r\n        var _b = this, exceptions = _b.exceptions, properties = _b.properties, measurements = _b.measurements, severityLevel = _b.severityLevel, problemGroup = _b.problemGroup, id = _b.id, isManual = _b.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return _a = {\r\n                ver: \"4.0\"\r\n            },\r\n            _a[_DYN_EXCEPTIONS /* @min:exceptions */] = exceptionDetailsInterface,\r\n            _a.severityLevel = severityLevel,\r\n            _a.properties = properties,\r\n            _a.measurements = measurements,\r\n            _a.problemGroup = problemGroup,\r\n            _a.id = id,\r\n            _a.isManual = isManual,\r\n            _a;\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        var _a;\r\n        return {\r\n            exceptions: [\r\n                (_a = {},\r\n                    _a[_DYN_HAS_FULL_STACK /* @min:hasFullStack */] = true,\r\n                    _a.message = message,\r\n                    _a.stack = details,\r\n                    _a.typeName = typeName,\r\n                    _a)\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    Exception.formatError = _formatErrorCode;\r\n    return Exception;\r\n}());\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function () {\r\n    function _ExceptionDetails(logger, exception, properties) {\r\n        this.aiDataContract = {\r\n            id: 0 /* FieldType.Default */,\r\n            outerId: 0 /* FieldType.Default */,\r\n            typeName: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            hasFullStack: 0 /* FieldType.Default */,\r\n            stack: 0 /* FieldType.Default */,\r\n            parsedStack: 2 /* FieldType.Array */\r\n        };\r\n        var _self = this;\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            var evt = error && error.evt;\r\n            if (!isError(error)) {\r\n                error = error[strError] || evt || error;\r\n            }\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, _formatMessage(exception || error, _self[_DYN_TYPE_NAME /* @min:%2etypeName */])) || strNotSpecified;\r\n            var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = _parseStack(stack);\r\n            // after parsedStack is inited, iterate over each frame object, sanitize its assembly field\r\n            if (isArray(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */])) {\r\n                arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) {\r\n                    frame[_DYN_ASSEMBLY /* @min:%2eassembly */] = dataSanitizeString(logger, frame[_DYN_ASSEMBLY /* @min:%2eassembly */]);\r\n                    frame[_DYN_FILE_NAME /* @min:%2efileName */] = dataSanitizeString(logger, frame[_DYN_FILE_NAME /* @min:%2efileName */]);\r\n                });\r\n            }\r\n            _self[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));\r\n            _self.hasFullStack = isArray(_self.parsedStack) && _self.parsedStack[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n            if (properties) {\r\n                properties[_DYN_TYPE_NAME /* @min:%2etypeName */] = properties[_DYN_TYPE_NAME /* @min:%2etypeName */] || _self[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = exception[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = exception[_DYN_MESSAGE /* @min:%2emessage */];\r\n            _self[strStack] = exception[strStack];\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] || [];\r\n            _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */] = exception[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */];\r\n        }\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var _a;\r\n        var _self = this;\r\n        var parsedStack = _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = (_a = {\r\n                id: _self.id,\r\n                outerId: _self.outerId,\r\n                typeName: _self[_DYN_TYPE_NAME /* @min:%2etypeName */],\r\n                message: _self[_DYN_MESSAGE /* @min:%2emessage */],\r\n                hasFullStack: _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */],\r\n                stack: _self[strStack]\r\n            },\r\n            _a[_DYN_PARSED_STACK /* @min:parsedStack */] = parsedStack || undefined,\r\n            _a);\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return _StackFrame[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](frame); }))\r\n            || exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */];\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign(__assign({}, exception), { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    return _ExceptionDetails;\r\n}());\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function () {\r\n    function _StackFrame(sourceFrame, level) {\r\n        this.aiDataContract = {\r\n            level: 1 /* FieldType.Required */,\r\n            method: 1 /* FieldType.Required */,\r\n            assembly: 0 /* FieldType.Default */,\r\n            fileName: 0 /* FieldType.Default */,\r\n            line: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        // Not converting this to isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = level;\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = NoMethod;\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = strTrim(frame);\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = \"\";\r\n            _self[_DYN_LINE /* @min:%2eline */] = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches[_DYN_LENGTH /* @min:%2elength */] >= 5) {\r\n                _self[_DYN_METHOD /* @min:%2emethod */] = strTrim(matches[2]) || _self[_DYN_METHOD /* @min:%2emethod */];\r\n                _self[_DYN_FILE_NAME /* @min:%2efileName */] = strTrim(matches[4]);\r\n                _self[_DYN_LINE /* @min:%2eline */] = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = sourceFrame[_DYN_LEVEL /* @min:%2elevel */];\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = sourceFrame[_DYN_METHOD /* @min:%2emethod */];\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = sourceFrame[_DYN_ASSEMBLY /* @min:%2eassembly */];\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = sourceFrame[_DYN_FILE_NAME /* @min:%2efileName */];\r\n            _self[_DYN_LINE /* @min:%2eline */] = sourceFrame[_DYN_LINE /* @min:%2eline */];\r\n            _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        }\r\n        _self.sizeInBytes += _self.method[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.fileName[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.assembly[_DYN_LENGTH /* @min:%2elength */];\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] += _StackFrame.baseSize;\r\n        _self.sizeInBytes += _self.level.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.line.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        var _self = this;\r\n        return {\r\n            level: _self[_DYN_LEVEL /* @min:%2elevel */],\r\n            method: _self[_DYN_METHOD /* @min:%2emethod */],\r\n            assembly: _self[_DYN_ASSEMBLY /* @min:%2eassembly */],\r\n            fileName: _self[_DYN_FILE_NAME /* @min:%2efileName */],\r\n            line: _self[_DYN_LINE /* @min:%2eline */]\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?[\\s]{0,50}([^\\@\\()]+?)[\\s]{0,50}(\\@|\\()([^\\(\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            name: 1 /* FieldType.Required */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 1 /* FieldType.Required */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */\r\n        };\r\n        /**\r\n         * Metric type. Single measurement or the aggregated value.\r\n         */\r\n        this.kind = 0 /* DataPointType.Measurement */;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_COUNT, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { DataPoint } from \"./Common/DataPoint\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Metric = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            metrics: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        var dataPoint = new DataPoint();\r\n        dataPoint[_DYN_COUNT /* @min:%2ecount */] = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        dataPoint.value = value;\r\n        dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;\r\n        _self.metrics = [dataPoint];\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}());\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar strEmpty = \"\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString()[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = strEmpty + totalms % 1000;\r\n    var sec = strEmpty + Math.floor(totalms / 1000) % 60;\r\n    var min = strEmpty + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = strEmpty + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms[_DYN_LENGTH /* @min:%2elength */] === 1 ? \"00\" + ms : ms[_DYN_LENGTH /* @min:%2elength */] === 2 ? \"0\" + ms : ms;\r\n    sec = sec[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + sec : sec;\r\n    min = min[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + min : min;\r\n    hour = hour[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : strEmpty) + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageView = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            id: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = dataSanitizeId(logger, id);\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(durationMs);\r\n        }\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}());\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { AjaxHelperParseDependencyPath } from \"../Util\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar RemoteDependencyData = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        this.aiDataContract = {\r\n            id: 1 /* FieldType.Required */,\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            resultCode: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            success: 0 /* FieldType.Default */,\r\n            data: 0 /* FieldType.Default */,\r\n            target: 0 /* FieldType.Default */,\r\n            type: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 0 /* FieldType.Default */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */,\r\n            dependencyKind: 0 /* FieldType.Default */,\r\n            dependencySource: 0 /* FieldType.Default */,\r\n            commandName: 0 /* FieldType.Default */,\r\n            dependencyTypeName: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = id;\r\n        _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(value);\r\n        _self.success = success;\r\n        _self.resultCode = resultCode + \"\";\r\n        _self.type = dataSanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _self.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _self.target = dataSanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _self.target = \"\".concat(_self.target, \" | \").concat(correlationContext);\r\n        }\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, dependencyFields[_DYN_NAME /* @min:%2ename */]);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}());\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties } from \"./Common/DataSanitizer\";\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        message = message || strNotSpecified;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, message);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n        }\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES, _DYN_RECEIVED_RESPONSE } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageViewPerformance = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            perfTotal: 0 /* FieldType.Default */,\r\n            networkConnect: 0 /* FieldType.Default */,\r\n            sentRequest: 0 /* FieldType.Default */,\r\n            receivedResponse: 0 /* FieldType.Default */,\r\n            domProcessing: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _self.domProcessing = cs4BaseData.domProcessing;\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = cs4BaseData[_DYN_DURATION /* @min:%2eduration */];\r\n            _self.networkConnect = cs4BaseData.networkConnect;\r\n            _self.perfTotal = cs4BaseData.perfTotal;\r\n            _self[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */] = cs4BaseData[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */];\r\n            _self.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}());\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Data = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            baseType: 1 /* FieldType.Required */,\r\n            baseData: 1 /* FieldType.Required */\r\n        };\r\n        this.baseType = baseType;\r\n        this.baseData = data;\r\n    }\r\n    return Data;\r\n}());\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel = createEnumStyle({\r\n    Verbose: 0 /* eSeverityLevel.Verbose */,\r\n    Information: 1 /* eSeverityLevel.Information */,\r\n    Warning: 2 /* eSeverityLevel.Warning */,\r\n    Error: 3 /* eSeverityLevel.Error */,\r\n    Critical: 4 /* eSeverityLevel.Critical */\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { createClassFromInterface } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _aiNameFunc(baseName) {\r\n    var aiName = \"ai.\" + baseName + \".\";\r\n    return function (name) {\r\n        return aiName + name;\r\n    };\r\n}\r\nvar _aiApplication = _aiNameFunc(\"application\");\r\nvar _aiDevice = _aiNameFunc(\"device\");\r\nvar _aiLocation = _aiNameFunc(\"location\");\r\nvar _aiOperation = _aiNameFunc(\"operation\");\r\nvar _aiSession = _aiNameFunc(\"session\");\r\nvar _aiUser = _aiNameFunc(\"user\");\r\nvar _aiCloud = _aiNameFunc(\"cloud\");\r\nvar _aiInternal = _aiNameFunc(\"internal\");\r\nvar ContextTagKeys = /** @class */ (function (_super) {\r\n    __extends(ContextTagKeys, _super);\r\n    function ContextTagKeys() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return ContextTagKeys;\r\n}(createClassFromInterface({\r\n    applicationVersion: _aiApplication(\"ver\"),\r\n    applicationBuild: _aiApplication(\"build\"),\r\n    applicationTypeId: _aiApplication(\"typeId\"),\r\n    applicationId: _aiApplication(\"applicationId\"),\r\n    applicationLayer: _aiApplication(\"layer\"),\r\n    deviceId: _aiDevice(\"id\"),\r\n    deviceIp: _aiDevice(\"ip\"),\r\n    deviceLanguage: _aiDevice(\"language\"),\r\n    deviceLocale: _aiDevice(\"locale\"),\r\n    deviceModel: _aiDevice(\"model\"),\r\n    deviceFriendlyName: _aiDevice(\"friendlyName\"),\r\n    deviceNetwork: _aiDevice(\"network\"),\r\n    deviceNetworkName: _aiDevice(\"networkName\"),\r\n    deviceOEMName: _aiDevice(\"oemName\"),\r\n    deviceOS: _aiDevice(\"os\"),\r\n    deviceOSVersion: _aiDevice(\"osVersion\"),\r\n    deviceRoleInstance: _aiDevice(\"roleInstance\"),\r\n    deviceRoleName: _aiDevice(\"roleName\"),\r\n    deviceScreenResolution: _aiDevice(\"screenResolution\"),\r\n    deviceType: _aiDevice(\"type\"),\r\n    deviceMachineName: _aiDevice(\"machineName\"),\r\n    deviceVMName: _aiDevice(\"vmName\"),\r\n    deviceBrowser: _aiDevice(\"browser\"),\r\n    deviceBrowserVersion: _aiDevice(\"browserVersion\"),\r\n    locationIp: _aiLocation(\"ip\"),\r\n    locationCountry: _aiLocation(\"country\"),\r\n    locationProvince: _aiLocation(\"province\"),\r\n    locationCity: _aiLocation(\"city\"),\r\n    operationId: _aiOperation(\"id\"),\r\n    operationName: _aiOperation(\"name\"),\r\n    operationParentId: _aiOperation(\"parentId\"),\r\n    operationRootId: _aiOperation(\"rootId\"),\r\n    operationSyntheticSource: _aiOperation(\"syntheticSource\"),\r\n    operationCorrelationVector: _aiOperation(\"correlationVector\"),\r\n    sessionId: _aiSession(\"id\"),\r\n    sessionIsFirst: _aiSession(\"isFirst\"),\r\n    sessionIsNew: _aiSession(\"isNew\"),\r\n    userAccountAcquisitionDate: _aiUser(\"accountAcquisitionDate\"),\r\n    userAccountId: _aiUser(\"accountId\"),\r\n    userAgent: _aiUser(\"userAgent\"),\r\n    userId: _aiUser(\"id\"),\r\n    userStoreRegion: _aiUser(\"storeRegion\"),\r\n    userAuthUserId: _aiUser(\"authUserId\"),\r\n    userAnonymousUserAcquisitionDate: _aiUser(\"anonUserAcquisitionDate\"),\r\n    userAuthenticatedUserAcquisitionDate: _aiUser(\"authUserAcquisitionDate\"),\r\n    cloudName: _aiCloud(\"name\"),\r\n    cloudRole: _aiCloud(\"role\"),\r\n    cloudRoleVer: _aiCloud(\"roleVer\"),\r\n    cloudRoleInstance: _aiCloud(\"roleInstance\"),\r\n    cloudEnvironment: _aiCloud(\"environment\"),\r\n    cloudLocation: _aiCloud(\"location\"),\r\n    cloudDeploymentUnit: _aiCloud(\"deploymentUnit\"),\r\n    internalNodeName: _aiInternal(\"nodeName\"),\r\n    internalSdkVersion: _aiInternal(\"sdkVersion\"),\r\n    internalAgentVersion: _aiInternal(\"agentVersion\"),\r\n    internalSnippet: _aiInternal(\"snippet\"),\r\n    internalSdkSrc: _aiInternal(\"sdkSrc\")\r\n})));\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isNullOrUndefined, objForEachKey, throwError, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIkey, strNotSpecified } from \"./Constants\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { _DYN_NAME } from \"./__DynamicConstants\";\r\n/**\r\n * Create a telemetry item that the 1DS channel understands\r\n * @param item - domain specific properties; part B\r\n * @param baseType - telemetry item type. ie PageViewData\r\n * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n * @param customProperties - user defined custom properties; part C\r\n * @param systemProperties - system properties that are added to the context; part A\r\n * @returns ITelemetryItem that is sent to channel\r\n */\r\nexport function createTelemetryItem(item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n    var _a;\r\n    envelopeName = dataSanitizeString(logger, envelopeName) || strNotSpecified;\r\n    if (isNullOrUndefined(item) ||\r\n        isNullOrUndefined(baseType) ||\r\n        isNullOrUndefined(envelopeName)) {\r\n        throwError(\"Input doesn't contain all required fields\");\r\n    }\r\n    var iKey = \"\";\r\n    if (item[strIkey]) {\r\n        iKey = item[strIkey];\r\n        delete item[strIkey];\r\n    }\r\n    var telemetryItem = (_a = {},\r\n        _a[_DYN_NAME /* @min:name */] = envelopeName,\r\n        _a.time = toISOString(new Date()),\r\n        _a.iKey = iKey,\r\n        _a.ext = systemProperties ? systemProperties : {},\r\n        _a.tags = [],\r\n        _a.data = {},\r\n        _a.baseType = baseType,\r\n        _a.baseData = item // Part B\r\n    ,\r\n        _a);\r\n    // Part C\r\n    if (!isNullOrUndefined(customProperties)) {\r\n        objForEachKey(customProperties, function (prop, value) {\r\n            telemetryItem.data[prop] = value;\r\n        });\r\n    }\r\n    return telemetryItem;\r\n}\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item - domain specific properties; part B\r\n     * @param baseType - telemetry item type. ie PageViewData\r\n     * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties - user defined custom properties; part C\r\n     * @param systemProperties - system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = createTelemetryItem;\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { ContextTagKeys } from \"./Contracts/ContextTagKeys\";\r\nexport var Extensions = {\r\n    UserExt: \"user\",\r\n    DeviceExt: \"device\",\r\n    TraceExt: \"trace\",\r\n    WebExt: \"web\",\r\n    AppExt: \"app\",\r\n    OSExt: \"os\",\r\n    SessionExt: \"ses\",\r\n    SDKExt: \"sdk\"\r\n};\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isFunction } from \"@microsoft/applicationinsights-core-js\";\r\nexport function createDomEvent(eventName) {\r\n    var event = null;\r\n    if (isFunction(Event)) { // Use Event constructor when available\r\n        event = new Event(eventName);\r\n    }\r\n    else { // Event has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n    }\r\n    return event;\r\n}\r\n//# sourceMappingURL=DomHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_PUSH } from \"./__DynamicConstants\";\r\nfunction _disableEvents(target, evtNamespace) {\r\n    eventOff(target, null, null, evtNamespace);\r\n}\r\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\r\nexport function createOfflineListener(parentEvtNamespace) {\r\n    var _document = getDocument();\r\n    var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\r\n    var _isListening = false;\r\n    var listenerList = [];\r\n    // Set the initial state\r\n    // rState is changed by the browser, both via events and when we check the navigator.onLine property\r\n    var rState = 1 /* eOfflineValue.Online */;\r\n    if (_navigator && !isNullOrUndefined(_navigator.onLine) && !_navigator.onLine) { // navigator.onLine is undefined in react-native\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n    }\r\n    // ustate is changed by the user calling setOnlineState\r\n    var uState = 0 /* eOfflineValue.Unknown */;\r\n    // current state would be updated each time rState or uState is changed\r\n    // it is a resolved value of rState and uState\r\n    var _currentState = calCurrentState();\r\n    var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\r\n    try {\r\n        if (_enableEvents(getWindow())) {\r\n            _isListening = true;\r\n        }\r\n        if (_document) {\r\n            // Also attach to the document.body or document\r\n            var target = _document.body || _document;\r\n            if (target.ononline) {\r\n                if (_enableEvents(target)) {\r\n                    _isListening = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this makes react-native less angry\r\n        _isListening = false;\r\n    }\r\n    function _enableEvents(target) {\r\n        var enabled = false;\r\n        if (target) {\r\n            enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\r\n            if (enabled) {\r\n                eventOn(target, \"offline\", _setOffline, _evtNamespace);\r\n            }\r\n        }\r\n        return enabled;\r\n    }\r\n    function _isOnline() {\r\n        return _currentState;\r\n    }\r\n    function calCurrentState() {\r\n        if (uState === 2 /* eOfflineValue.Offline */ || rState === 2 /* eOfflineValue.Offline */) {\r\n            return false;\r\n        }\r\n        return true; // if both unknown, then we assume the network is good\r\n    }\r\n    function listnerNoticeCheck() {\r\n        // we were offline and are now online or we were online and now offline\r\n        var newState = calCurrentState();\r\n        if (_currentState !== newState) {\r\n            _currentState = newState; // use the resolved state to update\r\n            // send all the callbacks with the current state\r\n            arrForEach(listenerList, function (callback) {\r\n                var offlineState = {\r\n                    isOnline: _currentState,\r\n                    rState: rState,\r\n                    uState: uState\r\n                };\r\n                try {\r\n                    callback(offlineState);\r\n                }\r\n                catch (e) {\r\n                    // Do nothing, just making sure we run all of the callbacks\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function setOnlineState(newState) {\r\n        uState = newState;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOnline() {\r\n        rState = 1 /* eOfflineValue.Online */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOffline() {\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _unload() {\r\n        var win = getWindow();\r\n        if (win && _isListening) {\r\n            _disableEvents(win, _evtNamespace);\r\n            if (_document) {\r\n                // Also attach to the document.body or document\r\n                var target = _document.body || _document;\r\n                if (!isUndefined(target.ononline)) {\r\n                    _disableEvents(target, _evtNamespace);\r\n                }\r\n            }\r\n            _isListening = false;\r\n        }\r\n    }\r\n    function addListener(callback) {\r\n        listenerList[_DYN_PUSH /* @min:%2epush */](callback);\r\n        // Define rm as an instance of IUnloadHook\r\n        return {\r\n            rm: function () {\r\n                var index = listenerList.indexOf(callback);\r\n                if (index > -1) {\r\n                    return listenerList.splice(index, 1);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    return {\r\n        isOnline: _isOnline,\r\n        isListening: function () { return _isListening; },\r\n        unload: _unload,\r\n        addListener: addListener,\r\n        setOnlineState: setOnlineState\r\n    };\r\n}\r\n//# sourceMappingURL=Offline.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent, findAllScripts } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 4\r\nexport var _DYN_IS_STORAGE_USE_DISAB0 = \"isStorageUseDisabled\"; // Count: 3\r\nexport var _DYN__ADD_HOOK = \"_addHook\"; // Count: 6\r\nexport var _DYN_CORE = \"core\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 8\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 13\r\nexport var _DYN_TRACK = \"track\"; // Count: 7\r\nexport var _DYN_TRACK_PAGE_VIEW = \"trackPageView\"; // Count: 4\r\nexport var _DYN_TRACK_PREVIOUS_PAGE_1 = \"trackPreviousPageVisit\"; // Count: 3\r\nexport var _DYN_SEND_PAGE_VIEW_INTER2 = \"sendPageViewInternal\"; // Count: 7\r\nexport var _DYN_START_TIME = \"startTime\"; // Count: 6\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 4\r\nexport var _DYN_DURATION = \"duration\"; // Count: 12\r\nexport var _DYN_SEND_PAGE_VIEW_PERFO3 = \"sendPageViewPerformanceInternal\"; // Count: 3\r\nexport var _DYN_POPULATE_PAGE_VIEW_P4 = \"populatePageViewPerformanceEvent\"; // Count: 3\r\nexport var _DYN_HREF = \"href\"; // Count: 6\r\nexport var _DYN_SEND_EXCEPTION_INTER5 = \"sendExceptionInternal\"; // Count: 2\r\nexport var _DYN_EXCEPTION = \"exception\"; // Count: 3\r\nexport var _DYN_ERROR = \"error\"; // Count: 5\r\nexport var _DYN__ONERROR = \"_onerror\"; // Count: 3\r\nexport var _DYN_ERROR_SRC = \"errorSrc\"; // Count: 3\r\nexport var _DYN_LINE_NUMBER = \"lineNumber\"; // Count: 5\r\nexport var _DYN_COLUMN_NUMBER = \"columnNumber\"; // Count: 5\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 4\r\nexport var _DYN__CREATE_AUTO_EXCEPTI6 = \"CreateAutoException\"; // Count: 3\r\nexport var _DYN_ADD_TELEMETRY_INITIA7 = \"addTelemetryInitializer\"; // Count: 4\r\nexport var _DYN_OVERRIDE_PAGE_VIEW_D8 = \"overridePageViewDuration\"; // Count: 2\r\nexport var _DYN_AUTO_TRACK_PAGE_VISI9 = \"autoTrackPageVisitTime\"; // Count: 2\r\nexport var _DYN_IS_BROWSER_LINK_TRAC10 = \"isBrowserLinkTrackingEnabled\"; // Count: 2\r\nexport var _DYN_LENGTH = \"length\"; // Count: 5\r\nexport var _DYN_ENABLE_AUTO_ROUTE_TR11 = \"enableAutoRouteTracking\"; // Count: 2\r\nexport var _DYN_ENABLE_UNHANDLED_PRO12 = \"enableUnhandledPromiseRejectionTracking\"; // Count: 2\r\nexport var _DYN_AUTO_UNHANDLED_PROMI13 = \"autoUnhandledPromiseInstrumented\"; // Count: 3\r\nexport var _DYN_GET_ENTRIES_BY_TYPE = \"getEntriesByType\"; // Count: 5\r\nexport var _DYN_IS_PERFORMANCE_TIMIN14 = \"isPerformanceTimingSupported\"; // Count: 2\r\nexport var _DYN_GET_PERFORMANCE_TIMI15 = \"getPerformanceTiming\"; // Count: 2\r\nexport var _DYN_NAVIGATION_START = \"navigationStart\"; // Count: 4\r\nexport var _DYN_SHOULD_COLLECT_DURAT16 = \"shouldCollectDuration\"; // Count: 3\r\nexport var _DYN_IS_PERFORMANCE_TIMIN17 = \"isPerformanceTimingDataReady\"; // Count: 2\r\nexport var _DYN_RESPONSE_START = \"responseStart\"; // Count: 5\r\nexport var _DYN_REQUEST_START = \"requestStart\"; // Count: 3\r\nexport var _DYN_LOAD_EVENT_END = \"loadEventEnd\"; // Count: 4\r\nexport var _DYN_RESPONSE_END = \"responseEnd\"; // Count: 5\r\nexport var _DYN_CONNECT_END = \"connectEnd\"; // Count: 4\r\nexport var _DYN_PAGE_VISIT_START_TIM18 = \"pageVisitStartTime\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dateTimeUtilsDuration } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, dumpObj, getDocument, getExceptionName, getLocation, isNullOrUndefined } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getPerformance, isUndefined, isWebWorker, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DURATION, _DYN_GET_ENTRIES_BY_TYPE, _DYN_GET_PERFORMANCE_TIMI15, _DYN_HREF, _DYN_IS_PERFORMANCE_TIMIN14, _DYN_IS_PERFORMANCE_TIMIN17, _DYN_LENGTH, _DYN_NAVIGATION_START, _DYN_POPULATE_PAGE_VIEW_P4, _DYN_PROPERTIES, _DYN_SEND_PAGE_VIEW_INTER2, _DYN_SEND_PAGE_VIEW_PERFO3, _DYN_SHOULD_COLLECT_DURAT16, _DYN_START_TIME, _DYN_TRACK_PAGE_VIEW } from \"../../__DynamicConstants\";\r\n/**\r\n * Class encapsulates sending page views and page view performance telemetry.\r\n */\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        dynamicProto(PageViewManager, this, function (_self) {\r\n            var queueTimer = null;\r\n            var itemQueue = [];\r\n            var pageViewPerformanceSent = false;\r\n            var firstPageViewSent = false;\r\n            var _logger;\r\n            if (core) {\r\n                _logger = core.logger;\r\n            }\r\n            function _flushChannels(isAsync) {\r\n                if (core) {\r\n                    core.flush(isAsync, function () {\r\n                        // Event flushed, callback added to prevent promise creation\r\n                    });\r\n                }\r\n            }\r\n            function _startTimer() {\r\n                if (!queueTimer) {\r\n                    queueTimer = scheduleTimeout((function () {\r\n                        queueTimer = null;\r\n                        var allItems = itemQueue.slice(0);\r\n                        var doFlush = false;\r\n                        itemQueue = [];\r\n                        arrForEach(allItems, function (item) {\r\n                            if (!item()) {\r\n                                // Not processed so rescheduled\r\n                                itemQueue.push(item);\r\n                            }\r\n                            else {\r\n                                doFlush = true;\r\n                            }\r\n                        });\r\n                        if (itemQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            _startTimer();\r\n                        }\r\n                        if (doFlush) {\r\n                            // We process at least one item so flush the queue\r\n                            _flushChannels(true);\r\n                        }\r\n                    }), 100);\r\n                }\r\n            }\r\n            function _addQueue(cb) {\r\n                itemQueue.push(cb);\r\n                _startTimer();\r\n            }\r\n            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */] = function (pageView, customProperties) {\r\n                var name = pageView.name;\r\n                if (isNullOrUndefined(name) || typeof name !== \"string\") {\r\n                    var doc = getDocument();\r\n                    name = pageView.name = doc && doc.title || \"\";\r\n                }\r\n                var uri = pageView.uri;\r\n                if (isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n                    var location_1 = getLocation();\r\n                    uri = pageView.uri = location_1 && location_1[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                }\r\n                if (!firstPageViewSent) {\r\n                    var perf = getPerformance();\r\n                    // Access the performance timing object\r\n                    var navigationEntries = (perf && perf[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */] && perf[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */](\"navigation\"));\r\n                    // Edge Case the navigation Entries may return an empty array and the timeOrigin is not supported on IE\r\n                    if (navigationEntries && navigationEntries[0] && !isUndefined(perf.timeOrigin)) {\r\n                        // Get the value of loadEventStart\r\n                        var loadEventStart = navigationEntries[0].loadEventStart;\r\n                        pageView[_DYN_START_TIME /* @min:%2estartTime */] = new Date(perf.timeOrigin + loadEventStart);\r\n                    }\r\n                    else {\r\n                        // calculate the start time manually\r\n                        var duration_1 = ((customProperties || pageView[_DYN_PROPERTIES /* @min:%2eproperties */] || {})[_DYN_DURATION /* @min:%2eduration */] || 0);\r\n                        pageView[_DYN_START_TIME /* @min:%2estartTime */] = new Date(new Date().getTime() - duration_1);\r\n                    }\r\n                    firstPageViewSent = true;\r\n                }\r\n                // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n                // do not provide the duration, set duration to undefined\r\n                // Also this is case 4\r\n                if (!pageViewPerformanceManager[_DYN_IS_PERFORMANCE_TIMIN14 /* @min:%2eisPerformanceTimingSupported */]()) {\r\n                    appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                    _flushChannels(true);\r\n                    if (!isWebWorker()) {\r\n                        // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 25 /* _eInternalMessageId.NavigationTimingNotSupported */, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n                    }\r\n                    return;\r\n                }\r\n                var pageViewSent = false;\r\n                var customDuration;\r\n                // if the performance timing is supported by the browser, calculate the custom duration\r\n                var start = pageViewPerformanceManager[_DYN_GET_PERFORMANCE_TIMI15 /* @min:%2egetPerformanceTiming */]()[_DYN_NAVIGATION_START /* @min:%2enavigationStart */];\r\n                if (start > 0) {\r\n                    customDuration = dateTimeUtilsDuration(start, +new Date);\r\n                    if (!pageViewPerformanceManager[_DYN_SHOULD_COLLECT_DURAT16 /* @min:%2eshouldCollectDuration */](customDuration)) {\r\n                        customDuration = undefined;\r\n                    }\r\n                }\r\n                // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n                // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n                var duration;\r\n                if (!isNullOrUndefined(customProperties) &&\r\n                    !isNullOrUndefined(customProperties[_DYN_DURATION /* @min:%2eduration */])) {\r\n                    duration = customProperties[_DYN_DURATION /* @min:%2eduration */];\r\n                }\r\n                if (overridePageViewDuration || !isNaN(duration)) {\r\n                    if (isNaN(duration)) {\r\n                        // case 3\r\n                        if (!customProperties) {\r\n                            customProperties = {};\r\n                        }\r\n                        customProperties[_DYN_DURATION /* @min:%2eduration */] = customDuration;\r\n                    }\r\n                    // case 2\r\n                    appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                    _flushChannels(true);\r\n                    pageViewSent = true;\r\n                }\r\n                // now try to send the page view performance telemetry\r\n                var maxDurationLimit = 60000;\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                // Queue the event for processing\r\n                _addQueue(function () {\r\n                    var processed = false;\r\n                    try {\r\n                        if (pageViewPerformanceManager[_DYN_IS_PERFORMANCE_TIMIN17 /* @min:%2eisPerformanceTimingDataReady */]()) {\r\n                            processed = true;\r\n                            var pageViewPerformance = {\r\n                                name: name,\r\n                                uri: uri\r\n                            };\r\n                            pageViewPerformanceManager[_DYN_POPULATE_PAGE_VIEW_P4 /* @min:%2epopulatePageViewPerformanceEvent */](pageViewPerformance);\r\n                            if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                                // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                                // That's the best value we can get that makes sense.\r\n                                customProperties[_DYN_DURATION /* @min:%2eduration */] = customDuration;\r\n                                appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                            }\r\n                            else {\r\n                                if (!pageViewSent) {\r\n                                    customProperties[_DYN_DURATION /* @min:%2eduration */] = pageViewPerformance.durationMs;\r\n                                    appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                                }\r\n                                if (!pageViewPerformanceSent) {\r\n                                    appInsights[_DYN_SEND_PAGE_VIEW_PERFO3 /* @min:%2esendPageViewPerformanceInternal */](pageViewPerformance, customProperties);\r\n                                    pageViewPerformanceSent = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (start > 0 && dateTimeUtilsDuration(start, +new Date) > maxDurationLimit) {\r\n                            // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                            // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                            processed = true;\r\n                            if (!pageViewSent) {\r\n                                customProperties[_DYN_DURATION /* @min:%2eduration */] = maxDurationLimit;\r\n                                appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 38 /* _eInternalMessageId.TrackPVFailedCalc */, \"trackPageView failed on page load calculation: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                    return processed;\r\n                });\r\n            };\r\n            _self.teardown = function (unloadCtx, unloadState) {\r\n                if (queueTimer) {\r\n                    queueTimer.cancel();\r\n                    queueTimer = null;\r\n                    var allItems = itemQueue.slice(0);\r\n                    var doFlush_1 = false;\r\n                    itemQueue = [];\r\n                    arrForEach(allItems, function (item) {\r\n                        if (item()) {\r\n                            doFlush_1 = true;\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PageViewManager.prototype.trackPageView.\r\n// Removed Stub for PageViewManager.prototype.teardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageViewManager.__ieDyn=1;\n\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dateTimeUtilsDuration, msToTimeSpan } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, getNavigator, getPerformance, safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_CONNECT_END, _DYN_DURATION, _DYN_GET_ENTRIES_BY_TYPE, _DYN_GET_PERFORMANCE_TIMI15, _DYN_IS_PERFORMANCE_TIMIN14, _DYN_IS_PERFORMANCE_TIMIN17, _DYN_LENGTH, _DYN_LOAD_EVENT_END, _DYN_NAVIGATION_START, _DYN_POPULATE_PAGE_VIEW_P4, _DYN_REQUEST_START, _DYN_RESPONSE_END, _DYN_RESPONSE_START, _DYN_SHOULD_COLLECT_DURAT16, _DYN_START_TIME } from \"../../__DynamicConstants\";\r\nvar MAX_DURATION_ALLOWED = 3600000; // 1h\r\nvar botAgentNames = [\"googlebot\", \"adsbot-google\", \"apis-google\", \"mediapartners-google\"];\r\nfunction _isPerformanceTimingSupported() {\r\n    var perf = getPerformance();\r\n    return perf && !!perf.timing;\r\n}\r\nfunction _isPerformanceNavigationTimingSupported() {\r\n    var perf = getPerformance();\r\n    return perf && perf.getEntriesByType && perf.getEntriesByType(\"navigation\")[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\nfunction _isPerformanceTimingDataReady() {\r\n    var perf = getPerformance();\r\n    var timing = perf ? perf.timing : 0;\r\n    return timing\r\n        && timing.domainLookupStart > 0\r\n        && timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */] > 0\r\n        && timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */] > 0\r\n        && timing[_DYN_REQUEST_START /* @min:%2erequestStart */] > 0\r\n        && timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */] > 0\r\n        && timing[_DYN_RESPONSE_END /* @min:%2eresponseEnd */] > 0\r\n        && timing[_DYN_CONNECT_END /* @min:%2econnectEnd */] > 0\r\n        && timing.domLoading > 0;\r\n}\r\nfunction _getPerformanceTiming() {\r\n    if (_isPerformanceTimingSupported()) {\r\n        return getPerformance().timing;\r\n    }\r\n    return null;\r\n}\r\nfunction _getPerformanceNavigationTiming() {\r\n    if (_isPerformanceNavigationTimingSupported()) {\r\n        return getPerformance()[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */](\"navigation\")[0];\r\n    }\r\n    return null;\r\n}\r\n/**\r\n* This method tells if given durations should be excluded from collection.\r\n*/\r\nfunction _shouldCollectDuration() {\r\n    var durations = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        durations[_i] = arguments[_i];\r\n    }\r\n    var _navigator = getNavigator() || {};\r\n    // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n    var userAgent = _navigator.userAgent;\r\n    var isGoogleBot = false;\r\n    if (userAgent) {\r\n        for (var i = 0; i < botAgentNames[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            isGoogleBot = isGoogleBot || strIndexOf(userAgent.toLowerCase(), botAgentNames[i]) !== -1;\r\n        }\r\n    }\r\n    if (isGoogleBot) {\r\n        // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n        return false;\r\n    }\r\n    else {\r\n        // for other page views, don't report if it's outside of a reasonable range\r\n        for (var i = 0; i < durations[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (durations[i] < 0 || durations[i] >= MAX_DURATION_ALLOWED) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Class encapsulates sending page view performance telemetry.\r\n */\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        var _logger = safeGetLogger(core);\r\n        dynamicProto(PageViewPerformanceManager, this, function (_self) {\r\n            _self[_DYN_POPULATE_PAGE_VIEW_P4 /* @min:%2epopulatePageViewPerformanceEvent */] = function (pageViewPerformance) {\r\n                pageViewPerformance.isValid = false;\r\n                /*\r\n                 * http://www.w3.org/TR/navigation-timing/#processing-model\r\n                 *  |-navigationStart\r\n                 *  |             |-connectEnd\r\n                 *  |             ||-requestStart\r\n                 *  |             ||             |-responseStart\r\n                 *  |             ||             |              |-responseEnd\r\n                 *  |             ||             |              |\r\n                 *  |             ||             |              |         |-loadEventEnd\r\n                 *  |---network---||---request---|---response---|---dom---|\r\n                 *  |--------------------------total----------------------|\r\n                 *\r\n                 *  total = The difference between the load event of the current document is completed and the first recorded timestamp of the performance entry : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#duration\r\n                 *  network = Redirect time + App Cache + DNS lookup time + TCP connection time\r\n                 *  request = Request time : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#request_time\r\n                 *  response = Response time\r\n                 *  dom = Document load time : https://html.spec.whatwg.org/multipage/dom.html#document-load-timing-info\r\n                 *      = Document processing time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#document_processing\r\n                 *      + Loading time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#loading\r\n                 */\r\n                var navigationTiming = _getPerformanceNavigationTiming();\r\n                var timing = _getPerformanceTiming();\r\n                var total = 0;\r\n                var network = 0;\r\n                var request = 0;\r\n                var response = 0;\r\n                var dom = 0;\r\n                if (navigationTiming || timing) {\r\n                    if (navigationTiming) {\r\n                        total = navigationTiming[_DYN_DURATION /* @min:%2eduration */];\r\n                        /**\r\n                         * support both cases:\r\n                         * - startTime is always zero: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming\r\n                         * - for older browsers where the startTime is not zero\r\n                         */\r\n                        network = navigationTiming[_DYN_START_TIME /* @min:%2estartTime */] === 0 ? navigationTiming[_DYN_CONNECT_END /* @min:%2econnectEnd */] : dateTimeUtilsDuration(navigationTiming[_DYN_START_TIME /* @min:%2estartTime */], navigationTiming[_DYN_CONNECT_END /* @min:%2econnectEnd */]);\r\n                        request = dateTimeUtilsDuration(navigationTiming.requestStart, navigationTiming[_DYN_RESPONSE_START /* @min:%2eresponseStart */]);\r\n                        response = dateTimeUtilsDuration(navigationTiming[_DYN_RESPONSE_START /* @min:%2eresponseStart */], navigationTiming[_DYN_RESPONSE_END /* @min:%2eresponseEnd */]);\r\n                        dom = dateTimeUtilsDuration(navigationTiming.responseEnd, navigationTiming[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                    }\r\n                    else {\r\n                        total = dateTimeUtilsDuration(timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */], timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                        network = dateTimeUtilsDuration(timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */], timing[_DYN_CONNECT_END /* @min:%2econnectEnd */]);\r\n                        request = dateTimeUtilsDuration(timing.requestStart, timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */]);\r\n                        response = dateTimeUtilsDuration(timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */], timing[_DYN_RESPONSE_END /* @min:%2eresponseEnd */]);\r\n                        dom = dateTimeUtilsDuration(timing.responseEnd, timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                    }\r\n                    if (total === 0) {\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 10 /* _eInternalMessageId.ErrorPVCalc */, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else if (!_self[_DYN_SHOULD_COLLECT_DURAT16 /* @min:%2eshouldCollectDuration */](total, network, request, response, dom)) {\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 45 /* _eInternalMessageId.InvalidDurationValue */, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                        // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                        // in this case, don't report client performance from this page\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 8 /* _eInternalMessageId.ClientPerformanceMathError */, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else {\r\n                        pageViewPerformance.durationMs = total;\r\n                        // // convert to timespans\r\n                        pageViewPerformance.perfTotal = pageViewPerformance[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(total);\r\n                        pageViewPerformance.networkConnect = msToTimeSpan(network);\r\n                        pageViewPerformance.sentRequest = msToTimeSpan(request);\r\n                        pageViewPerformance.receivedResponse = msToTimeSpan(response);\r\n                        pageViewPerformance.domProcessing = msToTimeSpan(dom);\r\n                        pageViewPerformance.isValid = true;\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_GET_PERFORMANCE_TIMI15 /* @min:%2egetPerformanceTiming */] = _getPerformanceTiming;\r\n            _self[_DYN_IS_PERFORMANCE_TIMIN14 /* @min:%2eisPerformanceTimingSupported */] = _isPerformanceTimingSupported;\r\n            _self[_DYN_IS_PERFORMANCE_TIMIN17 /* @min:%2eisPerformanceTimingDataReady */] = _isPerformanceTimingDataReady;\r\n            _self[_DYN_SHOULD_COLLECT_DURAT16 /* @min:%2eshouldCollectDuration */] = _shouldCollectDuration;\r\n        });\r\n    }\r\n// Removed Stub for PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent.\r\n// Removed Stub for PageViewPerformanceManager.prototype.getPerformanceTiming.\r\n// Removed Stub for PageViewPerformanceManager.prototype.isPerformanceTimingSupported.\r\n// Removed Stub for PageViewPerformanceManager.prototype.isPerformanceTimingDataReady.\r\n// Removed Stub for PageViewPerformanceManager.prototype.shouldCollectDuration.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageViewPerformanceManager.__ieDyn=1;\n\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlCanUseSessionStorage, utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _warnToConsole, dateNow, dumpObj, getJSON, hasJSON, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_PAGE_VISIT_START_TIM18, _DYN_TRACK_PREVIOUS_PAGE_1 } from \"../../__DynamicConstants\";\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler - Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        var prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        dynamicProto(PageVisitTimeManager, this, function (_self) {\r\n            _self[_DYN_TRACK_PREVIOUS_PAGE_1 /* @min:%2etrackPreviousPageVisit */] = function (currentPageName, currentPageUrl) {\r\n                try {\r\n                    // Restart timer for new page view\r\n                    var prevPageVisitTimeData = restartPageVisitTimer(currentPageName, currentPageUrl);\r\n                    // If there was a page already being timed, track the visit time for it now.\r\n                    if (prevPageVisitTimeData) {\r\n                        pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Auto track page visit time failed, metric will not be collected: \" + dumpObj(e));\r\n                }\r\n            };\r\n            /**\r\n             * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n             * @param pageName - Name of page to begin timing visit duration\r\n             * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n             */\r\n            function restartPageVisitTimer(pageName, pageUrl) {\r\n                var prevPageVisitData = null;\r\n                try {\r\n                    prevPageVisitData = stopPageVisitTimer();\r\n                    if (utlCanUseSessionStorage()) {\r\n                        if (utlGetSessionStorage(logger, prevPageVisitDataKeyName) != null) {\r\n                            throwError(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                        }\r\n                        var currPageVisitDataStr = getJSON().stringify(new PageVisitData(pageName, pageUrl));\r\n                        utlSetSessionStorage(logger, prevPageVisitDataKeyName, currPageVisitDataStr);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Call to restart failed: \" + dumpObj(e));\r\n                    prevPageVisitData = null;\r\n                }\r\n                return prevPageVisitData;\r\n            }\r\n            /**\r\n             * Stops timing of current page, if exists.\r\n             * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n             */\r\n            function stopPageVisitTimer() {\r\n                var prevPageVisitData = null;\r\n                try {\r\n                    if (utlCanUseSessionStorage()) {\r\n                        // Define end time of page's visit\r\n                        var pageVisitEndTime = dateNow();\r\n                        // Try to retrieve  page name and start time from session storage\r\n                        var pageVisitDataJsonStr = utlGetSessionStorage(logger, prevPageVisitDataKeyName);\r\n                        if (pageVisitDataJsonStr && hasJSON()) {\r\n                            // if previous page data exists, set end time of visit\r\n                            prevPageVisitData = getJSON().parse(pageVisitDataJsonStr);\r\n                            prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData[_DYN_PAGE_VISIT_START_TIM18 /* @min:%2epageVisitStartTime */];\r\n                            // Remove data from storage since we already used it\r\n                            utlRemoveSessionStorage(logger, prevPageVisitDataKeyName);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Stop page visit timer failed: \" + dumpObj(e));\r\n                    prevPageVisitData = null;\r\n                }\r\n                return prevPageVisitData;\r\n            }\r\n            // For backward compatibility\r\n            objDefine(_self, \"_logger\", { g: function () { return logger; } });\r\n            objDefine(_self, \"pageVisitTimeTrackingHandler\", { g: function () { return pageVisitTimeTrackingHandler; } });\r\n        });\r\n    }\r\n// Removed Stub for PageVisitTimeManager.prototype.trackPreviousPageVisit.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageVisitTimeManager.__ieDyn=1;\n\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this[_DYN_PAGE_VISIT_START_TIM18 /* @min:%2epageVisitStartTime */] = dateNow();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dateTimeUtilsDuration } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        var _self = this;\r\n        var _events = {};\r\n        _self.start = function (name) {\r\n            if (typeof _events[name] !== \"undefined\") {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 62 /* _eInternalMessageId.StartCalledMoreThanOnce */, \"start was called more than once for this event without calling stop.\", { name: name, key: name }, true);\r\n            }\r\n            _events[name] = +new Date;\r\n        };\r\n        _self.stop = function (name, url, properties, measurements) {\r\n            var start = _events[name];\r\n            if (isNaN(start)) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 63 /* _eInternalMessageId.StopCalledWithoutStart */, \"stop was called without a corresponding start.\", { name: name, key: name }, true);\r\n            }\r\n            else {\r\n                var end = +new Date;\r\n                var duration = dateTimeUtilsDuration(start, end);\r\n                _self.action(name, url, duration, properties, measurements);\r\n            }\r\n            delete _events[name];\r\n            _events[name] = undefined;\r\n        };\r\n    }\r\n    return Timing;\r\n}());\r\nexport { Timing };\r\n//# sourceMappingURL=Timing.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* ApplicationInsights.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nvar _a;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AnalyticsPluginIdentifier, Event as EventTelemetry, Exception, Metric, PageView, PageViewPerformance, PropertiesPluginIdentifier, RemoteDependencyData, Trace, createDistributedTraceContextFromTrace, createDomEvent, createTelemetryItem, dataSanitizeString, isCrossOriginError, strNotSpecified, utlDisableStorage, utlEnableStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, InstrumentEvent, arrForEach, cfgDfBoolean, cfgDfMerge, cfgDfSet, cfgDfString, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dumpObj, eventOff, eventOn, findAllScripts, generateW3CId, getDocument, getExceptionName, getHistory, getLocation, getWindow, hasHistory, hasWindow, isFunction, isNullOrUndefined, isString, isUndefined, mergeEvtNamespace, onConfigChange, safeGetCookieMgr, strUndefined, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isError, objDeepFreeze, objDefine, scheduleTimeout, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ADD_TELEMETRY_INITIA7, _DYN_AUTO_TRACK_PAGE_VISI9, _DYN_AUTO_UNHANDLED_PROMI13, _DYN_COLUMN_NUMBER, _DYN_CORE, _DYN_DATA_TYPE, _DYN_DIAG_LOG, _DYN_DURATION, _DYN_ENABLE_AUTO_ROUTE_TR11, _DYN_ENABLE_UNHANDLED_PRO12, _DYN_ENVELOPE_TYPE, _DYN_ERROR, _DYN_ERROR_SRC, _DYN_EXCEPTION, _DYN_HREF, _DYN_IS_BROWSER_LINK_TRAC10, _DYN_IS_STORAGE_USE_DISAB0, _DYN_LENGTH, _DYN_LINE_NUMBER, _DYN_MESSAGE, _DYN_OVERRIDE_PAGE_VIEW_D8, _DYN_POPULATE_PAGE_VIEW_P4, _DYN_PROPERTIES, _DYN_SEND_EXCEPTION_INTER5, _DYN_SEND_PAGE_VIEW_INTER2, _DYN_SEND_PAGE_VIEW_PERFO3, _DYN_START_TIME, _DYN_TO_STRING, _DYN_TRACK, _DYN_TRACK_PAGE_VIEW, _DYN_TRACK_PREVIOUS_PAGE_1, _DYN__ADD_HOOK, _DYN__CREATE_AUTO_EXCEPTI6, _DYN__ONERROR } from \"../__DynamicConstants\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageViewPerformanceManager } from \"./Telemetry/PageViewPerformanceManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { Timing } from \"./Timing\";\r\nvar strEvent = \"event\";\r\nfunction _dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n    }\r\n}\r\nfunction _getReason(error) {\r\n    if (error && error.reason) {\r\n        var reason = error.reason;\r\n        if (!isString(reason) && isFunction(reason[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n            return reason[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        }\r\n        return dumpObj(reason);\r\n    }\r\n    // Pass the original object down which will eventually get evaluated for any message or description\r\n    return error || \"\";\r\n}\r\nvar MinMilliSeconds = 60000;\r\nvar defaultValues = objDeepFreeze((_a = {\r\n        sessionRenewalMs: cfgDfSet(_chkConfigMilliseconds, 30 * 60 * 1000),\r\n        sessionExpirationMs: cfgDfSet(_chkConfigMilliseconds, 24 * 60 * 60 * 1000),\r\n        disableExceptionTracking: cfgDfBoolean()\r\n    },\r\n    _a[_DYN_AUTO_TRACK_PAGE_VISI9 /* @min:autoTrackPageVisitTime */] = cfgDfBoolean(),\r\n    _a[_DYN_OVERRIDE_PAGE_VIEW_D8 /* @min:overridePageViewDuration */] = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_UNHANDLED_PRO12 /* @min:enableUnhandledPromiseRejectionTracking */] = cfgDfBoolean(),\r\n    _a[_DYN_AUTO_UNHANDLED_PROMI13 /* @min:autoUnhandledPromiseInstrumented */] = false,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_IS_STORAGE_USE_DISAB0 /* @min:isStorageUseDisabled */] = cfgDfBoolean(),\r\n    _a[_DYN_IS_BROWSER_LINK_TRAC10 /* @min:isBrowserLinkTrackingEnabled */] = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_AUTO_ROUTE_TR11 /* @min:enableAutoRouteTracking */] = cfgDfBoolean(),\r\n    _a.namePrefix = cfgDfString(),\r\n    _a.enableDebug = cfgDfBoolean(),\r\n    _a.disableFlushOnBeforeUnload = cfgDfBoolean(),\r\n    _a.disableFlushOnUnload = cfgDfBoolean(false, \"disableFlushOnBeforeUnload\"),\r\n    _a.expCfg = cfgDfMerge({ inclScripts: false }),\r\n    _a));\r\nfunction _chkConfigMilliseconds(value, defValue) {\r\n    value = value || defValue;\r\n    if (value < MinMilliSeconds) {\r\n        value = MinMilliSeconds;\r\n    }\r\n    return +value;\r\n}\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nfunction _updateStorageUsage(extConfig) {\r\n    // Not resetting the storage usage as someone may have manually called utlDisableStorage, so this will only\r\n    // reset based if the configuration option is provided\r\n    if (!isUndefined(extConfig[_DYN_IS_STORAGE_USE_DISAB0 /* @min:%2eisStorageUseDisabled */])) {\r\n        if (extConfig[_DYN_IS_STORAGE_USE_DISAB0 /* @min:%2eisStorageUseDisabled */]) {\r\n            utlDisableStorage();\r\n        }\r\n        else {\r\n            utlEnableStorage();\r\n        }\r\n    }\r\n}\r\nvar AnalyticsPlugin = /** @class */ (function (_super) {\r\n    __extends(AnalyticsPlugin, _super);\r\n    function AnalyticsPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = AnalyticsPluginIdentifier; // do not change name or priority\r\n        _this.priority = 180; // take from reserved priority range 100- 200\r\n        _this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        var _eventTracking;\r\n        var _pageTracking;\r\n        var _pageViewManager;\r\n        var _pageViewPerformanceManager;\r\n        var _pageVisitTimeManager;\r\n        var _preInitTelemetryInitializers;\r\n        var _isBrowserLinkTrackingEnabled;\r\n        var _browserLinkInitializerAdded;\r\n        var _enableAutoRouteTracking;\r\n        var _historyListenerAdded;\r\n        var _disableExceptionTracking;\r\n        var _autoExceptionInstrumented;\r\n        var _enableUnhandledPromiseRejectionTracking;\r\n        var _autoUnhandledPromiseInstrumented;\r\n        var _extConfig;\r\n        var _autoTrackPageVisitTime;\r\n        // Counts number of trackAjax invocations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        var _trackAjaxAttempts = 0;\r\n        // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n        var _prevUri; // Assigned in the constructor\r\n        var _currUri;\r\n        var _evtNamespace;\r\n        dynamicProto(AnalyticsPlugin, _this, function (_self, _base) {\r\n            var _addHook = _base[_DYN__ADD_HOOK /* @min:%2e_addHook */];\r\n            _initDefaults();\r\n            _self.getCookieMgr = function () {\r\n                return safeGetCookieMgr(_self[_DYN_CORE /* @min:%2ecore */]);\r\n            };\r\n            _self.processTelemetry = function (env, itemCtx) {\r\n                _self.processNext(env, itemCtx);\r\n            };\r\n            _self.trackEvent = function (event, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(event, EventTelemetry[_DYN_DATA_TYPE /* @min:%2edataType */], EventTelemetry[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(2 /* eLoggingSeverity.WARNING */, 39 /* _eInternalMessageId.TrackTraceFailed */, \"trackTrace failed, trace will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n             * @param   name    A string that identifies this event uniquely within the document.\r\n             */\r\n            _self.startTrackEvent = function (name) {\r\n                try {\r\n                    _eventTracking.start(name);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 29 /* _eInternalMessageId.StartTrackEventFailed */, \"startTrackEvent failed, event will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Log an extended event that you started timing with `startTrackEvent`.\r\n             * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n             * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n             * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n             */\r\n            _self.stopTrackEvent = function (name, properties, measurements) {\r\n                try {\r\n                    _eventTracking.stop(name, undefined, properties, measurements);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 30 /* _eInternalMessageId.StopTrackEventFailed */, \"stopTrackEvent failed, event will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Log a diagnostic message\r\n             * @param trace\r\n             * @param ICustomProperties.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackTrace = function (trace, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(trace, Trace[_DYN_DATA_TYPE /* @min:%2edataType */], Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(2 /* eLoggingSeverity.WARNING */, 39 /* _eInternalMessageId.TrackTraceFailed */, \"trackTrace failed, trace will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Log a numeric value that is not associated with a specific event. Typically\r\n             * used to send regular reports of performance indicators. To send single measurement, just\r\n             * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n             * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n             * and sending the resulting average at intervals\r\n             * @param metric - input object argument. Only name and average are mandatory.\r\n             * @param } customProperties additional data used to filter metrics in the\r\n             * portal. Defaults to empty.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackMetric = function (metric, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(metric, Metric[_DYN_DATA_TYPE /* @min:%2edataType */], Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 36 /* _eInternalMessageId.TrackMetricFailed */, \"trackMetric failed, metric will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Logs that a page or other item was viewed.\r\n             * @param IPageViewTelemetry - The string you used as the name in startTrackPage. Defaults to the document title.\r\n             * @param customProperties - Additional data used to filter events and metrics. Defaults to empty.\r\n             * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n             */\r\n            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */] = function (pageView, customProperties) {\r\n                try {\r\n                    var inPv = pageView || {};\r\n                    _pageViewManager[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */](inPv, __assign(__assign(__assign({}, inPv.properties), inPv.measurements), customProperties));\r\n                    if (_autoTrackPageVisitTime) {\r\n                        _pageVisitTimeManager[_DYN_TRACK_PREVIOUS_PAGE_1 /* @min:%2etrackPreviousPageVisit */](inPv.name, inPv.uri);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 37 /* _eInternalMessageId.TrackPVFailed */, \"trackPageView failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n             * @param pageView - Page view item to be sent\r\n             * @param properties - Custom properties (Part C) that a user can add to the telemetry item\r\n             * @param systemProperties - System level properties (Part A) that a user can add to the telemetry item\r\n             */\r\n            _self[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */] = function (pageView, properties, systemProperties) {\r\n                var doc = getDocument();\r\n                if (doc) {\r\n                    pageView.refUri = pageView.refUri === undefined ? doc.referrer : pageView.refUri;\r\n                }\r\n                if (isNullOrUndefined(pageView[_DYN_START_TIME /* @min:%2estartTime */])) {\r\n                    // calculate the start time manually\r\n                    var duration = ((properties || pageView[_DYN_PROPERTIES /* @min:%2eproperties */] || {})[_DYN_DURATION /* @min:%2eduration */] || 0);\r\n                    pageView[_DYN_START_TIME /* @min:%2estartTime */] = new Date(new Date().getTime() - duration);\r\n                }\r\n                var telemetryItem = createTelemetryItem(pageView, PageView[_DYN_DATA_TYPE /* @min:%2edataType */], PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                // reset ajaxes counter\r\n                _trackAjaxAttempts = 0;\r\n            };\r\n            /**\r\n             * @ignore INTERNAL ONLY\r\n             * @param pageViewPerformance\r\n             * @param properties\r\n             */\r\n            _self[_DYN_SEND_PAGE_VIEW_PERFO3 /* @min:%2esendPageViewPerformanceInternal */] = function (pageViewPerformance, properties, systemProperties) {\r\n                var telemetryItem = createTelemetryItem(pageViewPerformance, PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            };\r\n            /**\r\n             * Send browser performance metrics.\r\n             * @param pageViewPerformance\r\n             * @param customProperties\r\n             */\r\n            _self.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n                var inPvp = pageViewPerformance || {};\r\n                try {\r\n                    _pageViewPerformanceManager[_DYN_POPULATE_PAGE_VIEW_P4 /* @min:%2epopulatePageViewPerformanceEvent */](inPvp);\r\n                    _self[_DYN_SEND_PAGE_VIEW_PERFO3 /* @min:%2esendPageViewPerformanceInternal */](inPvp, customProperties);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 37 /* _eInternalMessageId.TrackPVFailed */, \"trackPageViewPerformance failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n             * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n             * and send the event.\r\n             * @param name - A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n             */\r\n            _self.startTrackPage = function (name) {\r\n                try {\r\n                    if (typeof name !== \"string\") {\r\n                        var doc = getDocument();\r\n                        name = doc && doc.title || \"\";\r\n                    }\r\n                    _pageTracking.start(name);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 31 /* _eInternalMessageId.StartTrackFailed */, \"startTrackPage failed, page view may not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n             * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n             * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n             * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n             * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n             * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n             */\r\n            _self.stopTrackPage = function (name, url, properties, measurement) {\r\n                try {\r\n                    if (typeof name !== \"string\") {\r\n                        var doc = getDocument();\r\n                        name = doc && doc.title || \"\";\r\n                    }\r\n                    if (typeof url !== \"string\") {\r\n                        var loc = getLocation();\r\n                        url = loc && loc[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    _pageTracking.stop(name, url, properties, measurement);\r\n                    if (_autoTrackPageVisitTime) {\r\n                        _pageVisitTimeManager[_DYN_TRACK_PREVIOUS_PAGE_1 /* @min:%2etrackPreviousPageVisit */](name, url);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 32 /* _eInternalMessageId.StopTrackFailed */, \"stopTrackPage failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n            * @ignore INTERNAL ONLY\r\n            * @param exception\r\n            * @param properties\r\n            * @param systemProperties\r\n            */\r\n            _self[_DYN_SEND_EXCEPTION_INTER5 /* @min:%2esendExceptionInternal */] = function (exception, customProperties, systemProperties) {\r\n                var _a;\r\n                // Adding additional edge cases to handle\r\n                // - Not passing anything (null / undefined)\r\n                var theError = (exception && (exception[_DYN_EXCEPTION /* @min:%2eexception */] || exception[_DYN_ERROR /* @min:%2eerror */])) ||\r\n                    // - Handle someone calling trackException based of v1 API where the exception was the Error\r\n                    isError(exception) && exception ||\r\n                    // - Handles no error being defined and instead of creating a new Error() instance attempt to map so any stacktrace\r\n                    //   is preserved and does not list ApplicationInsights code as the source\r\n                    { name: (exception && typeof exception), message: exception || strNotSpecified };\r\n                // If no exception object was passed assign to an empty object to avoid internal exceptions\r\n                exception = exception || {};\r\n                var exceptionPartB = new Exception(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), theError, exception[_DYN_PROPERTIES /* @min:%2eproperties */] || customProperties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n                var doc = getDocument();\r\n                if (doc && ((_a = _self.config.expCfg) === null || _a === void 0 ? void 0 : _a.inclScripts)) {\r\n                    var scriptsInfo = findAllScripts(doc);\r\n                    exceptionPartB[_DYN_PROPERTIES /* @min:%2eproperties */][\"exceptionScripts\"] = JSON.stringify(scriptsInfo);\r\n                }\r\n                var telemetryItem = createTelemetryItem(exceptionPartB, Exception[_DYN_DATA_TYPE /* @min:%2edataType */], Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            };\r\n            /**\r\n             * Log an exception you have caught.\r\n             *\r\n             * @param exception -   Object which contains exception to be sent\r\n             * @param } customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n             *\r\n             * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackException = function (exception, customProperties) {\r\n                if (exception && !exception[_DYN_EXCEPTION /* @min:%2eexception */] && exception[_DYN_ERROR /* @min:%2eerror */]) {\r\n                    exception[_DYN_EXCEPTION /* @min:%2eexception */] = exception[_DYN_ERROR /* @min:%2eerror */];\r\n                }\r\n                try {\r\n                    _self[_DYN_SEND_EXCEPTION_INTER5 /* @min:%2esendExceptionInternal */](exception, customProperties);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 35 /* _eInternalMessageId.TrackExceptionFailed */, \"trackException failed, exception will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Custom error handler for Application Insights Analytics\r\n             * @param exception\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self[_DYN__ONERROR /* @min:%2e_onerror */] = function (exception) {\r\n                var error = exception && exception[_DYN_ERROR /* @min:%2eerror */];\r\n                var evt = exception && exception.evt;\r\n                try {\r\n                    if (!evt) {\r\n                        var _window = getWindow();\r\n                        if (_window) {\r\n                            evt = _window[strEvent];\r\n                        }\r\n                    }\r\n                    var url = (exception && exception.url) || (getDocument() || {}).URL;\r\n                    // If no error source is provided assume the default window.onerror handler\r\n                    var errorSrc = exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */] || \"window.onerror@\" + url + \":\" + (exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0) + \":\" + (exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0);\r\n                    var properties = {\r\n                        errorSrc: errorSrc,\r\n                        url: url,\r\n                        lineNumber: exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0,\r\n                        columnNumber: exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0,\r\n                        message: exception[_DYN_MESSAGE /* @min:%2emessage */]\r\n                    };\r\n                    if (isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception[_DYN_ERROR /* @min:%2eerror */])) {\r\n                        _sendCORSException(Exception[_DYN__CREATE_AUTO_EXCEPTI6 /* @min:%2eCreateAutoException */](\"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\", url, exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0, exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0, error, evt, null, errorSrc), properties);\r\n                    }\r\n                    else {\r\n                        if (!exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */]) {\r\n                            exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */] = errorSrc;\r\n                        }\r\n                        _self.trackException({ exception: exception, severityLevel: 3 /* eSeverityLevel.Error */ }, properties);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    var errorString = error ? (error.name + \", \" + error[_DYN_MESSAGE /* @min:%2emessage */]) : \"null\";\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 11 /* _eInternalMessageId.ExceptionWhileLoggingError */, \"_onError threw exception while logging error, error will not be collected: \"\r\n                        + getExceptionName(e), { exception: dumpObj(e), errorString: errorString });\r\n                }\r\n            };\r\n            _self[_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */] = function (telemetryInitializer) {\r\n                if (_self[_DYN_CORE /* @min:%2ecore */]) {\r\n                    // Just add to the core\r\n                    return _self[_DYN_CORE /* @min:%2ecore */][_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */](telemetryInitializer);\r\n                }\r\n                // Handle \"pre-initialization\" telemetry initializers (for backward compatibility)\r\n                if (!_preInitTelemetryInitializers) {\r\n                    _preInitTelemetryInitializers = [];\r\n                }\r\n                _preInitTelemetryInitializers.push(telemetryInitializer);\r\n            };\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    return;\r\n                }\r\n                if (isNullOrUndefined(core)) {\r\n                    throwError(\"Error initializing\");\r\n                }\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                try {\r\n                    _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self.identifier), core.evtNamespace && core.evtNamespace());\r\n                    if (_preInitTelemetryInitializers) {\r\n                        arrForEach(_preInitTelemetryInitializers, function (initializer) {\r\n                            core[_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */](initializer);\r\n                        });\r\n                        _preInitTelemetryInitializers = null;\r\n                    }\r\n                    _populateDefaults(config);\r\n                    _pageViewPerformanceManager = new PageViewPerformanceManager(_self[_DYN_CORE /* @min:%2ecore */]);\r\n                    _pageViewManager = new PageViewManager(_self, _extConfig.overridePageViewDuration, _self[_DYN_CORE /* @min:%2ecore */], _pageViewPerformanceManager);\r\n                    _pageVisitTimeManager = new PageVisitTimeManager(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), function (pageName, pageUrl, pageVisitTime) { return trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n                    _eventTracking = new Timing(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), \"trackEvent\");\r\n                    _eventTracking.action =\r\n                        function (name, url, duration, properties, measurements) {\r\n                            if (!properties) {\r\n                                properties = {};\r\n                            }\r\n                            if (!measurements) {\r\n                                measurements = {};\r\n                            }\r\n                            properties.duration = duration[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            _self.trackEvent({ name: name, properties: properties, measurements: measurements });\r\n                        };\r\n                    // initialize page view timing\r\n                    _pageTracking = new Timing(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), \"trackPageView\");\r\n                    _pageTracking.action = function (name, url, duration, properties, measurements) {\r\n                        // duration must be a custom property in order for the collector to extract it\r\n                        if (isNullOrUndefined(properties)) {\r\n                            properties = {};\r\n                        }\r\n                        properties.duration = duration[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                        var pageViewItem = {\r\n                            name: name,\r\n                            uri: url,\r\n                            properties: properties,\r\n                            measurements: measurements\r\n                        };\r\n                        _self[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageViewItem, properties);\r\n                    };\r\n                    if (hasWindow()) {\r\n                        _updateExceptionTracking();\r\n                        _updateLocationChange();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // resetting the initialized state because of failure\r\n                    _self.setInitialized(false);\r\n                    throw e;\r\n                }\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _pageViewManager && _pageViewManager.teardown(unloadCtx, unloadState);\r\n                // Just register to remove all events associated with this namespace\r\n                eventOff(window, null, null, _evtNamespace);\r\n                _initDefaults();\r\n            };\r\n            function _populateDefaults(config) {\r\n                var identifier = _self.identifier;\r\n                var core = _self[_DYN_CORE /* @min:%2ecore */];\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(config, function () {\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    _extConfig = ctx.getExtCfg(identifier, defaultValues);\r\n                    _autoTrackPageVisitTime = _extConfig[_DYN_AUTO_TRACK_PAGE_VISI9 /* @min:%2eautoTrackPageVisitTime */];\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    _updateStorageUsage(_extConfig);\r\n                    // _updateBrowserLinkTracking\r\n                    _isBrowserLinkTrackingEnabled = _extConfig[_DYN_IS_BROWSER_LINK_TRAC10 /* @min:%2eisBrowserLinkTrackingEnabled */];\r\n                    _addDefaultTelemetryInitializers();\r\n                }));\r\n            }\r\n            /**\r\n             * Log a page visit time\r\n             * @param    pageName    Name of page\r\n             * @param    pageVisitDuration Duration of visit to the page in milliseconds\r\n             */\r\n            function trackPageVisitTime(pageName, pageUrl, pageVisitTime) {\r\n                var properties = { PageName: pageName, PageUrl: pageUrl };\r\n                _self.trackMetric({\r\n                    name: \"PageVisitTime\",\r\n                    average: pageVisitTime,\r\n                    max: pageVisitTime,\r\n                    min: pageVisitTime,\r\n                    sampleCount: 1\r\n                }, properties);\r\n            }\r\n            function _addDefaultTelemetryInitializers() {\r\n                if (!_browserLinkInitializerAdded && _isBrowserLinkTrackingEnabled) {\r\n                    var browserLinkPaths_1 = [\"/browserLinkSignalR/\", \"/__browserLink/\"];\r\n                    var dropBrowserLinkRequests = function (envelope) {\r\n                        if (_isBrowserLinkTrackingEnabled && envelope.baseType === RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n                            var remoteData = envelope.baseData;\r\n                            if (remoteData) {\r\n                                for (var i = 0; i < browserLinkPaths_1[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                                    if (remoteData.target && strIndexOf(remoteData.target, browserLinkPaths_1[i]) >= 0) {\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return true;\r\n                    };\r\n                    _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](_self[_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */](dropBrowserLinkRequests));\r\n                    _browserLinkInitializerAdded = true;\r\n                }\r\n            }\r\n            function _sendCORSException(exception, properties) {\r\n                var telemetryItem = createTelemetryItem(exception, Exception[_DYN_DATA_TYPE /* @min:%2edataType */], Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            }\r\n            function _updateExceptionTracking() {\r\n                var _window = getWindow();\r\n                var locn = getLocation(true);\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extConfig, function () {\r\n                    _disableExceptionTracking = _extConfig.disableExceptionTracking;\r\n                    if (!_disableExceptionTracking && !_autoExceptionInstrumented && !_extConfig.autoExceptionInstrumented) {\r\n                        // We want to enable exception auto collection and it has not been done so yet\r\n                        _addHook(InstrumentEvent(_window, \"onerror\", {\r\n                            ns: _evtNamespace,\r\n                            rsp: function (callDetails, message, url, lineNumber, columnNumber, error) {\r\n                                if (!_disableExceptionTracking && callDetails.rslt !== true) {\r\n                                    _self[_DYN__ONERROR /* @min:%2e_onerror */](Exception[_DYN__CREATE_AUTO_EXCEPTI6 /* @min:%2eCreateAutoException */](message, url, lineNumber, columnNumber, error, callDetails.evt));\r\n                                }\r\n                            }\r\n                        }, false));\r\n                        _autoExceptionInstrumented = true;\r\n                    }\r\n                }));\r\n                _addUnhandledPromiseRejectionTracking(_window, locn);\r\n            }\r\n            function _updateLocationChange() {\r\n                var win = getWindow();\r\n                var locn = getLocation(true);\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extConfig, function () {\r\n                    _enableAutoRouteTracking = _extConfig[_DYN_ENABLE_AUTO_ROUTE_TR11 /* @min:%2eenableAutoRouteTracking */] === true;\r\n                    /**\r\n                     * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n                     */\r\n                    if (win && _enableAutoRouteTracking && !_historyListenerAdded && hasHistory()) {\r\n                        var _history = getHistory();\r\n                        if (isFunction(_history.pushState) && isFunction(_history.replaceState) && typeof Event !== strUndefined) {\r\n                            _addHistoryListener(win, _history, locn);\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n            function _getDistributedTraceCtx() {\r\n                var distributedTraceCtx = null;\r\n                if (_self[_DYN_CORE /* @min:%2ecore */] && _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx) {\r\n                    distributedTraceCtx = _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx(false);\r\n                }\r\n                if (!distributedTraceCtx) {\r\n                    // Fallback when using an older Core and PropertiesPlugin\r\n                    var properties = _self[_DYN_CORE /* @min:%2ecore */].getPlugin(PropertiesPluginIdentifier);\r\n                    if (properties) {\r\n                        var context = properties.plugin.context;\r\n                        if (context) {\r\n                            distributedTraceCtx = createDistributedTraceContextFromTrace(context.telemetryTrace);\r\n                        }\r\n                    }\r\n                }\r\n                return distributedTraceCtx;\r\n            }\r\n            /**\r\n             * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n             */\r\n            function _addHistoryListener(win, history, locn) {\r\n                if (_historyListenerAdded) {\r\n                    return;\r\n                }\r\n                // Name Prefix is only referenced during the initial initialization and cannot be changed afterwards\r\n                var namePrefix = _extConfig.namePrefix || \"\";\r\n                function _popstateHandler() {\r\n                    if (_enableAutoRouteTracking) {\r\n                        _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                    }\r\n                }\r\n                function _locationChangeHandler() {\r\n                    // We always track the changes (if the handler is installed) to handle the feature being disabled between location changes\r\n                    if (_currUri) {\r\n                        _prevUri = _currUri;\r\n                        _currUri = locn && locn[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    else {\r\n                        _currUri = locn && locn[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    if (_enableAutoRouteTracking) {\r\n                        var distributedTraceCtx = _getDistributedTraceCtx();\r\n                        if (distributedTraceCtx) {\r\n                            distributedTraceCtx.setTraceId(generateW3CId());\r\n                            var traceLocationName = \"_unknown_\";\r\n                            if (locn && locn.pathname) {\r\n                                traceLocationName = locn.pathname + (locn.hash || \"\");\r\n                            }\r\n                            // This populates the ai.operation.name which has a maximum size of 1024 so we need to sanitize it\r\n                            distributedTraceCtx.setName(dataSanitizeString(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), traceLocationName));\r\n                        }\r\n                        scheduleTimeout((function (uri) {\r\n                            // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */]({ refUri: uri, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                        }).bind(_self, _prevUri), _self.autoRoutePVDelay);\r\n                    }\r\n                }\r\n                _addHook(InstrumentEvent(history, \"pushState\", {\r\n                    ns: _evtNamespace,\r\n                    rsp: function () {\r\n                        if (_enableAutoRouteTracking) {\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"pushState\"));\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                        }\r\n                    }\r\n                }, true));\r\n                _addHook(InstrumentEvent(history, \"replaceState\", {\r\n                    ns: _evtNamespace,\r\n                    rsp: function () {\r\n                        if (_enableAutoRouteTracking) {\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"replaceState\"));\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                        }\r\n                    }\r\n                }, true));\r\n                eventOn(win, namePrefix + \"popstate\", _popstateHandler, _evtNamespace);\r\n                eventOn(win, namePrefix + \"locationchange\", _locationChangeHandler, _evtNamespace);\r\n                _historyListenerAdded = true;\r\n            }\r\n            function _addUnhandledPromiseRejectionTracking(_window, _location) {\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extConfig, function () {\r\n                    _enableUnhandledPromiseRejectionTracking = _extConfig[_DYN_ENABLE_UNHANDLED_PRO12 /* @min:%2eenableUnhandledPromiseRejectionTracking */] === true;\r\n                    _autoExceptionInstrumented = _autoExceptionInstrumented || _extConfig[_DYN_AUTO_UNHANDLED_PROMI13 /* @min:%2eautoUnhandledPromiseInstrumented */];\r\n                    if (_enableUnhandledPromiseRejectionTracking && !_autoUnhandledPromiseInstrumented) {\r\n                        // We want to enable exception auto collection and it has not been done so yet\r\n                        _addHook(InstrumentEvent(_window, \"onunhandledrejection\", {\r\n                            ns: _evtNamespace,\r\n                            rsp: function (callDetails, error) {\r\n                                if (_enableUnhandledPromiseRejectionTracking && callDetails.rslt !== true) { // handled could be typeof function\r\n                                    _self[_DYN__ONERROR /* @min:%2e_onerror */](Exception[_DYN__CREATE_AUTO_EXCEPTI6 /* @min:%2eCreateAutoException */](_getReason(error), _location ? _location[_DYN_HREF /* @min:%2ehref */] : \"\", 0, 0, error, callDetails.evt));\r\n                                }\r\n                            }\r\n                        }, false));\r\n                        _extConfig[_DYN_AUTO_UNHANDLED_PROMI13 /* @min:%2eautoUnhandledPromiseInstrumented */] = _autoUnhandledPromiseInstrumented = true;\r\n                    }\r\n                }));\r\n            }\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {eLoggingSeverity} - The severity of the log message\r\n             * @param msgId - {_eInternalLogMessage} - The log message.\r\n             */\r\n            function _throwInternal(severity, msgId, msg, properties, isUserAct) {\r\n                _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]().throwInternal(severity, msgId, msg, properties, isUserAct);\r\n            }\r\n            function _initDefaults() {\r\n                _eventTracking = null;\r\n                _pageTracking = null;\r\n                _pageViewManager = null;\r\n                _pageViewPerformanceManager = null;\r\n                _pageVisitTimeManager = null;\r\n                _preInitTelemetryInitializers = null;\r\n                _isBrowserLinkTrackingEnabled = false;\r\n                _browserLinkInitializerAdded = false;\r\n                _enableAutoRouteTracking = false;\r\n                _historyListenerAdded = false;\r\n                _disableExceptionTracking = false;\r\n                _autoExceptionInstrumented = false;\r\n                _enableUnhandledPromiseRejectionTracking = false;\r\n                _autoUnhandledPromiseInstrumented = false;\r\n                _autoTrackPageVisitTime = false;\r\n                // Counts number of trackAjax invocations.\r\n                // By default we only monitor X ajax call per view to avoid too much load.\r\n                // Default value is set in config.\r\n                // This counter keeps increasing even after the limit is reached.\r\n                _trackAjaxAttempts = 0;\r\n                // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n                var location = getLocation(true);\r\n                _prevUri = location && location[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                _currUri = null;\r\n                _evtNamespace = null;\r\n                _extConfig = null;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _extConfig; }\r\n                });\r\n            }\r\n            // For backward compatibility\r\n            objDefine(_self, \"_pageViewManager\", { g: function () { return _pageViewManager; } });\r\n            objDefine(_self, \"_pageViewPerformanceManager\", { g: function () { return _pageViewPerformanceManager; } });\r\n            objDefine(_self, \"_pageVisitTimeManager\", { g: function () { return _pageVisitTimeManager; } });\r\n            objDefine(_self, \"_evtNamespace\", { g: function () { return \".\" + _evtNamespace; } });\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AnalyticsPlugin.prototype.getCookieMgr.\r\n// Removed Stub for AnalyticsPlugin.prototype.processTelemetry.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.startTrackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.stopTrackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackTrace.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackMetric.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackPageView.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendPageViewInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendPageViewPerformanceInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackPageViewPerformance.\r\n// Removed Stub for AnalyticsPlugin.prototype.startTrackPage.\r\n// Removed Stub for AnalyticsPlugin.prototype.stopTrackPage.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendExceptionInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackException.\r\n// Removed Stub for AnalyticsPlugin.prototype._onerror.\r\n// Removed Stub for AnalyticsPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for AnalyticsPlugin.prototype.initialize.\r\n    AnalyticsPlugin.Version = '3.3.1'; // Not currently used anywhere\r\n    return AnalyticsPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { AnalyticsPlugin };\r\n//# sourceMappingURL=AnalyticsPlugin.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_FEATURE_OPT_IN = \"featureOptIn\"; // Count: 4\r\nexport var _DYN_ON_CFG_CHANGE_RECEIV0 = \"onCfgChangeReceive\"; // Count: 2\r\nexport var _DYN_NON_OVERRIDE_CONFIGS = \"nonOverrideConfigs\"; // Count: 2\r\nexport var _DYN_SCHEDULE_FETCH_TIMEO1 = \"scheduleFetchTimeout\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* CfgSyncPlugin.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nvar _a;\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, createProcessTelemetryContext, createUniqueNamespace, eventOff, eventOn, getGlobal, getJSON, isFetchSupported, isXhrSupported, mergeEvtNamespace, onConfigChange, sendCustomEvent } from \"@microsoft/applicationinsights-core-js\";\r\nimport { doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { isFunction, isNullOrUndefined, isPlainObject, objDeepFreeze, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { applyCdnfeatureCfg, replaceByNonOverrideCfg } from \"./CfgSyncHelperFuncs\";\r\nimport { _DYN_NON_OVERRIDE_CONFIGS, _DYN_ON_CFG_CHANGE_RECEIV0, _DYN_SCHEDULE_FETCH_TIMEO1 } from \"./__DynamicConstants\";\r\nvar EVENT_NAME = \"ai_cfgsync\";\r\nvar STR_GET_METHOD = \"GET\";\r\nvar FETCH_TIMEOUT = 1800000; // 30 minutes\r\nvar udfVal = undefined;\r\nvar defaultNonOverrideCfg = { instrumentationKey: true, connectionString: true, endpointUrl: true };\r\nvar _defaultConfig = objDeepFreeze((_a = {\r\n        syncMode: 1 /* ICfgSyncMode.Broadcast */,\r\n        blkCdnCfg: udfVal,\r\n        customEvtName: udfVal,\r\n        cfgUrl: udfVal,\r\n        overrideSyncFn: udfVal,\r\n        overrideFetchFn: udfVal\r\n    },\r\n    _a[_DYN_ON_CFG_CHANGE_RECEIV0 /* @min:onCfgChangeReceive */] = udfVal,\r\n    _a[_DYN_SCHEDULE_FETCH_TIMEO1 /* @min:scheduleFetchTimeout */] = FETCH_TIMEOUT,\r\n    _a[_DYN_NON_OVERRIDE_CONFIGS /* @min:nonOverrideConfigs */] = defaultNonOverrideCfg,\r\n    _a));\r\nvar CfgSyncPlugin = /** @class */ (function (_super) {\r\n    __extends(CfgSyncPlugin, _super);\r\n    function CfgSyncPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 198;\r\n        _this.identifier = \"AppInsightsCfgSyncPlugin\";\r\n        var _extensionConfig;\r\n        var _mainConfig; // throttle config should be wrapped in IConfiguration\r\n        var _evtName;\r\n        var _evtNamespace;\r\n        var _cfgUrl;\r\n        var _timeoutHandle;\r\n        var _receiveChanges;\r\n        var _broadcastChanges;\r\n        var _blkCdnCfg;\r\n        var _fetchTimeout;\r\n        var _retryCnt;\r\n        var _onCfgChangeReceive;\r\n        var _nonOverrideConfigs;\r\n        var _fetchFn;\r\n        var _overrideFetchFn;\r\n        var _overrideSyncFn;\r\n        var _paused = false;\r\n        dynamicProto(CfgSyncPlugin, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self.identifier), core.evtNamespace && core.evtNamespace());\r\n                _populateDefaults(config);\r\n            };\r\n            _self.getCfg = function () {\r\n                return _mainConfig;\r\n            };\r\n            _self.pause = function () {\r\n                _paused = true;\r\n                _clearScheduledTimer();\r\n            };\r\n            _self.resume = function () {\r\n                _paused = false;\r\n                _setupTimer();\r\n            };\r\n            // used for V2 to manaully trigger config udpate\r\n            _self.setCfg = function (config) {\r\n                return _setCfg(config);\r\n            };\r\n            _self.sync = function (customDetails) {\r\n                return _sendCfgsyncEvents(customDetails);\r\n            };\r\n            _self.updateEventListenerName = function (eventName) {\r\n                return _updateEventListenerName(eventName);\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _eventOff();\r\n                _clearScheduledTimer();\r\n                _initDefaults();\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_broadcastChanges, _receiveChanges, _evtName, _blkCdnCfg, _nonOverrideConfigs];\r\n            };\r\n            function _initDefaults() {\r\n                _mainConfig = null;\r\n                _evtName = null;\r\n                _evtNamespace = null;\r\n                _cfgUrl = null;\r\n                _receiveChanges = null;\r\n                _broadcastChanges = null;\r\n                _nonOverrideConfigs = null;\r\n                _timeoutHandle = null;\r\n                _fetchTimeout = null;\r\n                _retryCnt = null;\r\n                _blkCdnCfg = null;\r\n                _overrideFetchFn = null;\r\n                _overrideSyncFn = null;\r\n                _onCfgChangeReceive = null;\r\n            }\r\n            function _populateDefaults(config) {\r\n                var identifier = _self.identifier;\r\n                var core = _self.core;\r\n                _self._addHook(onConfigChange(config, function () {\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    _extensionConfig = ctx.getExtCfg(identifier, _defaultConfig);\r\n                    var preBlkCdn = _blkCdnCfg;\r\n                    _blkCdnCfg = !!_extensionConfig.blkCdnCfg;\r\n                    // avoid initial call\r\n                    if (!isNullOrUndefined(preBlkCdn) && preBlkCdn !== _blkCdnCfg) {\r\n                        if (!_blkCdnCfg && _cfgUrl) {\r\n                            _fetchFn && _fetchFn(_cfgUrl, _onFetchComplete, _broadcastChanges);\r\n                        }\r\n                        else {\r\n                            _clearScheduledTimer();\r\n                        }\r\n                    }\r\n                    if (isNullOrUndefined(_receiveChanges)) {\r\n                        _receiveChanges = _extensionConfig.syncMode === 2 /* ICfgSyncMode.Receive */;\r\n                    }\r\n                    if (isNullOrUndefined(_broadcastChanges)) {\r\n                        _broadcastChanges = _extensionConfig.syncMode === 1 /* ICfgSyncMode.Broadcast */;\r\n                    }\r\n                    var newEvtName = _extensionConfig.customEvtName || EVENT_NAME;\r\n                    if (_evtName !== newEvtName) {\r\n                        if (_receiveChanges) {\r\n                            _updateEventListenerName(newEvtName);\r\n                        }\r\n                        else {\r\n                            _eventOff();\r\n                            _evtName = newEvtName;\r\n                        }\r\n                    }\r\n                    if (isNullOrUndefined(_cfgUrl)) {\r\n                        _cfgUrl = _extensionConfig.cfgUrl;\r\n                    }\r\n                    // if cfgUrl is set, we will ignore core config change\r\n                    if (!_cfgUrl) {\r\n                        _mainConfig = config;\r\n                        if (_broadcastChanges) {\r\n                            _sendCfgsyncEvents();\r\n                        }\r\n                    }\r\n                }));\r\n                _overrideSyncFn = _extensionConfig.overrideSyncFn;\r\n                _overrideFetchFn = _extensionConfig.overrideFetchFn;\r\n                _onCfgChangeReceive = _extensionConfig[_DYN_ON_CFG_CHANGE_RECEIV0 /* @min:%2eonCfgChangeReceive */];\r\n                _nonOverrideConfigs = _extensionConfig[_DYN_NON_OVERRIDE_CONFIGS /* @min:%2enonOverrideConfigs */]; // override values should not be changed\r\n                _fetchTimeout = _extensionConfig[_DYN_SCHEDULE_FETCH_TIMEO1 /* @min:%2escheduleFetchTimeout */];\r\n                _fetchFn = _getFetchFnInterface();\r\n                _retryCnt = 0;\r\n                // NOT support cfgURL change to avoid mutiple fetch calls\r\n                if (_cfgUrl && !_blkCdnCfg) {\r\n                    _fetchFn && _fetchFn(_cfgUrl, _onFetchComplete, _broadcastChanges);\r\n                }\r\n            }\r\n            function _setCfg(config, isAutoSync) {\r\n                if (config) {\r\n                    _mainConfig = config;\r\n                    if (!!isAutoSync && !_paused) {\r\n                        return _sendCfgsyncEvents();\r\n                    }\r\n                    if (_receiveChanges && !_paused) {\r\n                        _self.core.updateCfg(config);\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _eventOff() {\r\n                try {\r\n                    var global_1 = getGlobal();\r\n                    if (global_1) {\r\n                        eventOff(global_1, null, null, _evtNamespace);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _sendCfgsyncEvents(customDetails) {\r\n                try {\r\n                    if (!!_overrideSyncFn && isFunction(_overrideSyncFn)) {\r\n                        return _overrideSyncFn(_mainConfig, customDetails);\r\n                    }\r\n                    return sendCustomEvent(_evtName, _mainConfig, customDetails);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            }\r\n            function _updateEventListenerName(name) {\r\n                try {\r\n                    _eventOff();\r\n                    if (name) {\r\n                        _evtName = name;\r\n                        _addEventListener();\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            }\r\n            function _getFetchFnInterface() {\r\n                var _fetchFn = _overrideFetchFn;\r\n                if (isNullOrUndefined(_fetchFn)) {\r\n                    if (isFetchSupported()) {\r\n                        _fetchFn = _fetchSender;\r\n                    }\r\n                    else if (isXhrSupported()) {\r\n                        _fetchFn = _xhrSender;\r\n                    }\r\n                }\r\n                return _fetchFn;\r\n            }\r\n            function _fetchSender(url, oncomplete, isAutoSync) {\r\n                var global = getGlobal();\r\n                var fetchFn = (global && global.fetch) || null;\r\n                if (url && fetchFn && isFunction(fetchFn)) {\r\n                    try {\r\n                        var init = {\r\n                            method: STR_GET_METHOD\r\n                        };\r\n                        var request = new Request(url, init);\r\n                        doAwaitResponse(fetch(request), function (result) {\r\n                            var response = result.value;\r\n                            if (!result.rejected) {\r\n                                if (response.ok) {\r\n                                    doAwaitResponse(response.text(), function (res) {\r\n                                        _doOnComplete(oncomplete, response.status, res.value, isAutoSync);\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    _doOnComplete(oncomplete, response.status, null, isAutoSync);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _doOnComplete(oncomplete, 400);\r\n                            }\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        // eslint-disable-next-line no-empty\r\n                    }\r\n                }\r\n            }\r\n            function _xhrSender(url, oncomplete, isAutoSync) {\r\n                try {\r\n                    var xhr_1 = new XMLHttpRequest();\r\n                    xhr_1.open(STR_GET_METHOD, url);\r\n                    xhr_1.onreadystatechange = function () {\r\n                        if (xhr_1.readyState === XMLHttpRequest.DONE) {\r\n                            _doOnComplete(oncomplete, xhr_1.status, xhr_1.responseText, isAutoSync);\r\n                        }\r\n                    };\r\n                    xhr_1.onerror = function () {\r\n                        _doOnComplete(oncomplete, 400);\r\n                    };\r\n                    xhr_1.ontimeout = function () {\r\n                        _doOnComplete(oncomplete, 400);\r\n                    };\r\n                    xhr_1.send();\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _onFetchComplete(status, response, isAutoSync) {\r\n                try {\r\n                    if (status >= 200 && status < 400 && response) {\r\n                        _retryCnt = 0; // any successful response will reset retry count to 0\r\n                        var JSON_1 = getJSON();\r\n                        if (JSON_1) {\r\n                            var cdnCfg = JSON_1.parse(response); //comments are not allowed\r\n                            var cfg = applyCdnfeatureCfg(cdnCfg, _self.core);\r\n                            var newCfg = cfg && isPlainObject(cfg) && _replaceTartgetByKeys(cfg);\r\n                            newCfg && _setCfg(newCfg, isAutoSync);\r\n                            //cfg && _setCfg(cfg, isAutoSync);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _retryCnt++;\r\n                    }\r\n                    if (_retryCnt < 3) {\r\n                        _setupTimer();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doOnComplete(oncomplete, status, response, isAutoSync) {\r\n                try {\r\n                    oncomplete(status, response, isAutoSync);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _addEventListener() {\r\n                if (_receiveChanges) {\r\n                    var global_2 = getGlobal();\r\n                    if (global_2) {\r\n                        try {\r\n                            eventOn(global_2, _evtName, function (event) {\r\n                                // TODO: add more validation here\r\n                                // may include a \"name\" or some other features to check\r\n                                var cfgEvent = event && event.detail;\r\n                                if (_onCfgChangeReceive && cfgEvent) {\r\n                                    _onCfgChangeReceive(cfgEvent);\r\n                                }\r\n                                else {\r\n                                    var cfg = cfgEvent && cfgEvent.cfg;\r\n                                    var newCfg = cfg && isPlainObject(cfg) && _replaceTartgetByKeys(cfg);\r\n                                    newCfg && _setCfg(newCfg);\r\n                                }\r\n                            }, _evtNamespace, true);\r\n                        }\r\n                        catch (e) {\r\n                            // eslint-disable-next-line no-empty\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 4 levels\r\n            function _replaceTartgetByKeys(cfg, level) {\r\n                var _cfg = null;\r\n                try {\r\n                    if (cfg) {\r\n                        _cfg = replaceByNonOverrideCfg(cfg, _nonOverrideConfigs, 0, 5);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return _cfg;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers fetching cdn every 30mins after inital call\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && _fetchTimeout) {\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _fetchFn(_cfgUrl, _onFetchComplete, _broadcastChanges);\r\n                    }, _fetchTimeout);\r\n                    _timeoutHandle.unref();\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryCnt = 0;\r\n            }\r\n            _self.processTelemetry = function (env, itemCtx) {\r\n                _self.processNext(env, itemCtx);\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for CfgSyncPlugin.prototype.initialize.\r\n// Removed Stub for CfgSyncPlugin.prototype.getCfg.\r\n// Removed Stub for CfgSyncPlugin.prototype.setCfg.\r\n// Removed Stub for CfgSyncPlugin.prototype.sync.\r\n// Removed Stub for CfgSyncPlugin.prototype.updateEventListenerName.\r\n// Removed Stub for CfgSyncPlugin.prototype.pause.\r\n// Removed Stub for CfgSyncPlugin.prototype.resume.\r\n    //// Removed Stub for CfgSyncPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    CfgSyncPlugin.__ieDyn=1;\n\n    return CfgSyncPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { CfgSyncPlugin };\r\n//# sourceMappingURL=CfgSyncPlugin.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { isNullOrUndefined, isObject, objExtend, objForEachKey, setValueByKey } from \"@nevware21/ts-utils\";\r\nimport { _DYN_FEATURE_OPT_IN } from \"./__DynamicConstants\";\r\n/**\r\n * Delete a config key in the given cfg, if the config key exists in nonOverrideConfigs and its value is set to true\r\n * @param cfg cfg to modify\r\n * @param nonOverrideConfigs nonOverrideConfigs\r\n * @param curLevel cur config level, starting at 0\r\n * @param maxLevel max config level\r\n * @returns new copy of modified configs\r\n */\r\nexport function replaceByNonOverrideCfg(cfg, nonOverrideConfigs, curLevel, maxLevel) {\r\n    try {\r\n        var exceedMaxLevel = curLevel > maxLevel;\r\n        if (exceedMaxLevel) {\r\n            cfg = null;\r\n        }\r\n        var curCfg_1 = curLevel == 0 ? objExtend({}, cfg) : cfg; // only copy cfg at the begining level\r\n        if (curCfg_1 && nonOverrideConfigs && !exceedMaxLevel) {\r\n            objForEachKey(curCfg_1, function (key) {\r\n                var nonOverrideVal = nonOverrideConfigs[key];\r\n                if (!!nonOverrideVal) {\r\n                    if (isObject(curCfg_1[key]) && isObject(nonOverrideVal)) {\r\n                        curCfg_1[key] = replaceByNonOverrideCfg(curCfg_1[key], nonOverrideVal, ++curLevel, maxLevel);\r\n                    }\r\n                    else {\r\n                        delete curCfg_1[key];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return curCfg_1;\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    // if errors happen, do nothing\r\n    return cfg;\r\n}\r\n//                                                     CDN Mode, value = B (CDN value = B)\r\n//                                |--------------------------------------------------------------------------|-----------|\r\n//                                |                    | none        | disabled    | enabled     | forceOn   | forceOff  |\r\n//                                | ------------------ | ----------- | ----------- | ----------- | --------- | --------- |\r\n// | User Mode, value = A         | none               | none        | disabled    | enabled     | enabled   | disabled  |\r\n// (user Value = A)               | disabled           | disabled    | disabled    | disabled    | enabled   | disabled  |\r\n//                                | enabled            | enabled     | disabled    | enabled     | enabled   | disabled  |\r\n//                                | none(blockCdn)     | none        | none        | none        | none      | none      |\r\n//                                | disabled(blockCdn) | disabled    | disabled    | disabled    | disabled  | disabled  |\r\n//                                | enabled(blockCdn)  | enabled     | enabled     | enabled     | enabled   | enabled   |\r\n// This matrix identifies how feature based overrides are selected (if present)\r\n//                                cdn Mode (cdn Value = B)\r\n//                   |---------------------------------------------------------------------------|\r\n//                   |                    | none     | disabled | enabled  | forceOn  | forceOff |\r\n//                   | ------------------ | ---------| ---------| ---------| ---------|----------|\r\n// | User Mode       | none               | A        | A        | A || B   | B || A   | B || A   |\r\n// (user Value = A)  | disabled           | A        | A        | A        | B || A   | B || A   |\r\n//                   | enabled            | A        | A        | A || B   | B || A   | B || A   |\r\n//                   | none(blockCdn)     | A        | A        | A        | A        | A        |\r\n//                   | disabled(blockCdn) | A        | A        | A        | A        | A        |\r\n//                   | enabled(blockCdn)  | A        | A        | A        | A        | A        |\r\n// Note:\r\n// Where the \"value\" is an object (map) of encoded key/values which will be used to override the real configuration\r\n// A = either the user supplied enable/disable value (via the `config.featureOptIn[name]`) or if not defined by the user the SDK defaults of the same.\r\n// B = The enable/disable value obtained from the CDN for the named feature\r\n// These are evaluated based on the above matrix to either\r\n// - A (Always the user/sdk value)\r\n// - B (Always the value from the CDN)\r\n// - A || B (If A is null or undefined use the value from the CDN (B) otherwise A)\r\n// - B || A (If B is null or undefined use the user/SDK value otherwise use the value from the CDN)\r\n//\r\n// The result of the value may also be null / undefined, which means there are no overrides to apply when the feature is enabled\r\nvar F = \"featureOptIn.\";\r\nvar M = \".mode\";\r\nvar ON = \".onCfg\";\r\nvar OFF = \".offCfg\";\r\nexport function resolveCdnFeatureCfg(field, cdnCfg, userOptInDetails) {\r\n    var _a;\r\n    // cdn conifg value\r\n    if (!cdnCfg || !cdnCfg.enabled) {\r\n        return null;\r\n    }\r\n    var cdnFt = (cdnCfg[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */] || {})[field] || { mode: 1 /* CdnFeatureMode.none */ };\r\n    var cdnM = cdnFt.mode;\r\n    var cdnOnV = cdnFt.onCfg;\r\n    var cdnOffV = cdnFt.offCfg;\r\n    var userFt = (userOptInDetails || {})[field] || { mode: 2 /* FeatureOptInMode.disable */ }; // default user mode is disable\r\n    var userM = userFt.mode;\r\n    var userOnV = userFt.onCfg;\r\n    var userOffV = userFt.offCfg;\r\n    var blockCdn = !!userFt.blockCdnCfg;\r\n    var mFld = F + field + M;\r\n    var onFld = F + field + ON;\r\n    var offFld = F + field + OFF;\r\n    var mode = userM;\r\n    var onV = userOnV;\r\n    var offV = userOffV;\r\n    if (!blockCdn) {\r\n        if (cdnM === 4 /* CdnFeatureMode.forceOn */ || cdnM === 5 /* CdnFeatureMode.forceOff */) {\r\n            mode = (cdnM == 4 /* CdnFeatureMode.forceOn */ ? 3 /* FeatureOptInMode.enable */ : 2 /* FeatureOptInMode.disable */);\r\n            onV = cdnOnV || userOnV;\r\n            offV = cdnOffV || userOffV;\r\n        }\r\n        else if (cdnM === 2 /* CdnFeatureMode.disable */ || userM === 2 /* FeatureOptInMode.disable */) {\r\n            mode = 2 /* FeatureOptInMode.disable */;\r\n            onV = userOnV || cdnOnV;\r\n            offV = userOffV || cdnOffV;\r\n        }\r\n        else if (cdnM === 3 /* CdnFeatureMode.enable */) {\r\n            mode = 3 /* FeatureOptInMode.enable */;\r\n            onV = userOnV || cdnOnV;\r\n            offV = userOffV || cdnOffV;\r\n        }\r\n        else if (cdnM === 1 /* CdnFeatureMode.none */ && userM === 1 /* FeatureOptInMode.none */) {\r\n            mode = 1 /* FeatureOptInMode.none */;\r\n        }\r\n    }\r\n    return _a = {},\r\n        _a[mFld] = mode,\r\n        _a[onFld] = onV,\r\n        _a[offFld] = offV,\r\n        _a;\r\n}\r\n// helper function to get cdn config with opt-in features\r\nexport function applyCdnfeatureCfg(cdnCfg, core) {\r\n    try {\r\n        if (!cdnCfg || !cdnCfg.enabled) {\r\n            return null;\r\n        }\r\n        if (!cdnCfg[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */]) {\r\n            return cdnCfg.config;\r\n        }\r\n        var optInMap = cdnCfg[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */];\r\n        var cdnConfig_1 = cdnCfg.config || {};\r\n        objForEachKey(optInMap, function (key) {\r\n            var featureVal = resolveCdnFeatureCfg(key, cdnCfg, core.config[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */]);\r\n            if (!isNullOrUndefined(featureVal)) {\r\n                objForEachKey(featureVal, function (config, val) {\r\n                    setValueByKey(cdnConfig_1, config, val);\r\n                });\r\n                _overrideCdnCfgByFeature(key, featureVal, cdnConfig_1);\r\n            }\r\n        });\r\n        return cdnConfig_1;\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\nfunction _overrideCdnCfgByFeature(field, ftVal, config) {\r\n    var mode = ftVal[F + field + M];\r\n    var val = ftVal[F + field + ON];\r\n    var dVal = ftVal[F + field + OFF];\r\n    var target = null;\r\n    if (mode === 3 /* FeatureOptInMode.enable */) {\r\n        target = val;\r\n    }\r\n    if (mode === 2 /* FeatureOptInMode.disable */) {\r\n        target = dVal;\r\n    }\r\n    if (target) {\r\n        objForEachKey(target, function (key, cfg) {\r\n            setValueByKey(config, key, cfg);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=CfgSyncHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TAGS = \"tags\"; // Count: 17\r\nexport var _DYN_DEVICE_TYPE = \"deviceType\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 15\r\nexport var _DYN_NAME = \"name\"; // Count: 8\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 5\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 10\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 7\r\nexport var _DYN__GET = \"_get\"; // Count: 5\r\nexport var _DYN_ENQUEUE = \"enqueue\"; // Count: 7\r\nexport var _DYN_COUNT = \"count\"; // Count: 7\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_PUSH = \"push\"; // Count: 9\r\nexport var _DYN_ITEM = \"item\"; // Count: 6\r\nexport var _DYN_EMIT_LINE_DELIMITED_0 = \"emitLineDelimitedJson\"; // Count: 3\r\nexport var _DYN_CLEAR = \"clear\"; // Count: 6\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 3\r\nexport var _DYN_MARK_AS_SENT = \"markAsSent\"; // Count: 4\r\nexport var _DYN_CLEAR_SENT = \"clearSent\"; // Count: 5\r\nexport var _DYN_BUFFER_OVERRIDE = \"bufferOverride\"; // Count: 3\r\nexport var _DYN__BUFFER__KEY = \"BUFFER_KEY\"; // Count: 5\r\nexport var _DYN__SENT__BUFFER__KEY = \"SENT_BUFFER_KEY\"; // Count: 8\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 6\r\nexport var _DYN__MAX__BUFFER__SIZE = \"MAX_BUFFER_SIZE\"; // Count: 5\r\nexport var _DYN_TRIGGER_SEND = \"triggerSend\"; // Count: 5\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 16\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 3\r\nexport var _DYN__SENDER = \"_sender\"; // Count: 5\r\nexport var _DYN_CUSTOM_HEADERS = \"customHeaders\"; // Count: 3\r\nexport var _DYN_MAX_BATCH_SIZE_IN_BY1 = \"maxBatchSizeInBytes\"; // Count: 2\r\nexport var _DYN_ONUNLOAD_DISABLE_BEA2 = \"onunloadDisableBeacon\"; // Count: 3\r\nexport var _DYN_IS_BEACON_API_DISABL3 = \"isBeaconApiDisabled\"; // Count: 3\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR4 = \"alwaysUseXhrOverride\"; // Count: 2\r\nexport var _DYN_DISABLE_XHR = \"disableXhr\"; // Count: 3\r\nexport var _DYN_ENABLE_SESSION_STORA5 = \"enableSessionStorageBuffer\"; // Count: 2\r\nexport var _DYN__BUFFER = \"_buffer\"; // Count: 9\r\nexport var _DYN_ONUNLOAD_DISABLE_FET6 = \"onunloadDisableFetch\"; // Count: 2\r\nexport var _DYN_DISABLE_SEND_BEACON_7 = \"disableSendBeaconSplit\"; // Count: 2\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN_ENABLE_SEND_PROMISE = \"enableSendPromise\"; // Count: 2\r\nexport var _DYN_GET_SENDER_INST = \"getSenderInst\"; // Count: 4\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_CONVERT_UNDEFINED = \"convertUndefined\"; // Count: 2\r\nexport var _DYN_MAX_BATCH_INTERVAL = \"maxBatchInterval\"; // Count: 2\r\nexport var _DYN_SERIALIZE = \"serialize\"; // Count: 4\r\nexport var _DYN__ON_ERROR = \"_onError\"; // Count: 7\r\nexport var _DYN__ON_PARTIAL_SUCCESS = \"_onPartialSuccess\"; // Count: 3\r\nexport var _DYN__ON_SUCCESS = \"_onSuccess\"; // Count: 6\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_ITEMS_ACCEPTED = \"itemsAccepted\"; // Count: 3\r\nexport var _DYN_ORI_PAYLOAD = \"oriPayload\"; // Count: 3\r\nexport var _DYN_BASE_TYPE = \"baseType\"; // Count: 4\r\nexport var _DYN_SAMPLE_RATE = \"sampleRate\"; // Count: 4\r\nexport var _DYN_EVENTS_SEND_REQUEST = \"eventsSendRequest\"; // Count: 2\r\nexport var _DYN_GET_SAMPLING_SCORE = \"getSamplingScore\"; // Count: 2\r\nexport var _DYN_GET_HASH_CODE_SCORE = \"getHashCodeScore\"; // Count: 4\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { CtxTagKeys, Data, Envelope, Event, Exception, HttpMethod, Metric, PageView, PageViewPerformance, RemoteDependencyData, SampleRate, Trace, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, _warnToConsole, getJSON, hasJSON, isNullOrUndefined, isNumber, isString, isTruthy, objForEachKey, optimizeObject, setValue, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION } from \"./InternalConstants\";\r\nimport { _DYN_DATA, _DYN_DATA_TYPE, _DYN_DEVICE_TYPE, _DYN_ENVELOPE_TYPE, _DYN_LENGTH, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_STRINGIFY, _DYN_TAGS, _DYN_TO_STRING, _DYN_TRACE_ID } from \"./__DynamicConstants\";\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar strBaseType = \"baseType\";\r\nvar strBaseData = \"baseData\";\r\nvar strProperties = \"properties\";\r\nvar strTrue = \"true\";\r\nfunction _setValueIf(target, field, value) {\r\n    return setValue(target, field, value, isTruthy);\r\n}\r\n/*\r\n * Maps Part A data from CS 4.0\r\n */\r\nfunction _extractPartAExtensions(logger, item, env) {\r\n    // todo: switch to keys from common in this method\r\n    var envTags = env[_DYN_TAGS /* @min:%2etags */] = env[_DYN_TAGS /* @min:%2etags */] || {};\r\n    var itmExt = item.ext = item.ext || {};\r\n    var itmTags = item[_DYN_TAGS /* @min:%2etags */] = item[_DYN_TAGS /* @min:%2etags */] || [];\r\n    var extUser = itmExt.user;\r\n    if (extUser) {\r\n        _setValueIf(envTags, CtxTagKeys.userAuthUserId, extUser.authId);\r\n        _setValueIf(envTags, CtxTagKeys.userId, extUser.id || extUser.localId);\r\n    }\r\n    var extApp = itmExt.app;\r\n    if (extApp) {\r\n        _setValueIf(envTags, CtxTagKeys.sessionId, extApp.sesId);\r\n    }\r\n    var extDevice = itmExt.device;\r\n    if (extDevice) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceId, extDevice.id || extDevice.localId);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice.deviceClass);\r\n        _setValueIf(envTags, CtxTagKeys.deviceIp, extDevice.ip);\r\n        _setValueIf(envTags, CtxTagKeys.deviceModel, extDevice.model);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice[_DYN_DEVICE_TYPE /* @min:%2edeviceType */]);\r\n    }\r\n    var web = item.ext.web;\r\n    if (web) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceLanguage, web.browserLang);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowserVersion, web.browserVer);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowser, web.browser);\r\n        var envData = env[_DYN_DATA /* @min:%2edata */] = env[_DYN_DATA /* @min:%2edata */] || {};\r\n        var envBaseData = envData[strBaseData] = envData[strBaseData] || {};\r\n        var envProps = envBaseData[strProperties] = envBaseData[strProperties] || {};\r\n        _setValueIf(envProps, \"domain\", web.domain);\r\n        _setValueIf(envProps, \"isManual\", web.isManual ? strTrue : null);\r\n        _setValueIf(envProps, \"screenRes\", web.screenRes);\r\n        _setValueIf(envProps, \"userConsent\", web.userConsent ? strTrue : null);\r\n    }\r\n    var extOs = itmExt.os;\r\n    if (extOs) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceOS, extOs[_DYN_NAME /* @min:%2ename */]);\r\n        _setValueIf(envTags, CtxTagKeys.deviceOSVersion, extOs.osVer);\r\n    }\r\n    // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n    var extTrace = itmExt.trace;\r\n    if (extTrace) {\r\n        _setValueIf(envTags, CtxTagKeys.operationParentId, extTrace.parentID);\r\n        _setValueIf(envTags, CtxTagKeys.operationName, dataSanitizeString(logger, extTrace[_DYN_NAME /* @min:%2ename */]));\r\n        _setValueIf(envTags, CtxTagKeys.operationId, extTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n    }\r\n    // Sample 4.0 schema\r\n    //  {\r\n    //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n    //     \"name\" : \"MetricWithNamespace\",\r\n    //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n    //     \"ext\": {  \"cloud\": {\r\n    //          \"role\": \"WATSON3\",\r\n    //          \"roleInstance\": \"CO4AEAP00000260\"\r\n    //      },\r\n    //      \"device\": {}, \"correlation\": {} },\r\n    //      \"tags\": [\r\n    //        { \"amazon.region\" : \"east2\" },\r\n    //        { \"os.expid\" : \"wp:02df239\" }\r\n    //     ]\r\n    //   }\r\n    var tgs = {};\r\n    // deals with tags.push({object})\r\n    for (var i = itmTags[_DYN_LENGTH /* @min:%2elength */] - 1; i >= 0; i--) {\r\n        var tg = itmTags[i];\r\n        objForEachKey(tg, function (key, value) {\r\n            tgs[key] = value;\r\n        });\r\n        itmTags.splice(i, 1);\r\n    }\r\n    // deals with tags[key]=value (and handles hasOwnProperty)\r\n    objForEachKey(itmTags, function (tg, value) {\r\n        tgs[tg] = value;\r\n    });\r\n    var theTags = __assign(__assign({}, envTags), tgs);\r\n    if (!theTags[CtxTagKeys.internalSdkVersion]) {\r\n        // Append a version in case it is not already set\r\n        theTags[CtxTagKeys.internalSdkVersion] = dataSanitizeString(logger, \"javascript:\".concat(EnvelopeCreator.Version), 64);\r\n    }\r\n    env[_DYN_TAGS /* @min:%2etags */] = optimizeObject(theTags);\r\n}\r\nfunction _extractPropsAndMeasurements(data, properties, measurements) {\r\n    if (!isNullOrUndefined(data)) {\r\n        objForEachKey(data, function (key, value) {\r\n            if (isNumber(value)) {\r\n                measurements[key] = value;\r\n            }\r\n            else if (isString(value)) {\r\n                properties[key] = value;\r\n            }\r\n            else if (hasJSON()) {\r\n                properties[key] = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue) {\r\n    if (!isNullOrUndefined(properties)) {\r\n        objForEachKey(properties, function (key, value) {\r\n            properties[key] = value || customUndefinedValue;\r\n        });\r\n    }\r\n}\r\n// TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\nfunction _createEnvelope(logger, envelopeType, telemetryItem, data) {\r\n    var envelope = new Envelope(logger, data, envelopeType);\r\n    _setValueIf(envelope, \"sampleRate\", telemetryItem[SampleRate]);\r\n    if ((telemetryItem[strBaseData] || {}).startTime) {\r\n        // Starting from Version 3.0.3, the time property will be assigned by the startTime value,\r\n        // which records the loadEvent time for the pageView event.\r\n        envelope.time = toISOString(telemetryItem[strBaseData].startTime);\r\n    }\r\n    envelope.iKey = telemetryItem.iKey;\r\n    var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n    envelope[_DYN_NAME /* @min:%2ename */] = envelope[_DYN_NAME /* @min:%2ename */].replace(\"{0}\", iKeyNoDashes);\r\n    // extract all extensions from ctx\r\n    _extractPartAExtensions(logger, telemetryItem, envelope);\r\n    // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n    telemetryItem[_DYN_TAGS /* @min:%2etags */] = telemetryItem[_DYN_TAGS /* @min:%2etags */] || [];\r\n    return optimizeObject(envelope);\r\n}\r\nfunction EnvelopeCreatorInit(logger, telemetryItem) {\r\n    if (isNullOrUndefined(telemetryItem[strBaseData])) {\r\n        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 46 /* _eInternalMessageId.TelemetryEnvelopeInvalid */, \"telemetryItem.baseData cannot be null.\");\r\n    }\r\n}\r\nexport var EnvelopeCreator = {\r\n    Version: '3.3.1'\r\n};\r\nexport function DependencyEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    if (isNullOrUndefined(bd)) {\r\n        _warnToConsole(logger, \"Invalid input for dependency data\");\r\n        return null;\r\n    }\r\n    var method = bd[strProperties] && bd[strProperties][HttpMethod] ? bd[strProperties][HttpMethod] : \"GET\";\r\n    var remoteDepData = new RemoteDependencyData(logger, bd.id, bd.target, bd[_DYN_NAME /* @min:%2ename */], bd[STR_DURATION /* @min:%2eduration */], bd.success, bd.responseCode, method, bd.type, bd.correlationContext, customProperties, customMeasurements);\r\n    var data = new Data(RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */], remoteDepData);\r\n    return _createEnvelope(logger, RemoteDependencyData[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function EventEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customProperties = {};\r\n    var customMeasurements = {};\r\n    if (telemetryItem[strBaseType] !== Event[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n        customProperties[\"baseTypeSource\"] = telemetryItem[strBaseType]; // save the passed in base type as a property\r\n    }\r\n    if (telemetryItem[strBaseType] === Event[_DYN_DATA_TYPE /* @min:%2edataType */]) { // take collection\r\n        customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n        customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    }\r\n    else { // if its not a known type, convert to custom event\r\n        if (telemetryItem[strBaseData]) {\r\n            _extractPropsAndMeasurements(telemetryItem[strBaseData], customProperties, customMeasurements);\r\n        }\r\n    }\r\n    // Extract root level properties from part C telemetryItem.data\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var eventName = telemetryItem[strBaseData][_DYN_NAME /* @min:%2ename */];\r\n    var eventData = new Event(logger, eventName, customProperties, customMeasurements);\r\n    var data = new Data(Event[_DYN_DATA_TYPE /* @min:%2edataType */], eventData);\r\n    return _createEnvelope(logger, Event[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function ExceptionEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Extract root level properties from part C telemetryItem.data\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    var exData = Exception.CreateFromInterface(logger, bd, customProperties, customMeasurements);\r\n    var data = new Data(Exception[_DYN_DATA_TYPE /* @min:%2edataType */], exData);\r\n    return _createEnvelope(logger, Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function MetricEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var baseData = telemetryItem[strBaseData];\r\n    var props = baseData[strProperties] || {};\r\n    var measurements = baseData[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseMetricData = new Metric(logger, baseData[_DYN_NAME /* @min:%2ename */], baseData.average, baseData.sampleCount, baseData.min, baseData.max, baseData.stdDev, props, measurements);\r\n    var data = new Data(Metric[_DYN_DATA_TYPE /* @min:%2edataType */], baseMetricData);\r\n    return _createEnvelope(logger, Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n    var duration;\r\n    var baseData = telemetryItem[strBaseData];\r\n    if (!isNullOrUndefined(baseData) &&\r\n        !isNullOrUndefined(baseData[strProperties]) &&\r\n        !isNullOrUndefined(baseData[strProperties][STR_DURATION])) { // from part B properties\r\n        duration = baseData[strProperties][STR_DURATION];\r\n        delete baseData[strProperties][STR_DURATION];\r\n    }\r\n    else if (!isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */]) &&\r\n        !isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION])) { // from custom properties\r\n        duration = telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n        delete telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n    var currentContextId;\r\n    if (((telemetryItem.ext || {}).trace || {})[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n        currentContextId = telemetryItem.ext.trace[_DYN_TRACE_ID /* @min:%2etraceID */];\r\n    }\r\n    var id = bd.id || currentContextId;\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.refUri)) {\r\n        properties[\"refUri\"] = bd.refUri;\r\n    }\r\n    // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.pageType)) {\r\n        properties[\"pageType\"] = bd.pageType;\r\n    }\r\n    // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.isLoggedIn)) {\r\n        properties[\"isLoggedIn\"] = bd.isLoggedIn[_DYN_TO_STRING /* @min:%2etoString */]();\r\n    }\r\n    // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd[strProperties])) {\r\n        var pageTags = bd[strProperties];\r\n        objForEachKey(pageTags, function (key, value) {\r\n            properties[key] = value;\r\n        });\r\n    }\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var pageViewData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n    var data = new Data(PageView[_DYN_DATA_TYPE /* @min:%2edataType */], pageViewData);\r\n    return _createEnvelope(logger, PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewPerformanceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var bd = telemetryItem[strBaseData];\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri || bd.url;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n    var data = new Data(PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function TraceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var message = telemetryItem[strBaseData].message;\r\n    var severityLevel = telemetryItem[strBaseData].severityLevel;\r\n    var props = telemetryItem[strBaseData][strProperties] || {};\r\n    var measurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseData = new Trace(logger, message, severityLevel, props, measurements);\r\n    var data = new Data(Trace[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\n//# sourceMappingURL=EnvelopeCreator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, arrIndexOf, dumpObj, getExceptionName, getJSON, isArray, isFunction, isNullOrUndefined, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_ITEM, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_PUSH, _DYN_STRINGIFY, _DYN__BUFFER__KEY, _DYN__GET, _DYN__MAX__BUFFER__SIZE, _DYN__SENT__BUFFER__KEY } from \"./__DynamicConstants\";\r\nvar BaseSendBuffer = /** @class */ (function () {\r\n    function BaseSendBuffer(logger, config) {\r\n        var _buffer = [];\r\n        var _bufferFullMessageSent = false;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        this[_DYN__GET /* @min:%2e_get */] = function () {\r\n            return _buffer;\r\n        };\r\n        this._set = function (buffer) {\r\n            _buffer = buffer;\r\n            return _buffer;\r\n        };\r\n        dynamicProto(BaseSendBuffer, this, function (_self) {\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= config[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 105 /* _eInternalMessageId.InMemoryStorageBufferFull */, \"Maximum in-memory buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _buffer[_DYN_PUSH /* @min:%2epush */](payload);\r\n                return;\r\n            };\r\n            _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n                return _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.size = function () {\r\n                var size = _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n                for (var lp = 0; lp < _buffer[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    size += (_buffer[lp].item)[_DYN_LENGTH /* @min:%2elength */];\r\n                }\r\n                if (!config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */]) {\r\n                    size += 2;\r\n                }\r\n                return size;\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _buffer = [];\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self.getItems = function () {\r\n                return _buffer.slice(0);\r\n            };\r\n            _self.batchPayloads = function (payloads) {\r\n                if (payloads && payloads[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var payloadStr_1 = [];\r\n                    arrForEach(payloads, function (payload) {\r\n                        payloadStr_1[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                    });\r\n                    var batch = config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */] ?\r\n                        payloadStr_1.join(\"\\n\") :\r\n                        \"[\" + payloadStr_1.join(\",\") + \"]\";\r\n                    return batch;\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                var items = _buffer.slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                var newBuffer = !!canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(items, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                return newBuffer;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for BaseSendBuffer.prototype.enqueue.\r\n// Removed Stub for BaseSendBuffer.prototype.count.\r\n// Removed Stub for BaseSendBuffer.prototype.size.\r\n// Removed Stub for BaseSendBuffer.prototype.clear.\r\n// Removed Stub for BaseSendBuffer.prototype.getItems.\r\n// Removed Stub for BaseSendBuffer.prototype.batchPayloads.\r\n// Removed Stub for BaseSendBuffer.prototype.createNew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseSendBuffer.__ieDyn=1;\n\n    return BaseSendBuffer;\r\n}());\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function (_super) {\r\n    __extends(ArraySendBuffer, _super);\r\n    function ArraySendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        dynamicProto(ArraySendBuffer, _this, function (_self, _base) {\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                // not supported\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ArraySendBuffer.prototype.markAsSent.\r\n// Removed Stub for ArraySendBuffer.prototype.clearSent.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ArraySendBuffer.__ieDyn=1;\n\n    return ArraySendBuffer;\r\n}(BaseSendBuffer));\r\nexport { ArraySendBuffer };\r\nvar PREVIOUS_KEYS = [\"AI_buffer\", \"AI_sentBuffer\"];\r\n/*\r\n * Session storage buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function (_super) {\r\n    __extends(SessionStorageSendBuffer, _super);\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        var _bufferFullMessageSent = false;\r\n        //Note: should not use config.namePrefix directly, because it will always refers to the latest namePrefix\r\n        var _namePrefix = config === null || config === void 0 ? void 0 : config.namePrefix;\r\n        // TODO: add remove buffer override as well\r\n        var _b = config[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */] || { getItem: utlGetSessionStorage, setItem: utlSetSessionStorage }, getItem = _b.getItem, setItem = _b.setItem;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        dynamicProto(SessionStorageSendBuffer, _this, function (_self, _base) {\r\n            var bufferItems = _getBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */]);\r\n            var itemsInSentBuffer = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n            var previousItems = _getPreviousEvents();\r\n            var notDeliveredItems = itemsInSentBuffer[_DYN_CONCAT /* @min:%2econcat */](previousItems);\r\n            var buffer = _self._set(bufferItems[_DYN_CONCAT /* @min:%2econcat */](notDeliveredItems));\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (buffer[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                buffer[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n            }\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], buffer);\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Maximum buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _base[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], _self._set(_removePayloadsFromBuffer(payload, _self[_DYN__GET /* @min:%2e_get */]())));\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                if (sentElements instanceof Array && payload instanceof Array) {\r\n                    sentElements = sentElements[_DYN_CONCAT /* @min:%2econcat */](payload);\r\n                    if (sentElements[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                        // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                        // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Sent buffer reached its maximum size: \" + sentElements[_DYN_LENGTH /* @min:%2elength */], true);\r\n                        sentElements[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n                    }\r\n                    _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n                }\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                sentElements = _removePayloadsFromBuffer(payload, sentElements);\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                canUseSessionStorage = !!canUseSessionStorage;\r\n                var unsentItems = _self[_DYN__GET /* @min:%2e_get */]().slice(0);\r\n                var sentItems = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]).slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                // to make sure that we do not send duplicated payloads when it is switched back to previous one\r\n                _self[_DYN_CLEAR /* @min:%2eclear */]();\r\n                var newBuffer = canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(unsentItems, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                if (canUseSessionStorage) {\r\n                    // arr buffer will clear all payloads if markAsSent() is called\r\n                    newBuffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](sentItems);\r\n                }\r\n                return newBuffer;\r\n            };\r\n            function _removePayloadsFromBuffer(payloads, buffer) {\r\n                var remaining = [];\r\n                var payloadStr = [];\r\n                arrForEach(payloads, function (payload) {\r\n                    payloadStr[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                });\r\n                arrForEach(buffer, function (value) {\r\n                    if (!isFunction(value) && arrIndexOf(payloadStr, value[_DYN_ITEM /* @min:%2eitem */]) === -1) {\r\n                        remaining[_DYN_PUSH /* @min:%2epush */](value);\r\n                    }\r\n                });\r\n                return remaining;\r\n            }\r\n            function _getBuffer(key) {\r\n                var prefixedKey = key;\r\n                prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                return _getBufferBase(prefixedKey);\r\n            }\r\n            function _getBufferBase(key) {\r\n                try {\r\n                    var bufferJson = getItem(logger, key);\r\n                    if (bufferJson) {\r\n                        var buffer_1 = getJSON().parse(bufferJson);\r\n                        if (isString(buffer_1)) {\r\n                            // When using some version prototype.js the stringify / parse cycle does not decode array's correctly\r\n                            buffer_1 = getJSON().parse(buffer_1);\r\n                        }\r\n                        if (buffer_1 && isArray(buffer_1)) {\r\n                            return buffer_1;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 42 /* _eInternalMessageId.FailedToRestoreStorageBuffer */, \" storage key: \" + key + \", \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            function _setBuffer(key, buffer) {\r\n                var prefixedKey = key;\r\n                try {\r\n                    prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                    var bufferJson = JSON[_DYN_STRINGIFY /* @min:%2estringify */](buffer);\r\n                    setItem(logger, prefixedKey, bufferJson);\r\n                }\r\n                catch (e) {\r\n                    // if there was an error, clear the buffer\r\n                    // telemetry is stored in the _buffer array so we won't loose any items\r\n                    setItem(logger, prefixedKey, JSON[_DYN_STRINGIFY /* @min:%2estringify */]([]));\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \" storage key: \" + prefixedKey + \", \" + getExceptionName(e) + \". Buffer cleared\", { exception: dumpObj(e) });\r\n                }\r\n            }\r\n            // this removes buffer with prefix+key\r\n            function _getPreviousEvents() {\r\n                var items = [];\r\n                try {\r\n                    arrForEach(PREVIOUS_KEYS, function (key) {\r\n                        var events = _getItemsFromPreviousKey(key);\r\n                        items = items[_DYN_CONCAT /* @min:%2econcat */](events);\r\n                        // to make sure that we also transfer items from old prefixed + key buffer\r\n                        if (_namePrefix) {\r\n                            var prefixedKey = _namePrefix + \"_\" + key;\r\n                            var prefixEvents = _getItemsFromPreviousKey(prefixedKey);\r\n                            items = items[_DYN_CONCAT /* @min:%2econcat */](prefixEvents);\r\n                        }\r\n                    });\r\n                    return items;\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \"Transfer events from previous buffers: \" + getExceptionName(e) + \". previous Buffer items can not be removed\", { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            // transform string[] to IInternalStorageItem[]\r\n            function _getItemsFromPreviousKey(key) {\r\n                try {\r\n                    var items = _getBufferBase(key);\r\n                    var transFormedItems_1 = [];\r\n                    arrForEach(items, function (item) {\r\n                        var internalItem = {\r\n                            item: item,\r\n                            cnt: 0 // previous events will be default to 0 count\r\n                        };\r\n                        transFormedItems_1[_DYN_PUSH /* @min:%2epush */](internalItem);\r\n                    });\r\n                    // remove the session storage if we can add events back\r\n                    utlRemoveSessionStorage(logger, key);\r\n                    return transFormedItems_1;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return [];\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for SessionStorageSendBuffer.prototype.enqueue.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clear.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.markAsSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clearSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.createNew.\r\n    var _a;\r\n    _a = SessionStorageSendBuffer;\r\n    SessionStorageSendBuffer.VERSION = \"_1\";\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\" + _a.VERSION;\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\" + _a.VERSION;\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}(BaseSendBuffer));\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, getJSON, isArray, isFunction, isObject, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SERIALIZE, _DYN_STRINGIFY, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            /**\r\n             * Serializes the current object to a JSON string.\r\n             */\r\n            _self[_DYN_SERIALIZE /* @min:%2eserialize */] = function (input) {\r\n                var output = _serializeObject(input, \"root\");\r\n                try {\r\n                    return getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](output);\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                }\r\n            };\r\n            function _serializeObject(source, name) {\r\n                var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n                var output = {};\r\n                if (!source) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (source[circularReferenceCheck]) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 50 /* _eInternalMessageId.CircularReferenceDetected */, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (!source.aiDataContract) {\r\n                    // special case for measurements/properties/tags\r\n                    if (name === \"measurements\") {\r\n                        output = _serializeStringMap(source, \"number\", name);\r\n                    }\r\n                    else if (name === \"properties\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (name === \"tags\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (isArray(source)) {\r\n                        output = _serializeArray(source, name);\r\n                    }\r\n                    else {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                        try {\r\n                            // verify that the object can be stringified\r\n                            getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](source);\r\n                            output = source;\r\n                        }\r\n                        catch (e) {\r\n                            // if serialization fails return an empty string\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                        }\r\n                    }\r\n                    return output;\r\n                }\r\n                source[circularReferenceCheck] = true;\r\n                objForEachKey(source.aiDataContract, function (field, contract) {\r\n                    var isRequired = (isFunction(contract)) ? (contract() & 1 /* FieldType.Required */) : (contract & 1 /* FieldType.Required */);\r\n                    var isHidden = (isFunction(contract)) ? (contract() & 4 /* FieldType.Hidden */) : (contract & 4 /* FieldType.Hidden */);\r\n                    var isArray = contract & 2 /* FieldType.Array */;\r\n                    var isPresent = source[field] !== undefined;\r\n                    var isObj = isObject(source[field]) && source[field] !== null;\r\n                    if (isRequired && !isPresent && !isArray) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 24 /* _eInternalMessageId.MissingRequiredFieldSpecification */, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                        // If not in debug mode, continue and hope the error is permissible\r\n                    }\r\n                    else if (!isHidden) { // Don't serialize hidden fields\r\n                        var value = void 0;\r\n                        if (isObj) {\r\n                            if (isArray) {\r\n                                // special case; recurse on each object in the source array\r\n                                value = _serializeArray(source[field], field);\r\n                            }\r\n                            else {\r\n                                // recurse on the source object in this field\r\n                                value = _serializeObject(source[field], field);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // assign the source field to the output even if undefined or required\r\n                            value = source[field];\r\n                        }\r\n                        // only emit this field if the value is defined\r\n                        if (value !== undefined) {\r\n                            output[field] = value;\r\n                        }\r\n                    }\r\n                });\r\n                delete source[circularReferenceCheck];\r\n                return output;\r\n            }\r\n            function _serializeArray(sources, name) {\r\n                var output;\r\n                if (!!sources) {\r\n                    if (!isArray(sources)) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 54 /* _eInternalMessageId.ItemNotInArray */, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                    }\r\n                    else {\r\n                        output = [];\r\n                        for (var i = 0; i < sources[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                            var source = sources[i];\r\n                            var item = _serializeObject(source, name + \"[\" + i + \"]\");\r\n                            output[_DYN_PUSH /* @min:%2epush */](item);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            function _serializeStringMap(map, expectedType, name) {\r\n                var output;\r\n                if (map) {\r\n                    output = {};\r\n                    objForEachKey(map, function (field, value) {\r\n                        if (expectedType === \"string\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else if (!value[_DYN_TO_STRING /* @min:%2etoString */]) {\r\n                                output[field] = \"invalid field: toString() is not defined.\";\r\n                            }\r\n                            else {\r\n                                output[field] = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            }\r\n                        }\r\n                        else if (expectedType === \"number\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else {\r\n                                var num = parseFloat(value);\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                        else {\r\n                            output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, output[field], null, true);\r\n                        }\r\n                    });\r\n                }\r\n                return output;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.serialize.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_CONCAT, _DYN_LENGTH } from \"../../__DynamicConstants\";\r\n// (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\nvar MIN_INPUT_LENGTH = 8;\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input[_DYN_LENGTH /* @min:%2elength */] < MIN_INPUT_LENGTH) {\r\n            input = input[_DYN_CONCAT /* @min:%2econcat */](input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ContextTagKeys } from \"@microsoft/applicationinsights-common\";\r\nimport { _DYN_GET_HASH_CODE_SCORE, _DYN_GET_SAMPLING_SCORE, _DYN_TAGS, _DYN_TRACE_ID } from \"../../__DynamicConstants\";\r\nimport { HashCodeScoreGenerator } from \"./HashCodeScoreGenerator\";\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        var _self = this;\r\n        var hashCodeGenerator = new HashCodeScoreGenerator();\r\n        var keys = new ContextTagKeys();\r\n        _self[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */] = function (item) {\r\n            var score = 0;\r\n            if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.userId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.userId]);\r\n            }\r\n            else if (item.ext && item.ext.user && item.ext.user.id) {\r\n                score = hashCodeGenerator[_DYN_GET_HASH_CODE_SCORE /* @min:%2egetHashCodeScore */](item.ext.user.id);\r\n            }\r\n            else if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.operationId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.operationId]);\r\n            }\r\n            else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n                score = hashCodeGenerator.getHashCodeScore(item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n            }\r\n            else {\r\n                // tslint:disable-next-line:insecure-random\r\n                score = (Math.random() * 100);\r\n            }\r\n            return score;\r\n        };\r\n    }\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { Metric } from \"@microsoft/applicationinsights-common\";\r\nimport { safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_DATA_TYPE, _DYN_GET_SAMPLING_SCORE, _DYN_SAMPLE_RATE } from \"../__DynamicConstants\";\r\nimport { SamplingScoreGenerator } from \"./SamplingScoreGenerators/SamplingScoreGenerator\";\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        var _logger = logger || safeGetLogger(null);\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            _logger.throwInternal(2 /* eLoggingSeverity.WARNING */, 58 /* _eInternalMessageId.SampleRateOutOfRange */, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            sampleRate = 100;\r\n        }\r\n        this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */]; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */](envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, Event, Exception, Metric, PageView, PageViewPerformance, ProcessLegacy, RemoteDependencyData, RequestHeaders, SampleRate, Trace, createOfflineListener, isInternalApplicationInsightsEndpoint, utlCanUseSessionStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { ActiveStatus, BaseTelemetryPlugin, SenderPostManager, _throwInternal, _warnToConsole, arrForEach, cfgDfBoolean, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dateNow, dumpObj, formatErrorMessageXdr, formatErrorMessageXhr, getExceptionName, getIEVersion, isArray, isBeaconsSupported, isFetchSupported, isNullOrUndefined, mergeEvtNamespace, objExtend, onConfigChange, parseResponse, prependTransports, runTargetUnload } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isNumber, isString, isTruthy, objDeepFreeze, objDefine, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from \"./EnvelopeCreator\";\r\nimport { ArraySendBuffer, SessionStorageSendBuffer } from \"./SendBuffer\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { Sample } from \"./TelemetryProcessors/Sample\";\r\nimport { _DYN_ALWAYS_USE_XHR_OVERR4, _DYN_BASE_TYPE, _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONVERT_UNDEFINED, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_CUSTOM_HEADERS, _DYN_DATA, _DYN_DIAG_LOG, _DYN_DISABLE_SEND_BEACON_7, _DYN_DISABLE_XHR, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENABLE_SEND_PROMISE, _DYN_ENABLE_SESSION_STORA5, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_EVENTS_SEND_REQUEST, _DYN_GET_SENDER_INST, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_BEACON_API_DISABL3, _DYN_ITEM, _DYN_ITEMS_ACCEPTED, _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_MAX_BATCH_INTERVAL, _DYN_MAX_BATCH_SIZE_IN_BY1, _DYN_ONUNLOAD_DISABLE_BEA2, _DYN_ONUNLOAD_DISABLE_FET6, _DYN_ORI_PAYLOAD, _DYN_PUSH, _DYN_SAMPLE_RATE, _DYN_SERIALIZE, _DYN_TAGS, _DYN_TRIGGER_SEND, _DYN_UNLOAD_TRANSPORTS, _DYN__BUFFER, _DYN__ON_ERROR, _DYN__ON_PARTIAL_SUCCESS, _DYN__ON_SUCCESS, _DYN__SENDER } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar EMPTY_STR = \"\";\r\nvar FetchSyncRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nfunction _getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\nvar defaultAppInsightsChannelConfig = objDeepFreeze((_a = {\r\n        // Use the default value (handles empty string in the configuration)\r\n        endpointUrl: cfgDfValidate(isTruthy, DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH)\r\n    },\r\n    _a[_DYN_EMIT_LINE_DELIMITED_0 /* @min:emitLineDelimitedJson */] = cfgDfBoolean(),\r\n    _a[_DYN_MAX_BATCH_INTERVAL /* @min:maxBatchInterval */] = 15000,\r\n    _a[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:maxBatchSizeInBytes */] = 102400,\r\n    _a.disableTelemetry = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_SESSION_STORA5 /* @min:enableSessionStorageBuffer */] = cfgDfBoolean(true),\r\n    _a.isRetryDisabled = cfgDfBoolean(),\r\n    _a[_DYN_IS_BEACON_API_DISABL3 /* @min:isBeaconApiDisabled */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_SEND_BEACON_7 /* @min:disableSendBeaconSplit */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:onunloadDisableFetch */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:onunloadDisableBeacon */] = cfgDfBoolean(),\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.namePrefix = UNDEFINED_VALUE,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_CUSTOM_HEADERS /* @min:customHeaders */] = UNDEFINED_VALUE,\r\n    _a[_DYN_CONVERT_UNDEFINED /* @min:convertUndefined */] = UNDEFINED_VALUE,\r\n    _a[_DYN_EVENTS_LIMIT_IN_MEM /* @min:eventsLimitInMem */] = 10000,\r\n    _a[_DYN_BUFFER_OVERRIDE /* @min:bufferOverride */] = false,\r\n    _a.httpXHROverride = { isVal: isOverrideFn, v: UNDEFINED_VALUE },\r\n    _a[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:alwaysUseXhrOverride */] = cfgDfBoolean(),\r\n    _a.transports = UNDEFINED_VALUE,\r\n    _a.retryCodes = UNDEFINED_VALUE,\r\n    _a.maxRetryCnt = { isVal: isNumber, v: 10 },\r\n    _a));\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nvar EnvelopeTypeCreator = (_b = {},\r\n    _b[Event.dataType] = EventEnvelopeCreator,\r\n    _b[Trace.dataType] = TraceEnvelopeCreator,\r\n    _b[PageView.dataType] = PageViewEnvelopeCreator,\r\n    _b[PageViewPerformance.dataType] = PageViewPerformanceEnvelopeCreator,\r\n    _b[Exception.dataType] = ExceptionEnvelopeCreator,\r\n    _b[Metric.dataType] = MetricEnvelopeCreator,\r\n    _b[RemoteDependencyData.dataType] = DependencyEnvelopeCreator,\r\n    _b);\r\nvar Sender = /** @class */ (function (_super) {\r\n    __extends(Sender, _super);\r\n    function Sender() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 1001;\r\n        _this.identifier = BreezeChannelIdentifier;\r\n        // Don't set the defaults here, set them in the _initDefaults() as this is also called during unload\r\n        var _consecutiveErrors; // How many times in a row a retryable error condition has occurred.\r\n        var _retryAt; // The time to retry at in milliseconds from 1970/01/01 (this makes the timer calculation easy).\r\n        var _lastSend; // The time of the last send operation.\r\n        var _paused; // Flag indicating that the sending should be paused\r\n        var _timeoutHandle; // Handle to the timer for delayed sending of batches of data.\r\n        var _serializer;\r\n        var _stamp_specific_redirects;\r\n        var _headers;\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _syncUnloadSender; // The identified sender to use for the synchronous unload stage\r\n        var _offlineListener;\r\n        var _evtNamespace;\r\n        var _endpointUrl;\r\n        var _orgEndpointUrl;\r\n        var _maxBatchSizeInBytes;\r\n        var _beaconSupported;\r\n        var _beaconOnUnloadSupported;\r\n        var _beaconNormalSupported;\r\n        var _customHeaders;\r\n        var _disableTelemetry;\r\n        var _instrumentationKey;\r\n        var _convertUndefined;\r\n        var _isRetryDisabled;\r\n        var _maxBatchInterval;\r\n        var _sessionStorageUsed;\r\n        var _bufferOverrideUsed;\r\n        var _namePrefix;\r\n        var _enableSendPromise;\r\n        var _alwaysUseCustomSend;\r\n        var _disableXhr;\r\n        var _fetchKeepAlive;\r\n        var _xhrSend;\r\n        var _fallbackSend;\r\n        var _disableBeaconSplit;\r\n        var _sendPostMgr;\r\n        var _retryCodes;\r\n        dynamicProto(Sender, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n            };\r\n            _self.resume = function () {\r\n                if (_paused) {\r\n                    _paused = false;\r\n                    _retryAt = null;\r\n                    // flush if we have exceeded the max-size already\r\n                    _checkMaxSize();\r\n                    _setupTimer();\r\n                }\r\n            };\r\n            _self.flush = function (isAsync, callBack, sendReason) {\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_paused) {\r\n                    // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                    _clearScheduledTimer();\r\n                    try {\r\n                        return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](isAsync, null, sendReason || 1 /* SendRequestReason.ManualFlush */);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 22 /* _eInternalMessageId.FlushFailed */, \"flush failed, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            };\r\n            _self.onunloadFlush = function () {\r\n                if (!_paused) {\r\n                    if (_beaconSupported || _alwaysUseCustomSend) {\r\n                        try {\r\n                            return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, _doUnloadSend, 2 /* SendRequestReason.Unload */);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                    else {\r\n                        _self.flush(false);\r\n                    }\r\n                }\r\n            };\r\n            _self.addHeader = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _base[_DYN_INITIALIZE /* @min:%2einitialize */](config, core, extensions, pluginChain);\r\n                var identifier = _self.identifier;\r\n                _serializer = new Serializer(core.logger);\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = 0;\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _stamp_specific_redirects = 0;\r\n                var diagLog = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"Sender\"), core.evtNamespace && core.evtNamespace());\r\n                _offlineListener = createOfflineListener(_evtNamespace);\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    var senderConfig = ctx.getExtCfg(identifier, defaultAppInsightsChannelConfig);\r\n                    objDefine(_self, \"_senderConfig\", {\r\n                        g: function () {\r\n                            return senderConfig;\r\n                        }\r\n                    });\r\n                    // or is not string\r\n                    if (core.activeStatus() === ActiveStatus.PENDING) {\r\n                        // waiting for core promises to be resolved\r\n                        // NOTE: if active status is set to pending, stop sending, clear timer here\r\n                        _self.pause();\r\n                    }\r\n                    else if (core.activeStatus() === ActiveStatus.ACTIVE) {\r\n                        // core status changed from pending to other status\r\n                        _self.resume();\r\n                    }\r\n                    // Only update the endpoint if the original config !== the current config\r\n                    // This is so any redirect endpointUrl is not overwritten\r\n                    if (_orgEndpointUrl !== senderConfig.endpointUrl) {\r\n                        if (_orgEndpointUrl) {\r\n                            // TODO: add doc to remind users to flush before changing endpoint, otherwise all unsent payload will be sent to new endpoint\r\n                        }\r\n                        _endpointUrl = _orgEndpointUrl = senderConfig.endpointUrl;\r\n                    }\r\n                    if (_customHeaders && _customHeaders !== senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */]) {\r\n                        // Removing any previously defined custom headers as they have changed\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            delete _headers[customHeader.header];\r\n                        });\r\n                    }\r\n                    _maxBatchSizeInBytes = senderConfig[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:%2emaxBatchSizeInBytes */];\r\n                    _beaconSupported = (senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false || senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false) && isBeaconsSupported();\r\n                    _beaconOnUnloadSupported = senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false && isBeaconsSupported();\r\n                    _beaconNormalSupported = senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false && isBeaconsSupported();\r\n                    _alwaysUseCustomSend = senderConfig[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:%2ealwaysUseXhrOverride */];\r\n                    _disableXhr = !!senderConfig[_DYN_DISABLE_XHR /* @min:%2edisableXhr */];\r\n                    _retryCodes = senderConfig.retryCodes;\r\n                    var bufferOverride = senderConfig[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */];\r\n                    var canUseSessionStorage = !!senderConfig[_DYN_ENABLE_SESSION_STORA5 /* @min:%2eenableSessionStorageBuffer */] &&\r\n                        (!!bufferOverride || utlCanUseSessionStorage());\r\n                    var namePrefix = senderConfig.namePrefix;\r\n                    //Note: emitLineDelimitedJson and eventsLimitInMem is directly accessed via config in senderBuffer\r\n                    //Therefore, if canUseSessionStorage is not changed, we do not need to re initialize a new one\r\n                    var shouldUpdate = (canUseSessionStorage !== _sessionStorageUsed)\r\n                        || (canUseSessionStorage && (_namePrefix !== namePrefix)) // prefixName is only used in session storage\r\n                        || (canUseSessionStorage && (_bufferOverrideUsed !== bufferOverride));\r\n                    if (_self[_DYN__BUFFER /* @min:%2e_buffer */]) {\r\n                        // case1 (Pre and Now enableSessionStorageBuffer settings are same)\r\n                        // if namePrefix changes, transfer current buffer to new buffer\r\n                        // else no action needed\r\n                        //case2 (Pre and Now enableSessionStorageBuffer settings are changed)\r\n                        // transfer current buffer to new buffer\r\n                        if (shouldUpdate) {\r\n                            try {\r\n                                _self._buffer = _self._buffer[_DYN_CREATE_NEW /* @min:%2ecreateNew */](diagLog, senderConfig, canUseSessionStorage);\r\n                            }\r\n                            catch (e) {\r\n                                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"failed to transfer telemetry to different buffer storage, telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                            }\r\n                        }\r\n                        _checkMaxSize();\r\n                    }\r\n                    else {\r\n                        _self[_DYN__BUFFER /* @min:%2e_buffer */] = canUseSessionStorage\r\n                            ? new SessionStorageSendBuffer(diagLog, senderConfig) : new ArraySendBuffer(diagLog, senderConfig);\r\n                    }\r\n                    _namePrefix = namePrefix;\r\n                    _sessionStorageUsed = canUseSessionStorage;\r\n                    _bufferOverrideUsed = bufferOverride;\r\n                    _fetchKeepAlive = !senderConfig[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:%2eonunloadDisableFetch */] && isFetchSupported(true);\r\n                    _disableBeaconSplit = !!senderConfig[_DYN_DISABLE_SEND_BEACON_7 /* @min:%2edisableSendBeaconSplit */];\r\n                    _self._sample = new Sample(senderConfig.samplingPercentage, diagLog);\r\n                    _instrumentationKey = senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    if (!_validateInstrumentationKey(_instrumentationKey, config)) {\r\n                        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, \"Invalid Instrumentation key \" + _instrumentationKey);\r\n                    }\r\n                    _customHeaders = senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */];\r\n                    if (isString(_endpointUrl) && !isInternalApplicationInsightsEndpoint(_endpointUrl) && _customHeaders && _customHeaders[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            _this.addHeader(customHeader.header, customHeader.value);\r\n                        });\r\n                    }\r\n                    else {\r\n                        _customHeaders = null;\r\n                    }\r\n                    _enableSendPromise = senderConfig[_DYN_ENABLE_SEND_PROMISE /* @min:%2eenableSendPromise */];\r\n                    var sendPostConfig = _getSendPostMgrConfig();\r\n                    // only init it once\r\n                    if (!_sendPostMgr) {\r\n                        _sendPostMgr = new SenderPostManager();\r\n                        _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, diagLog);\r\n                    }\r\n                    else {\r\n                        _sendPostMgr.SetConfig(sendPostConfig);\r\n                    }\r\n                    var customInterface = senderConfig.httpXHROverride;\r\n                    var httpInterface = null;\r\n                    var syncInterface = null;\r\n                    // User requested transport(s) values > Beacon > Fetch > XHR\r\n                    // Beacon would be filtered out if user has set disableBeaconApi to true at _getSenderInterface\r\n                    var theTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */], senderConfig.transports);\r\n                    httpInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](theTransports, false);\r\n                    var xhrInterface = _sendPostMgr && _sendPostMgr.getFallbackInst();\r\n                    _xhrSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync);\r\n                    };\r\n                    _fallbackSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync, false);\r\n                    };\r\n                    httpInterface = _alwaysUseCustomSend ? customInterface : (httpInterface || customInterface || xhrInterface);\r\n                    _self[_DYN__SENDER /* @min:%2e_sender */] = function (payload, isAsync) {\r\n                        return _doSend(httpInterface, payload, isAsync);\r\n                    };\r\n                    if (_fetchKeepAlive) {\r\n                        // Try and use the fetch with keepalive\r\n                        _syncUnloadSender = _fetchKeepAliveSender;\r\n                    }\r\n                    var syncTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */], senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                    if (!_fetchKeepAlive) {\r\n                        // remove fetch from theTransports\r\n                        syncTransports = syncTransports.filter(function (transport) { return transport !== 2 /* TransportType.Fetch */; });\r\n                    }\r\n                    syncInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](syncTransports, true);\r\n                    syncInterface = _alwaysUseCustomSend ? customInterface : (syncInterface || customInterface);\r\n                    if ((_alwaysUseCustomSend || senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */] || !_syncUnloadSender) && syncInterface) {\r\n                        _syncUnloadSender = function (payload, isAsync) {\r\n                            return _doSend(syncInterface, payload, isAsync);\r\n                        };\r\n                    }\r\n                    if (!_syncUnloadSender) {\r\n                        _syncUnloadSender = _xhrSend;\r\n                    }\r\n                    _disableTelemetry = senderConfig.disableTelemetry;\r\n                    _convertUndefined = senderConfig[_DYN_CONVERT_UNDEFINED /* @min:%2econvertUndefined */] || UNDEFINED_VALUE;\r\n                    _isRetryDisabled = senderConfig.isRetryDisabled;\r\n                    _maxBatchInterval = senderConfig[_DYN_MAX_BATCH_INTERVAL /* @min:%2emaxBatchInterval */];\r\n                }));\r\n            };\r\n            _self.processTelemetry = function (telemetryItem, itemCtx) {\r\n                var _a;\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                var diagLogger = itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var isValidate = _validate(telemetryItem, diagLogger);\r\n                    if (!isValidate) {\r\n                        return;\r\n                    }\r\n                    var aiEnvelope = _getEnvelope(telemetryItem, diagLogger);\r\n                    if (!aiEnvelope) {\r\n                        return;\r\n                    }\r\n                    // check if the incoming payload is too large, truncate if necessary\r\n                    var payload = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](aiEnvelope);\r\n                    // flush if we would exceed the max-size limit by adding this item\r\n                    var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                    _checkMaxSize(payload);\r\n                    var payloadItem = (_a = {},\r\n                        _a[_DYN_ITEM /* @min:item */] = payload,\r\n                        _a.cnt = 0 // inital cnt will always be 0\r\n                    ,\r\n                        _a);\r\n                    // enqueue the payload\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payloadItem);\r\n                    // ensure an invocation timeout is set\r\n                    _setupTimer();\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                // hand off the telemetry item to the next plugin\r\n                _self.processNext(telemetryItem, itemCtx);\r\n            };\r\n            _self.isCompletelyIdle = function () {\r\n                return !_paused && _syncFetchPayload === 0 && _self._buffer[_DYN_COUNT /* @min:%2ecount */]() === 0;\r\n            };\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            _self._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n                // since version 3.2.0, this function is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xhrReadyStateChange(xhr, payload, countOfItemsInPayload);\r\n            };\r\n            /**\r\n             * Immediately send buffered data\r\n             * @param async - {boolean} - Indicates if the events should be sent asynchronously\r\n             * @param forcedSender - {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n             */\r\n            _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */] = function (async, forcedSender, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    try {\r\n                        var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                        // Send data only if disableTelemetry is false\r\n                        if (!_disableTelemetry) {\r\n                            if (buffer[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var payload = buffer.getItems();\r\n                                _notifySendRequest(sendReason || 0 /* SendRequestReason.Undefined */, async);\r\n                                // invoke send\r\n                                if (forcedSender) {\r\n                                    result = forcedSender.call(_self, payload, async);\r\n                                }\r\n                                else {\r\n                                    result = _self[_DYN__SENDER /* @min:%2e_sender */](payload, async);\r\n                                }\r\n                            }\r\n                            // update lastSend time to enable throttling\r\n                            _lastSend = +new Date;\r\n                        }\r\n                        else {\r\n                            buffer[_DYN_CLEAR /* @min:%2eclear */]();\r\n                        }\r\n                        _clearScheduledTimer();\r\n                    }\r\n                    catch (e) {\r\n                        /* Ignore this error for IE under v10 */\r\n                        var ieVer = getIEVersion();\r\n                        if (!ieVer || ieVer > 9) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Telemetry transmission failed, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                var _a;\r\n                return _a = {\r\n                        getUrl: function () {\r\n                            return _endpointUrl;\r\n                        },\r\n                        createPayload: _createPayload\r\n                    },\r\n                    _a[_DYN_SERIALIZE /* @min:serialize */] = _serialize,\r\n                    _a.batch = _batch,\r\n                    _a.shouldProcess = function (evt) {\r\n                        return !!_validate(evt);\r\n                    },\r\n                    _a;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _self.onunloadFlush();\r\n                runTargetUnload(_offlineListener, false);\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * error handler\r\n             */\r\n            _self[_DYN__ON_ERROR /* @min:%2e_onError */] = function (payload, message, event) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onError(payload, message, event);\r\n            };\r\n            /**\r\n             * partial success handler\r\n             */\r\n            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */] = function (payload, results) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onPartialSuccess(payload, results);\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */] = function (payload, countOfItemsInPayload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onSuccess(payload, countOfItemsInPayload);\r\n                //_self._buffer && _self._buffer.clearSent(payload);\r\n            };\r\n            /**\r\n             * xdr state changes\r\n             */\r\n            _self._xdrOnLoad = function (xdr, payload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xdrOnLoad(xdr, payload);\r\n            };\r\n            function _xdrOnLoad(xdr, payload) {\r\n                var responseText = _getResponseText(xdr);\r\n                if (xdr && (responseText + \"\" === \"200\" || responseText === \"\")) {\r\n                    _consecutiveErrors = 0;\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, 0);\r\n                }\r\n                else {\r\n                    var results = parseResponse(responseText);\r\n                    if (results && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] > results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]\r\n                        && !_isRetryDisabled) {\r\n                        _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, results);\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, formatErrorMessageXdr(xdr));\r\n                    }\r\n                }\r\n            }\r\n            function _getSendPostMgrConfig() {\r\n                var _a;\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: function (xdr, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xdrOnLoad(xdr, data);\r\n                        },\r\n                        fetchOnComplete: function (response, onComplete, resValue, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _checkResponsStatus(response.status, data, response.url, data[_DYN_LENGTH /* @min:%2elength */], response.statusText, resValue || \"\");\r\n                        },\r\n                        xhrOnComplete: function (request, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xhrReadyStateChange(request, data, data[_DYN_LENGTH /* @min:%2elength */]);\r\n                        },\r\n                        beaconOnRetry: function (data, onComplete, canSend) {\r\n                            return _onBeaconRetry(data, onComplete, canSend);\r\n                        }\r\n                    };\r\n                    var config = (_a = {},\r\n                        _a[_DYN_ENABLE_SEND_PROMISE /* @min:enableSendPromise */] = _enableSendPromise,\r\n                        _a.isOneDs = false,\r\n                        _a.disableCredentials = false,\r\n                        _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = _disableXhr,\r\n                        _a.disableBeacon = !_beaconNormalSupported,\r\n                        _a.disableBeaconSync = !_beaconOnUnloadSupported,\r\n                        _a.senderOnCompleteCallBack = onCompleteFuncs,\r\n                        _a);\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            function _xhrReadyStateChange(xhr, payload, countOfItemsInPayload) {\r\n                if (xhr.readyState === 4) {\r\n                    _checkResponsStatus(xhr.status, payload, xhr.responseURL, countOfItemsInPayload, formatErrorMessageXhr(xhr), _getResponseText(xhr) || xhr.response);\r\n                }\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(payload, message, event) {\r\n                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            /**\r\n             * partial success handler\r\n             */\r\n            function _onPartialSuccess(payload, results) {\r\n                var failed = [];\r\n                var retry = [];\r\n                // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n                var errors = results.errors.reverse();\r\n                for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                    var error = errors_1[_i];\r\n                    var extracted = payload.splice(error.index, 1)[0];\r\n                    if (_isRetriable(error.statusCode)) {\r\n                        retry[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                    else {\r\n                        // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                        failed[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                }\r\n                if (payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]);\r\n                }\r\n                if (failed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_ERROR /* @min:%2e_onError */](failed, formatErrorMessageXhr(null, [\"partial success\", results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */], \"of\", results.itemsReceived].join(\" \")));\r\n                }\r\n                if (retry[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _resendPayload(retry);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Partial success. \" +\r\n                        \"Delivered: \" + payload[_DYN_LENGTH /* @min:%2elength */] + \", Failed: \" + failed[_DYN_LENGTH /* @min:%2elength */] +\r\n                        \". Will retry to send \" + retry[_DYN_LENGTH /* @min:%2elength */] + \" our of \" + results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] + \" items\");\r\n                }\r\n            }\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(payload, countOfItemsInPayload) {\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            function _getPayloadArr(payload) {\r\n                try {\r\n                    if (payload) {\r\n                        var internalPayload = payload;\r\n                        var arr = internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                        if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                            return arr;\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _validate(telemetryItem, diagLogger) {\r\n                if (_disableTelemetry) {\r\n                    // Do not send/save data\r\n                    return false;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 7 /* _eInternalMessageId.CannotSendEmptyTelemetry */, \"Cannot send empty telemetry\");\r\n                    return false;\r\n                }\r\n                // validate event\r\n                if (telemetryItem.baseData && !telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 70 /* _eInternalMessageId.InvalidEvent */, \"Cannot send telemetry without baseData and baseType\");\r\n                    return false;\r\n                }\r\n                if (!telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    // Default\r\n                    telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */] = \"EventData\";\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!_self[_DYN__SENDER /* @min:%2e_sender */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender was not initialized\");\r\n                    return false;\r\n                }\r\n                // check if this item should be sampled in, else add sampleRate tag\r\n                if (!_isSampledIn(telemetryItem)) {\r\n                    // Item is sampled out, do not send it\r\n                    diagLogger && _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 33 /* _eInternalMessageId.TelemetrySampledAndNotSent */, \"Telemetry item was sampled out and not sent\", { SampleRate: _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] });\r\n                    return false;\r\n                }\r\n                else {\r\n                    telemetryItem[SampleRate] = _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */];\r\n                }\r\n                return true;\r\n            }\r\n            function _getEnvelope(telemetryItem, diagLogger) {\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                // if ikey of telemetry is provided and not empty, envelope will use this iKey instead of senderConfig iKey\r\n                var defaultEnvelopeIkey = telemetryItem.iKey || _instrumentationKey;\r\n                var aiEnvelope = Sender.constructEnvelope(telemetryItem, defaultEnvelopeIkey, diagLogger, _convertUndefined);\r\n                if (!aiEnvelope) {\r\n                    _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 47 /* _eInternalMessageId.CreateEnvelopeError */, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                var doNotSendItem = false;\r\n                // this is for running in legacy mode, where customer may already have a custom initializer present\r\n                if (telemetryItem[_DYN_TAGS /* @min:%2etags */] && telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy]) {\r\n                    arrForEach(telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy], function (callBack) {\r\n                        try {\r\n                            if (callBack && callBack(aiEnvelope) === false) {\r\n                                doNotSendItem = true;\r\n                                _warnToConsole(diagLogger, \"Telemetry processor check returns false\");\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // log error but dont stop executing rest of the telemetry initializers\r\n                            // doNotSendItem = true;\r\n                            _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n                        }\r\n                    });\r\n                    delete telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy];\r\n                }\r\n                if (doNotSendItem) {\r\n                    return; // do not send, no need to execute next plugin\r\n                }\r\n                return aiEnvelope;\r\n            }\r\n            function _serialize(item) {\r\n                var rlt = EMPTY_STR;\r\n                var diagLogger = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var valid = _validate(item, diagLogger);\r\n                    var envelope = null;\r\n                    if (valid) {\r\n                        envelope = _getEnvelope(item, diagLogger);\r\n                    }\r\n                    if (envelope) {\r\n                        rlt = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](envelope);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    rlt = \"[\" + arr.join(\",\") + \"]\";\r\n                }\r\n                return rlt;\r\n            }\r\n            function _createPayload(data) {\r\n                var _a;\r\n                var headers = _getHeaders();\r\n                return _a = {\r\n                        urlString: _endpointUrl\r\n                    },\r\n                    _a[_DYN_DATA /* @min:data */] = data,\r\n                    _a.headers = headers,\r\n                    _a;\r\n            }\r\n            function _isSampledIn(envelope) {\r\n                return _self._sample.isSampledIn(envelope);\r\n            }\r\n            function _getOnComplete(payload, status, headers, response) {\r\n                // ***********************************************************************************************\r\n                //TODO: handle other status codes\r\n                if (status === 200 && payload) {\r\n                    _self._onSuccess(payload, payload[_DYN_LENGTH /* @min:%2elength */]);\r\n                }\r\n                else {\r\n                    response && _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, response);\r\n                }\r\n            }\r\n            function _doSend(sendInterface, payload, isAsync, markAsSent) {\r\n                if (markAsSent === void 0) { markAsSent = true; }\r\n                var onComplete = function (status, headers, response) {\r\n                    return _getOnComplete(payload, status, headers, response);\r\n                };\r\n                var payloadData = _getPayload(payload);\r\n                var sendPostFunc = sendInterface && sendInterface.sendPOST;\r\n                if (sendPostFunc && payloadData) {\r\n                    // ***********************************************************************************************\r\n                    // mark payload as sent at the beginning of calling each send function\r\n                    if (markAsSent) {\r\n                        _self._buffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](payload);\r\n                    }\r\n                    return sendPostFunc(payloadData, onComplete, !isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            function _getPayload(payload) {\r\n                var _a;\r\n                if (isArray(payload) && payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var batch = _self[_DYN__BUFFER /* @min:%2e_buffer */].batchPayloads(payload);\r\n                    var headers = _getHeaders();\r\n                    var payloadData = (_a = {},\r\n                        _a[_DYN_DATA /* @min:data */] = batch,\r\n                        _a.urlString = _endpointUrl,\r\n                        _a.headers = headers,\r\n                        _a.disableXhrSync = _disableXhr,\r\n                        _a.disableFetchKeepAlive = !_fetchKeepAlive,\r\n                        _a[_DYN_ORI_PAYLOAD /* @min:oriPayload */] = payload,\r\n                        _a);\r\n                    return payloadData;\r\n                }\r\n                return null;\r\n            }\r\n            function _getHeaders() {\r\n                try {\r\n                    var headers = _headers || {};\r\n                    if (isInternalApplicationInsightsEndpoint(_endpointUrl)) {\r\n                        headers[RequestHeaders[6 /* eRequestHeaders.sdkContextHeader */]] = RequestHeaders[7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */];\r\n                    }\r\n                    return headers;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _checkMaxSize(incomingPayload) {\r\n                var incomingSize = incomingPayload ? incomingPayload[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n                if ((_self[_DYN__BUFFER /* @min:%2e_buffer */].size() + incomingSize) > _maxBatchSizeInBytes) {\r\n                    if (!_offlineListener || _offlineListener.isOnline()) { // only trigger send when currently online\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 10 /* SendRequestReason.MaxBatchSize */);\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _checkResponsStatus(status, payload, responseUrl, countOfItemsInPayload, errorMessage, res) {\r\n                var response = null;\r\n                if (!_self._appId) {\r\n                    response = parseResponse(res);\r\n                    if (response && response.appId) {\r\n                        _self._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((status < 200 || status >= 300) && status !== 0) {\r\n                    // Update End Point url if permanent redirect or moved permanently\r\n                    // Updates the end point url before retry\r\n                    if (status === 301 || status === 307 || status === 308) {\r\n                        if (!_checkAndUpdateEndPointUrl(responseUrl)) {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (_offlineListener && !_offlineListener.isOnline()) { // offline\r\n                        // Note: Don't check for status == 0, since adblock gives this code\r\n                        if (!_isRetryDisabled) {\r\n                            var offlineBackOffMultiplier = 10; // arbritrary number\r\n                            _resendPayload(payload, offlineBackOffMultiplier);\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". Offline - Response Code: \".concat(status, \". Offline status: \").concat(!_offlineListener.isOnline(), \". Will retry to send \").concat(payload.length, \" items.\"));\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (!_isRetryDisabled && _isRetriable(status)) {\r\n                        _resendPayload(payload);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" +\r\n                            \"Response code \" + status + \". Will retry to send \" + payload[_DYN_LENGTH /* @min:%2elength */] + \" items.\");\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                    }\r\n                }\r\n                else {\r\n                    // check if the xhr's responseURL or fetch's response.url is same as endpoint url\r\n                    // TODO after 10 redirects force send telemetry with 'redirect=false' as query parameter.\r\n                    _checkAndUpdateEndPointUrl(responseUrl);\r\n                    if (status === 206) {\r\n                        if (!response) {\r\n                            response = parseResponse(res);\r\n                        }\r\n                        if (response && !_isRetryDisabled) {\r\n                            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, response);\r\n                        }\r\n                        else {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _consecutiveErrors = 0;\r\n                        _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n            function _checkAndUpdateEndPointUrl(responseUrl) {\r\n                // Maximum stamp specific redirects allowed(uncomment this when breeze is ready with not allowing redirects feature)\r\n                if (_stamp_specific_redirects >= 10) {\r\n                    //  _self._senderConfig.endpointUrl = () => Sender._getDefaultAppInsightsChannelConfig().endpointUrl()+\"/?redirect=false\";\r\n                    //  _stamp_specific_redirects = 0;\r\n                    return false;\r\n                }\r\n                if (!isNullOrUndefined(responseUrl) && responseUrl !== \"\") {\r\n                    if (responseUrl !== _endpointUrl) {\r\n                        _endpointUrl = responseUrl;\r\n                        ++_stamp_specific_redirects;\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _doUnloadSend(payload, isAsync) {\r\n                if (_syncUnloadSender) {\r\n                    // We are unloading so always call the sender with sync set to false\r\n                    _syncUnloadSender(payload, false);\r\n                }\r\n                else {\r\n                    // Fallback to the previous beacon Sender (which causes a CORB warning on chrome now)\r\n                    var beaconInst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([3 /* TransportType.Beacon */], true);\r\n                    return _doSend(beaconInst, payload, isAsync);\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                var internalPayload = payload;\r\n                var data = internalPayload && internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                if (!_disableBeaconSplit) {\r\n                    // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                    var droppedPayload = [];\r\n                    for (var lp = 0; lp < data[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        var thePayload = data[lp];\r\n                        var arr = [thePayload];\r\n                        var item = _getPayload(arr);\r\n                        if (!canSend(item, onComplete)) {\r\n                            // Can't send anymore, so split the batch and drop the rest\r\n                            droppedPayload[_DYN_PUSH /* @min:%2epush */](thePayload);\r\n                        }\r\n                        else {\r\n                            _self._onSuccess(arr, arr[_DYN_LENGTH /* @min:%2elength */]);\r\n                        }\r\n                    }\r\n                    if (droppedPayload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _fallbackSend && _fallbackSend(droppedPayload, true);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                    }\r\n                }\r\n                else {\r\n                    _fallbackSend && _fallbackSend(data, true);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                }\r\n            }\r\n            function _isStringArr(arr) {\r\n                try {\r\n                    if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        return (isString(arr[0]));\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    //TODO: log, sender use IInternalStorageItem instead of string since 3.1.3\r\n                }\r\n                return null;\r\n            }\r\n            function _fetchKeepAliveSender(payload, isAsync) {\r\n                var transport = null;\r\n                if (isArray(payload)) {\r\n                    var payloadSize = payload[_DYN_LENGTH /* @min:%2elength */];\r\n                    for (var lp = 0; lp < payload[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        payloadSize += payload[lp].item[_DYN_LENGTH /* @min:%2elength */];\r\n                    }\r\n                    var syncFetchPayload = _sendPostMgr.getSyncFetchPayload();\r\n                    if ((syncFetchPayload + payloadSize) <= FetchSyncRequestSizeLimitBytes) {\r\n                        transport = 2 /* TransportType.Fetch */;\r\n                    }\r\n                    else if (isBeaconsSupported()) {\r\n                        // Fallback to beacon sender as we at least get told which events can't be scheduled\r\n                        transport = 3 /* TransportType.Beacon */;\r\n                    }\r\n                    else {\r\n                        // Payload is going to be too big so just try and send via XHR\r\n                        transport = 1 /* TransportType.Xhr */;\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n                    }\r\n                    var inst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([transport], true);\r\n                    return _doSend(inst, payload, isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n             * @param payload\r\n             */\r\n            function _resendPayload(payload, linearFactor) {\r\n                if (linearFactor === void 0) { linearFactor = 1; }\r\n                if (!payload || payload[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    return;\r\n                }\r\n                var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n                _consecutiveErrors++;\r\n                for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                    var item = payload_1[_i];\r\n                    item.cnt = item.cnt || 0; // to make sure we have cnt for each payload\r\n                    item.cnt++; // when resend, increase cnt\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](item);\r\n                }\r\n                // setup timer\r\n                _setRetryTime(linearFactor);\r\n                _setupTimer();\r\n            }\r\n            /**\r\n             * Calculates the time to wait before retrying in case of an error based on\r\n             * http://en.wikipedia.org/wiki/Exponential_backoff\r\n             */\r\n            function _setRetryTime(linearFactor) {\r\n                var SlotDelayInSeconds = 10;\r\n                var delayInSeconds;\r\n                if (_consecutiveErrors <= 1) {\r\n                    delayInSeconds = SlotDelayInSeconds;\r\n                }\r\n                else {\r\n                    var backOffSlot = (Math.pow(2, _consecutiveErrors) - 1) / 2;\r\n                    // tslint:disable-next-line:insecure-random\r\n                    var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                    backOffDelay = linearFactor * backOffDelay;\r\n                    delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n                }\r\n                // TODO: Log the backoff time like the C# version does.\r\n                var retryAfterTimeSpan = dateNow() + (delayInSeconds * 1000);\r\n                // TODO: Log the retry at time like the C# version does.\r\n                _retryAt = retryAfterTimeSpan;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers actually sending the data.\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && !_paused) {\r\n                    var retryInterval = _retryAt ? Math.max(0, _retryAt - dateNow()) : 0;\r\n                    var timerValue = Math.max(_maxBatchInterval, retryInterval);\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 1 /* SendRequestReason.NormalSchedule */);\r\n                    }, timerValue);\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryAt = null;\r\n            }\r\n            /**\r\n             * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n             * @param statusCode\r\n             */\r\n            function _isRetriable(statusCode) {\r\n                // retryCodes = [] means should not retry\r\n                if (!isNullOrUndefined(_retryCodes)) {\r\n                    return _retryCodes[_DYN_LENGTH /* @min:%2elength */] && _retryCodes.indexOf(statusCode) > -1;\r\n                }\r\n                return statusCode === 401 // Unauthorized\r\n                    // Removing as private links can return a 403 which causes excessive retries and session storage usage\r\n                    // || statusCode === 403 // Forbidden\r\n                    || statusCode === 408 // Timeout\r\n                    || statusCode === 429 // Too many requests.\r\n                    || statusCode === 500 // Internal server error.\r\n                    || statusCode === 502 // Bad Gateway.\r\n                    || statusCode === 503 // Service unavailable.\r\n                    || statusCode === 504; // Gateway timeout.\r\n            }\r\n            // Using function lookups for backward compatibility as the getNotifyMgr() did not exist until after v2.5.6\r\n            function _getNotifyMgr() {\r\n                var func = \"getNotifyMgr\";\r\n                if (_self.core[func]) {\r\n                    return _self.core[func]();\r\n                }\r\n                // using _self.core['_notificationManager'] for backward compatibility\r\n                return _self.core[\"_notificationManager\"];\r\n            }\r\n            function _notifySendRequest(sendRequest, isAsync) {\r\n                var manager = _getNotifyMgr();\r\n                if (manager && manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */]) {\r\n                    try {\r\n                        manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendRequest, isAsync);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            }\r\n            /**\r\n             * Validate UUID Format\r\n             * Specs taken from https://tools.ietf.org/html/rfc4122 and breeze repo\r\n             */\r\n            function _validateInstrumentationKey(instrumentationKey, config) {\r\n                var disableValidation = config.disableInstrumentationKeyValidation;\r\n                var disableIKeyValidationFlag = isNullOrUndefined(disableValidation) ? false : disableValidation;\r\n                if (disableIKeyValidationFlag) {\r\n                    return true;\r\n                }\r\n                var UUID_Regex = \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";\r\n                var regexp = new RegExp(UUID_Regex);\r\n                return regexp.test(instrumentationKey);\r\n            }\r\n            function _initDefaults() {\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _self[_DYN__BUFFER /* @min:%2e_buffer */] = null;\r\n                _self._appId = null;\r\n                _self._sample = null;\r\n                _headers = {};\r\n                _offlineListener = null;\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = null;\r\n                _paused = false;\r\n                _timeoutHandle = null;\r\n                _serializer = null;\r\n                _stamp_specific_redirects = 0;\r\n                _syncFetchPayload = 0;\r\n                _syncUnloadSender = null;\r\n                _evtNamespace = null;\r\n                _endpointUrl = null;\r\n                _orgEndpointUrl = null;\r\n                _maxBatchSizeInBytes = 0;\r\n                _beaconSupported = false;\r\n                _customHeaders = null;\r\n                _disableTelemetry = false;\r\n                _instrumentationKey = null;\r\n                _convertUndefined = UNDEFINED_VALUE;\r\n                _isRetryDisabled = false;\r\n                _sessionStorageUsed = null;\r\n                _namePrefix = UNDEFINED_VALUE;\r\n                _disableXhr = false;\r\n                _fetchKeepAlive = false;\r\n                _disableBeaconSplit = false;\r\n                _xhrSend = null;\r\n                _fallbackSend = null;\r\n                _sendPostMgr = null;\r\n                objDefine(_self, \"_senderConfig\", {\r\n                    g: function () {\r\n                        return objExtend({}, defaultAppInsightsChannelConfig);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger, convertUndefined) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !isNullOrUndefined(iKey)) {\r\n            envelope = __assign(__assign({}, orig), { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        var creator = EnvelopeTypeCreator[envelope.baseType] || EventEnvelopeCreator;\r\n        return creator(logger, envelope, convertUndefined);\r\n    };\r\n// Removed Stub for Sender.prototype.pause.\r\n// Removed Stub for Sender.prototype.resume.\r\n// Removed Stub for Sender.prototype.flush.\r\n// Removed Stub for Sender.prototype.onunloadFlush.\r\n// Removed Stub for Sender.prototype.initialize.\r\n// Removed Stub for Sender.prototype.processTelemetry.\r\n// Removed Stub for Sender.prototype._xhrReadyStateChange.\r\n// Removed Stub for Sender.prototype.triggerSend.\r\n// Removed Stub for Sender.prototype._onError.\r\n// Removed Stub for Sender.prototype._onPartialSuccess.\r\n// Removed Stub for Sender.prototype._onSuccess.\r\n// Removed Stub for Sender.prototype._xdrOnLoad.\r\n// Removed Stub for Sender.prototype.addHeader.\r\n// Removed Stub for Sender.prototype.isCompletelyIdle.\r\n// Removed Stub for Sender.prototype.getOfflineSupport.\r\n    return Sender;\r\n}(BaseTelemetryPlugin));\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\nexport var STR_PROPERTIES = \"properties\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_REQUEST_URL = \"requestUrl\"; // Count: 11\r\nexport var _DYN_INST = \"inst\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 8\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 9\r\nexport var _DYN_SPAN_ID = \"spanID\"; // Count: 8\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 13\r\nexport var _DYN_CONTEXT = \"context\"; // Count: 7\r\nexport var _DYN_ABORTED = \"aborted\"; // Count: 7\r\nexport var _DYN_TRACE_ID0 = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID1 = \"spanId\"; // Count: 5\r\nexport var _DYN__ADD_HOOK = \"_addHook\"; // Count: 4\r\nexport var _DYN_CORE = \"core\"; // Count: 8\r\nexport var _DYN_INCLUDE_CORRELATION_2 = \"includeCorrelationHeaders\"; // Count: 4\r\nexport var _DYN_GET_ABSOLUTE_URL = \"getAbsoluteUrl\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 6\r\nexport var _DYN_REQUEST_HEADERS = \"requestHeaders\"; // Count: 13\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 3\r\nexport var _DYN_TRACK_DEPENDENCY_DAT3 = \"trackDependencyDataInternal\"; // Count: 2\r\nexport var _DYN_START_TIME = \"startTime\"; // Count: 6\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_ENABLE_REQUEST_HEADE4 = \"enableRequestHeaderTracking\"; // Count: 3\r\nexport var _DYN_ENABLE_AJAX_ERROR_ST5 = \"enableAjaxErrorStatusText\"; // Count: 2\r\nexport var _DYN_ENABLE_AJAX_PERF_TRA6 = \"enableAjaxPerfTracking\"; // Count: 2\r\nexport var _DYN_MAX_AJAX_CALLS_PER_V7 = \"maxAjaxCallsPerView\"; // Count: 2\r\nexport var _DYN_EXCLUDE_REQUEST_FROM8 = \"excludeRequestFromAutoTrackingPatterns\"; // Count: 2\r\nexport var _DYN_ADD_REQUEST_CONTEXT = \"addRequestContext\"; // Count: 2\r\nexport var _DYN_DISABLE_AJAX_TRACKIN9 = \"disableAjaxTracking\"; // Count: 3\r\nexport var _DYN_AJAX_PERF_LOOKUP_DEL10 = \"ajaxPerfLookupDelay\"; // Count: 2\r\nexport var _DYN_DISABLE_FETCH_TRACKI11 = \"disableFetchTracking\"; // Count: 2\r\nexport var _DYN_ENABLE_RESPONSE_HEAD12 = \"enableResponseHeaderTracking\"; // Count: 2\r\nexport var _DYN_STATUS = \"status\"; // Count: 11\r\nexport var _DYN_STATUS_TEXT = \"statusText\"; // Count: 9\r\nexport var _DYN_HEADER_MAP = \"headerMap\"; // Count: 8\r\nexport var _DYN_OPEN_DONE = \"openDone\"; // Count: 3\r\nexport var _DYN_SEND_DONE = \"sendDone\"; // Count: 3\r\nexport var _DYN_REQUEST_SENT_TIME = \"requestSentTime\"; // Count: 9\r\nexport var _DYN_ABORT_DONE = \"abortDone\"; // Count: 3\r\nexport var _DYN_GET_TRACE_ID = \"getTraceId\"; // Count: 3\r\nexport var _DYN_GET_TRACE_FLAGS = \"getTraceFlags\"; // Count: 3\r\nexport var _DYN_METHOD = \"method\"; // Count: 8\r\nexport var _DYN_ERROR_STATUS_TEXT = \"errorStatusText\"; // Count: 3\r\nexport var _DYN_STATE_CHANGE_ATTACHE13 = \"stateChangeAttached\"; // Count: 2\r\nexport var _DYN_RESPONSE_TEXT = \"responseText\"; // Count: 6\r\nexport var _DYN_RESPONSE_FINISHED_TI14 = \"responseFinishedTime\"; // Count: 7\r\nexport var _DYN__CREATE_TRACK_ITEM = \"CreateTrackItem\"; // Count: 3\r\nexport var _DYN_RESPONSE = \"response\"; // Count: 4\r\nexport var _DYN_GET_ALL_RESPONSE_HEA15 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_GET_PART_APROPS = \"getPartAProps\"; // Count: 3\r\nexport var _DYN_PERF_MARK = \"perfMark\"; // Count: 4\r\nexport var _DYN_NAME = \"name\"; // Count: 6\r\nexport var _DYN_PERF_TIMING = \"perfTiming\"; // Count: 3\r\nexport var _DYN_EXCEPTION = \"exception\"; // Count: 5\r\nexport var _DYN_AJAX_DIAGNOSTICS_MES16 = \"ajaxDiagnosticsMessage\"; // Count: 3\r\nexport var _DYN_CORRELATION_CONTEXT = \"correlationContext\"; // Count: 3\r\nexport var _DYN_AJAX_TOTAL_DURATION = \"ajaxTotalDuration\"; // Count: 3\r\nexport var _DYN_EVENT_TRACE_CTX = \"eventTraceCtx\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { Extensions, dataSanitizeUrl, dateTimeUtilsDuration, msToTimeSpan, urlGetAbsoluteUrl, urlGetCompleteUrl } from \"@microsoft/applicationinsights-common\";\r\nimport { arrForEach, isNullOrUndefined, isNumber, isString, normalizeJsName, objForEachKey, objKeys } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION, STR_PROPERTIES } from \"./InternalConstants\";\r\nimport { _DYN_ABORTED, _DYN_ABORT_DONE, _DYN_AJAX_TOTAL_DURATION, _DYN_CORRELATION_CONTEXT, _DYN_ERROR_STATUS_TEXT, _DYN_EVENT_TRACE_CTX, _DYN_GET_ABSOLUTE_URL, _DYN_GET_PART_APROPS, _DYN_GET_TRACE_FLAGS, _DYN_GET_TRACE_ID, _DYN_HEADER_MAP, _DYN_LENGTH, _DYN_METHOD, _DYN_NAME, _DYN_OPEN_DONE, _DYN_PERF_MARK, _DYN_PERF_TIMING, _DYN_REQUEST_HEADERS, _DYN_REQUEST_SENT_TIME, _DYN_REQUEST_URL, _DYN_RESPONSE, _DYN_RESPONSE_FINISHED_TI14, _DYN_SEND_DONE, _DYN_SPAN_ID, _DYN_SPAN_ID1, _DYN_START_TIME, _DYN_STATE_CHANGE_ATTACHE13, _DYN_STATUS, _DYN_STATUS_TEXT, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_TRACE_ID0, _DYN__CREATE_TRACK_ITEM } from \"./__DynamicConstants\";\r\n/** @ignore */\r\nfunction _calcPerfDuration(resourceEntry, start, end) {\r\n    var result = 0;\r\n    var from = resourceEntry[start];\r\n    var to = resourceEntry[end];\r\n    if (from && to) {\r\n        result = dateTimeUtilsDuration(from, to);\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _setPerfDuration(props, name, resourceEntry, start, end) {\r\n    var result = 0;\r\n    var value = _calcPerfDuration(resourceEntry, start, end);\r\n    if (value) {\r\n        result = _setPerfValue(props, name, msToTimeSpan(value));\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _setPerfValue(props, name, value) {\r\n    var strPerf = \"ajaxPerf\";\r\n    var result = 0;\r\n    if (props && name && value) {\r\n        var perfData = props[strPerf] = (props[strPerf] || {});\r\n        perfData[name] = value;\r\n        result = 1;\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _populatePerfData(ajaxData, dependency) {\r\n    /*\r\n    * https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API\r\n    *  | -startTime\r\n    *  | -redirectStart\r\n    *  |            | -redirectEnd\r\n    *  |            | | -fetchStart\r\n    *  |            | |   | -domainLookupStart\r\n    *  |            | |   |                |- domainLookupEnd\r\n    *  |            | |   |                | | -connectStart\r\n    *  |            | |   |                | |  | -secureConnectionStart\r\n    *  |            | |   |                | |  |        | -connectEnd\r\n    *  |            | |   |                | |  |        | | -requestStart\r\n    *  |            | |   |                | |  |        | |           | | -responseStart\r\n    *  |            | |   |                | |  |        | |           | |            | | -responseEnd\r\n    *  +------------+-+---+----------------+-+--+--------+-+-----------+-+------------+-+\r\n    *  |--redirect--| |---|--domainLookup--| |--connect--| |--request--| |--response--| |\r\n    *  |-------------------networkConnect----------------|\r\n    *  |                                                   |---------sentRequest--------|\r\n    *  |------------------------------------perfTotal-----------------------------------|\r\n    */\r\n    var resourceEntry = ajaxData[_DYN_PERF_TIMING /* @min:%2eperfTiming */];\r\n    var props = dependency[STR_PROPERTIES /* @min:%2eproperties */] || {};\r\n    var propsSet = 0;\r\n    var strName = \"name\";\r\n    var strStart = \"Start\";\r\n    var strEnd = \"End\";\r\n    var strDomainLookup = \"domainLookup\";\r\n    var strConnect = \"connect\";\r\n    var strRedirect = \"redirect\";\r\n    var strRequest = \"request\";\r\n    var strResponse = \"response\";\r\n    var strStartTime = \"startTime\";\r\n    var strDomainLookupStart = strDomainLookup + strStart;\r\n    var strDomainLookupEnd = strDomainLookup + strEnd;\r\n    var strConnectStart = strConnect + strStart;\r\n    var strConnectEnd = strConnect + strEnd;\r\n    var strRequestStart = strRequest + strStart;\r\n    var strRequestEnd = strRequest + strEnd;\r\n    var strResponseStart = strResponse + strStart;\r\n    var strResponseEnd = strResponse + strEnd;\r\n    var strRedirectStart = strRedirect + strStart;\r\n    var strRedirectEnd = strRedirect = strEnd;\r\n    var strTransferSize = \"transferSize\";\r\n    var strEncodedBodySize = \"encodedBodySize\";\r\n    var strDecodedBodySize = \"decodedBodySize\";\r\n    var strServerTiming = \"serverTiming\";\r\n    if (resourceEntry) {\r\n        // redirect\r\n        propsSet |= _setPerfDuration(props, strRedirect, resourceEntry, strRedirectStart, strRedirectEnd);\r\n        // domainLookup\r\n        propsSet |= _setPerfDuration(props, strDomainLookup, resourceEntry, strDomainLookupStart, strDomainLookupEnd);\r\n        // connect\r\n        propsSet |= _setPerfDuration(props, strConnect, resourceEntry, strConnectStart, strConnectEnd);\r\n        // request\r\n        propsSet |= _setPerfDuration(props, strRequest, resourceEntry, strRequestStart, strRequestEnd);\r\n        // response\r\n        propsSet |= _setPerfDuration(props, strResponse, resourceEntry, strResponseStart, strResponseEnd);\r\n        // Network connection time\r\n        propsSet |= _setPerfDuration(props, \"networkConnect\", resourceEntry, strStartTime, strConnectEnd);\r\n        // Sent Request\r\n        propsSet |= _setPerfDuration(props, \"sentRequest\", resourceEntry, strRequestStart, strResponseEnd);\r\n        // PerfTotal / Duration\r\n        var duration = resourceEntry[STR_DURATION /* @min:%2eduration */];\r\n        if (!duration) {\r\n            duration = _calcPerfDuration(resourceEntry, strStartTime, strResponseEnd) || 0;\r\n        }\r\n        propsSet |= _setPerfValue(props, STR_DURATION, duration);\r\n        propsSet |= _setPerfValue(props, \"perfTotal\", duration);\r\n        var serverTiming = resourceEntry[strServerTiming];\r\n        if (serverTiming) {\r\n            var server_1 = {};\r\n            arrForEach(serverTiming, function (value, idx) {\r\n                var name = normalizeJsName(value[strName] || \"\" + idx);\r\n                var newValue = server_1[name] || {};\r\n                objForEachKey(value, function (key, val) {\r\n                    if (key !== strName && isString(val) || isNumber(val)) {\r\n                        if (newValue[key]) {\r\n                            val = newValue[key] + \";\" + val;\r\n                        }\r\n                        if (val || !isString(val)) {\r\n                            // Only set the value if it has a value and it's not an empty string\r\n                            newValue[key] = val;\r\n                        }\r\n                    }\r\n                });\r\n                server_1[name] = newValue;\r\n            });\r\n            propsSet |= _setPerfValue(props, strServerTiming, server_1);\r\n        }\r\n        propsSet |= _setPerfValue(props, strTransferSize, resourceEntry[strTransferSize]);\r\n        propsSet |= _setPerfValue(props, strEncodedBodySize, resourceEntry[strEncodedBodySize]);\r\n        propsSet |= _setPerfValue(props, strDecodedBodySize, resourceEntry[strDecodedBodySize]);\r\n    }\r\n    else {\r\n        if (ajaxData[_DYN_PERF_MARK /* @min:%2eperfMark */]) {\r\n            propsSet |= _setPerfValue(props, \"missing\", ajaxData.perfAttempts);\r\n        }\r\n    }\r\n    if (propsSet) {\r\n        dependency[STR_PROPERTIES /* @min:%2eproperties */] = props;\r\n    }\r\n}\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        var self = this;\r\n        self[_DYN_OPEN_DONE /* @min:%2eopenDone */] = false;\r\n        self.setRequestHeaderDone = false;\r\n        self[_DYN_SEND_DONE /* @min:%2esendDone */] = false;\r\n        self[_DYN_ABORT_DONE /* @min:%2eabortDone */] = false;\r\n        // <summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        self[_DYN_STATE_CHANGE_ATTACHE13 /* @min:%2estateChangeAttached */] = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\nexport { XHRMonitoringState };\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(traceId, spanId, logger, traceCtx) {\r\n        var _a;\r\n        var self = this;\r\n        var _logger = logger;\r\n        var strResponseText = \"responseText\";\r\n        // Assigning the initial/default values within the constructor to avoid typescript from creating a bunch of\r\n        // this.XXXX = null\r\n        self[_DYN_PERF_MARK /* @min:%2eperfMark */] = null;\r\n        self.completed = false;\r\n        self.requestHeadersSize = null;\r\n        self[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = null;\r\n        self.responseReceivingDuration = null;\r\n        self.callbackDuration = null;\r\n        self[_DYN_AJAX_TOTAL_DURATION /* @min:%2eajaxTotalDuration */] = null;\r\n        self[_DYN_ABORTED /* @min:%2eaborted */] = 0;\r\n        self.pageUrl = null;\r\n        self[_DYN_REQUEST_URL /* @min:%2erequestUrl */] = null;\r\n        self.requestSize = 0;\r\n        self[_DYN_METHOD /* @min:%2emethod */] = null;\r\n        self[_DYN_STATUS /* @min:%2estatus */] = null;\r\n        self[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */] = null;\r\n        self.responseStartedTime = null;\r\n        self[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */] = null;\r\n        self.callbackFinishedTime = null;\r\n        self.endTime = null;\r\n        self.xhrMonitoringState = new XHRMonitoringState();\r\n        self.clientFailure = 0;\r\n        self[_DYN_TRACE_ID /* @min:%2etraceID */] = traceId;\r\n        self[_DYN_SPAN_ID /* @min:%2espanID */] = spanId;\r\n        self[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = traceCtx === null || traceCtx === void 0 ? void 0 : traceCtx.getTraceFlags();\r\n        if (traceCtx) {\r\n            self[_DYN_EVENT_TRACE_CTX /* @min:%2eeventTraceCtx */] = (_a = {},\r\n                _a[_DYN_TRACE_ID0 /* @min:traceId */] = traceCtx[_DYN_GET_TRACE_ID /* @min:%2egetTraceId */](),\r\n                _a[_DYN_SPAN_ID1 /* @min:spanId */] = traceCtx.getSpanId(),\r\n                _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = traceCtx[_DYN_GET_TRACE_FLAGS /* @min:%2egetTraceFlags */](),\r\n                _a);\r\n        }\r\n        else {\r\n            self[_DYN_EVENT_TRACE_CTX /* @min:%2eeventTraceCtx */] = null;\r\n        }\r\n        dynamicProto(ajaxRecord, self, function (self) {\r\n            self.getAbsoluteUrl = function () {\r\n                return self[_DYN_REQUEST_URL /* @min:%2erequestUrl */] ? urlGetAbsoluteUrl(self[_DYN_REQUEST_URL /* @min:%2erequestUrl */]) : null;\r\n            };\r\n            self.getPathName = function () {\r\n                return self[_DYN_REQUEST_URL /* @min:%2erequestUrl */] ? dataSanitizeUrl(_logger, urlGetCompleteUrl(self[_DYN_METHOD /* @min:%2emethod */], self[_DYN_REQUEST_URL /* @min:%2erequestUrl */])) : null;\r\n            };\r\n            self[_DYN__CREATE_TRACK_ITEM /* @min:%2eCreateTrackItem */] = function (ajaxType, enableRequestHeaderTracking, getResponse) {\r\n                var _a;\r\n                // round to 3 decimal points\r\n                self.ajaxTotalDuration = Math.round(dateTimeUtilsDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n                if (self[_DYN_AJAX_TOTAL_DURATION /* @min:%2eajaxTotalDuration */] < 0) {\r\n                    return null;\r\n                }\r\n                var dependency = (_a = {\r\n                        id: \"|\" + self[_DYN_TRACE_ID /* @min:%2etraceID */] + \".\" + self[_DYN_SPAN_ID /* @min:%2espanID */],\r\n                        target: self[_DYN_GET_ABSOLUTE_URL /* @min:%2egetAbsoluteUrl */]()\r\n                    },\r\n                    _a[_DYN_NAME /* @min:name */] = self.getPathName(),\r\n                    _a.type = ajaxType,\r\n                    _a[_DYN_START_TIME /* @min:startTime */] = null,\r\n                    _a.duration = self[_DYN_AJAX_TOTAL_DURATION /* @min:%2eajaxTotalDuration */],\r\n                    _a.success = (+(self[_DYN_STATUS /* @min:%2estatus */])) >= 200 && (+(self[_DYN_STATUS /* @min:%2estatus */])) < 400,\r\n                    _a.responseCode = (+(self[_DYN_STATUS /* @min:%2estatus */])),\r\n                    _a[STR_PROPERTIES] = { HttpMethod: self[_DYN_METHOD /* @min:%2emethod */] },\r\n                    _a);\r\n                var props = dependency[STR_PROPERTIES];\r\n                if (self[_DYN_ABORTED /* @min:%2eaborted */]) {\r\n                    props[_DYN_ABORTED /* @min:%2eaborted */] = true;\r\n                }\r\n                if (self[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */]) {\r\n                    // Set the correct dependency start time\r\n                    dependency[_DYN_START_TIME /* @min:%2estartTime */] = new Date();\r\n                    dependency[_DYN_START_TIME /* @min:%2estartTime */].setTime(self[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */]);\r\n                }\r\n                // Add Ajax perf details if available\r\n                _populatePerfData(self, dependency);\r\n                if (enableRequestHeaderTracking) {\r\n                    if (objKeys(self.requestHeaders)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        props[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = self[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */];\r\n                    }\r\n                }\r\n                if (getResponse) {\r\n                    var response = getResponse();\r\n                    if (response) {\r\n                        // enrich dependency target with correlation context from the server\r\n                        var correlationContext = response[_DYN_CORRELATION_CONTEXT /* @min:%2ecorrelationContext */];\r\n                        if (correlationContext) {\r\n                            dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n                        }\r\n                        if (response[_DYN_HEADER_MAP /* @min:%2eheaderMap */]) {\r\n                            if (objKeys(response.headerMap)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                                props.responseHeaders = response[_DYN_HEADER_MAP /* @min:%2eheaderMap */];\r\n                            }\r\n                        }\r\n                        if (self[_DYN_ERROR_STATUS_TEXT /* @min:%2eerrorStatusText */]) {\r\n                            if (self[_DYN_STATUS /* @min:%2estatus */] >= 400) {\r\n                                var responseType = response.type;\r\n                                if (responseType === \"\" || responseType === \"text\") {\r\n                                    props.responseText = response.responseText ? response[_DYN_STATUS_TEXT /* @min:%2estatusText */] + \" - \" + response[strResponseText] : response[_DYN_STATUS_TEXT /* @min:%2estatusText */];\r\n                                }\r\n                                if (responseType === \"json\") {\r\n                                    props.responseText = response.response ? response[_DYN_STATUS_TEXT /* @min:%2estatusText */] + \" - \" + JSON.stringify(response[_DYN_RESPONSE /* @min:%2eresponse */]) : response[_DYN_STATUS_TEXT /* @min:%2estatusText */];\r\n                                }\r\n                            }\r\n                            else if (self[_DYN_STATUS /* @min:%2estatus */] === 0) {\r\n                                props.responseText = response[_DYN_STATUS_TEXT /* @min:%2estatusText */] || \"\";\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return dependency;\r\n            };\r\n            self[_DYN_GET_PART_APROPS /* @min:%2egetPartAProps */] = function () {\r\n                var _a;\r\n                var partA = null;\r\n                var traceCtx = self[_DYN_EVENT_TRACE_CTX /* @min:%2eeventTraceCtx */];\r\n                if (traceCtx && (traceCtx[_DYN_TRACE_ID0 /* @min:%2etraceId */] || traceCtx[_DYN_SPAN_ID1 /* @min:%2espanId */])) {\r\n                    partA = {};\r\n                    var traceExt = partA[Extensions.TraceExt] = (_a = {},\r\n                        _a[_DYN_TRACE_ID /* @min:traceID */] = traceCtx[_DYN_TRACE_ID0 /* @min:%2etraceId */],\r\n                        _a.parentID = traceCtx[_DYN_SPAN_ID1 /* @min:%2espanId */],\r\n                        _a);\r\n                    if (!isNullOrUndefined(traceCtx[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */])) {\r\n                        traceExt[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = traceCtx[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n                    }\r\n                }\r\n                return partA;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for ajaxRecord.prototype.getAbsoluteUrl.\r\n// Removed Stub for ajaxRecord.prototype.getPathName.\r\n// Removed Stub for ajaxRecord.prototype.CreateTrackItem.\r\n// Removed Stub for ajaxRecord.prototype.getPartAProps.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ajaxRecord.__ieDyn=1;\n\n    return ajaxRecord;\r\n}());\r\nexport { ajaxRecord };\r\n//# sourceMappingURL=ajaxRecord.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar _a;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { DisabledPropertyName, PropertiesPluginIdentifier, RemoteDependencyData, RequestHeaders, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, createDistributedTraceContextFromTrace, createTelemetryItem, createTraceParent, dateTimeUtilsNow, formatTraceParent, isInternalApplicationInsightsEndpoint } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, InstrumentFunc, InstrumentProto, _throwInternal, arrForEach, createProcessTelemetryContext, createUniqueNamespace, dumpObj, eventOn, generateW3CId, getExceptionName, getGlobal, getIEVersion, getLocation, getPerformance, isFunction, isNullOrUndefined, isString, isXhrSupported, mergeEvtNamespace, onConfigChange, strPrototype, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isWebWorker, objFreeze, scheduleTimeout, strIndexOf, strSplit, strSubstr } from \"@nevware21/ts-utils\";\r\nimport { STR_PROPERTIES } from \"./InternalConstants\";\r\nimport { _DYN_ABORTED, _DYN_ABORT_DONE, _DYN_ADD_REQUEST_CONTEXT, _DYN_AJAX_DIAGNOSTICS_MES16, _DYN_AJAX_PERF_LOOKUP_DEL10, _DYN_CONTEXT, _DYN_CORE, _DYN_CORRELATION_CONTEXT, _DYN_DISABLE_AJAX_TRACKIN9, _DYN_DISABLE_FETCH_TRACKI11, _DYN_ENABLE_AJAX_ERROR_ST5, _DYN_ENABLE_AJAX_PERF_TRA6, _DYN_ENABLE_REQUEST_HEADE4, _DYN_ENABLE_RESPONSE_HEAD12, _DYN_ERROR_STATUS_TEXT, _DYN_EXCEPTION, _DYN_EXCLUDE_REQUEST_FROM8, _DYN_GET_ABSOLUTE_URL, _DYN_GET_ALL_RESPONSE_HEA15, _DYN_GET_PART_APROPS, _DYN_GET_TRACE_FLAGS, _DYN_GET_TRACE_ID, _DYN_HEADERS, _DYN_HEADER_MAP, _DYN_INCLUDE_CORRELATION_2, _DYN_INST, _DYN_LENGTH, _DYN_MAX_AJAX_CALLS_PER_V7, _DYN_METHOD, _DYN_NAME, _DYN_OPEN_DONE, _DYN_PERF_MARK, _DYN_PERF_TIMING, _DYN_REQUEST_HEADERS, _DYN_REQUEST_SENT_TIME, _DYN_REQUEST_URL, _DYN_RESPONSE, _DYN_RESPONSE_FINISHED_TI14, _DYN_RESPONSE_TEXT, _DYN_SEND_DONE, _DYN_SET_REQUEST_HEADER, _DYN_SPAN_ID, _DYN_SPAN_ID1, _DYN_START_TIME, _DYN_STATE_CHANGE_ATTACHE13, _DYN_STATUS, _DYN_STATUS_TEXT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_TRACE_ID0, _DYN_TRACK_DEPENDENCY_DAT3, _DYN__ADD_HOOK, _DYN__CREATE_TRACK_ITEM } from \"./__DynamicConstants\";\r\nimport { ajaxRecord } from \"./ajaxRecord\";\r\nvar AJAX_MONITOR_PREFIX = \"ai.ajxmn.\";\r\nvar strDiagLog = \"diagLog\";\r\nvar AJAX_DATA_CONTAINER = \"_ajaxData\";\r\nvar STR_FETCH = \"fetch\";\r\nvar ERROR_HEADER = \"Failed to monitor XMLHttpRequest\";\r\nvar ERROR_PREFIX = \", monitoring data for this ajax call \";\r\nvar ERROR_POSTFIX = ERROR_PREFIX + \"may be incorrect.\";\r\nvar ERROR_NOT_SENT = ERROR_PREFIX + \"won't be sent.\";\r\nvar CORRELATION_HEADER_ERROR = \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\";\r\nvar CUSTOM_REQUEST_CONTEXT_ERROR = \"Failed to add custom defined request context as configured call back may missing a null check.\";\r\nvar FAILED_TO_CALCULATE_DURATION_ERROR = \"Failed to calculate the duration of the \";\r\n// Using a global value so that to handle same iKey with multiple app insights instances (mostly for testing)\r\nvar _markCount = 0;\r\n/** @Ignore */\r\nfunction _supportsFetch() {\r\n    var _global = getGlobal();\r\n    if (!_global ||\r\n        isNullOrUndefined(_global.Request) ||\r\n        isNullOrUndefined(_global.Request[strPrototype]) ||\r\n        isNullOrUndefined(_global[STR_FETCH])) {\r\n        return null;\r\n    }\r\n    return _global[STR_FETCH];\r\n}\r\n/**\r\n * Determines whether ajax monitoring can be enabled on this document\r\n * @returns True if Ajax monitoring is supported on this page, otherwise false\r\n * @ignore\r\n */\r\nfunction _supportsAjaxMonitoring(ajaxMonitorInstance, ajaxDataId) {\r\n    var _a, _b;\r\n    var result = false;\r\n    if (isXhrSupported()) {\r\n        var proto = XMLHttpRequest[strPrototype];\r\n        result = !isNullOrUndefined(proto) &&\r\n            !isNullOrUndefined(proto.open) && // eslint-disable-line security/detect-non-literal-fs-filename -- false positive\r\n            !isNullOrUndefined(proto.send) &&\r\n            !isNullOrUndefined(proto.abort);\r\n    }\r\n    var ieVer = getIEVersion();\r\n    if (ieVer && ieVer < 9) {\r\n        result = false;\r\n    }\r\n    if (result) {\r\n        // Disable if the XmlHttpRequest can't be extended or hooked\r\n        try {\r\n            var xhr = new XMLHttpRequest();\r\n            var xhrData = {\r\n                xh: [],\r\n                i: (_a = {},\r\n                    _a[ajaxDataId] = {},\r\n                    _a)\r\n            };\r\n            xhr[AJAX_DATA_CONTAINER] = xhrData;\r\n            // Check that we can update the prototype\r\n            var theOpen = XMLHttpRequest[strPrototype].open;\r\n            XMLHttpRequest[strPrototype].open = theOpen;\r\n        }\r\n        catch (e) {\r\n            // We can't decorate the xhr object so disable monitoring\r\n            result = false;\r\n            _throwInternalCritical(ajaxMonitorInstance, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, \"Failed to enable XMLHttpRequest monitoring, extension is not supported\", (_b = {},\r\n                _b[_DYN_EXCEPTION /* @min:exception */] = dumpObj(e),\r\n                _b));\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Internal helper to fetch the SDK instance tracking data for this XHR request\r\n * @param xhr\r\n * @param ajaxDataId\r\n * @returns\r\n */\r\nvar _getAjaxData = function (xhr, ajaxDataId) {\r\n    if (xhr && ajaxDataId && xhr[AJAX_DATA_CONTAINER]) {\r\n        return (xhr[AJAX_DATA_CONTAINER].i || {})[ajaxDataId];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * @ignore\r\n * Internal helper to track the singleton shared tracking headers, so we can attempt to not create headers\r\n * that might cause an issue if multiple values are populated.\r\n * @param xhr - The instrumented XHR instance\r\n */\r\nvar _addSharedXhrHeaders = function (xhr, name, value) {\r\n    if (xhr) {\r\n        var headers = (xhr[AJAX_DATA_CONTAINER] || {}).xh;\r\n        if (headers) {\r\n            headers.push({\r\n                n: name,\r\n                v: value\r\n            });\r\n        }\r\n    }\r\n};\r\nvar _isHeaderSet = function (xhr, name) {\r\n    var isPresent = false;\r\n    if (xhr) {\r\n        var headers = (xhr[AJAX_DATA_CONTAINER] || {}).xh;\r\n        if (headers) {\r\n            arrForEach(headers, function (header) {\r\n                if (header.n === name) {\r\n                    isPresent = true;\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return isPresent;\r\n};\r\n/** @Ignore */\r\nfunction _getFailedAjaxDiagnosticsMessage(xhr, ajaxDataId) {\r\n    var result = \"\";\r\n    try {\r\n        var ajaxData = _getAjaxData(xhr, ajaxDataId);\r\n        if (ajaxData && ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */]) {\r\n            result += \"(url: '\" + ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] + \"')\";\r\n        }\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _throwInternalCritical(ajaxMonitorInstance, msgId, message, properties, isUserAct) {\r\n    _throwInternal(ajaxMonitorInstance[strDiagLog](), 1 /* eLoggingSeverity.CRITICAL */, msgId, message, properties, isUserAct);\r\n}\r\n/** @ignore */\r\nfunction _throwInternalWarning(ajaxMonitorInstance, msgId, message, properties, isUserAct) {\r\n    _throwInternal(ajaxMonitorInstance[strDiagLog](), 2 /* eLoggingSeverity.WARNING */, msgId, message, properties, isUserAct);\r\n}\r\n/** @Ignore */\r\nfunction _createErrorCallbackFunc(ajaxMonitorInstance, internalMessage, message) {\r\n    // tslint:disable-next-line\r\n    return function (callDetails) {\r\n        var _a;\r\n        _throwInternalCritical(ajaxMonitorInstance, internalMessage, message, (_a = {\r\n                ajaxDiagnosticsMessage: _getFailedAjaxDiagnosticsMessage(callDetails[_DYN_INST /* @min:%2einst */], ajaxMonitorInstance._ajaxDataId)\r\n            },\r\n            _a[_DYN_EXCEPTION /* @min:exception */] = dumpObj(callDetails.err),\r\n            _a));\r\n    };\r\n}\r\nfunction _indexOf(value, match) {\r\n    if (value && match) {\r\n        return strIndexOf(value, match);\r\n    }\r\n    return -1;\r\n}\r\nfunction _addHandler(container, id, theFunc) {\r\n    var theHandler = {\r\n        id: id,\r\n        fn: theFunc\r\n    };\r\n    container.push(theHandler);\r\n    return {\r\n        remove: function () {\r\n            arrForEach(container, function (initializer, idx) {\r\n                if (initializer.id === theHandler.id) {\r\n                    container.splice(idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\nfunction _processDependencyContainer(core, container, details, message) {\r\n    var result = true;\r\n    arrForEach(container, function (theFunc, idx) {\r\n        try {\r\n            if (theFunc.fn.call(null, details) === false) {\r\n                result = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            _throwInternal(core && core.logger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Dependency \" + message + \" [#\" + idx + \"] failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n        }\r\n    });\r\n    return result;\r\n}\r\nfunction _processDependencyListeners(listeners, core, ajaxData, xhr, input, init) {\r\n    var _a;\r\n    var initializersCount = listeners[_DYN_LENGTH /* @min:%2elength */];\r\n    if (initializersCount > 0) {\r\n        var details = (_a = {},\r\n            _a[_DYN_CORE /* @min:core */] = core,\r\n            _a.xhr = xhr,\r\n            _a.input = input,\r\n            _a.init = init,\r\n            _a.traceId = ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */],\r\n            _a.spanId = ajaxData[_DYN_SPAN_ID /* @min:%2espanID */],\r\n            _a.traceFlags = ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */],\r\n            _a.context = ajaxData[_DYN_CONTEXT /* @min:%2econtext */] || {},\r\n            _a.aborted = !!ajaxData[_DYN_ABORTED /* @min:%2eaborted */],\r\n            _a);\r\n        _processDependencyContainer(core, listeners, details, \"listener\");\r\n        ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */] = details[_DYN_TRACE_ID0 /* @min:%2etraceId */];\r\n        ajaxData[_DYN_SPAN_ID /* @min:%2espanID */] = details[_DYN_SPAN_ID1 /* @min:%2espanId */];\r\n        ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = details[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        ajaxData[_DYN_CONTEXT /* @min:%2econtext */] = details[_DYN_CONTEXT /* @min:%2econtext */];\r\n    }\r\n}\r\nvar BLOB_CORE = \"*.blob.core.\";\r\nexport var DfltAjaxCorrelationHeaderExDomains = objFreeze([\r\n    BLOB_CORE + \"windows.net\",\r\n    BLOB_CORE + \"chinacloudapi.cn\",\r\n    BLOB_CORE + \"cloudapi.de\",\r\n    BLOB_CORE + \"usgovcloudapi.net\"\r\n]);\r\nvar _internalExcludeEndpoints = [\r\n    /https:\\/\\/[^\\/]*(\\.pipe\\.aria|aria\\.pipe|events\\.data|collector\\.azure)\\.[^\\/]+\\/(OneCollector\\/1|Collector\\/3)\\.0/i\r\n];\r\nvar _defaultConfig = objFreeze((_a = {},\r\n    _a[_DYN_MAX_AJAX_CALLS_PER_V7 /* @min:maxAjaxCallsPerView */] = 500,\r\n    _a[_DYN_DISABLE_AJAX_TRACKIN9 /* @min:disableAjaxTracking */] = false,\r\n    _a[_DYN_DISABLE_FETCH_TRACKI11 /* @min:disableFetchTracking */] = false,\r\n    _a[_DYN_EXCLUDE_REQUEST_FROM8 /* @min:excludeRequestFromAutoTrackingPatterns */] = undefined,\r\n    _a.disableCorrelationHeaders = false,\r\n    _a.distributedTracingMode = 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    _a.correlationHeaderExcludedDomains = DfltAjaxCorrelationHeaderExDomains,\r\n    _a.correlationHeaderDomains = undefined,\r\n    _a.correlationHeaderExcludePatterns = undefined,\r\n    _a.appId = undefined,\r\n    _a.enableCorsCorrelation = false,\r\n    _a[_DYN_ENABLE_REQUEST_HEADE4 /* @min:enableRequestHeaderTracking */] = false,\r\n    _a[_DYN_ENABLE_RESPONSE_HEAD12 /* @min:enableResponseHeaderTracking */] = false,\r\n    _a[_DYN_ENABLE_AJAX_ERROR_ST5 /* @min:enableAjaxErrorStatusText */] = false,\r\n    _a[_DYN_ENABLE_AJAX_PERF_TRA6 /* @min:enableAjaxPerfTracking */] = false,\r\n    _a.maxAjaxPerfLookupAttempts = 3,\r\n    _a[_DYN_AJAX_PERF_LOOKUP_DEL10 /* @min:ajaxPerfLookupDelay */] = 25,\r\n    _a.ignoreHeaders = [\r\n        \"Authorization\",\r\n        \"X-API-Key\",\r\n        \"WWW-Authenticate\"\r\n    ],\r\n    _a[_DYN_ADD_REQUEST_CONTEXT /* @min:addRequestContext */] = undefined,\r\n    _a.addIntEndpoints = true,\r\n    _a));\r\nvar AjaxMonitor = /** @class */ (function (_super) {\r\n    __extends(AjaxMonitor, _super);\r\n    function AjaxMonitor() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = AjaxMonitor.identifier;\r\n        _this.priority = 120;\r\n        var _fetchInitialized; // fetch monitoring initialized\r\n        var _xhrInitialized; // XHR monitoring initialized\r\n        var _currentWindowHost;\r\n        var _extensionConfig;\r\n        var _enableRequestHeaderTracking;\r\n        var _enableAjaxErrorStatusText;\r\n        var _trackAjaxAttempts;\r\n        var _context;\r\n        var _isUsingW3CHeaders;\r\n        var _isUsingAIHeaders;\r\n        var _markPrefix;\r\n        var _enableAjaxPerfTracking;\r\n        var _maxAjaxCallsPerView;\r\n        var _enableResponseHeaderTracking;\r\n        var _disabledUrls;\r\n        var _disableAjaxTracking;\r\n        var _disableFetchTracking;\r\n        var _excludeRequestFromAutoTrackingPatterns;\r\n        var _addRequestContext;\r\n        var _evtNamespace;\r\n        var _ajaxDataId;\r\n        var _dependencyHandlerId;\r\n        var _dependencyListeners;\r\n        var _dependencyInitializers;\r\n        var _ignoreHeaders;\r\n        var _maxAjaxPerfLookupAttempts;\r\n        var _ajaxPerfLookupDelay;\r\n        var _distributedTracingMode;\r\n        var _appId;\r\n        var _polyfillInitialized;\r\n        dynamicProto(AjaxMonitor, _this, function (_self, _base) {\r\n            var _addHook = _base[_DYN__ADD_HOOK /* @min:%2e_addHook */];\r\n            _initDefaults();\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                if (!_self.isInitialized()) {\r\n                    _base.initialize(config, core, extensions, pluginChain);\r\n                    _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"ajax\"), core && core.evtNamespace && core.evtNamespace());\r\n                    _populateDefaults(config);\r\n                    _instrumentXhr();\r\n                    _instrumentFetch();\r\n                    _populateContext();\r\n                }\r\n            };\r\n            _self._doTeardown = function () {\r\n                _initDefaults();\r\n            };\r\n            _self.trackDependencyData = function (dependency, properties) {\r\n                _reportDependencyInternal(_dependencyInitializers, _self[_DYN_CORE /* @min:%2ecore */], null, dependency, properties);\r\n            };\r\n            _self[_DYN_INCLUDE_CORRELATION_2 /* @min:%2eincludeCorrelationHeaders */] = function (ajaxData, input, init, xhr) {\r\n                // Test Hook to allow the overriding of the location host\r\n                var currentWindowHost = _self[\"_currentWindowHost\"] || _currentWindowHost;\r\n                _processDependencyListeners(_dependencyListeners, _self[_DYN_CORE /* @min:%2ecore */], ajaxData, xhr, input, init);\r\n                if (input || input === \"\") { // Fetch\r\n                    if (correlationIdCanIncludeCorrelationHeader(_extensionConfig, ajaxData[_DYN_GET_ABSOLUTE_URL /* @min:%2egetAbsoluteUrl */](), currentWindowHost)) {\r\n                        if (!init) {\r\n                            init = {};\r\n                        }\r\n                        // init headers override original request headers\r\n                        // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                        // not using original request headers will result in them being lost\r\n                        var headers = new Headers(init[_DYN_HEADERS /* @min:%2eheaders */] || (input instanceof Request ? (input[_DYN_HEADERS /* @min:%2eheaders */] || {}) : {}));\r\n                        if (_isUsingAIHeaders) {\r\n                            var id = \"|\" + ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */] + \".\" + ajaxData[_DYN_SPAN_ID /* @min:%2espanID */];\r\n                            headers.set(RequestHeaders[3 /* eRequestHeaders.requestIdHeader */], id);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[3 /* eRequestHeaders.requestIdHeader */]] = id;\r\n                            }\r\n                        }\r\n                        var appId = _appId || (_context && _context.appId());\r\n                        if (appId) {\r\n                            headers.set(RequestHeaders[0 /* eRequestHeaders.requestContextHeader */], RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]] = RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId;\r\n                            }\r\n                        }\r\n                        if (_isUsingW3CHeaders) {\r\n                            var traceFlags = ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n                            if (isNullOrUndefined(traceFlags)) {\r\n                                traceFlags = 0x01;\r\n                            }\r\n                            var traceParent = formatTraceParent(createTraceParent(ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */], ajaxData[_DYN_SPAN_ID /* @min:%2espanID */], traceFlags));\r\n                            headers.set(RequestHeaders[4 /* eRequestHeaders.traceParentHeader */], traceParent);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[4 /* eRequestHeaders.traceParentHeader */]] = traceParent;\r\n                            }\r\n                        }\r\n                        init[_DYN_HEADERS /* @min:%2eheaders */] = headers;\r\n                    }\r\n                    return init;\r\n                }\r\n                else if (xhr) { // XHR\r\n                    if (correlationIdCanIncludeCorrelationHeader(_extensionConfig, ajaxData[_DYN_GET_ABSOLUTE_URL /* @min:%2egetAbsoluteUrl */](), currentWindowHost)) {\r\n                        if (_isUsingAIHeaders) {\r\n                            if (!_isHeaderSet(xhr, RequestHeaders[3 /* eRequestHeaders.requestIdHeader */])) {\r\n                                var id = \"|\" + ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */] + \".\" + ajaxData[_DYN_SPAN_ID /* @min:%2espanID */];\r\n                                xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](RequestHeaders[3 /* eRequestHeaders.requestIdHeader */], id);\r\n                                if (_enableRequestHeaderTracking) {\r\n                                    ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[3 /* eRequestHeaders.requestIdHeader */]] = id;\r\n                                }\r\n                            }\r\n                            else {\r\n                                _throwInternalWarning(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, \"Unable to set [\" + RequestHeaders[3 /* eRequestHeaders.requestIdHeader */] + \"] as it has already been set by another instance\");\r\n                            }\r\n                        }\r\n                        var appId = _appId || (_context && _context.appId());\r\n                        if (appId) {\r\n                            if (!_isHeaderSet(xhr, RequestHeaders[0 /* eRequestHeaders.requestContextHeader */])) {\r\n                                xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](RequestHeaders[0 /* eRequestHeaders.requestContextHeader */], RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId);\r\n                                if (_enableRequestHeaderTracking) {\r\n                                    ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]] = RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId;\r\n                                }\r\n                            }\r\n                            else {\r\n                                _throwInternalWarning(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, \"Unable to set [\" + RequestHeaders[0 /* eRequestHeaders.requestContextHeader */] + \"] as it has already been set by another instance\");\r\n                            }\r\n                        }\r\n                        if (_isUsingW3CHeaders) {\r\n                            var traceFlags = ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n                            if (isNullOrUndefined(traceFlags)) {\r\n                                traceFlags = 0x01;\r\n                            }\r\n                            if (!_isHeaderSet(xhr, RequestHeaders[4 /* eRequestHeaders.traceParentHeader */])) {\r\n                                var traceParent = formatTraceParent(createTraceParent(ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */], ajaxData[_DYN_SPAN_ID /* @min:%2espanID */], traceFlags));\r\n                                xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](RequestHeaders[4 /* eRequestHeaders.traceParentHeader */], traceParent);\r\n                                if (_enableRequestHeaderTracking) {\r\n                                    ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[4 /* eRequestHeaders.traceParentHeader */]] = traceParent;\r\n                                }\r\n                            }\r\n                            else {\r\n                                _throwInternalWarning(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, \"Unable to set [\" + RequestHeaders[4 /* eRequestHeaders.traceParentHeader */] + \"] as it has already been set by another instance\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return xhr;\r\n                }\r\n                return undefined;\r\n            };\r\n            _self[_DYN_TRACK_DEPENDENCY_DAT3 /* @min:%2etrackDependencyDataInternal */] = function (dependency, properties, systemProperties) {\r\n                if (_maxAjaxCallsPerView === -1 || _trackAjaxAttempts < _maxAjaxCallsPerView) {\r\n                    // Hack since expected format in w3c mode is |abc.def.\r\n                    // Non-w3c format is |abc.def\r\n                    // @todo Remove if better solution is available, e.g. handle in portal\r\n                    if ((_distributedTracingMode === 2 /* eDistributedTracingModes.W3C */\r\n                        || _distributedTracingMode === 1 /* eDistributedTracingModes.AI_AND_W3C */)\r\n                        && typeof dependency.id === \"string\" && dependency.id[dependency.id[_DYN_LENGTH /* @min:%2elength */] - 1] !== \".\") {\r\n                        dependency.id += \".\";\r\n                    }\r\n                    if (isNullOrUndefined(dependency[_DYN_START_TIME /* @min:%2estartTime */])) {\r\n                        dependency[_DYN_START_TIME /* @min:%2estartTime */] = new Date();\r\n                    }\r\n                    var item = createTelemetryItem(dependency, RemoteDependencyData.dataType, RemoteDependencyData.envelopeType, _self[strDiagLog](), properties, systemProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */].track(item);\r\n                }\r\n                else if (_trackAjaxAttempts === _maxAjaxCallsPerView) {\r\n                    _throwInternalCritical(_self, 55 /* _eInternalMessageId.MaxAjaxPerPVExceeded */, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n                }\r\n                ++_trackAjaxAttempts;\r\n            };\r\n            _self.addDependencyListener = function (dependencyListener) {\r\n                return _addHandler(_dependencyListeners, _dependencyHandlerId++, dependencyListener);\r\n            };\r\n            _self.addDependencyInitializer = function (dependencyInitializer) {\r\n                return _addHandler(_dependencyInitializers, _dependencyHandlerId++, dependencyInitializer);\r\n            };\r\n            function _initDefaults() {\r\n                var location = getLocation();\r\n                _fetchInitialized = false; // fetch monitoring initialized\r\n                _xhrInitialized = false; // XHR monitoring initialized\r\n                _polyfillInitialized = false; // polyfill monitoring initialized\r\n                _currentWindowHost = location && location.host && location.host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                _extensionConfig = null;\r\n                _enableRequestHeaderTracking = false;\r\n                _enableAjaxErrorStatusText = false;\r\n                _trackAjaxAttempts = 0;\r\n                _context = null;\r\n                _isUsingW3CHeaders = false;\r\n                _isUsingAIHeaders = false;\r\n                _markPrefix = null;\r\n                _enableAjaxPerfTracking = false;\r\n                _maxAjaxCallsPerView = 0;\r\n                _enableResponseHeaderTracking = false;\r\n                _disabledUrls = {};\r\n                _disableAjaxTracking = false;\r\n                _disableFetchTracking = false;\r\n                _excludeRequestFromAutoTrackingPatterns = null;\r\n                _addRequestContext = null;\r\n                _evtNamespace = null;\r\n                _dependencyHandlerId = 0;\r\n                _dependencyListeners = [];\r\n                _dependencyInitializers = [];\r\n                _ajaxDataId = createUniqueNamespace(\"ajaxData\");\r\n                _self._ajaxDataId = _ajaxDataId;\r\n                _ignoreHeaders = null;\r\n                _maxAjaxPerfLookupAttempts = 1;\r\n                _ajaxPerfLookupDelay = 1;\r\n                _distributedTracingMode = 1 /* eDistributedTracingModes.AI_AND_W3C */;\r\n                _appId = null;\r\n            }\r\n            function _populateDefaults(config) {\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    var ctx = createProcessTelemetryContext(null, config, _self[_DYN_CORE /* @min:%2ecore */]);\r\n                    _extensionConfig = ctx.getExtCfg(AjaxMonitor.identifier, _defaultConfig);\r\n                    _distributedTracingMode = _extensionConfig.distributedTracingMode;\r\n                    _enableRequestHeaderTracking = _extensionConfig[_DYN_ENABLE_REQUEST_HEADE4 /* @min:%2eenableRequestHeaderTracking */];\r\n                    _enableAjaxErrorStatusText = _extensionConfig[_DYN_ENABLE_AJAX_ERROR_ST5 /* @min:%2eenableAjaxErrorStatusText */];\r\n                    _enableAjaxPerfTracking = _extensionConfig[_DYN_ENABLE_AJAX_PERF_TRA6 /* @min:%2eenableAjaxPerfTracking */];\r\n                    _maxAjaxCallsPerView = _extensionConfig[_DYN_MAX_AJAX_CALLS_PER_V7 /* @min:%2emaxAjaxCallsPerView */];\r\n                    _excludeRequestFromAutoTrackingPatterns = [].concat(_extensionConfig[_DYN_EXCLUDE_REQUEST_FROM8 /* @min:%2eexcludeRequestFromAutoTrackingPatterns */] || [], _extensionConfig.addIntEndpoints !== false ? _internalExcludeEndpoints : []);\r\n                    _addRequestContext = _extensionConfig[_DYN_ADD_REQUEST_CONTEXT /* @min:%2eaddRequestContext */];\r\n                    _isUsingAIHeaders = _distributedTracingMode === 0 /* eDistributedTracingModes.AI */ || _distributedTracingMode === 1 /* eDistributedTracingModes.AI_AND_W3C */;\r\n                    _isUsingW3CHeaders = _distributedTracingMode === 1 /* eDistributedTracingModes.AI_AND_W3C */ || _distributedTracingMode === 2 /* eDistributedTracingModes.W3C */;\r\n                    if (_enableAjaxPerfTracking) {\r\n                        _markPrefix = _ajaxDataId;\r\n                    }\r\n                    _disableAjaxTracking = !!_extensionConfig[_DYN_DISABLE_AJAX_TRACKIN9 /* @min:%2edisableAjaxTracking */];\r\n                    _maxAjaxPerfLookupAttempts = _extensionConfig.maxAjaxPerfLookupAttempts;\r\n                    _ajaxPerfLookupDelay = _extensionConfig[_DYN_AJAX_PERF_LOOKUP_DEL10 /* @min:%2eajaxPerfLookupDelay */];\r\n                    _ignoreHeaders = _extensionConfig.ignoreHeaders;\r\n                    _appId = _extensionConfig.appId;\r\n                }));\r\n            }\r\n            function _populateContext() {\r\n                var propExt = _self[_DYN_CORE /* @min:%2ecore */].getPlugin(PropertiesPluginIdentifier);\r\n                if (propExt) {\r\n                    _context = propExt.plugin[_DYN_CONTEXT /* @min:%2econtext */]; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n            // discard the header if it's defined as ignoreHeaders in ICorrelationConfig\r\n            function _canIncludeHeaders(header) {\r\n                var rlt = true;\r\n                if (header || _ignoreHeaders) {\r\n                    arrForEach(_ignoreHeaders, (function (key) {\r\n                        if (key[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === header[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) {\r\n                            rlt = false;\r\n                            return -1;\r\n                        }\r\n                    }));\r\n                }\r\n                return rlt;\r\n            }\r\n            // Fetch Stuff\r\n            function _instrumentFetch() {\r\n                var fetch = _supportsFetch();\r\n                if (!fetch) {\r\n                    return;\r\n                }\r\n                var global = getGlobal();\r\n                var isPolyfill = fetch.polyfill;\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extensionConfig, function () {\r\n                    _disableFetchTracking = !!_extensionConfig[_DYN_DISABLE_FETCH_TRACKI11 /* @min:%2edisableFetchTracking */];\r\n                    _enableResponseHeaderTracking = _extensionConfig[_DYN_ENABLE_RESPONSE_HEAD12 /* @min:%2eenableResponseHeaderTracking */];\r\n                    if (!_disableFetchTracking && !_fetchInitialized) {\r\n                        _addHook(InstrumentFunc(global, STR_FETCH, {\r\n                            ns: _evtNamespace,\r\n                            // Add request hook\r\n                            req: function (callDetails, input, init) {\r\n                                var fetchData;\r\n                                if (!_disableFetchTracking && _fetchInitialized &&\r\n                                    !_isDisabledRequest(null, input, init) &&\r\n                                    // If we have a polyfil and XHR instrumented then let XHR report otherwise we get duplicates\r\n                                    !(isPolyfill && _xhrInitialized)) {\r\n                                    var ctx = callDetails.ctx();\r\n                                    fetchData = _createFetchRecord(input, init);\r\n                                    var newInit = _self[_DYN_INCLUDE_CORRELATION_2 /* @min:%2eincludeCorrelationHeaders */](fetchData, input, init);\r\n                                    if (newInit !== init) {\r\n                                        callDetails.set(1, newInit);\r\n                                    }\r\n                                    ctx.data = fetchData;\r\n                                }\r\n                            },\r\n                            rsp: function (callDetails, input) {\r\n                                if (!_disableFetchTracking) {\r\n                                    var fetchData_1 = callDetails.ctx().data;\r\n                                    if (fetchData_1) {\r\n                                        // Replace the result with the new promise from this code\r\n                                        callDetails.rslt = callDetails.rslt.then(function (response) {\r\n                                            _reportFetchMetrics(callDetails, (response || {})[_DYN_STATUS /* @min:%2estatus */], input, response, fetchData_1, function () {\r\n                                                var _a;\r\n                                                var ajaxResponse = (_a = {\r\n                                                        statusText: (response || {})[_DYN_STATUS_TEXT /* @min:%2estatusText */]\r\n                                                    },\r\n                                                    _a[_DYN_HEADER_MAP /* @min:headerMap */] = null,\r\n                                                    _a[_DYN_CORRELATION_CONTEXT /* @min:correlationContext */] = _getFetchCorrelationContext(response),\r\n                                                    _a);\r\n                                                if (_enableResponseHeaderTracking && response) {\r\n                                                    var responseHeaderMap_1 = {};\r\n                                                    response.headers.forEach(function (value, name) {\r\n                                                        if (_canIncludeHeaders(name)) {\r\n                                                            responseHeaderMap_1[name] = value;\r\n                                                        }\r\n                                                    });\r\n                                                    ajaxResponse[_DYN_HEADER_MAP /* @min:%2eheaderMap */] = responseHeaderMap_1;\r\n                                                }\r\n                                                return ajaxResponse;\r\n                                            });\r\n                                            return response;\r\n                                        })\r\n                                            .catch(function (reason) {\r\n                                            _reportFetchMetrics(callDetails, 0, input, null, fetchData_1, null, { error: reason.message || dumpObj(reason) });\r\n                                            throw reason;\r\n                                        });\r\n                                    }\r\n                                }\r\n                            },\r\n                            // Create an error callback to report any hook errors\r\n                            hkErr: _createErrorCallbackFunc(_self, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, \"Failed to monitor Window.fetch\" + ERROR_POSTFIX)\r\n                        }, true, isWebWorker()));\r\n                        _fetchInitialized = true;\r\n                    }\r\n                    else if (isPolyfill && !_polyfillInitialized) {\r\n                        // If fetch is a polyfill we need to capture the request to ensure that we correctly track\r\n                        // disabled request URLS (i.e. internal urls) to ensure we don't end up in a constant loop\r\n                        // of reporting ourselves, for example React Native uses a polyfill for fetch\r\n                        // Note: Polyfill implementations that don't support the \"polyfill\" tag are not supported\r\n                        // the workaround is to add a polyfill property to your fetch implementation before initializing\r\n                        // App Insights\r\n                        _addHook(InstrumentFunc(global, STR_FETCH, {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, input, init) {\r\n                                // Just call so that we record any disabled URL\r\n                                _isDisabledRequest(null, input, init);\r\n                            }\r\n                        }));\r\n                        _polyfillInitialized = true;\r\n                    }\r\n                }));\r\n                if (isPolyfill) {\r\n                    // retag the instrumented fetch with the same polyfill settings this is mostly for testing\r\n                    // But also supports multiple App Insights usages\r\n                    global[STR_FETCH].polyfill = isPolyfill;\r\n                }\r\n            }\r\n            function _hookProto(target, funcName, callbacks) {\r\n                _addHook(InstrumentProto(target, funcName, callbacks));\r\n            }\r\n            function _instrumentXhr() {\r\n                if (!_supportsAjaxMonitoring(_self, _ajaxDataId)) {\r\n                    return;\r\n                }\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extensionConfig, function () {\r\n                    _disableAjaxTracking = !!_extensionConfig[_DYN_DISABLE_AJAX_TRACKIN9 /* @min:%2edisableAjaxTracking */];\r\n                    _enableRequestHeaderTracking = _extensionConfig[_DYN_ENABLE_REQUEST_HEADE4 /* @min:%2eenableRequestHeaderTracking */];\r\n                    if (!_disableAjaxTracking && !_xhrInitialized) {\r\n                        // Instrument open\r\n                        _hookProto(XMLHttpRequest, \"open\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, method, url, async) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (!_isDisabledRequest(xhr, url) && _isMonitoredXhrInstance(xhr, ajaxData, true)) {\r\n                                        if (!ajaxData || !ajaxData.xhrMonitoringState[_DYN_OPEN_DONE /* @min:%2eopenDone */]) {\r\n                                            // Only create a single ajaxData (even when multiple AI instances are running)\r\n                                            ajaxData = _openHandler(xhr, method, url, async);\r\n                                        }\r\n                                        // always attach to the on ready state change (required for handling multiple instances)\r\n                                        _attachToOnReadyStateChange(xhr, ajaxData);\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, ERROR_HEADER + \".open\" + ERROR_POSTFIX)\r\n                        });\r\n                        // Instrument send\r\n                        _hookProto(XMLHttpRequest, \"send\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, context) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (_isMonitoredXhrInstance(xhr, ajaxData) && !ajaxData.xhrMonitoringState[_DYN_SEND_DONE /* @min:%2esendDone */]) {\r\n                                        _createMarkId(\"xhr\", ajaxData);\r\n                                        ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */] = dateTimeUtilsNow();\r\n                                        _self[_DYN_INCLUDE_CORRELATION_2 /* @min:%2eincludeCorrelationHeaders */](ajaxData, undefined, undefined, xhr);\r\n                                        ajaxData.xhrMonitoringState[_DYN_SEND_DONE /* @min:%2esendDone */] = true;\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 17 /* _eInternalMessageId.FailedMonitorAjaxSend */, ERROR_HEADER + ERROR_POSTFIX)\r\n                        });\r\n                        // Instrument abort\r\n                        _hookProto(XMLHttpRequest, \"abort\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (_isMonitoredXhrInstance(xhr, ajaxData) && !ajaxData.xhrMonitoringState[_DYN_ABORT_DONE /* @min:%2eabortDone */]) {\r\n                                        ajaxData[_DYN_ABORTED /* @min:%2eaborted */] = 1;\r\n                                        ajaxData.xhrMonitoringState[_DYN_ABORT_DONE /* @min:%2eabortDone */] = true;\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 13 /* _eInternalMessageId.FailedMonitorAjaxAbort */, ERROR_HEADER + \".abort\" + ERROR_POSTFIX)\r\n                        });\r\n                        // Instrument setRequestHeader\r\n                        _hookProto(XMLHttpRequest, \"setRequestHeader\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, header, value) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (ajaxData && _isMonitoredXhrInstance(xhr, ajaxData)) {\r\n                                        _addSharedXhrHeaders(xhr, header, value);\r\n                                        if (_enableRequestHeaderTracking && _canIncludeHeaders(header)) {\r\n                                            if (ajaxData) {\r\n                                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][header] = value;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, ERROR_HEADER + \".setRequestHeader\" + ERROR_POSTFIX)\r\n                        });\r\n                        _xhrInitialized = true;\r\n                    }\r\n                }));\r\n            }\r\n            function _isDisabledRequest(xhr, request, init) {\r\n                var isDisabled = false;\r\n                var theUrl = ((!isString(request) ? (request || {}).url || \"\" : request) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                // check excludeRequestFromAutoTrackingPatterns before stripping off any query string\r\n                arrForEach(_excludeRequestFromAutoTrackingPatterns, function (regex) {\r\n                    var theRegex = regex;\r\n                    if (isString(regex)) {\r\n                        theRegex = new RegExp(regex);\r\n                    }\r\n                    if (!isDisabled) {\r\n                        isDisabled = theRegex.test(theUrl);\r\n                    }\r\n                });\r\n                // if request url matches with exclude regex pattern, return true and no need to check for headers\r\n                if (isDisabled) {\r\n                    return isDisabled;\r\n                }\r\n                var idx = _indexOf(theUrl, \"?\");\r\n                var idx2 = _indexOf(theUrl, \"#\");\r\n                if (idx === -1 || (idx2 !== -1 && idx2 < idx)) {\r\n                    idx = idx2;\r\n                }\r\n                if (idx !== -1) {\r\n                    // Strip off any Query string\r\n                    theUrl = theUrl.substring(0, idx);\r\n                }\r\n                // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n                if (!isNullOrUndefined(xhr)) {\r\n                    // Look on the XMLHttpRequest of the URL string value\r\n                    isDisabled = xhr[DisabledPropertyName] === true || theUrl[DisabledPropertyName] === true;\r\n                }\r\n                else if (!isNullOrUndefined(request)) { // fetch\r\n                    // Look for DisabledPropertyName in either Request or RequestInit\r\n                    isDisabled = (typeof request === \"object\" ? request[DisabledPropertyName] === true : false) ||\r\n                        (init ? init[DisabledPropertyName] === true : false);\r\n                }\r\n                // Also add extra check just in case the XHR or fetch objects where not decorated with the DisableProperty due to sealing or freezing\r\n                if (!isDisabled && theUrl && isInternalApplicationInsightsEndpoint(theUrl)) {\r\n                    isDisabled = true;\r\n                }\r\n                if (isDisabled) {\r\n                    // Add the disabled url if not present\r\n                    if (!_disabledUrls[theUrl]) {\r\n                        _disabledUrls[theUrl] = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    // Check to see if the url is listed as disabled\r\n                    if (_disabledUrls[theUrl]) {\r\n                        isDisabled = true;\r\n                    }\r\n                }\r\n                return isDisabled;\r\n            }\r\n            /// <summary>Verifies that particular instance of XMLHttpRequest needs to be monitored</summary>\r\n            /// <param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n            /// <returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n            function _isMonitoredXhrInstance(xhr, ajaxData, excludeAjaxDataValidation) {\r\n                var ajaxValidation = true;\r\n                var initialized = _xhrInitialized;\r\n                if (!isNullOrUndefined(xhr)) {\r\n                    ajaxValidation = excludeAjaxDataValidation === true || !isNullOrUndefined(ajaxData);\r\n                }\r\n                // checking to see that all interested functions on xhr were instrumented\r\n                return initialized\r\n                    // checking on ajaxData to see that it was not removed in user code\r\n                    && ajaxValidation;\r\n            }\r\n            function _getDistributedTraceCtx() {\r\n                var distributedTraceCtx = null;\r\n                if (_self[_DYN_CORE /* @min:%2ecore */] && _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx) {\r\n                    distributedTraceCtx = _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx(false);\r\n                }\r\n                // Fall back\r\n                if (!distributedTraceCtx && _context && _context.telemetryTrace) {\r\n                    distributedTraceCtx = createDistributedTraceContextFromTrace(_context.telemetryTrace);\r\n                }\r\n                return distributedTraceCtx;\r\n            }\r\n            function _openHandler(xhr, method, url, async) {\r\n                var _a;\r\n                var distributedTraceCtx = _getDistributedTraceCtx();\r\n                var traceID = (distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_ID /* @min:%2egetTraceId */]()) || generateW3CId();\r\n                var spanID = strSubstr(generateW3CId(), 0, 16);\r\n                var xhrRequestData = xhr[AJAX_DATA_CONTAINER] = (xhr[AJAX_DATA_CONTAINER] || { xh: [], i: {} });\r\n                var ajaxDataCntr = xhrRequestData.i = (xhrRequestData.i || {});\r\n                var ajaxData = ajaxDataCntr[_ajaxDataId] = (ajaxDataCntr[_ajaxDataId] || new ajaxRecord(traceID, spanID, _self[strDiagLog](), (_a = _self.core) === null || _a === void 0 ? void 0 : _a.getTraceCtx()));\r\n                ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_FLAGS /* @min:%2egetTraceFlags */]();\r\n                ajaxData[_DYN_METHOD /* @min:%2emethod */] = method;\r\n                ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] = url;\r\n                ajaxData.xhrMonitoringState[_DYN_OPEN_DONE /* @min:%2eopenDone */] = true;\r\n                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = {};\r\n                ajaxData.async = async;\r\n                ajaxData[_DYN_ERROR_STATUS_TEXT /* @min:%2eerrorStatusText */] = _enableAjaxErrorStatusText;\r\n                return ajaxData;\r\n            }\r\n            function _attachToOnReadyStateChange(xhr, ajaxData) {\r\n                ajaxData.xhrMonitoringState[_DYN_STATE_CHANGE_ATTACHE13 /* @min:%2estateChangeAttached */] = eventOn(xhr, \"readystatechange\", function () {\r\n                    var _a;\r\n                    try {\r\n                        if (xhr && xhr.readyState === 4 && _isMonitoredXhrInstance(xhr, ajaxData)) {\r\n                            _onAjaxComplete(xhr);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        var exceptionText = dumpObj(e);\r\n                        // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                        if (!exceptionText || _indexOf(exceptionText[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](), \"c00c023f\") === -1) {\r\n                            _throwInternalCritical(_self, 16 /* _eInternalMessageId.FailedMonitorAjaxRSC */, ERROR_HEADER + \" 'readystatechange' event handler\" + ERROR_POSTFIX, (_a = {},\r\n                                _a[_DYN_AJAX_DIAGNOSTICS_MES16 /* @min:ajaxDiagnosticsMessage */] = _getFailedAjaxDiagnosticsMessage(xhr, _ajaxDataId),\r\n                                _a[_DYN_EXCEPTION /* @min:exception */] = exceptionText,\r\n                                _a));\r\n                        }\r\n                    }\r\n                }, _evtNamespace);\r\n            }\r\n            function _getResponseText(xhr) {\r\n                try {\r\n                    var responseType = xhr.responseType;\r\n                    if (responseType === \"\" || responseType === \"text\") {\r\n                        // As per the specification responseText is only valid if the type is an empty string or \"text\"\r\n                        return xhr[_DYN_RESPONSE_TEXT /* @min:%2eresponseText */];\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // This shouldn't happen because of the above check -- but just in case, so just ignore\r\n                }\r\n                return null;\r\n            }\r\n            function _onAjaxComplete(xhr) {\r\n                var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */] = dateTimeUtilsNow();\r\n                ajaxData[_DYN_STATUS /* @min:%2estatus */] = xhr[_DYN_STATUS /* @min:%2estatus */];\r\n                function _reportXhrError(e, failedProps) {\r\n                    var errorProps = failedProps || {};\r\n                    errorProps[\"ajaxDiagnosticsMessage\"] = _getFailedAjaxDiagnosticsMessage(xhr, _ajaxDataId);\r\n                    if (e) {\r\n                        errorProps[\"exception\"] = dumpObj(e);\r\n                    }\r\n                    _throwInternalWarning(_self, 14 /* _eInternalMessageId.FailedMonitorAjaxDur */, FAILED_TO_CALCULATE_DURATION_ERROR + \"ajax call\" + ERROR_NOT_SENT, errorProps);\r\n                }\r\n                _findPerfResourceEntry(\"xmlhttprequest\", ajaxData, function () {\r\n                    try {\r\n                        var dependency = ajaxData[_DYN__CREATE_TRACK_ITEM /* @min:%2eCreateTrackItem */](\"Ajax\", _enableRequestHeaderTracking, function () {\r\n                            var _a;\r\n                            var ajaxResponse = (_a = {\r\n                                    statusText: xhr[_DYN_STATUS_TEXT /* @min:%2estatusText */]\r\n                                },\r\n                                _a[_DYN_HEADER_MAP /* @min:headerMap */] = null,\r\n                                _a[_DYN_CORRELATION_CONTEXT /* @min:correlationContext */] = _getAjaxCorrelationContext(xhr),\r\n                                _a.type = xhr.responseType,\r\n                                _a[_DYN_RESPONSE_TEXT /* @min:responseText */] = _getResponseText(xhr),\r\n                                _a.response = xhr[_DYN_RESPONSE /* @min:%2eresponse */],\r\n                                _a);\r\n                            if (_enableResponseHeaderTracking) {\r\n                                var headers = xhr[_DYN_GET_ALL_RESPONSE_HEA15 /* @min:%2egetAllResponseHeaders */]();\r\n                                if (headers) {\r\n                                    // xhr.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string or null\r\n                                    // the regex converts the header string into an array of individual headers\r\n                                    var arr = strTrim(headers).split(/[\\r\\n]+/);\r\n                                    var responseHeaderMap_2 = {};\r\n                                    arrForEach(arr, function (line) {\r\n                                        var parts = line.split(\": \");\r\n                                        var header = parts.shift();\r\n                                        var value = parts.join(\": \");\r\n                                        if (_canIncludeHeaders(header)) {\r\n                                            responseHeaderMap_2[header] = value;\r\n                                        }\r\n                                    });\r\n                                    ajaxResponse[_DYN_HEADER_MAP /* @min:%2eheaderMap */] = responseHeaderMap_2;\r\n                                }\r\n                            }\r\n                            return ajaxResponse;\r\n                        });\r\n                        var properties = void 0;\r\n                        try {\r\n                            if (!!_addRequestContext) {\r\n                                properties = _addRequestContext({ status: xhr[_DYN_STATUS /* @min:%2estatus */], xhr: xhr });\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternalWarning(_self, 104 /* _eInternalMessageId.FailedAddingCustomDefinedRequestContext */, CUSTOM_REQUEST_CONTEXT_ERROR);\r\n                        }\r\n                        if (dependency) {\r\n                            if (properties !== undefined) {\r\n                                dependency[STR_PROPERTIES /* @min:%2eproperties */] = __assign(__assign({}, dependency.properties), properties);\r\n                            }\r\n                            var sysProperties = ajaxData[_DYN_GET_PART_APROPS /* @min:%2egetPartAProps */]();\r\n                            _reportDependencyInternal(_dependencyInitializers, _self[_DYN_CORE /* @min:%2ecore */], ajaxData, dependency, null, sysProperties);\r\n                        }\r\n                        else {\r\n                            _reportXhrError(null, {\r\n                                requestSentTime: ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */],\r\n                                responseFinishedTime: ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */]\r\n                            });\r\n                        }\r\n                    }\r\n                    finally {\r\n                        // cleanup telemetry data\r\n                        try {\r\n                            var xhrRequestData = (xhr[AJAX_DATA_CONTAINER] || { i: {} });\r\n                            var ajaxDataCntr = (xhrRequestData.i || {});\r\n                            if (ajaxDataCntr[_ajaxDataId]) {\r\n                                ajaxDataCntr[_ajaxDataId] = null;\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // May throw in environments that prevent extension or freeze xhr\r\n                        }\r\n                    }\r\n                }, function (e) {\r\n                    _reportXhrError(e, null);\r\n                });\r\n            }\r\n            function _getAjaxCorrelationContext(xhr) {\r\n                var _a;\r\n                try {\r\n                    var responseHeadersString = xhr[_DYN_GET_ALL_RESPONSE_HEA15 /* @min:%2egetAllResponseHeaders */]();\r\n                    if (responseHeadersString !== null) {\r\n                        var index = _indexOf(responseHeadersString[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](), RequestHeaders[8 /* eRequestHeaders.requestContextHeaderLowerCase */]);\r\n                        if (index !== -1) {\r\n                            var responseHeader = xhr.getResponseHeader(RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]);\r\n                            return correlationIdGetCorrelationContext(responseHeader);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternalWarning(_self, 18 /* _eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader */, CORRELATION_HEADER_ERROR, (_a = {},\r\n                        _a[_DYN_AJAX_DIAGNOSTICS_MES16 /* @min:ajaxDiagnosticsMessage */] = _getFailedAjaxDiagnosticsMessage(xhr, _ajaxDataId),\r\n                        _a[_DYN_EXCEPTION /* @min:exception */] = dumpObj(e),\r\n                        _a));\r\n                }\r\n            }\r\n            function _createMarkId(type, ajaxData) {\r\n                if (ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] && _markPrefix && _enableAjaxPerfTracking) {\r\n                    var performance_1 = getPerformance();\r\n                    if (performance_1 && isFunction(performance_1.mark)) {\r\n                        _markCount++;\r\n                        var markId = _markPrefix + type + \"#\" + _markCount;\r\n                        performance_1.mark(markId);\r\n                        var entries = performance_1.getEntriesByName(markId);\r\n                        if (entries && entries[_DYN_LENGTH /* @min:%2elength */] === 1) {\r\n                            ajaxData[_DYN_PERF_MARK /* @min:%2eperfMark */] = entries[0];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _findPerfResourceEntry(initiatorType, ajaxData, trackCallback, reportError) {\r\n                var perfMark = ajaxData[_DYN_PERF_MARK /* @min:%2eperfMark */];\r\n                var performance = getPerformance();\r\n                var maxAttempts = _maxAjaxPerfLookupAttempts;\r\n                var retryDelay = _ajaxPerfLookupDelay;\r\n                var requestUrl = ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */];\r\n                var attempt = 0;\r\n                (function locateResourceTiming() {\r\n                    try {\r\n                        if (performance && perfMark) {\r\n                            attempt++;\r\n                            var perfTiming = null;\r\n                            var entries = performance.getEntries();\r\n                            for (var lp = entries[_DYN_LENGTH /* @min:%2elength */] - 1; lp >= 0; lp--) {\r\n                                var entry = entries[lp];\r\n                                if (entry) {\r\n                                    if (entry.entryType === \"resource\") {\r\n                                        if (entry.initiatorType === initiatorType &&\r\n                                            (_indexOf(entry[_DYN_NAME /* @min:%2ename */], requestUrl) !== -1 || _indexOf(requestUrl, entry[_DYN_NAME /* @min:%2ename */]) !== -1)) {\r\n                                            perfTiming = entry;\r\n                                        }\r\n                                    }\r\n                                    else if (entry.entryType === \"mark\" && entry[_DYN_NAME /* @min:%2ename */] === perfMark[_DYN_NAME /* @min:%2ename */]) {\r\n                                        // We hit the start event\r\n                                        ajaxData[_DYN_PERF_TIMING /* @min:%2eperfTiming */] = perfTiming;\r\n                                        break;\r\n                                    }\r\n                                    if (entry[_DYN_START_TIME /* @min:%2estartTime */] < perfMark[_DYN_START_TIME /* @min:%2estartTime */] - 1000) {\r\n                                        // Fallback to try and reduce the time spent looking for the perf entry\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!perfMark || // - we don't have a perfMark or\r\n                            ajaxData[_DYN_PERF_TIMING /* @min:%2eperfTiming */] || // - we have not found the perf entry or\r\n                            attempt >= maxAttempts || // - we have tried too many attempts or\r\n                            ajaxData.async === false) { // - this is a sync request\r\n                            if (perfMark && isFunction(performance.clearMarks)) {\r\n                                // Remove the mark so we don't fill up the performance resources too much\r\n                                performance.clearMarks(perfMark[_DYN_NAME /* @min:%2ename */]);\r\n                            }\r\n                            ajaxData.perfAttempts = attempt;\r\n                            // just continue and report the track event\r\n                            trackCallback();\r\n                        }\r\n                        else {\r\n                            // We need to wait for the browser to populate the window.performance entry\r\n                            // This needs to be at least 1ms as waiting <= 1 (on firefox) is not enough time for fetch or xhr,\r\n                            // this is a scheduling issue for the browser implementation\r\n                            scheduleTimeout(locateResourceTiming, retryDelay);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reportError(e);\r\n                    }\r\n                })();\r\n            }\r\n            function _createFetchRecord(input, init) {\r\n                var _a;\r\n                var distributedTraceCtx = _getDistributedTraceCtx();\r\n                var traceID = (distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_ID /* @min:%2egetTraceId */]()) || generateW3CId();\r\n                var spanID = strSubstr(generateW3CId(), 0, 16);\r\n                var ajaxData = new ajaxRecord(traceID, spanID, _self[strDiagLog](), (_a = _self.core) === null || _a === void 0 ? void 0 : _a.getTraceCtx());\r\n                ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_FLAGS /* @min:%2egetTraceFlags */]();\r\n                ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */] = dateTimeUtilsNow();\r\n                ajaxData[_DYN_ERROR_STATUS_TEXT /* @min:%2eerrorStatusText */] = _enableAjaxErrorStatusText;\r\n                var requestUrl;\r\n                if (input instanceof Request) {\r\n                    requestUrl = (input || {}).url || \"\";\r\n                }\r\n                else {\r\n                    requestUrl = input;\r\n                }\r\n                if (requestUrl === \"\") {\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1.href) {\r\n                        requestUrl = strSplit(location_1.href, \"#\")[0];\r\n                    }\r\n                }\r\n                ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] = requestUrl;\r\n                var method = \"GET\";\r\n                if (init && init[_DYN_METHOD /* @min:%2emethod */]) {\r\n                    method = init[_DYN_METHOD /* @min:%2emethod */];\r\n                }\r\n                else if (input && input instanceof Request) {\r\n                    method = input[_DYN_METHOD /* @min:%2emethod */];\r\n                }\r\n                ajaxData[_DYN_METHOD /* @min:%2emethod */] = method;\r\n                var requestHeaders = {};\r\n                if (_enableRequestHeaderTracking) {\r\n                    var headers = new Headers((init ? init[_DYN_HEADERS /* @min:%2eheaders */] : 0) || (input instanceof Request ? (input[_DYN_HEADERS /* @min:%2eheaders */] || {}) : {}));\r\n                    headers.forEach(function (value, key) {\r\n                        if (_canIncludeHeaders(key)) {\r\n                            requestHeaders[key] = value;\r\n                        }\r\n                    });\r\n                }\r\n                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = requestHeaders;\r\n                _createMarkId(STR_FETCH, ajaxData);\r\n                return ajaxData;\r\n            }\r\n            function _getFailedFetchDiagnosticsMessage(input) {\r\n                var result = \"\";\r\n                try {\r\n                    if (!isNullOrUndefined(input)) {\r\n                        if (typeof (input) === \"string\") {\r\n                            result += \"(url: '\".concat(input, \"')\");\r\n                        }\r\n                        else {\r\n                            result += \"(url: '\".concat(input.url, \"')\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternalCritical(_self, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, \"Failed to grab failed fetch diagnostics message\", { exception: dumpObj(e) });\r\n                }\r\n                return result;\r\n            }\r\n            function _reportFetchMetrics(callDetails, status, input, response, ajaxData, getResponse, properties) {\r\n                if (!ajaxData) {\r\n                    return;\r\n                }\r\n                function _reportFetchError(msgId, e, failedProps) {\r\n                    var errorProps = failedProps || {};\r\n                    errorProps[\"fetchDiagnosticsMessage\"] = _getFailedFetchDiagnosticsMessage(input);\r\n                    if (e) {\r\n                        errorProps[\"exception\"] = dumpObj(e);\r\n                    }\r\n                    _throwInternalWarning(_self, msgId, FAILED_TO_CALCULATE_DURATION_ERROR + \"fetch call\" + ERROR_NOT_SENT, errorProps);\r\n                }\r\n                ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */] = dateTimeUtilsNow();\r\n                ajaxData[_DYN_STATUS /* @min:%2estatus */] = status;\r\n                _findPerfResourceEntry(STR_FETCH, ajaxData, function () {\r\n                    var dependency = ajaxData[_DYN__CREATE_TRACK_ITEM /* @min:%2eCreateTrackItem */](\"Fetch\", _enableRequestHeaderTracking, getResponse);\r\n                    var properties;\r\n                    try {\r\n                        if (!!_addRequestContext) {\r\n                            properties = _addRequestContext({ status: status, request: input, response: response });\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternalWarning(_self, 104 /* _eInternalMessageId.FailedAddingCustomDefinedRequestContext */, CUSTOM_REQUEST_CONTEXT_ERROR);\r\n                    }\r\n                    if (dependency) {\r\n                        if (properties !== undefined) {\r\n                            dependency[STR_PROPERTIES /* @min:%2eproperties */] = __assign(__assign({}, dependency.properties), properties);\r\n                        }\r\n                        var sysProperties = ajaxData[_DYN_GET_PART_APROPS /* @min:%2egetPartAProps */]();\r\n                        _reportDependencyInternal(_dependencyInitializers, _self[_DYN_CORE /* @min:%2ecore */], ajaxData, dependency, null, sysProperties);\r\n                    }\r\n                    else {\r\n                        _reportFetchError(14 /* _eInternalMessageId.FailedMonitorAjaxDur */, null, {\r\n                            requestSentTime: ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */],\r\n                            responseFinishedTime: ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */]\r\n                        });\r\n                    }\r\n                }, function (e) {\r\n                    _reportFetchError(18 /* _eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader */, e, null);\r\n                });\r\n            }\r\n            function _getFetchCorrelationContext(response) {\r\n                var _a;\r\n                if (response && response[_DYN_HEADERS /* @min:%2eheaders */]) {\r\n                    try {\r\n                        var responseHeader = response[_DYN_HEADERS /* @min:%2eheaders */].get(RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]);\r\n                        return correlationIdGetCorrelationContext(responseHeader);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternalWarning(_self, 18 /* _eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader */, CORRELATION_HEADER_ERROR, (_a = {\r\n                                fetchDiagnosticsMessage: _getFailedFetchDiagnosticsMessage(response)\r\n                            },\r\n                            _a[_DYN_EXCEPTION /* @min:exception */] = dumpObj(e),\r\n                            _a));\r\n                    }\r\n                }\r\n            }\r\n            function _reportDependencyInternal(initializers, core, ajaxData, dependency, properties, systemProperties) {\r\n                var _a;\r\n                var result = true;\r\n                var initializersCount = initializers[_DYN_LENGTH /* @min:%2elength */];\r\n                if (initializersCount > 0) {\r\n                    var details = (_a = {\r\n                            item: dependency\r\n                        },\r\n                        _a[STR_PROPERTIES /* @min:properties */] = properties,\r\n                        _a.sysProperties = systemProperties,\r\n                        _a.context = ajaxData ? ajaxData[_DYN_CONTEXT /* @min:%2econtext */] : null,\r\n                        _a.aborted = ajaxData ? !!ajaxData[_DYN_ABORTED /* @min:%2eaborted */] : false,\r\n                        _a);\r\n                    result = _processDependencyContainer(core, initializers, details, \"initializer\");\r\n                }\r\n                if (result) {\r\n                    _self[_DYN_TRACK_DEPENDENCY_DAT3 /* @min:%2etrackDependencyDataInternal */](dependency, properties, systemProperties);\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AjaxMonitor.prototype.initialize.\r\n    AjaxMonitor.prototype.processTelemetry = function (item, itemCtx) {\r\n        this.processNext(item, itemCtx);\r\n    };\r\n// Removed Stub for AjaxMonitor.prototype.trackDependencyData.\r\n// Removed Stub for AjaxMonitor.prototype.includeCorrelationHeaders.\r\n// Removed Stub for AjaxMonitor.prototype.addDependencyListener.\r\n    /**\r\n     * Add an dependency telemetry initializer callback function to allow populating additional properties or drop the request.\r\n     * It is called after the dependency call has completed and any available performance details are available. A dependency\r\n     * initializer is similar to the TelemetryInitializer function but it allows you to block the reporting of the dependency\r\n     * request so that it doesn't count against the `maxAjaxCallsPerView`.\r\n     * @param dependencyInitializer - The Dependency Telemetry Initializer function\r\n     * @returns - A IDependencyInitializerHandler to enable the initializer to be removed\r\n     */\r\n    AjaxMonitor.prototype.addDependencyInitializer = function (dependencyInitializer) {\r\n        return null;\r\n    };\r\n// Removed Stub for AjaxMonitor.prototype.trackDependencyDataInternal.\r\n    AjaxMonitor.identifier = \"AjaxDependencyPlugin\";\r\n    return AjaxMonitor;\r\n}(BaseTelemetryPlugin));\r\nexport { AjaxMonitor };\r\n//# sourceMappingURL=ajax.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { onConfigChange } from \"@microsoft/applicationinsights-core-js\";\r\nvar Version = '3.3.1';\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the internal telemetry data class.\r\n     */\r\n    function Internal(config, unloadHookContainer) {\r\n        var _this = this;\r\n        var unloadHook = onConfigChange((config), function () {\r\n            var prefix = config.sdkExtension;\r\n            _this.sdkVersion = (prefix ? prefix + \"_\" : \"\") + \"javascript:\" + Version;\r\n        });\r\n        unloadHookContainer && unloadHookContainer.add(unloadHook);\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SESSION_MANAGER = \"sessionManager\"; // Count: 3\r\nexport var _DYN_UPDATE = \"update\"; // Count: 4\r\nexport var _DYN_IS_USER_COOKIE_SET = \"isUserCookieSet\"; // Count: 4\r\nexport var _DYN_IS_NEW_USER = \"isNewUser\"; // Count: 4\r\nexport var _DYN_GET_TRACE_CTX = \"getTraceCtx\"; // Count: 3\r\nexport var _DYN_TELEMETRY_TRACE = \"telemetryTrace\"; // Count: 3\r\nexport var _DYN_APPLY_SESSION_CONTEX0 = \"applySessionContext\"; // Count: 2\r\nexport var _DYN_APPLY_APPLICATION_CO1 = \"applyApplicationContext\"; // Count: 2\r\nexport var _DYN_APPLY_DEVICE_CONTEXT = \"applyDeviceContext\"; // Count: 2\r\nexport var _DYN_APPLY_OPERATION_CONT2 = \"applyOperationContext\"; // Count: 2\r\nexport var _DYN_APPLY_USER_CONTEXT = \"applyUserContext\"; // Count: 2\r\nexport var _DYN_APPLY_OPERATING_SYST3 = \"applyOperatingSystemContxt\"; // Count: 2\r\nexport var _DYN_APPLY_LOCATION_CONTE4 = \"applyLocationContext\"; // Count: 2\r\nexport var _DYN_APPLY_INTERNAL_CONTE5 = \"applyInternalContext\"; // Count: 2\r\nexport var _DYN_ACCOUNT_ID = \"accountId\"; // Count: 7\r\nexport var _DYN_GET_SESSION_ID = \"getSessionId\"; // Count: 4\r\nexport var _DYN_NAME_PREFIX = \"namePrefix\"; // Count: 3\r\nexport var _DYN_SESSION_COOKIE_POSTF6 = \"sessionCookiePostfix\"; // Count: 2\r\nexport var _DYN_USER_COOKIE_POSTFIX = \"userCookiePostfix\"; // Count: 2\r\nexport var _DYN_ID_LENGTH = \"idLength\"; // Count: 4\r\nexport var _DYN_GET_NEW_ID = \"getNewId\"; // Count: 3\r\nexport var _DYN_LENGTH = \"length\"; // Count: 4\r\nexport var _DYN_AUTOMATIC_SESSION = \"automaticSession\"; // Count: 5\r\nexport var _DYN_AUTHENTICATED_ID = \"authenticatedId\"; // Count: 6\r\nexport var _DYN_ACQUISITION_DATE = \"acquisitionDate\"; // Count: 5\r\nexport var _DYN_RENEWAL_DATE = \"renewalDate\"; // Count: 4\r\nexport var _DYN_JOIN = \"join\"; // Count: 5\r\nexport var _DYN_COOKIE_SEPARATOR = \"cookieSeparator\"; // Count: 5\r\nexport var _DYN_AUTH_USER_COOKIE_NAM7 = \"authUserCookieName\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, dateNow, dumpObj, getExceptionName, isFunction, newId, onConfigChange, safeGetCookieMgr, safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_ACQUISITION_DATE, _DYN_AUTOMATIC_SESSION, _DYN_GET_NEW_ID, _DYN_ID_LENGTH, _DYN_JOIN, _DYN_LENGTH, _DYN_NAME_PREFIX, _DYN_RENEWAL_DATE, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nvar SESSION_COOKIE_NAME = \"ai_session\";\r\nvar ACQUISITION_SPAN = 86400000; // 24 hours in ms\r\nvar RENEWAL_SPAN = 1800000; // 30 minutes in ms\r\nvar COOKIE_UPDATE_INTERVAL = 60000; // 1 minute in ms\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, core, unloadHookContainer) {\r\n        var self = this;\r\n        var _storageNamePrefix;\r\n        var _cookieUpdatedTimestamp;\r\n        var _logger = safeGetLogger(core);\r\n        var _cookieManager = safeGetCookieMgr(core);\r\n        var _sessionExpirationMs;\r\n        var _sessionRenewalMs;\r\n        dynamicProto(_SessionManager, self, function (_self) {\r\n            if (!config) {\r\n                config = {};\r\n            }\r\n            var unloadHook = onConfigChange(config, function (details) {\r\n                _sessionExpirationMs = config.sessionExpirationMs || ACQUISITION_SPAN;\r\n                _sessionRenewalMs = config.sessionRenewalMs || RENEWAL_SPAN;\r\n                // sessionCookiePostfix takes the preference if it is configured, otherwise takes namePrefix if configured.\r\n                var sessionCookiePostfix = config.sessionCookiePostfix || config[_DYN_NAME_PREFIX /* @min:%2enamePrefix */] || \"\";\r\n                _storageNamePrefix = SESSION_COOKIE_NAME + sessionCookiePostfix;\r\n            });\r\n            unloadHookContainer && unloadHookContainer.add(unloadHook);\r\n            _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */] = new Session();\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function () {\r\n                // Always using Date getTime() as there is a bug in older IE instances that causes the performance timings to have the hi-bit set eg 0x800000000 causing\r\n                // the number to be incorrect.\r\n                var nowMs = dateNow();\r\n                var isExpired = false;\r\n                var session = _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */];\r\n                if (!session.id) {\r\n                    isExpired = !_initializeAutomaticSession(session, nowMs);\r\n                }\r\n                if (!isExpired && _sessionExpirationMs > 0) {\r\n                    var timeSinceAcqMs = nowMs - session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */];\r\n                    var timeSinceRenewalMs = nowMs - session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */];\r\n                    isExpired = timeSinceAcqMs < 0 || timeSinceRenewalMs < 0; // expired if the acquisition or last renewal are in the future\r\n                    isExpired = isExpired || timeSinceAcqMs > _sessionExpirationMs; // expired if the time since acquisition is more than session Expiration\r\n                    isExpired = isExpired || timeSinceRenewalMs > _sessionRenewalMs; // expired if the time since last renewal is more than renewal period\r\n                }\r\n                // renew if acquisitionSpan or renewalSpan has elapsed\r\n                if (isExpired) {\r\n                    // update automaticSession so session state has correct id\r\n                    _renew(nowMs);\r\n                }\r\n                else {\r\n                    // do not update the cookie more often than cookieUpdateInterval\r\n                    if (!_cookieUpdatedTimestamp || nowMs - _cookieUpdatedTimestamp > COOKIE_UPDATE_INTERVAL) {\r\n                        _setCookie(session, nowMs);\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             *  Record the current state of the automatic session and store it in our cookie string format\r\n             *  into the browser's local storage. This is used to restore the session data when the cookie\r\n             *  expires.\r\n             */\r\n            _self.backup = function () {\r\n                var session = _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */];\r\n                _setStorage(session.id, session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */], session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */]);\r\n            };\r\n            /**\r\n             * Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n             * initialize the automatic session.\r\n             * @returns true if values set otherwise false\r\n             */\r\n            function _initializeAutomaticSession(session, now) {\r\n                var isValid = false;\r\n                var cookieValue = _cookieManager.get(_storageNamePrefix);\r\n                if (cookieValue && isFunction(cookieValue.split)) {\r\n                    isValid = _initializeAutomaticSessionWithData(session, cookieValue);\r\n                }\r\n                else {\r\n                    // There's no cookie, but we might have session data in local storage\r\n                    // This can happen if the session expired or the user actively deleted the cookie\r\n                    // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n                    // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n                    var storageValue = utlGetLocalStorage(_logger, _storageNamePrefix);\r\n                    if (storageValue) {\r\n                        isValid = _initializeAutomaticSessionWithData(session, storageValue);\r\n                    }\r\n                }\r\n                return isValid || !!session.id;\r\n            }\r\n            /**\r\n             * Extract id, acquisitionDate, and renewalDate from an ai_session payload string and\r\n             * use this data to initialize automaticSession.\r\n             *\r\n             * @param sessionData - The string stored in an ai_session cookie or local storage backup\r\n             * @returns true if values set otherwise false\r\n             */\r\n            function _initializeAutomaticSessionWithData(session, sessionData) {\r\n                var isValid = false;\r\n                var sessionReset = \", session will be reset\";\r\n                var tokens = sessionData.split(\"|\");\r\n                if (tokens[_DYN_LENGTH /* @min:%2elength */] >= 2) {\r\n                    try {\r\n                        var acqMs = +tokens[1] || 0;\r\n                        var renewalMs = +tokens[2] || 0;\r\n                        if (isNaN(acqMs) || acqMs <= 0) {\r\n                            _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 27 /* _eInternalMessageId.SessionRenewalDateIsZero */, \"AI session acquisition date is 0\" + sessionReset);\r\n                        }\r\n                        else if (isNaN(renewalMs) || renewalMs <= 0) {\r\n                            _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 27 /* _eInternalMessageId.SessionRenewalDateIsZero */, \"AI session renewal date is 0\" + sessionReset);\r\n                        }\r\n                        else if (tokens[0]) {\r\n                            // Everything looks valid so set the values\r\n                            session.id = tokens[0];\r\n                            session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */] = acqMs;\r\n                            session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */] = renewalMs;\r\n                            isValid = true;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 9 /* _eInternalMessageId.ErrorParsingAISessionCookie */, \"Error parsing ai_session value [\" + (sessionData || \"\") + \"]\" + sessionReset + \" - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n                return isValid;\r\n            }\r\n            function _renew(nowMs) {\r\n                var getNewId = config[_DYN_GET_NEW_ID /* @min:%2egetNewId */] || newId;\r\n                _self.automaticSession.id = getNewId(config[_DYN_ID_LENGTH /* @min:%2eidLength */] || 22);\r\n                _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */][_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */] = nowMs;\r\n                _setCookie(_self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */], nowMs);\r\n                // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n                if (!utlCanUseLocalStorage()) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 0 /* _eInternalMessageId.BrowserDoesNotSupportLocalStorage */, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n                }\r\n            }\r\n            function _setCookie(session, nowMs) {\r\n                var acq = session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */];\r\n                session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */] = nowMs;\r\n                var renewalPeriodMs = _sessionRenewalMs;\r\n                // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n                // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n                var acqTimeLeftMs = (acq + _sessionExpirationMs) - nowMs;\r\n                var cookie = [session.id, acq, nowMs];\r\n                var maxAgeSec = 0;\r\n                if (acqTimeLeftMs < renewalPeriodMs) {\r\n                    maxAgeSec = acqTimeLeftMs / 1000;\r\n                }\r\n                else {\r\n                    maxAgeSec = renewalPeriodMs / 1000;\r\n                }\r\n                var cookieDomain = config.cookieDomain || null;\r\n                // if sessionExpirationMs is set to 0, it means the expiry is set to 0 for this session cookie\r\n                // A cookie with 0 expiry in the session cookie will never expire for that browser session.  If the browser is closed the cookie expires.\r\n                // Depending on the browser, another instance does not inherit this cookie, however, another tab will\r\n                _cookieManager.set(_storageNamePrefix, cookie[_DYN_JOIN /* @min:%2ejoin */](\"|\"), _sessionExpirationMs > 0 ? maxAgeSec : null, cookieDomain);\r\n                _cookieUpdatedTimestamp = nowMs;\r\n            }\r\n            function _setStorage(guid, acq, renewal) {\r\n                // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n                // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n                // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n                utlSetLocalStorage(_logger, _storageNamePrefix, [guid, acq, renewal][_DYN_JOIN /* @min:%2ejoin */](\"|\"));\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for _SessionManager.prototype.update.\r\n// Removed Stub for _SessionManager.prototype.backup.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    _SessionManager.__ieDyn=1;\n\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { generateW3CId, getLocation } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name, logger) {\r\n        var _self = this;\r\n        _self.traceID = id || generateW3CId();\r\n        _self.parentID = parentId;\r\n        var location = getLocation();\r\n        if (!name && location && location.pathname) {\r\n            name = location.pathname;\r\n        }\r\n        _self.name = dataSanitizeString(logger, name);\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlRemoveStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, newId, onConfigChange, safeGetCookieMgr, safeGetLogger, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ACCOUNT_ID, _DYN_AUTHENTICATED_ID, _DYN_AUTH_USER_COOKIE_NAM7, _DYN_COOKIE_SEPARATOR, _DYN_GET_NEW_ID, _DYN_ID_LENGTH, _DYN_IS_NEW_USER, _DYN_IS_USER_COOKIE_SET, _DYN_JOIN, _DYN_LENGTH, _DYN_NAME_PREFIX, _DYN_UPDATE, _DYN_USER_COOKIE_POSTFIX } from \"../__DynamicConstants\";\r\nfunction _validateUserInput(id) {\r\n    // Validate:\r\n    // 1. Id is a non-empty string.\r\n    // 2. It does not contain special characters for cookies.\r\n    if (typeof id !== \"string\" ||\r\n        !id ||\r\n        id.match(/,|;|=| |\\|/)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nvar User = /** @class */ (function () {\r\n    function User(config, core, unloadHookContainer) {\r\n        /**\r\n         * A flag indicating whether this represents a new user\r\n         */\r\n        this.isNewUser = false;\r\n        /**\r\n         * A flag indicating whether the user cookie has been set\r\n         */\r\n        this.isUserCookieSet = false;\r\n        var _logger = safeGetLogger(core);\r\n        var _cookieManager = safeGetCookieMgr(core);\r\n        var _storageNamePrefix;\r\n        dynamicProto(User, this, function (_self) {\r\n            // Define _self.config\r\n            objDefine(_self, \"config\", {\r\n                g: function () { return config; }\r\n            });\r\n            var unloadHook = onConfigChange(config, function () {\r\n                var userCookiePostfix = config[_DYN_USER_COOKIE_POSTFIX /* @min:%2euserCookiePostfix */] || \"\";\r\n                _storageNamePrefix = User.userCookieName + userCookiePostfix;\r\n                // get userId or create new one if none exists\r\n                var cookie = _cookieManager.get(_storageNamePrefix);\r\n                if (cookie) {\r\n                    _self[_DYN_IS_NEW_USER /* @min:%2eisNewUser */] = false;\r\n                    var params = cookie.split(User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]);\r\n                    if (params[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _self.id = params[0];\r\n                        // we already have a cookie\r\n                        _self[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */] = !!_self.id;\r\n                    }\r\n                }\r\n                if (!_self.id) {\r\n                    _self.id = _generateNewId();\r\n                    var newCookie = _generateNewCookie(_self.id);\r\n                    _setUserCookie(newCookie[_DYN_JOIN /* @min:%2ejoin */](User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]));\r\n                    // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n                    // We should respect their wishes and clear ourselves from local storage\r\n                    var name_1 = (config[_DYN_NAME_PREFIX /* @min:%2enamePrefix */] || \"\") + \"ai_session\";\r\n                    utlRemoveStorage(_logger, name_1);\r\n                }\r\n                // We still take the account id from the ctor param for backward compatibility.\r\n                // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n                _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = config[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] || undefined;\r\n                // Get the auth user id and account id from the cookie if exists\r\n                // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n                var authCookie = _cookieManager.get(User[_DYN_AUTH_USER_COOKIE_NAM7 /* @min:%2eauthUserCookieName */]);\r\n                if (authCookie) {\r\n                    authCookie = decodeURI(authCookie);\r\n                    var authCookieString = authCookie.split(User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]);\r\n                    if (authCookieString[0]) {\r\n                        _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */] = authCookieString[0];\r\n                    }\r\n                    if (authCookieString[_DYN_LENGTH /* @min:%2elength */] > 1 && authCookieString[1]) {\r\n                        _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = authCookieString[1];\r\n                    }\r\n                }\r\n            });\r\n            unloadHookContainer && unloadHookContainer.add(unloadHook);\r\n            function _generateNewId() {\r\n                var theConfig = (config || {});\r\n                var getNewId = theConfig[_DYN_GET_NEW_ID /* @min:%2egetNewId */] || newId;\r\n                var id = getNewId(theConfig[_DYN_ID_LENGTH /* @min:%2eidLength */] ? config[_DYN_ID_LENGTH /* @min:%2eidLength */] : 22);\r\n                return id;\r\n            }\r\n            function _generateNewCookie(userId) {\r\n                var acqStr = toISOString(new Date());\r\n                _self.accountAcquisitionDate = acqStr;\r\n                _self[_DYN_IS_NEW_USER /* @min:%2eisNewUser */] = true;\r\n                var newCookie = [userId, acqStr];\r\n                return newCookie;\r\n            }\r\n            function _setUserCookie(cookie) {\r\n                // without expiration, cookies expire at the end of the session\r\n                // set it to 365 days from now\r\n                // 365 * 24 * 60 * 60 = 31536000\r\n                var oneYear = 31536000;\r\n                _self[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */] = _cookieManager.set(_storageNamePrefix, cookie, oneYear);\r\n            }\r\n            _self.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n                if (storeInCookie === void 0) { storeInCookie = false; }\r\n                // Validate inputs to ensure no cookie control characters.\r\n                var isInvalidInput = !_validateUserInput(authenticatedUserId) || (accountId && !_validateUserInput(accountId));\r\n                if (isInvalidInput) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 60 /* _eInternalMessageId.SetAuthContextFailedAccountName */, \"Setting auth user context failed. \" +\r\n                        \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n                    return;\r\n                }\r\n                // Create cookie string.\r\n                _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */] = authenticatedUserId;\r\n                var authCookie = _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */];\r\n                if (accountId) {\r\n                    _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = accountId;\r\n                    authCookie = [_self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */], _self.accountId][_DYN_JOIN /* @min:%2ejoin */](User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]);\r\n                }\r\n                if (storeInCookie) {\r\n                    // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n                    // Encoding the cookie to handle unexpected unicode characters.\r\n                    _cookieManager.set(User[_DYN_AUTH_USER_COOKIE_NAM7 /* @min:%2eauthUserCookieName */], encodeURI(authCookie));\r\n                }\r\n            };\r\n            /**\r\n             * Clears the authenticated user id and the account id from the user context.\r\n             * @returns {}\r\n             */\r\n            _self.clearAuthenticatedUserContext = function () {\r\n                _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */] = null;\r\n                _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = null;\r\n                _cookieManager.del(User[_DYN_AUTH_USER_COOKIE_NAM7 /* @min:%2eauthUserCookieName */]);\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (userId) {\r\n                // Optimizations to avoid setting and processing the cookie when not needed\r\n                if (_self.id !== userId || !_self[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */]) {\r\n                    var user_id = userId ? userId : _generateNewId();\r\n                    var user_cookie = _generateNewCookie(user_id);\r\n                    _setUserCookie(user_cookie[_DYN_JOIN /* @min:%2ejoin */](User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]));\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for User.prototype.setAuthenticatedUserContext.\r\n// Removed Stub for User.prototype.clearAuthenticatedUserContext.\r\n// Removed Stub for User.prototype.update.\r\n    User.cookieSeparator = \"|\";\r\n    User.userCookieName = \"ai_user\";\r\n    User.authUserCookieName = \"ai_authUser\";\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* TelemetryContext.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { CtxTagKeys, Extensions, PageView, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _InternalLogMessage, getSetValue, hasWindow, isNullOrUndefined, isString, objKeys, setValue } from \"@microsoft/applicationinsights-core-js\";\r\nimport { Application } from \"./Context/Application\";\r\nimport { Device } from \"./Context/Device\";\r\nimport { Internal } from \"./Context/Internal\";\r\nimport { Location } from \"./Context/Location\";\r\nimport { Session, _SessionManager } from \"./Context/Session\";\r\nimport { TelemetryTrace } from \"./Context/TelemetryTrace\";\r\nimport { User } from \"./Context/User\";\r\nimport { _DYN_ACCOUNT_ID, _DYN_APPLY_APPLICATION_CO1, _DYN_APPLY_DEVICE_CONTEXT, _DYN_APPLY_INTERNAL_CONTE5, _DYN_APPLY_LOCATION_CONTE4, _DYN_APPLY_OPERATING_SYST3, _DYN_APPLY_OPERATION_CONT2, _DYN_APPLY_SESSION_CONTEX0, _DYN_APPLY_USER_CONTEXT, _DYN_AUTHENTICATED_ID, _DYN_AUTOMATIC_SESSION, _DYN_GET_SESSION_ID, _DYN_LENGTH, _DYN_SESSION_MANAGER, _DYN_TELEMETRY_TRACE } from \"./__DynamicConstants\";\r\nvar strExt = \"ext\";\r\nvar strTags = \"tags\";\r\nfunction _removeEmpty(target, name) {\r\n    if (target && target[name] && objKeys(target[name])[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        delete target[name];\r\n    }\r\n}\r\nfunction _nullResult() {\r\n    return null;\r\n}\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(core, defaultConfig, previousTraceCtx, unloadHookContainer) {\r\n        var _this = this;\r\n        var logger = core.logger;\r\n        dynamicProto(TelemetryContext, this, function (_self) {\r\n            _self.appId = _nullResult;\r\n            _self[_DYN_GET_SESSION_ID /* @min:%2egetSessionId */] = _nullResult;\r\n            _self.application = new Application();\r\n            _self.internal = new Internal(defaultConfig, unloadHookContainer);\r\n            if (hasWindow()) {\r\n                _self[_DYN_SESSION_MANAGER /* @min:%2esessionManager */] = new _SessionManager(defaultConfig, core, unloadHookContainer);\r\n                _self.device = new Device();\r\n                _self.location = new Location();\r\n                _self.user = new User(defaultConfig, core, unloadHookContainer);\r\n                var traceId = void 0;\r\n                var parentId = void 0;\r\n                var name_1;\r\n                if (previousTraceCtx) {\r\n                    traceId = previousTraceCtx.getTraceId();\r\n                    parentId = previousTraceCtx.getSpanId();\r\n                    name_1 = previousTraceCtx.getName();\r\n                }\r\n                _self[_DYN_TELEMETRY_TRACE /* @min:%2etelemetryTrace */] = new TelemetryTrace(traceId, parentId, name_1, logger);\r\n                _self.session = new Session();\r\n            }\r\n            _self[_DYN_GET_SESSION_ID /* @min:%2egetSessionId */] = function () {\r\n                var session = _self.session;\r\n                var sesId = null;\r\n                // If customer set session info, apply their context; otherwise apply context automatically generated\r\n                if (session && isString(session.id)) {\r\n                    sesId = session.id;\r\n                }\r\n                else {\r\n                    // Gets the automatic session if it exists or an empty object\r\n                    var autoSession = (_self[_DYN_SESSION_MANAGER /* @min:%2esessionManager */] || {})[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */];\r\n                    sesId = autoSession && isString(autoSession.id) ? autoSession.id : null;\r\n                }\r\n                return sesId;\r\n            };\r\n            _self[_DYN_APPLY_SESSION_CONTEX0 /* @min:%2eapplySessionContext */] = function (evt, itemCtx) {\r\n                setValue(getSetValue(evt.ext, Extensions.AppExt), \"sesId\", _self[_DYN_GET_SESSION_ID /* @min:%2egetSessionId */](), isString);\r\n            };\r\n            _self[_DYN_APPLY_OPERATING_SYST3 /* @min:%2eapplyOperatingSystemContxt */] = function (evt, itemCtx) {\r\n                setValue(evt.ext, Extensions.OSExt, _self.os);\r\n            };\r\n            _self[_DYN_APPLY_APPLICATION_CO1 /* @min:%2eapplyApplicationContext */] = function (evt, itemCtx) {\r\n                var application = _self.application;\r\n                if (application) {\r\n                    // evt.ext.app\r\n                    var tags = getSetValue(evt, strTags);\r\n                    setValue(tags, CtxTagKeys.applicationVersion, application.ver, isString);\r\n                    setValue(tags, CtxTagKeys.applicationBuild, application.build, isString);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_DEVICE_CONTEXT /* @min:%2eapplyDeviceContext */] = function (evt, itemCtx) {\r\n                var device = _self.device;\r\n                if (device) {\r\n                    // evt.ext.device\r\n                    var extDevice = getSetValue(getSetValue(evt, strExt), Extensions.DeviceExt);\r\n                    setValue(extDevice, \"localId\", device.id, isString);\r\n                    setValue(extDevice, \"ip\", device.ip, isString);\r\n                    setValue(extDevice, \"model\", device.model, isString);\r\n                    setValue(extDevice, \"deviceClass\", device.deviceClass, isString);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_INTERNAL_CONTE5 /* @min:%2eapplyInternalContext */] = function (evt, itemCtx) {\r\n                var internal = _self.internal;\r\n                if (internal) {\r\n                    var tags = getSetValue(evt, strTags);\r\n                    setValue(tags, CtxTagKeys.internalAgentVersion, internal.agentVersion, isString); // not mapped in CS 4.0\r\n                    setValue(tags, CtxTagKeys.internalSdkVersion, dataSanitizeString(logger, internal.sdkVersion, 64), isString);\r\n                    if (evt.baseType === _InternalLogMessage.dataType || evt.baseType === PageView.dataType) {\r\n                        setValue(tags, CtxTagKeys.internalSnippet, internal.snippetVer, isString);\r\n                        setValue(tags, CtxTagKeys.internalSdkSrc, internal.sdkSrc, isString);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_LOCATION_CONTE4 /* @min:%2eapplyLocationContext */] = function (evt, itemCtx) {\r\n                var location = _this.location;\r\n                if (location) {\r\n                    setValue(getSetValue(evt, strTags, []), CtxTagKeys.locationIp, location.ip, isString);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_OPERATION_CONT2 /* @min:%2eapplyOperationContext */] = function (evt, itemCtx) {\r\n                var telemetryTrace = _self[_DYN_TELEMETRY_TRACE /* @min:%2etelemetryTrace */];\r\n                if (telemetryTrace) {\r\n                    var extTrace = getSetValue(getSetValue(evt, strExt), Extensions.TraceExt, { traceID: undefined, parentID: undefined });\r\n                    setValue(extTrace, \"traceID\", telemetryTrace.traceID, isString, isNullOrUndefined);\r\n                    setValue(extTrace, \"name\", telemetryTrace.name, isString, isNullOrUndefined);\r\n                    setValue(extTrace, \"parentID\", telemetryTrace.parentID, isString, isNullOrUndefined);\r\n                }\r\n            };\r\n            _self.applyWebContext = function (evt, itemCtx) {\r\n                var web = _this.web;\r\n                if (web) {\r\n                    setValue(getSetValue(evt, strExt), Extensions.WebExt, web);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_USER_CONTEXT /* @min:%2eapplyUserContext */] = function (evt, itemCtx) {\r\n                var user = _self.user;\r\n                if (user) {\r\n                    var tags = getSetValue(evt, strTags, []);\r\n                    // stays in tags\r\n                    setValue(tags, CtxTagKeys.userAccountId, user[_DYN_ACCOUNT_ID /* @min:%2eaccountId */], isString);\r\n                    // CS 4.0\r\n                    var extUser = getSetValue(getSetValue(evt, strExt), Extensions.UserExt);\r\n                    setValue(extUser, \"id\", user.id, isString);\r\n                    setValue(extUser, \"authId\", user[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */], isString);\r\n                }\r\n            };\r\n            _self.cleanUp = function (evt, itemCtx) {\r\n                var ext = evt.ext;\r\n                if (ext) {\r\n                    _removeEmpty(ext, Extensions.DeviceExt);\r\n                    _removeEmpty(ext, Extensions.UserExt);\r\n                    _removeEmpty(ext, Extensions.WebExt);\r\n                    _removeEmpty(ext, Extensions.OSExt);\r\n                    _removeEmpty(ext, Extensions.AppExt);\r\n                    _removeEmpty(ext, Extensions.TraceExt);\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for TelemetryContext.prototype.applySessionContext.\r\n// Removed Stub for TelemetryContext.prototype.applyOperatingSystemContxt.\r\n// Removed Stub for TelemetryContext.prototype.applyApplicationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyDeviceContext.\r\n// Removed Stub for TelemetryContext.prototype.applyInternalContext.\r\n// Removed Stub for TelemetryContext.prototype.applyLocationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyOperationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyWebContext.\r\n// Removed Stub for TelemetryContext.prototype.applyUserContext.\r\n// Removed Stub for TelemetryContext.prototype.cleanUp.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryContext.__ieDyn=1;\n\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* PropertiesPlugin.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nvar _a;\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, PageView, PropertiesPluginIdentifier, createDistributedTraceContextFromTrace, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, _InternalLogMessage, _logInternalMessage, createProcessTelemetryContext, getNavigator, getSetValue, isNullOrUndefined, onConfigChange } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDeepFreeze, objDefine } from \"@nevware21/ts-utils\";\r\nimport { TelemetryContext } from \"./TelemetryContext\";\r\nimport { _DYN_ACCOUNT_ID, _DYN_APPLY_APPLICATION_CO1, _DYN_APPLY_DEVICE_CONTEXT, _DYN_APPLY_INTERNAL_CONTE5, _DYN_APPLY_LOCATION_CONTE4, _DYN_APPLY_OPERATING_SYST3, _DYN_APPLY_OPERATION_CONT2, _DYN_APPLY_SESSION_CONTEX0, _DYN_APPLY_USER_CONTEXT, _DYN_GET_NEW_ID, _DYN_GET_SESSION_ID, _DYN_GET_TRACE_CTX, _DYN_ID_LENGTH, _DYN_IS_NEW_USER, _DYN_IS_USER_COOKIE_SET, _DYN_NAME_PREFIX, _DYN_SESSION_COOKIE_POSTF6, _DYN_SESSION_MANAGER, _DYN_TELEMETRY_TRACE, _DYN_UPDATE, _DYN_USER_COOKIE_POSTFIX } from \"./__DynamicConstants\";\r\nvar undefString;\r\nvar nullValue = null;\r\nvar _defaultConfig = objDeepFreeze((_a = {},\r\n    _a[_DYN_ACCOUNT_ID /* @min:accountId */] = nullValue,\r\n    _a.sessionRenewalMs = 30 * 60 * 1000,\r\n    _a.samplingPercentage = 100,\r\n    _a.sessionExpirationMs = 24 * 60 * 60 * 1000,\r\n    _a.cookieDomain = nullValue,\r\n    _a.sdkExtension = nullValue,\r\n    _a.isBrowserLinkTrackingEnabled = false,\r\n    _a.appId = nullValue,\r\n    _a[_DYN_GET_SESSION_ID /* @min:getSessionId */] = nullValue,\r\n    _a[_DYN_NAME_PREFIX /* @min:namePrefix */] = undefString,\r\n    _a[_DYN_SESSION_COOKIE_POSTF6 /* @min:sessionCookiePostfix */] = undefString,\r\n    _a[_DYN_USER_COOKIE_POSTFIX /* @min:userCookiePostfix */] = undefString,\r\n    _a[_DYN_ID_LENGTH /* @min:idLength */] = 22,\r\n    _a[_DYN_GET_NEW_ID /* @min:getNewId */] = nullValue,\r\n    _a));\r\nvar PropertiesPlugin = /** @class */ (function (_super) {\r\n    __extends(PropertiesPlugin, _super);\r\n    function PropertiesPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 110;\r\n        _this.identifier = PropertiesPluginIdentifier;\r\n        var _extensionConfig;\r\n        var _distributedTraceCtx;\r\n        var _previousTraceCtx;\r\n        var _context;\r\n        var _disableUserInitMessage;\r\n        dynamicProto(PropertiesPlugin, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            objDefine(_self, \"context\", {\r\n                g: function () {\r\n                    return _context;\r\n                }\r\n            });\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                _populateDefaults(config);\r\n            };\r\n            /**\r\n             * Add Part A fields to the event\r\n             * @param event - The event that needs to be processed\r\n             */\r\n            _self.processTelemetry = function (event, itemCtx) {\r\n                if (!isNullOrUndefined(event)) {\r\n                    itemCtx = _self._getTelCtx(itemCtx);\r\n                    // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n                    if (event.name === PageView.envelopeType) {\r\n                        itemCtx.diagLog().resetInternalMessageCount();\r\n                    }\r\n                    var theContext = (_context || {});\r\n                    if (theContext.session) {\r\n                        // If customer did not provide custom session id update the session manager\r\n                        if (typeof _context.session.id !== \"string\" && theContext[_DYN_SESSION_MANAGER /* @min:%2esessionManager */]) {\r\n                            theContext[_DYN_SESSION_MANAGER /* @min:%2esessionManager */][_DYN_UPDATE /* @min:%2eupdate */]();\r\n                        }\r\n                    }\r\n                    var userCtx = theContext.user;\r\n                    if (userCtx && !userCtx[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */]) {\r\n                        userCtx[_DYN_UPDATE /* @min:%2eupdate */](theContext.user.id);\r\n                    }\r\n                    _processTelemetryInternal(event, itemCtx);\r\n                    if (userCtx && userCtx[_DYN_IS_NEW_USER /* @min:%2eisNewUser */]) {\r\n                        userCtx[_DYN_IS_NEW_USER /* @min:%2eisNewUser */] = false;\r\n                        if (!_disableUserInitMessage) {\r\n                            var message = new _InternalLogMessage(72 /* _eInternalMessageId.SendBrowserInfoOnUserInit */, ((getNavigator() || {}).userAgent || \"\"));\r\n                            _logInternalMessage(itemCtx.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, message);\r\n                        }\r\n                    }\r\n                    _self.processNext(event, itemCtx);\r\n                }\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                var core = (unloadCtx || {}).core();\r\n                if (core && core[_DYN_GET_TRACE_CTX /* @min:%2egetTraceCtx */]) {\r\n                    var traceCtx = core[_DYN_GET_TRACE_CTX /* @min:%2egetTraceCtx */](false);\r\n                    if (traceCtx === _distributedTraceCtx) {\r\n                        core.setTraceCtx(_previousTraceCtx);\r\n                    }\r\n                }\r\n                _initDefaults();\r\n            };\r\n            function _initDefaults() {\r\n                _extensionConfig = null;\r\n                _distributedTraceCtx = null;\r\n                _previousTraceCtx = null;\r\n                _context = null;\r\n                _disableUserInitMessage = true;\r\n            }\r\n            function _populateDefaults(config) {\r\n                var identifier = _self.identifier;\r\n                var core = _self.core;\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function () {\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    _disableUserInitMessage = config.disableUserInitMessage === false ? false : true;\r\n                    _extensionConfig = ctx.getExtCfg(identifier, _defaultConfig);\r\n                    // Test hook to allow accessing the internal values -- explicitly not defined as an available property on the class\r\n                    _self[\"_extConfig\"] = _extensionConfig;\r\n                }));\r\n                // This is outside of the onConfigChange as we don't want to update (replace) these values whenever a referenced config item changes\r\n                _previousTraceCtx = core[_DYN_GET_TRACE_CTX /* @min:%2egetTraceCtx */](false);\r\n                _context = new TelemetryContext(core, _extensionConfig, _previousTraceCtx, _self._unloadHooks);\r\n                _distributedTraceCtx = createDistributedTraceContextFromTrace(_self.context[_DYN_TELEMETRY_TRACE /* @min:%2etelemetryTrace */], _previousTraceCtx);\r\n                core.setTraceCtx(_distributedTraceCtx);\r\n                _self.context.appId = function () {\r\n                    var breezeChannel = core.getPlugin(BreezeChannelIdentifier);\r\n                    return breezeChannel ? breezeChannel.plugin[\"_appId\"] : null;\r\n                };\r\n            }\r\n            function _processTelemetryInternal(evt, itemCtx) {\r\n                // Set Part A fields\r\n                getSetValue(evt, \"tags\", []);\r\n                getSetValue(evt, \"ext\", {});\r\n                var ctx = _self.context;\r\n                ctx[_DYN_APPLY_SESSION_CONTEX0 /* @min:%2eapplySessionContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_APPLICATION_CO1 /* @min:%2eapplyApplicationContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_DEVICE_CONTEXT /* @min:%2eapplyDeviceContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_OPERATION_CONT2 /* @min:%2eapplyOperationContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_USER_CONTEXT /* @min:%2eapplyUserContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_OPERATING_SYST3 /* @min:%2eapplyOperatingSystemContxt */](evt, itemCtx);\r\n                ctx.applyWebContext(evt, itemCtx);\r\n                ctx[_DYN_APPLY_LOCATION_CONTE4 /* @min:%2eapplyLocationContext */](evt, itemCtx); // legacy tags\r\n                ctx[_DYN_APPLY_INTERNAL_CONTE5 /* @min:%2eapplyInternalContext */](evt, itemCtx); // legacy tags\r\n                ctx.cleanUp(evt, itemCtx);\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for PropertiesPlugin.prototype.initialize.\r\n// Removed Stub for PropertiesPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PropertiesPlugin.__ieDyn=1;\n\n    return PropertiesPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a, _b, _c, _d;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AnalyticsPlugin } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { CfgSyncPlugin } from \"@microsoft/applicationinsights-cfgsync-js\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { AnalyticsPluginIdentifier, DEFAULT_BREEZE_PATH, PropertiesPluginIdentifier, ThrottleMgr, parseConnectionString } from \"@microsoft/applicationinsights-common\";\r\nimport { AppInsightsCore, _throwInternal, addPageHideEventListener, addPageUnloadEventListener, cfgDfMerge, cfgDfValidate, createDynamicConfig, createProcessTelemetryContext, createUniqueNamespace, doPerf, hasDocument, hasWindow, isArray, isFeatureEnabled, isFunction, isNullOrUndefined, isReactNative, isString, mergeEvtNamespace, onConfigChange, proxyAssign, proxyFunctions, removePageHideEventListener, removePageUnloadEventListener } from \"@microsoft/applicationinsights-core-js\";\r\nimport { AjaxPlugin as DependenciesPlugin } from \"@microsoft/applicationinsights-dependencies-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nimport { createAsyncPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, isPromiseLike, objDefine, objForEachKey, strIndexOf, throwUnsupported } from \"@nevware21/ts-utils\";\r\nimport { CONFIG_ENDPOINT_URL, STR_ADD_TELEMETRY_INITIALIZER, STR_CLEAR_AUTHENTICATED_USER_CONTEXT, STR_EVT_NAMESPACE, STR_FLUSH, STR_GET_COOKIE_MGR, STR_GET_PLUGIN, STR_POLL_INTERNAL_LOGS, STR_SET_AUTHENTICATED_USER_CONTEXT, STR_SNIPPET, STR_START_TRACK_EVENT, STR_START_TRACK_PAGE, STR_STOP_TRACK_EVENT, STR_STOP_TRACK_PAGE, STR_TRACK_DEPENDENCY_DATA, STR_TRACK_EVENT, STR_TRACK_EXCEPTION, STR_TRACK_METRIC, STR_TRACK_PAGE_VIEW, STR_TRACK_TRACE } from \"./InternalConstants\";\r\nimport { _DYN_ADD_HOUSEKEEPING_BEF2, _DYN_CONNECTION_STRING, _DYN_CONTEXT, _DYN_ENDPOINT_URL, _DYN_INGESTIONENDPOINT, _DYN_INSTRUMENTATIONKEY0, _DYN_INSTRUMENTATION_KEY, _DYN_ONUNLOAD_FLUSH, _DYN_QUEUE, _DYN_SEND_MESSAGE, _DYN_UPDATE_SNIPPET_DEFIN3, _DYN_USER_OVERRIDE_ENDPOI1, _DYN_VERSION } from \"./__DynamicConstants\";\r\nvar _internalSdkSrc;\r\n// This is an exclude list of properties that should not be updated during initialization\r\n// They include a combination of private and internal property names\r\nvar _ignoreUpdateSnippetProperties = [\r\n    STR_SNIPPET, \"dependencies\", \"properties\", \"_snippetVersion\", \"appInsightsNew\", \"getSKUDefaults\"\r\n];\r\nvar IKEY_USAGE = \"iKeyUsage\";\r\nvar CDN_USAGE = \"CdnUsage\";\r\nvar SDK_LOADER_VER = \"SdkLoaderVer\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar default_limit = {\r\n    samplingRate: 100,\r\n    maxSendNumber: 1\r\n};\r\nvar default_interval = {\r\n    monthInterval: 3,\r\n    daysOfMonth: [28]\r\n};\r\nvar default_throttle_config = {\r\n    disabled: true,\r\n    limit: cfgDfMerge(default_limit),\r\n    interval: cfgDfMerge(default_interval)\r\n};\r\n// We need to include all properties that we only reference that we want to be dynamically updatable here\r\n// So they are converted even when not specified in the passed configuration\r\nvar defaultConfigValues = (_a = {},\r\n    _a[_DYN_CONNECTION_STRING /* @min:connectionString */] = UNDEFINED_VALUE,\r\n    _a[_DYN_ENDPOINT_URL /* @min:endpointUrl */] = UNDEFINED_VALUE,\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:userOverrideEndpointUrl */] = UNDEFINED_VALUE,\r\n    _a.diagnosticLogInterval = cfgDfValidate(_chkDiagLevel, 10000),\r\n    _a.featureOptIn = (_b = {},\r\n        _b[IKEY_USAGE] = { mode: 3 /* FeatureOptInMode.enable */ },\r\n        _b[CDN_USAGE] = { mode: 2 /* FeatureOptInMode.disable */ },\r\n        _b[SDK_LOADER_VER] = { mode: 2 /* FeatureOptInMode.disable */ },\r\n        _b),\r\n    _a.throttleMgrCfg = cfgDfMerge((_c = {},\r\n        _c[109 /* _eInternalMessageId.DefaultThrottleMsgKey */] = cfgDfMerge(default_throttle_config),\r\n        _c[106 /* _eInternalMessageId.InstrumentationKeyDeprecation */] = cfgDfMerge(default_throttle_config),\r\n        _c[111 /* _eInternalMessageId.SdkLdrUpdate */] = cfgDfMerge(default_throttle_config),\r\n        _c[110 /* _eInternalMessageId.CdnDeprecation */] = cfgDfMerge(default_throttle_config),\r\n        _c)),\r\n    _a.extensionConfig = cfgDfMerge((_d = {},\r\n        _d[\"AppInsightsCfgSyncPlugin\"] = cfgDfMerge({\r\n            cfgUrl: CONFIG_ENDPOINT_URL,\r\n            syncMode: 2 /* ICfgSyncMode.Receive */\r\n        }),\r\n        _d)),\r\n    _a);\r\nfunction _chkDiagLevel(value) {\r\n    // Make sure we have a value > 0\r\n    return value && value > 0;\r\n}\r\n/**\r\n * Application Insights API\r\n * @group Entrypoint\r\n * @group Classes\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar AppInsightsSku = /** @class */ (function () {\r\n    function AppInsightsSku(snippet) {\r\n        var _this = this;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var dependencies;\r\n        var properties;\r\n        var _sender;\r\n        var _snippetVersion;\r\n        var _evtNamespace;\r\n        var _houseKeepingNamespace;\r\n        var _core;\r\n        var _config;\r\n        var _analyticsPlugin;\r\n        var _cfgSyncPlugin;\r\n        var _throttleMgr;\r\n        var _iKeySentMessage;\r\n        var _cdnSentMessage;\r\n        var _sdkVerSentMessage;\r\n        dynamicProto(AppInsightsSku, this, function (_self) {\r\n            _initDefaults();\r\n            objDefine(_self, \"config\", {\r\n                g: function () {\r\n                    return _config;\r\n                }\r\n            });\r\n            arrForEach([\"pluginVersionStringArr\", \"pluginVersionString\"], function (key) {\r\n                objDefine(_self, key, {\r\n                    g: function () {\r\n                        if (_core) {\r\n                            return _core[key];\r\n                        }\r\n                        return null;\r\n                    }\r\n                });\r\n            });\r\n            // initialize the queue and config in case they are undefined\r\n            _snippetVersion = \"\" + (snippet.sv || snippet[_DYN_VERSION /* @min:%2eversion */] || \"\");\r\n            snippet[_DYN_QUEUE /* @min:%2equeue */] = snippet[_DYN_QUEUE /* @min:%2equeue */] || [];\r\n            snippet[_DYN_VERSION /* @min:%2eversion */] = snippet[_DYN_VERSION /* @min:%2eversion */] || 2.0; // Default to new version\r\n            var cfgHandler = createDynamicConfig(snippet.config || {}, defaultConfigValues);\r\n            _config = cfgHandler.cfg;\r\n            _analyticsPlugin = new AnalyticsPlugin();\r\n            objDefine(_self, \"appInsights\", {\r\n                g: function () {\r\n                    return _analyticsPlugin;\r\n                }\r\n            });\r\n            properties = new PropertiesPlugin();\r\n            dependencies = new DependenciesPlugin();\r\n            _sender = new Sender();\r\n            _core = new AppInsightsCore();\r\n            objDefine(_self, \"core\", {\r\n                g: function () {\r\n                    return _core;\r\n                }\r\n            });\r\n            // Will get recalled if any referenced values are changed\r\n            _addUnloadHook(onConfigChange(cfgHandler, function () {\r\n                var configCs = _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */];\r\n                function _parseCs() {\r\n                    return createAsyncPromise(function (resolve, reject) {\r\n                        doAwaitResponse(configCs, function (res) {\r\n                            var curCs = res && res.value;\r\n                            var parsedCs = null;\r\n                            if (!res.rejected && curCs) {\r\n                                // replace cs with resolved values in case of circular promises\r\n                                _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */] = curCs;\r\n                                parsedCs = parseConnectionString(curCs);\r\n                            }\r\n                            // if can't resolve cs promise, null will be returned\r\n                            resolve(parsedCs);\r\n                        });\r\n                    });\r\n                }\r\n                if (isPromiseLike(configCs)) {\r\n                    var ikeyPromise = createAsyncPromise(function (resolve, reject) {\r\n                        _parseCs().then(function (cs) {\r\n                            var ikey = _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                            ikey = cs && cs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || ikey;\r\n                            resolve(ikey);\r\n                        }).catch(function (e) {\r\n                            // parseCs will always resolve(unless timeout)\r\n                            // return null in case any error happens\r\n                            resolve(null);\r\n                        });\r\n                    });\r\n                    var url = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */];\r\n                    if (isNullOrUndefined(url)) {\r\n                        url = createAsyncPromise(function (resolve, reject) {\r\n                            _parseCs().then(function (cs) {\r\n                                var url = _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                                var ingest = cs && cs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                                url = ingest ? ingest + DEFAULT_BREEZE_PATH : url;\r\n                                resolve(url);\r\n                            }).catch(function (e) {\r\n                                // parseCs will always resolve(unless timeout)\r\n                                // return null in case any error happens\r\n                                resolve(null);\r\n                            });\r\n                        });\r\n                    }\r\n                    _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = ikeyPromise;\r\n                    _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = url;\r\n                }\r\n                if (isString(configCs)) {\r\n                    // confirm if promiselike function present\r\n                    // handle cs promise here\r\n                    // add cases to oneNote\r\n                    var cs = parseConnectionString(configCs);\r\n                    var ingest = cs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                    _config.endpointUrl = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : ingest + DEFAULT_BREEZE_PATH; // add /v2/track\r\n                    _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = cs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                }\r\n                // userOverrideEndpointUrl have the highest priority\r\n                _config.endpointUrl = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n            }));\r\n            _self[STR_SNIPPET /* @min:%2esnippet */] = snippet;\r\n            _self[STR_FLUSH /* @min:%2eflush */] = function (async, callBack) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                doPerf(_core, function () { return \"AISKU.flush\"; }, function () {\r\n                    if (async && !callBack) {\r\n                        result = createPromise(function (resolve) {\r\n                            callBack = resolve;\r\n                        });\r\n                    }\r\n                    var waiting = 1;\r\n                    var flushDone = function () {\r\n                        waiting--;\r\n                        if (waiting === 0) {\r\n                            callBack();\r\n                        }\r\n                    };\r\n                    arrForEach(_core.getChannels(), function (channel) {\r\n                        if (channel) {\r\n                            waiting++;\r\n                            channel[STR_FLUSH /* @min:%2eflush */](async, flushDone);\r\n                        }\r\n                    });\r\n                    // decrement the initial \"waiting\"\r\n                    flushDone();\r\n                }, null, async);\r\n                return result;\r\n            };\r\n            _self[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */] = function (async) {\r\n                if (async === void 0) { async = true; }\r\n                arrForEach(_core.getChannels(), function (channel) {\r\n                    if (channel[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */]) {\r\n                        channel[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */]();\r\n                    }\r\n                    else {\r\n                        channel[STR_FLUSH /* @min:%2eflush */](async);\r\n                    }\r\n                });\r\n            };\r\n            _self.loadAppInsights = function (legacyMode, logger, notificationManager) {\r\n                if (legacyMode === void 0) { legacyMode = false; }\r\n                if (legacyMode) {\r\n                    throwUnsupported(\"Legacy Mode is no longer supported\");\r\n                }\r\n                function _updateSnippetProperties(snippet) {\r\n                    if (snippet) {\r\n                        var snippetVer = \"\";\r\n                        if (!isNullOrUndefined(_snippetVersion)) {\r\n                            snippetVer += _snippetVersion;\r\n                        }\r\n                        if (_self[_DYN_CONTEXT /* @min:%2econtext */] && _self[_DYN_CONTEXT /* @min:%2econtext */].internal) {\r\n                            _self[_DYN_CONTEXT /* @min:%2econtext */].internal.snippetVer = snippetVer || \"-\";\r\n                        }\r\n                        // apply updated properties to the global instance (snippet)\r\n                        objForEachKey(_self, function (field, value) {\r\n                            if (isString(field) &&\r\n                                !isFunction(value) &&\r\n                                field && field[0] !== \"_\" && // Don't copy \"internal\" values\r\n                                arrIndexOf(_ignoreUpdateSnippetProperties, field) === -1) {\r\n                                if (snippet[field] !== value) {\r\n                                    snippet[field] = value;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                doPerf(_self.core, function () { return \"AISKU.loadAppInsights\"; }, function () {\r\n                    // initialize core\r\n                    _core.initialize(_config, [_sender, properties, dependencies, _analyticsPlugin, _cfgSyncPlugin], logger, notificationManager);\r\n                    objDefine(_self, \"context\", {\r\n                        g: function () { return properties[_DYN_CONTEXT /* @min:%2econtext */]; }\r\n                    });\r\n                    if (!_throttleMgr) {\r\n                        _throttleMgr = new ThrottleMgr(_core);\r\n                    }\r\n                    var sdkSrc = _findSdkSourceFile();\r\n                    if (sdkSrc && _self[_DYN_CONTEXT /* @min:%2econtext */]) {\r\n                        _self[_DYN_CONTEXT /* @min:%2econtext */].internal.sdkSrc = sdkSrc;\r\n                    }\r\n                    _updateSnippetProperties(_self[STR_SNIPPET /* @min:%2esnippet */]);\r\n                    // Empty queue of all api calls logged prior to sdk download\r\n                    _self.emptyQueue();\r\n                    _self[STR_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n                    _self[_DYN_ADD_HOUSEKEEPING_BEF2 /* @min:%2eaddHousekeepingBeforeUnload */](_self);\r\n                    _addUnloadHook(onConfigChange(cfgHandler, function () {\r\n                        var defaultEnable = false;\r\n                        if (_config.throttleMgrCfg[109 /* _eInternalMessageId.DefaultThrottleMsgKey */]) {\r\n                            defaultEnable = !_config.throttleMgrCfg[109 /* _eInternalMessageId.DefaultThrottleMsgKey */].disabled;\r\n                        }\r\n                        if (!_throttleMgr.isReady() && _config.extensionConfig && _config.extensionConfig[_cfgSyncPlugin.identifier] && defaultEnable) {\r\n                            // set ready state to true will automatically trigger flush()\r\n                            _throttleMgr.onReadyState(true);\r\n                        }\r\n                        var result;\r\n                        if (!_iKeySentMessage && !_config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */] && isFeatureEnabled(IKEY_USAGE, _config)) {\r\n                            result = _throttleMgr[_DYN_SEND_MESSAGE /* @min:%2esendMessage */](106 /* _eInternalMessageId.InstrumentationKeyDeprecation */, \"See Instrumentation key support at aka.ms/IkeyMigrate\");\r\n                            _iKeySentMessage = true;\r\n                        }\r\n                        if (!_cdnSentMessage && _self[_DYN_CONTEXT /* @min:%2econtext */].internal.sdkSrc && _self[_DYN_CONTEXT /* @min:%2econtext */].internal.sdkSrc.indexOf(\"az416426\") != -1 && isFeatureEnabled(CDN_USAGE, _config)) {\r\n                            result = _throttleMgr[_DYN_SEND_MESSAGE /* @min:%2esendMessage */](110 /* _eInternalMessageId.CdnDeprecation */, \"See Cdn support notice at aka.ms/JsActiveCdn\");\r\n                            _cdnSentMessage = true;\r\n                        }\r\n                        if (!_sdkVerSentMessage && parseInt(_snippetVersion) < 6 && isFeatureEnabled(SDK_LOADER_VER, _config)) {\r\n                            result = _throttleMgr[_DYN_SEND_MESSAGE /* @min:%2esendMessage */](111 /* _eInternalMessageId.SdkLdrUpdate */, \"An updated Sdk Loader is available, see aka.ms/SnippetVer\");\r\n                            _sdkVerSentMessage = true;\r\n                        }\r\n                    }));\r\n                });\r\n                return _self;\r\n            };\r\n            _self[_DYN_UPDATE_SNIPPET_DEFIN3 /* @min:%2eupdateSnippetDefinitions */] = function (snippet) {\r\n                // apply full appInsights to the global instance\r\n                // Note: This must be called before loadAppInsights is called\r\n                proxyAssign(snippet, _self, function (name) {\r\n                    // Not excluding names prefixed with \"_\" as we need to proxy some functions like _onError\r\n                    return name && arrIndexOf(_ignoreUpdateSnippetProperties, name) === -1;\r\n                });\r\n            };\r\n            _self.emptyQueue = function () {\r\n                // call functions that were queued before the main script was loaded\r\n                try {\r\n                    if (isArray(_self.snippet[_DYN_QUEUE /* @min:%2equeue */])) {\r\n                        // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                        var length_1 = _self.snippet[_DYN_QUEUE /* @min:%2equeue */].length;\r\n                        for (var i = 0; i < length_1; i++) {\r\n                            var call = _self.snippet[_DYN_QUEUE /* @min:%2equeue */][i];\r\n                            call();\r\n                        }\r\n                        _self.snippet[_DYN_QUEUE /* @min:%2equeue */] = undefined;\r\n                        delete _self.snippet[_DYN_QUEUE /* @min:%2equeue */];\r\n                    }\r\n                }\r\n                catch (exception) {\r\n                    var properties_1 = {};\r\n                    if (exception && isFunction(exception.toString)) {\r\n                        properties_1.exception = exception.toString();\r\n                    }\r\n                    // need from core\r\n                    // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n                    //     eLoggingSeverity.WARNING,\r\n                    //     _eInternalMessageId.FailedToSendQueuedTelemetry,\r\n                    //     \"Failed to send queued telemetry\",\r\n                    //     properties);\r\n                }\r\n            };\r\n            _self[_DYN_ADD_HOUSEKEEPING_BEF2 /* @min:%2eaddHousekeepingBeforeUnload */] = function (appInsightsInstance) {\r\n                // Add callback to push events when the user navigates away\r\n                if (hasWindow() || hasDocument()) {\r\n                    var performHousekeeping_1 = function () {\r\n                        // Adds the ability to flush all data before the page unloads.\r\n                        // Note: This approach tries to push a sync request with all the pending events onbeforeunload.\r\n                        // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                        // Telemetry here will help us analyze how effective this approach is.\r\n                        // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                        // impact on user experience.\r\n                        // appInsightsInstance.context._sender.triggerSend();\r\n                        appInsightsInstance[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */](false);\r\n                        // Back up the current session to local storage\r\n                        // This lets us close expired sessions after the cookies themselves expire\r\n                        if (isFunction(_self.core[STR_GET_PLUGIN /* @min:%2egetPlugin */])) {\r\n                            var loadedPlugin = _this.core[STR_GET_PLUGIN /* @min:%2egetPlugin */](PropertiesPluginIdentifier);\r\n                            if (loadedPlugin) {\r\n                                var propertiesPlugin = loadedPlugin.plugin;\r\n                                if (propertiesPlugin && propertiesPlugin[_DYN_CONTEXT /* @min:%2econtext */] && propertiesPlugin[_DYN_CONTEXT /* @min:%2econtext */]._sessionManager) {\r\n                                    propertiesPlugin[_DYN_CONTEXT /* @min:%2econtext */]._sessionManager.backup();\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n                    var added_1 = false;\r\n                    if (!_houseKeepingNamespace) {\r\n                        _houseKeepingNamespace = mergeEvtNamespace(_evtNamespace, _core[STR_EVT_NAMESPACE /* @min:%2eevtNamespace */] && _core[STR_EVT_NAMESPACE /* @min:%2eevtNamespace */]());\r\n                    }\r\n                    // Will be recalled if any referenced config properties change\r\n                    _addUnloadHook(onConfigChange(_config, function (details) {\r\n                        var coreConfig = details.cfg;\r\n                        var analyticsPlugin = appInsightsInstance.appInsights;\r\n                        var ctx = createProcessTelemetryContext(null, coreConfig, analyticsPlugin.core);\r\n                        var extConfig = ctx.getExtCfg(analyticsPlugin.identifier || AnalyticsPluginIdentifier);\r\n                        // As we could get recalled, remove any previously registered event handlers first\r\n                        _removePageEventHandlers();\r\n                        var excludePageUnloadEvents = coreConfig.disablePageUnloadEvents;\r\n                        if (!extConfig.disableFlushOnBeforeUnload) {\r\n                            // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n                            // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n                            if (addPageUnloadEventListener(performHousekeeping_1, excludePageUnloadEvents, _houseKeepingNamespace)) {\r\n                                added_1 = true;\r\n                            }\r\n                            // We also need to hook the pagehide and visibilitychange events as not all versions of Safari support load/unload events.\r\n                            if (addPageHideEventListener(performHousekeeping_1, excludePageUnloadEvents, _houseKeepingNamespace)) {\r\n                                added_1 = true;\r\n                            }\r\n                            // A reactNative app may not have a window and therefore the beforeunload/pagehide events -- so don't\r\n                            // log the failure in this case\r\n                            if (!added_1 && !isReactNative()) {\r\n                                _throwInternal(_core.logger, 1 /* eLoggingSeverity.CRITICAL */, 19 /* _eInternalMessageId.FailedToAddHandlerForOnBeforeUnload */, \"Could not add handler for beforeunload and pagehide\");\r\n                            }\r\n                        }\r\n                        if (!added_1 && !extConfig.disableFlushOnUnload) {\r\n                            // If we didn't add the normal set then attempt to add the pagehide and visibilitychange only\r\n                            addPageHideEventListener(performHousekeeping_1, excludePageUnloadEvents, _houseKeepingNamespace);\r\n                        }\r\n                    }));\r\n                }\r\n            };\r\n            _self.getSender = function () {\r\n                return _sender;\r\n            };\r\n            _self.unload = function (isAsync, unloadComplete, cbTimeout) {\r\n                var unloadDone = false;\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                function _unloadCallback(unloadState) {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    }\r\n                }\r\n                _self[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */](isAsync);\r\n                _removePageEventHandlers();\r\n                _core.unload && _core.unload(isAsync, _unloadCallback, cbTimeout);\r\n                return result;\r\n            };\r\n            proxyFunctions(_self, _analyticsPlugin, [\r\n                STR_GET_COOKIE_MGR,\r\n                STR_TRACK_EVENT,\r\n                STR_TRACK_PAGE_VIEW,\r\n                \"trackPageViewPerformance\",\r\n                STR_TRACK_EXCEPTION,\r\n                \"_onerror\",\r\n                STR_TRACK_TRACE,\r\n                STR_TRACK_METRIC,\r\n                STR_START_TRACK_PAGE,\r\n                STR_STOP_TRACK_PAGE,\r\n                STR_START_TRACK_EVENT,\r\n                STR_STOP_TRACK_EVENT\r\n            ]);\r\n            proxyFunctions(_self, _getCurrentDependencies, [\r\n                STR_TRACK_DEPENDENCY_DATA,\r\n                \"addDependencyListener\",\r\n                \"addDependencyInitializer\"\r\n            ]);\r\n            proxyFunctions(_self, _core, [\r\n                STR_ADD_TELEMETRY_INITIALIZER,\r\n                STR_POLL_INTERNAL_LOGS,\r\n                \"stopPollingInternalLogs\",\r\n                STR_GET_PLUGIN,\r\n                \"addPlugin\",\r\n                STR_EVT_NAMESPACE,\r\n                \"addUnloadCb\",\r\n                \"getTraceCtx\",\r\n                \"updateCfg\",\r\n                \"onCfgChange\"\r\n            ]);\r\n            proxyFunctions(_self, function () {\r\n                var context = properties[_DYN_CONTEXT /* @min:%2econtext */];\r\n                return context ? context.user : null;\r\n            }, [\r\n                STR_SET_AUTHENTICATED_USER_CONTEXT,\r\n                STR_CLEAR_AUTHENTICATED_USER_CONTEXT\r\n            ]);\r\n            // Using a function to support the dynamic adding / removal of plugins, so this will always return the current value\r\n            function _getCurrentDependencies() {\r\n                return dependencies;\r\n            }\r\n            function _initDefaults() {\r\n                _evtNamespace = createUniqueNamespace(\"AISKU\");\r\n                _houseKeepingNamespace = null;\r\n                dependencies = null;\r\n                properties = null;\r\n                _sender = null;\r\n                _snippetVersion = null;\r\n                _throttleMgr = null;\r\n                _iKeySentMessage = false;\r\n                _cdnSentMessage = false;\r\n                _sdkVerSentMessage = false;\r\n                _cfgSyncPlugin = new CfgSyncPlugin();\r\n            }\r\n            function _removePageEventHandlers() {\r\n                // Remove any registered event handlers\r\n                if (_houseKeepingNamespace) {\r\n                    removePageUnloadEventListener(null, _houseKeepingNamespace);\r\n                    removePageHideEventListener(null, _houseKeepingNamespace);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _core.addUnloadHook(hooks);\r\n            }\r\n        });\r\n    }\r\n    // Analytics Plugin\r\n// Removed Stub for AppInsightsSku.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsSku.prototype.trackEvent.\r\n// Removed Stub for AppInsightsSku.prototype.trackPageView.\r\n// Removed Stub for AppInsightsSku.prototype.trackPageViewPerformance.\r\n// Removed Stub for AppInsightsSku.prototype.trackException.\r\n// Removed Stub for AppInsightsSku.prototype._onerror.\r\n// Removed Stub for AppInsightsSku.prototype.trackTrace.\r\n// Removed Stub for AppInsightsSku.prototype.trackMetric.\r\n// Removed Stub for AppInsightsSku.prototype.startTrackPage.\r\n// Removed Stub for AppInsightsSku.prototype.stopTrackPage.\r\n// Removed Stub for AppInsightsSku.prototype.startTrackEvent.\r\n// Removed Stub for AppInsightsSku.prototype.stopTrackEvent.\r\n// Removed Stub for AppInsightsSku.prototype.addTelemetryInitializer.\r\n    // Properties Plugin\r\n// Removed Stub for AppInsightsSku.prototype.setAuthenticatedUserContext.\r\n// Removed Stub for AppInsightsSku.prototype.clearAuthenticatedUserContext.\r\n    // Dependencies Plugin\r\n// Removed Stub for AppInsightsSku.prototype.trackDependencyData.\r\n    // Misc\r\n// Removed Stub for AppInsightsSku.prototype.flush.\r\n// Removed Stub for AppInsightsSku.prototype.onunloadFlush.\r\n// Removed Stub for AppInsightsSku.prototype.loadAppInsights.\r\n// Removed Stub for AppInsightsSku.prototype.updateSnippetDefinitions.\r\n// Removed Stub for AppInsightsSku.prototype.emptyQueue.\r\n// Removed Stub for AppInsightsSku.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsSku.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsSku.prototype.addHousekeepingBeforeUnload.\r\n// Removed Stub for AppInsightsSku.prototype.getSender.\r\n// Removed Stub for AppInsightsSku.prototype.unload.\r\n// Removed Stub for AppInsightsSku.prototype.getPlugin.\r\n// Removed Stub for AppInsightsSku.prototype.addPlugin.\r\n// Removed Stub for AppInsightsSku.prototype.updateCfg.\r\n// Removed Stub for AppInsightsSku.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsSku.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsSku.prototype.addDependencyListener.\r\n    /**\r\n     * Add an dependency telemetry initializer callback function to allow populating additional properties or drop the request.\r\n     * It is called after the dependency call has completed and any available performance details are available. A dependency\r\n     * initializer is similar to the TelemetryInitializer function but it allows you to block the reporting of the dependency\r\n     * request so that it doesn't count against the `maxAjaxCallsPerView`.\r\n     * @param dependencyInitializer - The Dependency Telemetry Initializer function\r\n     * @returns - A IDependencyInitializerHandler to enable the initializer to be removed\r\n     */\r\n    AppInsightsSku.prototype.addDependencyInitializer = function (dependencyInitializer) {\r\n        return null;\r\n    };\r\n// Removed Stub for AppInsightsSku.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsSku.prototype.onCfgChange.\r\n    return AppInsightsSku;\r\n}());\r\nexport { AppInsightsSku };\r\n// tslint:disable-next-line\r\nexport function _findSdkSourceFile() {\r\n    if (_internalSdkSrc) {\r\n        // Use the cached value\r\n        return _internalSdkSrc;\r\n    }\r\n    var sdkSrc = null;\r\n    var isModule = false;\r\n    var cdns = [\r\n        \"://js.monitor.azure.com/\",\r\n        \"://az416426.vo.msecnd.net/\"\r\n    ];\r\n    try {\r\n        // Try and determine whether the sdk is being loaded from the CDN\r\n        // currentScript is only valid during initial processing\r\n        var scrpt = (document || {}).currentScript;\r\n        if (scrpt) {\r\n            sdkSrc = scrpt.src;\r\n            // } else {\r\n            //     // We need to update to at least typescript 2.9 for this to work :-(\r\n            //     // Leaving as a stub for now so after we upgrade this breadcrumb is available\r\n            //     let meta = import.meta;\r\n            //     sdkSrc = (meta || {}).url;\r\n            //     isModule = true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    if (sdkSrc) {\r\n        try {\r\n            var url_1 = sdkSrc.toLowerCase();\r\n            if (url_1) {\r\n                var src_1 = \"\";\r\n                arrForEach(cdns, function (value, idx) {\r\n                    if (strIndexOf(url_1, value) !== -1) {\r\n                        src_1 = \"cdn\" + (idx + 1);\r\n                        if (strIndexOf(url_1, \"/scripts/\") === -1) {\r\n                            if (strIndexOf(url_1, \"/next/\") !== -1) {\r\n                                src_1 += \"-next\";\r\n                            }\r\n                            else if (strIndexOf(url_1, \"/beta/\") !== -1) {\r\n                                src_1 += \"-beta\";\r\n                            }\r\n                        }\r\n                        _internalSdkSrc = src_1 + (isModule ? \".mod\" : \"\");\r\n                        return -1;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n        // Cache the found value so we don't have to look it up again\r\n        _internalSdkSrc = sdkSrc;\r\n    }\r\n    return _internalSdkSrc;\r\n}\r\n//# sourceMappingURL=AISku.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nvar _AUTHENTICATED_USER_CONTEXT = \"AuthenticatedUserContext\";\r\nvar _TRACK = \"track\";\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_SNIPPET = \"snippet\";\r\nexport var STR_GET_COOKIE_MGR = \"getCookieMgr\";\r\nexport var STR_START_TRACK_PAGE = \"startTrackPage\";\r\nexport var STR_STOP_TRACK_PAGE = \"stopTrackPage\";\r\nexport var STR_FLUSH = \"flush\";\r\nexport var STR_START_TRACK_EVENT = \"startTrackEvent\";\r\nexport var STR_STOP_TRACK_EVENT = \"stopTrackEvent\";\r\nexport var STR_ADD_TELEMETRY_INITIALIZER = \"addTelemetryInitializer\";\r\nexport var STR_ADD_TELEMETRY_INITIALIZERS = STR_ADD_TELEMETRY_INITIALIZER + \"s\";\r\nexport var STR_POLL_INTERNAL_LOGS = \"pollInternalLogs\";\r\nexport var STR_GET_PLUGIN = \"getPlugin\";\r\nexport var STR_EVT_NAMESPACE = \"evtNamespace\";\r\nexport var STR_TRACK_EVENT = _TRACK + \"Event\";\r\nexport var STR_TRACK_TRACE = _TRACK + \"Trace\";\r\nexport var STR_TRACK_METRIC = _TRACK + \"Metric\";\r\nexport var STR_TRACK_PAGE_VIEW = _TRACK + \"PageView\";\r\nexport var STR_TRACK_EXCEPTION = _TRACK + \"Exception\";\r\nexport var STR_TRACK_DEPENDENCY_DATA = _TRACK + \"DependencyData\";\r\nexport var STR_SET_AUTHENTICATED_USER_CONTEXT = \"set\" + _AUTHENTICATED_USER_CONTEXT;\r\nexport var STR_CLEAR_AUTHENTICATED_USER_CONTEXT = \"clear\" + _AUTHENTICATED_USER_CONTEXT;\r\nexport var CONFIG_ENDPOINT_URL = \"https://js.monitor.azure.com/scripts/b/ai.config.1.cfg.json\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_QUEUE = \"queue\"; // Count: 6\r\nexport var _DYN_CONNECTION_STRING = \"connectionString\"; // Count: 4\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 5\r\nexport var _DYN_INSTRUMENTATIONKEY0 = \"instrumentationkey\"; // Count: 2\r\nexport var _DYN_USER_OVERRIDE_ENDPOI1 = \"userOverrideEndpointUrl\"; // Count: 6\r\nexport var _DYN_ENDPOINT_URL = \"endpointUrl\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 2\r\nexport var _DYN_ONUNLOAD_FLUSH = \"onunloadFlush\"; // Count: 6\r\nexport var _DYN_CONTEXT = \"context\"; // Count: 5\r\nexport var _DYN_ADD_HOUSEKEEPING_BEF2 = \"addHousekeepingBeforeUnload\"; // Count: 2\r\nexport var _DYN_SEND_MESSAGE = \"sendMessage\"; // Count: 3\r\nexport var _DYN_UPDATE_SNIPPET_DEFIN3 = \"updateSnippetDefinitions\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { throwUnsupported } from \"@nevware21/ts-utils\";\r\nimport { AppInsightsSku } from \"./AISku\";\r\nimport { _DYN_UPDATE_SNIPPET_DEFIN3 } from \"./__DynamicConstants\";\r\nvar ApplicationInsightsContainer = /** @class */ (function () {\r\n    function ApplicationInsightsContainer() {\r\n    }\r\n    ApplicationInsightsContainer.getAppInsights = function (snippet, version) {\r\n        var theSku = new AppInsightsSku(snippet);\r\n        // Two target scenarios:\r\n        // Removed: 1. Customer runs v1 snippet + runtime. If customer updates just cdn location to new SDK, it will run in compat mode so old apis work\r\n        // 2. Customer updates to new snippet (that uses cdn location to new SDK. This is same as a new customer onboarding\r\n        // and all api signatures are expected to map to new SDK. Note new snippet specifies version\r\n        if (version >= 2.0) {\r\n            theSku[_DYN_UPDATE_SNIPPET_DEFIN3 /* @min:%2eupdateSnippetDefinitions */](snippet);\r\n            theSku.loadAppInsights(false);\r\n            return theSku; // default behavior with new snippet\r\n        }\r\n        throwUnsupported(\"V1 API compatibility is no longer supported\");\r\n    };\r\n    return ApplicationInsightsContainer;\r\n}());\r\nexport { ApplicationInsightsContainer };\r\n//# sourceMappingURL=ApplicationInsightsContainer.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strUndefined } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { ApplicationInsightsContainer } from \"./ApplicationInsightsContainer\";\r\nimport { _DYN_VERSION } from \"./__DynamicConstants\";\r\n// ----------------------------------------------------------------------------------------------------\r\n// Exports available from the Cdn bundles\r\n// ----------------------------------------------------------------------------------------------------\r\nexport { AppInsightsSku as ApplicationInsights } from \"./AISku\";\r\nexport { LoggingSeverity, PerfEvent, PerfManager, doPerf, newId, newGuid, random32, randomValue, generateW3CId, findW3cTraceParent, findMetaTag, mergeEvtNamespace, eventOn, eventOff, addEventHandler, removeEventHandler, isBeaconsSupported } from \"@microsoft/applicationinsights-core-js\";\r\nexport { RequestHeaders, DisabledPropertyName, DEFAULT_BREEZE_ENDPOINT, SeverityLevel, DistributedTracingModes, PropertiesPluginIdentifier, BreezeChannelIdentifier, AnalyticsPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\n// ----------------------------------------------------------------------------------------------------\r\n// End of Exports available from the Cdn bundles\r\n// ----------------------------------------------------------------------------------------------------\r\nfunction _logWarn(aiName, message) {\r\n    // TODO: Find better place to warn to console when SDK initialization fails\r\n    var _console = getInst(\"console\");\r\n    if (_console && _console.warn) {\r\n        _console.warn(\"Failed to initialize AppInsights JS SDK for instance \" + (aiName || \"<unknown>\") + \" - \" + message);\r\n    }\r\n}\r\n// should be global function that should load as soon as SDK loads\r\ntry {\r\n    // E2E sku on load initializes core and pipeline using snippet as input for configuration\r\n    // tslint:disable-next-line: no-var-keyword\r\n    var aiName;\r\n    if (typeof window !== strUndefined) {\r\n        var _window = window;\r\n        aiName = _window[\"appInsightsSDK\"] || \"appInsights\";\r\n        if (document.currentScript) {\r\n            aiName = document.currentScript.getAttribute(\"data-ai-name\") || aiName;\r\n        }\r\n        if (typeof JSON !== strUndefined) {\r\n            // get snippet or initialize to an empty object\r\n            if (_window[aiName] !== undefined) {\r\n                // this is the typical case for browser+snippet\r\n                var snippet = _window[aiName] || { version: 2.0 };\r\n                // overwrite snippet with full appInsights\r\n                // only initiaize if required and detected snippet version is >= 2 or not defined\r\n                if ((snippet[_DYN_VERSION /* @min:%2eversion */] >= 2 && _window[aiName].initialize) || snippet[_DYN_VERSION /* @min:%2eversion */] === undefined) {\r\n                    ApplicationInsightsContainer.getAppInsights(snippet, snippet[_DYN_VERSION /* @min:%2eversion */]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            _logWarn(aiName, \"Missing JSON - you must supply a JSON polyfill!\");\r\n        }\r\n    }\r\n    else {\r\n        _logWarn(aiName, \"Missing window\");\r\n    }\r\n    // Hack: If legacy SDK exists, skip this step (Microsoft.ApplicationInsights exists).\r\n    // else write what was there for v2 SDK prior to rollup bundle output name change.\r\n    // e.g Microsoft.ApplicationInsights.ApplicationInsights, Microsoft.ApplicationInsights.Telemetry\r\n    // @todo uncomment once integration tests for this can be added\r\n    // if (typeof window !== strUndefined && window && ((window as any).Microsoft && !(window as any).Microsoft.ApplicationInsights)) {\r\n    //     (window as any).Microsoft = (window as any).Microsoft || {};\r\n    //     (window as any).Microsoft.ApplicationInsights = {\r\n    //         ApplicationInsights, Telemetry\r\n    //     };\r\n    // }\r\n}\r\ncatch (e) {\r\n    _logWarn(aiName, e.message);\r\n}\r\n//# sourceMappingURL=Init.js.map"],"names":["_pureAssign","func1","func2","_pureRef","value","name","_primitiveTypes","UNDEF_VALUE","undefined","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","ObjClass","Object","ObjProto","StrCls","String","StrProto","MathCls","Math","ArrCls","Array","ArrProto","ArrSlice","safe","func","argArray","v","apply","this","e","_createIs","theType","_createObjIs","theName","call","isUndefined","isNullOrUndefined","isDefined","arg","isString","isFunction","isObject","isArray","isDate","isNumber","isBoolean","isError","isPromiseLike","then","isTruthy","defValue","result","objGetOwnPropertyDescriptor","objHasOwnProperty","obj","prop","hasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","theObject","callbackfn","thisArg","propMap","c","w","g","s","objDefineProp","objDefine","target","key","propDesc","l","get","desc","set","newValue","_createKeyValueMap","values","keyType","valueType","completeFn","writable","theMap","_assignMapValue","enumerable","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stack","message","JSON","stringify","replace","throwError","Error","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objAssign","objKeys","objDeepFreeze","objFreeze","objGetPrototypeOf","createEnumKeyMap","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","match","matchAll","search","species","split","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","globalThis","self","window","global","_getGlobalConfig","gbl","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theArgs","theFunc","arguments","_unwrapProp","propName","mathMax","strSlice","strSubstring","strSubstr","polyStrSubstr","start","length","strLeft","count","_polySymbols","_wellKnownSymbolCache","_globalLazyTestHooks","polyNewSymbol","description","theSymbol","toString","_initTestHooks","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","lzy","getGlobal","useCached","getInst","getWindow","_symbol","_symbolFor","_iterSymbol$1","getDocument","getNavigator","getHistory","isNode","process","versions","node","isWebWorker","WorkerGlobalScope","_initSymbol","_getSymbolKey","gblSym","getSymbol","getKnownSymbol","noPoly","knownName","sym","newSymbol","symbolFor","gblCfg","k","newSymbol_1","regId_1","registry","isIterator","next","isIterable","iterForOf","iter","err","iterResult","done","failed","throw","return","fnApply","fn","arrAppend","elms","push","elm","arrForEach","theArray","len","idx","arrIndexOf","arrMap","arrSlice","_isProtoArray","_unsupportedError","arrReduce","objCreate","polyObjCreate","type","tempFunc","objSetPrototypeOf","proto","d","b","_a","_setName","baseClass","createCustomError","constructCb","errorBase","theBaseClass","orgName","captureFn","captureStackTrace","_this","orgProto","_self","__","throwUnsupported","utcNow","Date","now","polyUtcNow","getTime","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","strTrim","isPlainObject","Function","ex","_defaultDeepCopyHandler","details","plainObjDeepCopyHandler","defaultDeepCopyHandlers","copyTo","_deepCopy","visitMap","ctx","source","theEntry","userHandler","handler","newPath","path","concat","newCtx","src","isPlain","isPrim","indexOf","origin","copy","newKey","_copyProps","cb","newEntry","entry","_doExtend","theArg","deepExtend","_perf","getLength","getPerformance","strSplit","setValueByKey","lastKey","parts","pop","strEndsWith","polyStrEndsWith","searchString","searchValue","end","strIndexOf","UNREF","HAS_REF","_createTimeoutWith","startTimer","overrideFn","refreshFn","cancelFn","theTimerHandler","ref","timerId","isArr","setFn","setTimeout","clearFn","clearTimeout","timerFn","dn","refresh","cancel","_cancel","_refresh","hasRef","_unref","h","scheduleTimeout","aggregationErrorType","createEnumStyle","ActiveStatus","NONE","PENDING","INACTIVE","ACTIVE","_DYN_TO_LOWER_CASE","_DYN_BLK_VAL","_DYN_LENGTH","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_LOGGER","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_HDLR","_DYN_CANCEL","_DYN_INITIALIZE","_DYN_IDENTIFIER","_DYN_REMOVE_NOTIFICATION_0","_DYN_ADD_NOTIFICATION_LIS1","_DYN_IS_INITIALIZED","_DYN_INSTRUMENTATION_KEY","_DYN__INACTIVE","_DYN_VALUE","_DYN_GET_NOTIFY_MGR","_DYN_GET_PLUGIN","_DYN_NAME","_DYN_I_KEY","_DYN_TIME","_DYN_PROCESS_NEXT","_DYN_GET_PROCESS_TEL_CONT2","_DYN_POLL_INTERNAL_LOGS","_DYN_ENABLED","_DYN_STOP_POLLING_INTERNA3","_DYN_UNLOAD","_DYN_ON_COMPLETE","_DYN_VERSION","_DYN_LOGGING_LEVEL_CONSOL4","_DYN_CREATE_NEW","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_MESSAGE","_DYN_IS_ASYNC","_DYN_DIAG_LOG","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_PROTOCOL","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_LOG_INTERNAL_MESSAGE","_DYN_TYPE","_DYN_HANDLER","_DYN_STATUS","_DYN_GET_RESPONSE_HEADER","_DYN_GET_ALL_RESPONSE_HEA5","_DYN_IS_CHILD_EVT","_DYN_DATA","_DYN_GET_CTX","_DYN_SET_CTX","_DYN_COMPLETE","_DYN_ITEMS_RECEIVED","_DYN_URL_STRING","_DYN_SEND_POST","_DYN_HEADERS","_DYN_TIMEOUT","_DYN_SET_REQUEST_HEADER","_DYN_TRACE_ID","_DYN_SPAN_ID","_DYN_TRACE_FLAGS","_DYN_GET_ATTRIBUTE","strShimFunction","strShimObject","strShimUndefined","strShimPrototype","strHasOwnProperty","__assignFn","t","i","n","p","extendStaticsFn","__proto__","__extendsFn","constructor","__spreadArrayFn","to","from","il","j","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","curProto","newProto","_forEachProp","props","name_1","lp","_isDynamicCandidate","skipOwn","_throwTypeError","_hasVisited","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","options","thisTarget","instFuncs","baseInstFuncs","instFuncs_1","classProto","className","visited","thisProto","_checkPrototype","perfOptions","useBaseInst","setInstanceFunc","_instFuncProxy","funcHost","instFuncTable","baseFuncs","baseProto","_getBaseFuncs","dynProtoProxy","protoFunc","currentDynProtoProxy","instFunc","canAddInst","objProto","_getInstFunc","STR_PROMISE","REJECTED","doAwaitResponse","doAwait","status","rejected","reason","resolveFn","rejectFn","finallyFn","finally","_hasInitEvent","STRING_STATES","DISPATCH_EVENT","_hasInitEventFn","doc","evt","createEvent","initEvent","_hasPromiseRejectionEvent","_promiseCls","_promiseCreator","_allSettledCreator","NODE_UNHANDLED_REJECTION","UNHANDLED_REJECTION","toLowerCase","_unhandledRejectionTimeout","dumpFnObj","_createPromise","newPromise","processor","executor","_settledValue","_thePromise","additionalArgs","_state","_hasResolved","_queue","_handled","_unHandledRejectionHandler","_then","onResolved","onRejected","resolve","reject","_processQueue","_strState","pending","slice","_createSettleIfFn","newState","allowState","theValue","_notifyUnhandledRejection","evtName","theConsole","theEvt","emit","populateEvent","useNewEvent","Event","catch","onFinally","thenFinally","catchFinally","_rejectFn","_createAllPromise","input","values_1","pending_1","item","_createAllSettledPromise","processItem","createAsyncPromise","timeout","callbackTimeout","createNativePromise","PrmCls","thePromise","createPromise","createAllPromise","UNDEFINED_VALUE","STR_EMPTY","STR_CHANNELS","STR_CORE","STR_CREATE_PERF_MGR","STR_DISABLED","STR_EXTENSION_CONFIG","STR_EXTENSIONS","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_EVENTS_SENT","STR_EVENTS_DISCARDED","STR_EVENTS_SEND_REQUEST","STR_PERF_EVENT","STR_OFFLINE_STORE","STR_OFFLINE_SENT","STR_OFFLINE_DROP","STR_GET_PERF_MGR","STR_DOMAIN","STR_PATH","STR_NOT_DYNAMIC_ERROR","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotNullOrUndefined","normalizeJsName","_all","letter","toUpperCase","strContains","toISOString","date","getExceptionName","setValue","field","valChk","srcChk","getSetValue","_createProxyFunction","srcFunc","originalArguments","proxyFunctionAs","overwriteTarget","proxyFunctions","functionsToProxy","theFuncName","optimizeObject","ObjAssign","isFeatureEnabled","feature","cfg","ft","featureOptIn","mode","getResponseText","xhr","responseText","formatErrorMessageXdr","xdr","formatErrorMessageXhr","response","prependTransports","theTransports","newTransports","strWithCredentials","_appendHeader","theHeaders","STR_KILL_DURATION_HEADER","STR_KILL_DURATION_SECONDS_HEADER","STR_TIME_DELTA_HEADER","_getAllResponseHeaders","isOneDs","headersString","headers","headerEntry","header","substring","strDocumentMode","strLocation","strConsole","strJSON","strCrypto","strMsCrypto","strMsie","strTrident","strXMLHttpRequest","_isTrident","_navUserAgentCheck","_enableMocks","_useXDomainRequest","_beaconsSupported","_hasProperty","property","supported","getLocation","checkForMock","mockLocation","location","hasJSON","getJSON","isIE","nav","userAgent","getIEVersion","userAgentStr","ua","navigator_1","max","parseInt","tridentVer","isBeaconsSupported","sendBeacon","isFetchSupported","withKeepAlive","isSupported","request","isXhrSupported","_getNamedValue","findMetaTag","querySelectorAll","content","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","randomValue","maxValue","floor","random32","signed","seedValue","getRandomValues","Uint32Array","random","newId","maxLength","number","chars","base64chars","version","instanceName","_dataUid","_canAcceptData","createUniqueNamespace","includeVersion","createElmNodeData","data","id","accept","addDefault","theCache","_getCache","kill","_isConfigDefaults","isVal","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","_applyDefaultValue","defaultValue","isValid","mergeDf","reference","readOnly","blkDynamicValue","mrg","usingDefault","cfgValue","_resolveDefaultValue","newValue_1","dfName","dfValue","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_canMakeDynamic","getFunc","state","blkVal","throwInvalidAccess","arrayMethodsToPatch","_throwDynamicError","logger","_getOwnPropGetter","_createDynamicProperty","detail","trk","clr","checkDynamic","isObjectOrArray","_getProperty","_makeDynamicObject","activeHandler","act","chng","add","ro","upd","newIsObjectOrArray","isReferenced","rf","_setDynamicProperty","hdlr","getter","valueState","_setDynamicPropertyState","flags","isDynamic","inPlace","rdOnly","blkProp","blockDynamicConversion","method","orgMethod","args","_i","symPrefix","symPostfix","_createState","cfgHandler","theState","dynamicPropertySymbol","uid","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","callback","prevWatcher","bind","setDf","_notifyWatchers","theMessage","notifyHandlers","watcherFailures_1","sourceErrors","errors","srcError","use","_createDynamicHandler","getDynamicConfigHandler","newTarget","_cfgDeepCopy","target_1","defaultValues","configHandler","rm","_block","allowUpdate","prevUpd","createDynamicConfig","config","defaultConfig","onConfigChange","runTargetUnload","isAsync","DisabledPropertyName","_stringToBoolOrDefault","cfgDfMerge","cfgDfSet","setter","cfgDfValidate","validator","fallBackName","cfgDfBoolean","_debugListener","listenerFuncs","_aiNamespace","getDebugExt","ns","disableDbgExt","STR_WARN_TO_CONSOLE","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","text","_logToConsole","logFunc","console","_InternalLogMessage","dataType","msgId","msg","isUserAct","properties","strProps","diagnosticText","safeGetLogger","core","DiagnosticLogger","__ieDyn","identifier","queue","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","throttleLimitMessage","throttleMessage","logMessage","messageKey","_debugExtMsg","errorToConsole","dbgExt","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","_getLogger","_throwInternal","_warnToConsole","_doc","strToGMTString","strToUTCString","strCookie","strExpires","strIsCookieUseDisabled","strDisableCookiesUsage","strConfigCookieMgr","_supportsCookies","_allowUaSameSite","_parsedCookieValue","_cookieCache","_globalCookieConfig","rootDefaultConfig","cookieCfg","_b","enabled","ignoreCookies","blockedCookies","cookieDomain","cookiePath","_getDoc","lazyValue","configurable","_isMgrEnabled","cookieMgr","isEnabled","_isIgnoredCookie","cookieMgrCfg","_isCfgEnabled","rootConfig","cookieMgrConfig","cookieEnabled","isCfgEnabled","safeGetCookieMgr","getCookieMgr","createCookieMgr","inst","unloadHandler","_path","_domain","_enabled","_getCookieFn","getCookie","_getCookieValue","_setCookieFn","setCookie","_setCookieValue","_delCookieFn","delCookie","areCookiesSupported","gblManager","setEnabled","maxAgeSec","domain","location_1","_extractParts","_isIE","expireMs","expiry","setTime","_formatDate","_formatCookieValue","del","purge","exception","thePart","theDate","cookieValue","theCookie","perfEvtsSendAll","_runScheduledListeners","asyncNotifications","callbacks","_runListeners","listeners","listener","NotificationManager","_listeners","_asyncNotifications","index","events","sendReason","perfEvent","batch","cnt","rn_1","waiting","_finishUnload","asyncUnload","strParentContextKey","strChildrenContextKey","PerfEvent","ParentContextKey","ChildrenContextKey","payloadDetails","theDetails_1","childTime","childEvts","childEvt","exTime","PerfManager","manager","create","fire","doPerfActiveKey","doPerf","mgrSource","getSource","perfMgr","children","perfEvt","currentActive","generateW3CId","tmp","hexValues","oct","a","clockSequenceHi","TRACE_PARENT_REGEX","DEFAULT_VERSION","INVALID_VERSION","INVALID_TRACE_ID","INVALID_SPAN_ID","_isValid","invalidValue","_formatValue","createTraceParent","traceId","spanId","isValidTraceId","isValidSpanId","traceFlags","parseTraceParent","selectIdx","exec","formatTraceParent","isNaN","_formatFlags","pluginStateData","_getPluginState","plugin","initializePlugins","processContext","extensions","initPlugins","lastPlugin","proxy","pluginState","isInitialized","thePlugin","getCfg","sortPlugins","plugins","sort","extA","extB","bHasProcess","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_createInternalContext","telemetryChain","startAt","_nextProxy","_onComplete","context","createTelemetryProxyChain","_getNextProxyStart","_next","onComplete","nextProxy","completeDetails","diagLog","getExtCfg","newConfig","_getExtCfg","getConfig","extConfig","hasNext","getNext","setNext","nextPlugin","iterate","that","createIfMissing","extCfg","idCfg","createProcessTelemetryContext","internalContext","env","createProcessTelemetryUnloadContext","unloadState","createProcessTelemetryUpdateContext","updateState","lastProxy_1","firstProxy","newProxy","createTelemetryPluginProxy","_setNext","hasProcessTelemetry","hasSetNext","chainId","proxyChain","getPlugin","processTelemetry","itemCtx","_processChain","unload","unloadCtx","pluginCore","hasRun","update","updateCtx","_id","processPluginFn","hasRunContext","nextId","error","hasNextRun","createUnloadHandlerContainer","handlers","run","createUnloadHookContainer","_hooks","oldHooks","remove","hooks","strGetPlugin","BaseTelemetryPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","_hookContainer","_getTelCtx","currentCtx","rootCtx","_setDefaults","pluginChain","_initDefaults","unloadDone","theUnloadCtx","theUnloadState","_unloadCallback","updateDone","theUpdateCtx","_doUpdate","_updateCallback","setInitialized","_runInitializers","_initializers","doNotSendItem","telemetryInitializersCount","telemetryInitializer","__extends","TelemetryInitializerPlugin","_super","priority","_base","addTelemetryInitializer","theInitializer","initializer","strValidationError","strSdkUnloadingError","diagnosticLogInterval","_createPerfManager","notificationMgr","_isPluginPresent","exists","_findWatcher","newWatcher","theListener","AppInsightsCore","_configHandler","_isInitialized","_logger","_eventQueue","_notificationManager","_perfManager","_cfgPerfManager","_cookieManager","_pluginChain","_configExtensions","_channelConfig","_channels","_isUnloading","_telemetryInitializerPlugin","_internalLogsEventName","_evtNamespace","_unloadHandlers","_traceCtx","_instrumentationKey","_cfgListeners","_extensions","_pluginVersionStringArr","_pluginVersionString","_activeStatus","_endpoint","_initInMemoMaxSize","_isStatusSet","_internalLogPoller","_internalLogPollerListening","_forceStopInternalLogPoller","_setStatus","_releaseQueues","releaseQueue","_startLogPoller","alwaysStart","_addUnloadHook","interval","isRunning","createTimeout","_flushInternalLogs","unref","_setPluginVersions","thePlugins","_addPluginVersions","ver","channels","updateCfg","join","newLogger","cfgExtensions","splice","_createTelCtx","theCtx","_getPluginChain","_initPluginChain","coreExtensions","extPriorities","ext","extPriority","theExtensions","allExtensions","_getPlugin","pluginIdentifier","channelHosts","getChannel","host","removeCb","pluginsToRemove","_removePlugins","removed","removeComplete","newConfigExtensions","newChannelConfig","newQueue","channel","baseType","baseData","track","_flushChannels","callBack","cbTimeout","doneIterating","cbTimer","doCallback","handled_1","flush","_updateHook","_logOrThrowError","_notifyInvalidEvent","telemetryItem","activeStatus","_setPendingStatus","notificationManager","rootCfg","initInMemoMaxSize","ikey","endpointUrl","promises","initTimeout","initTimeOut","allPromises","ikeyRes","endpointRes","unloadContainer","debugListener","_listenerProxyFunc","getDebugListener","createPerfMgr","enablePerfMgr","prevCfgPerfMgr","teeController","__spreadArray","unloadHdl","getChannels","controls","getNotifyMgr","setCookieMgr","setPerfMgr","eventCnt","eventQueue","event","eventName","unloadComplete","flushComplete","processUnloadCtx","doUnloadAll","targets","resolved","addPlugin","replaceExisting","addCb","existingPlugin","removedPlugins_1","_addPlugin","added","mergeExisting","oldCfg","merge","_deepMergeConfig","newValues","evtNamespace","getTraceCtx","createNew","trace","getName","setName","getTraceId","setTraceId","getSpanId","setSpanId","getTraceFlags","setTraceFlags","newTraceFlags","setTraceCtx","traceCtx","addUnloadHook","onCfgChange","unloadHook","fnd","getWParam","enableWParam","parseResponse","parse","itemsAccepted","itemsReceived","_noResponseQs","SenderPostManager","_enableSendPromise","_diagLog","_isOneDs","_onCompleteFuncs","_disableCredentials","_fetchCredentials","_fallbackInst","_disableXhr","_disableBeacon","_disableBeaconSync","_disableFetchKeepAlive","_addNoResponse","_timeoutWrapper","_syncFetchPayload","_sendCredentials","_onError","_doOnComplete","_onNoPayloadUrl","oncomplete","_doBeaconSend","payload","url","plainTextBatch","Blob","_beaconSender","sync","onRetry","beaconOnRetry","_xhrSender","resolveFunc","rejectFunc","endPointUrl","disableXhrSync","urlString","withCredentials","isSync","disabled","XMLHttpRequest","_wrapSetXhrProp","open","STR_POST_METHOD","_doOnReadyFunc","onReadyFunc","xhrOnComplete","headerName","onreadystatechange","readyState","onload","onerror","ontimeout","send","_doFetchSender","requestHeaders","Headers","batchLength","ignoreResponse","responseHandled","body","append","init","credentials","keepalive","Request","_handleError","res","_onFetchComplete","onCompleteFunc","fetchOnComplete","fetch","response_1","ok","resp","statusText","_xdrSender","_window","XDomainRequest","hostingProtocol","onloadFunc","xdrOnComplete","onprogress","endpoint","lastIndexOf","SetConfig","senderOnCompleteCallBack","disableCredentials","fetchCredentials","enableSendPromise","disableXhr","disableBeacon","disableBeaconSync","timeWrapper","addNoResponse","disableFetchKeepAlive","sendPOST","protocol","getSyncFetchPayload","getSenderInst","transports","_getSenderInterface","syncSupport","transportType","sendPostFunc","_transport","_isSync","getFallbackInst","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","strVisibilityChangeEvt","strPageHide","strBeforeUnload","strPageHideNamespace","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","theNamespace_1","parsedEvent","_getRegisteredEvents","aiEvts","_doDetach","handlerRef","useCapture","_doUnregister","unRegFn","theEvent","capture","mergeEvtNamespace","theNamespace","namespaces","eventOn","registeredEvent","guid","eventOff","evtName_1","found_1","regEvent","eventCache","evtType","addEventHandler","removeEventHandler","_addEventListeners","excludeEvents","removeEventListeners","addPageHideEventListener","newNamespaces","pageUnloadAdded","visibilityState","LoggingSeverity","DISABLED","CRITICAL","WARNING","DEBUG","aiInstrumentHooks","cbNames","_arrLoop","arr","_doCallbacks","callDetails","cbArgs","hookCtx","hook","cbks","orgEx","hookErrorCb","_createFunctionHook","aiHook","orgArgs","funcArgs","_createArgs","f","rslt","_getOwner","checkPrototype","checkParentProto","owner","_createInstrumentHook","theHook","newFunc","InstrumentFunc","InstrumentEvent","mapClass","SampleRate","ProcessLegacy","HttpMethod","DEFAULT_BREEZE_ENDPOINT","DEFAULT_BREEZE_PATH","strNotSpecified","strIkey","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","traceStateHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","_DYN_INGESTIONENDPOINT","_DYN_TO_STRING","_DYN_REMOVE_ITEM","_DYN_COUNT","_DYN_PRE_TRIGGER_DATE","_DYN_DISABLED","_DYN_INTERVAL","_DYN_DAYS_OF_MONTH","_DYN_DATE","_DYN_GET_UTCDATE","_DYN_STRINGIFY","_DYN_PATHNAME","_DYN_CORRELATION_HEADER_E0","_DYN_EXCEPTIONS","_DYN_PARSED_STACK","_DYN_PROPERTIES","_DYN_MEASUREMENTS","_DYN_SIZE_IN_BYTES","_DYN_TYPE_NAME","_DYN_SEVERITY_LEVEL","_DYN_PROBLEM_GROUP","_DYN_IS_MANUAL","_DYN__CREATE_FROM_INTERFA1","_DYN_ASSEMBLY","_DYN_FILE_NAME","_DYN_HAS_FULL_STACK","_DYN_LEVEL","_DYN_METHOD","_DYN_LINE","_DYN_DURATION","_DYN_RECEIVED_RESPONSE","dataSanitizeKeyAndAddUniqueness","map","nameTrunc","origLength","uniqueField","dataSanitizeString","valueTrunc","dataSanitizeUrl","dataSanitizeInput","dataSanitizeMessage","messageTrunc","dataSanitizeProperties","tempProps_1","dataSanitizeMeasurements","measurements","tempMeasurements_1","measure","_msgId","inputTrunc","_document","_htmlAnchorIdx","_htmlAnchorElement","urlParseUrl","anchorIdx","anchorCache","tempAnchor","createElement","fullHost","urlParseFullHost","urlParseHost","href","inclPort","port","_internalEndpoints","_correlationIdPrefix","isInternalApplicationInsightsEndpoint","correlationIdCanIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","correlationHeaderExcludePatterns","test","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","regex","RegExp","excludedDomains","correlationHeaderExcludedDomains","correlationIdGetCorrelationContext","responseHeader","correlationId","keyValues","keyValue","correlationIdGetCorrelationContextValue","dateTimeUtilsNow","perf","timing","navigationStart","dateNow","dateTimeUtilsDuration","createDistributedTraceContextFromTrace","telemetryTrace","parentCtx","traceID","parentID","StorageType","LocalStorage","SessionStorage","DistributedTracingModes","AI","AI_AND_W3C","W3C","_canUseLocalStorage","_canUseSessionStorage","_storagePrefix","_getLocalStorageObject","utlCanUseLocalStorage","_getVerifiedStorageObject","storageType","storage","getGlobalInst","fail","setItem","getItem","_getSessionStorageObject","utlCanUseSessionStorage","utlSetStoragePrefix","storagePrefix","reset","utlGetLocalStorage","utlSetLocalStorage","utlRemoveStorage","utlGetSessionStorage","utlSetSessionStorage","utlRemoveSessionStorage","ThrottleMgr","namePrefix","_config","_localStorageObj","_isTriggered","_namePrefix","_isReady","_isSpecificDaysGiven","_flushMessage","msgID","saveUnsentMsg","_getCfgByKey","limit","samplingRate","_canSampledIn","localStorageObj","_getLocalStorageObjByKey","canThrottle","_canThrottle","throttled","isTriggered","_isTrigger","min","maxSendNumber","localStorageName","_getLocalStorageName","_resetLocalStorage","isThrottled","throttleNum","_getQueueByKey","_setCfgByKey","monthInterval","dayInterval","curCfg","configInterval","daysOfMonth","canUseLocalStorage","monthCheck","dayCheck","curDate","_getThrottleDate","monthExpand","getUTCFullYear","getUTCMonth","_checkInterval","daySpan","msgKey","prefix","fix","dateStr","getDate","storageName","current","curObj","storageObj","preTriggerDate","_getLocalStorageObj","isTrigger","_isTriggeredOnCurDate","coreConfig","throttleMgrCfg","localObj","isReady","items","flushAll","result_1","isFlushed","onReadyState","sendMessage","_FIELDS_SEPARATOR","_FIELD_KEY_VALUE_SEPARATOR","parseConnectionString","connectionString","locationPrefix","kvPairs","fields","kv","kvParts","endpointsuffix","Envelope","sampleRate","tags","time","aiDataContract","iKey","envelopeType","strError","strStack","strStackDetails","strErrorSrc","strMessage","strDescription","_stringify","convertToString","_formatMessage","errorType","evtMessage","_isStackDetails","_convertStackObj","errorStack","_getStackFromErrorObj","errorObj","errorMessage","lines","_getOperaStack","_getErrorType","typeName","results","_formatErrorCode","Exception","CreateAutoException","lineNumber","columnNumber","errorSrc","stackDetails","CreateFromInterface","exceptions","_ExceptionDetails","__assign","prototype","toInterface","severityLevel","problemGroup","isManual","exceptionDetailsInterface","CreateSimpleException","assembly","fileName","line","formatError","_isExceptionInternal","parsedStack","frame","outerId","hasFullStack","_StackFrame","exceptionTrunc","_isExceptionDetailsInternal","frames","level_1","totalSizeInBytes_1","theFrame","parsedFrame","left","right","size","acceptedLeft","acceptedRight","_parseStack","level","baseSize","sourceFrame","matches","sizeInBytes","DataPoint","kind","stdDev","Metric","metrics","dataPoint","strEmpty","msToTimeSpan","totalms","sec","round","hour","days","ms","PageView","durationMs","duration","RemoteDependencyData","absoluteUrl","commandName","success","resultCode","requestAPI","correlationContext","dependencyKind","dependencySource","dependencyTypeName","pathName","dependencyFields","parsedUrl","pathname","Trace","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","Data","SeverityLevel","Verbose","Information","Warning","Critical","_aiNameFunc","baseName","aiName","defaults","_aiApplication","_aiDevice","_aiLocation","_aiOperation","_aiSession","_aiUser","_aiCloud","_aiInternal","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","createTelemetryItem","envelopeName","customProperties","systemProperties","CtxTagKeys","createDomEvent","_disableEvents","PropertiesPluginIdentifier","BreezeChannelIdentifier","AnalyticsPluginIdentifier","_DYN_IS_STORAGE_USE_DISAB0","_DYN__ADD_HOOK","_DYN_CORE","_DYN_DATA_TYPE","_DYN_ENVELOPE_TYPE","_DYN_TRACK","_DYN_TRACK_PAGE_VIEW","_DYN_TRACK_PREVIOUS_PAGE_1","_DYN_SEND_PAGE_VIEW_INTER2","_DYN_START_TIME","_DYN_SEND_PAGE_VIEW_PERFO3","_DYN_POPULATE_PAGE_VIEW_P4","_DYN_HREF","_DYN_SEND_EXCEPTION_INTER5","_DYN_EXCEPTION","_DYN_ERROR","_DYN__ONERROR","_DYN_ERROR_SRC","_DYN_LINE_NUMBER","_DYN_COLUMN_NUMBER","_DYN__CREATE_AUTO_EXCEPTI6","_DYN_ADD_TELEMETRY_INITIA7","_DYN_AUTO_TRACK_PAGE_VISI9","_DYN_IS_BROWSER_LINK_TRAC10","_DYN_ENABLE_AUTO_ROUTE_TR11","_DYN_ENABLE_UNHANDLED_PRO12","_DYN_AUTO_UNHANDLED_PROMI13","_DYN_GET_ENTRIES_BY_TYPE","_DYN_IS_PERFORMANCE_TIMIN14","_DYN_GET_PERFORMANCE_TIMI15","_DYN_NAVIGATION_START","_DYN_SHOULD_COLLECT_DURAT16","_DYN_IS_PERFORMANCE_TIMIN17","_DYN_RESPONSE_START","_DYN_REQUEST_START","_DYN_LOAD_EVENT_END","_DYN_RESPONSE_END","_DYN_CONNECT_END","_DYN_PAGE_VISIT_START_TIM18","PageViewManager","appInsights","overridePageViewDuration","pageViewPerformanceManager","queueTimer","itemQueue","pageViewPerformanceSent","firstPageViewSent","_addQueue","_startTimer","allItems","doFlush","pageView","loadEventStart","duration_1","uri","title","navigationEntries","timeOrigin","customDuration","pageViewSent","pageViewPerformance","processed","teardown","MAX_DURATION_ALLOWED","botAgentNames","_isPerformanceTimingSupported","_isPerformanceTimingDataReady","domainLookupStart","domLoading","_getPerformanceTiming","_shouldCollectDuration","durations","isGoogleBot","PageViewPerformanceManager","navigationTiming","getEntriesByType","total","network","dom","requestStart","responseEnd","PageVisitTimeManager","pageVisitTimeTrackingHandler","prevPageVisitDataKeyName","restartPageVisitTimer","pageName","pageUrl","prevPageVisitData","currPageVisitDataStr","stopPageVisitTimer","PageVisitData","pageVisitEndTime","pageVisitDataJsonStr","pageVisitTime","currentPageName","currentPageUrl","prevPageVisitTimeData","Timing","_events","stop","action","_dispatchEvent","evnt","dispatchEvent","sessionRenewalMs","_chkConfigMilliseconds","sessionExpirationMs","disableExceptionTracking","samplingPercentage","disableFlushOnBeforeUnload","disableFlushOnUnload","expCfg","inclScripts","AnalyticsPlugin","Version","_eventTracking","_pageTracking","_pageViewManager","_pageViewPerformanceManager","_pageVisitTimeManager","_preInitTelemetryInitializers","_isBrowserLinkTrackingEnabled","_browserLinkInitializerAdded","_enableAutoRouteTracking","_historyListenerAdded","_disableExceptionTracking","_autoExceptionInstrumented","_enableUnhandledPromiseRejectionTracking","_autoUnhandledPromiseInstrumented","_extConfig","_autoTrackPageVisitTime","_prevUri","_currUri","autoRoutePVDelay","_addHook","throwInternal","processNext","trackEvent","EventTelemetry","startTrackEvent","stopTrackEvent","trackTrace","trackMetric","metric","inPv","refUri","referrer","trackPageViewPerformance","inPvp","startTrackPage","stopTrackPage","measurement","loc","theError","exceptionPartB","scripts","getElementsByTagName","script","crossOrigin","async","defer","hasAttribute","referrerPolicy","info","scriptsInfo","trackException","URL","errorString","initialize","_location","browserLinkPaths_1","envelope","remoteData","average","sampleCount","PageName","PageUrl","locn","autoExceptionInstrumented","rsp","win","history","_history","pushState","replaceState","strUndefined","distributedTraceCtx","traceLocationName","hash","_doTeardown","_DYN_FEATURE_OPT_IN","_DYN_ON_CFG_CHANGE_RECEIV0","_DYN_NON_OVERRIDE_CONFIGS","_DYN_SCHEDULE_FETCH_TIMEO1","F","OFF","udfVal","_defaultConfig","syncMode","blkCdnCfg","customEvtName","cfgUrl","overrideSyncFn","overrideFetchFn","instrumentationKey","CfgSyncPlugin","_extensionConfig","_mainConfig","_evtName","_cfgUrl","_timeoutHandle","_receiveChanges","_broadcastChanges","_blkCdnCfg","_fetchTimeout","_retryCnt","_onCfgChangeReceive","_nonOverrideConfigs","_fetchFn","_overrideFetchFn","_overrideSyncFn","_paused","_setCfg","isAutoSync","_sendCfgsyncEvents","_eventOff","global_1","customDetails","sendCustomEvent","CustomEvent","initCustomEvent","_updateEventListenerName","global_2","cfgEvent","newCfg","_replaceTartgetByKeys","_fetchSender","fetchFn","xhr_1","DONE","JSON_1","cdnCfg","optInMap","cdnConfig_1","val","featureVal","userOptInDetails","cdnFt","cdnM","cdnOnV","onCfg","cdnOffV","offCfg","userFt","userM","userOnV","userOffV","blockCdn","blockCdnCfg","onFld","offFld","onV","offV","resolveCdnFeatureCfg","dVal","applyCdnfeatureCfg","_setupTimer","_cfg","replaceByNonOverrideCfg","nonOverrideConfigs","curLevel","maxLevel","exceedMaxLevel","curCfg_1","objExtend","nonOverrideVal","_clearScheduledTimer","preBlkCdn","newEvtName","pause","resume","setCfg","updateEventListenerName","STR_DURATION","_DYN_TAGS","_DYN_DEVICE_TYPE","_DYN__GET","_DYN_ENQUEUE","_DYN_EVENTS_LIMIT_IN_MEM","_DYN_ITEM","_DYN_EMIT_LINE_DELIMITED_0","_DYN_CLEAR","_DYN_MARK_AS_SENT","_DYN_CLEAR_SENT","_DYN_BUFFER_OVERRIDE","_DYN__BUFFER__KEY","_DYN__SENT__BUFFER__KEY","_DYN_CONCAT","_DYN__MAX__BUFFER__SIZE","_DYN_TRIGGER_SEND","_DYN__SENDER","_DYN_CUSTOM_HEADERS","_DYN_MAX_BATCH_SIZE_IN_BY1","_DYN_ONUNLOAD_DISABLE_BEA2","_DYN_IS_BEACON_API_DISABL3","_DYN_ALWAYS_USE_XHR_OVERR4","_DYN_DISABLE_XHR","_DYN_ENABLE_SESSION_STORA5","_DYN__BUFFER","_DYN_ONUNLOAD_DISABLE_FET6","_DYN_DISABLE_SEND_BEACON_7","_DYN_ENABLE_SEND_PROMISE","_DYN_GET_SENDER_INST","_DYN_UNLOAD_TRANSPORTS","_DYN_CONVERT_UNDEFINED","_DYN_MAX_BATCH_INTERVAL","_DYN_SERIALIZE","_DYN__ON_ERROR","_DYN__ON_PARTIAL_SUCCESS","_DYN__ON_SUCCESS","_DYN_ITEMS_ACCEPTED","_DYN_ORI_PAYLOAD","_DYN_BASE_TYPE","_DYN_SAMPLE_RATE","_DYN_EVENTS_SEND_REQUEST","_DYN_GET_SAMPLING_SCORE","strBaseType","strBaseData","strProperties","strTrue","_setValueIf","_extractPropsAndMeasurements","_convertPropsUndefinedToCustomDefinedValue","customUndefinedValue","_createEnvelope","iKeyNoDashes","startTime","envTags","itmExt","itmTags","extUser","user","extApp","authId","localId","app","extDevice","sesId","device","web","deviceClass","ip","model","extOs","browserLang","browserVer","browser","envProps","envBaseData","envData","screenRes","userConsent","os","extTrace","osVer","tgs","tg","theTags","EnvelopeCreator","EnvelopeCreatorInit","EventEnvelopeCreator","customMeasurements","eventData","BaseSendBuffer","_buffer","_bufferFullMessageSent","_maxRetryCnt","maxRetryCnt","_set","buffer","getItems","batchPayloads","payloads","payloadStr_1","canUseSessionStorage","newBuffer","SessionStorageSendBuffer","ArraySendBuffer","PREVIOUS_KEYS","VERSION","BUFFER_KEY","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","bufferItems","_getBuffer","itemsInSentBuffer","previousItems","_getItemsFromPreviousKey","prefixEvents","_getPreviousEvents","notDeliveredItems","_removePayloadsFromBuffer","remaining","payloadStr","_getBufferBase","bufferJson","buffer_1","_setBuffer","prefixedKey","transFormedItems_1","sentElements","unsentItems","sentItems","Serializer","_serializeObject","circularReferenceCheck","output","contract","isRequired","isHidden","isPresent","isObj","_serializeArray","_serializeStringMap","sources","expectedType","parseFloat","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","charCodeAt","abs","SamplingScoreGenerator","hashCodeGenerator","keys","Sample","isSampledIn","samplingScoreGenerator","_getResponseText","defaultAppInsightsChannelConfig","disableTelemetry","isRetryDisabled","httpXHROverride","retryCodes","bd","currentContextId","pageViewData","pageType","isLoggedIn","exData","baseMetricData","remoteDepData","responseCode","EnvelopeTypeCreator","Sender","constructEnvelope","orig","convertUndefined","_consecutiveErrors","_retryAt","_serializer","_stamp_specific_redirects","_headers","_syncUnloadSender","_offlineListener","_endpointUrl","_orgEndpointUrl","_maxBatchSizeInBytes","_beaconSupported","_beaconOnUnloadSupported","_beaconNormalSupported","_customHeaders","_disableTelemetry","_convertUndefined","_isRetryDisabled","_maxBatchInterval","_sessionStorageUsed","_bufferOverrideUsed","_alwaysUseCustomSend","_fetchKeepAlive","_xhrSend","_fallbackSend","_disableBeaconSplit","_sendPostMgr","_retryCodes","_xdrOnLoad","_xhrReadyStateChange","countOfItemsInPayload","_checkResponsStatus","responseURL","_getPayloadArr","_validate","diagLogger","_sample","_getEnvelope","defaultEnvelopeIkey","aiEnvelope","_serialize","rlt","valid","_batch","_createPayload","_getHeaders","_doSend","sendInterface","markAsSent","payloadData","_getPayload","_onSuccess","_checkMaxSize","incomingPayload","incomingSize","isOnline","responseUrl","_appId","appId","_checkAndUpdateEndPointUrl","_resendPayload","_isRetriable","_doUnloadSend","_isStringArr","_fetchKeepAliveSender","transport","payloadSize","linearFactor","payload_1","delayInSeconds","backOffDelay","pow","retryAfterTimeSpan","retryInterval","statusCode","_notifySendRequest","sendRequest","extended","argLen","deep","isNewArray","clone","isArgArray","isArgObj","onunloadFlush","addHeader","parentEvtNamespace","_navigator","_isListening","listenerList","rState","uState","onLine","_currentState","calCurrentState","_enableEvents","ononline","_setOnline","_setOffline","listnerNoticeCheck","offlineState","isListening","addListener","setOnlineState","createOfflineListener","senderConfig","bufferOverride","customHeader","shouldUpdate","disableValidation","disableInstrumentationKeyValidation","sendPostConfig","onCompleteFuncs","resValue","canSend","_onBeaconRetry","droppedPayload","thePayload","_getSendPostMgrConfig","customInterface","httpInterface","syncInterface","xhrInterface","syncTransports","filter","payloadItem","isCompletelyIdle","forcedSender","ieVer","getOfflineSupport","getUrl","createPayload","shouldProcess","_onPartialSuccess","retry","errors_1","reverse","extracted","STR_PROPERTIES","_DYN_REQUEST_URL","_DYN_INST","_DYN_CONTEXT","_DYN_ABORTED","_DYN_TRACE_ID0","_DYN_SPAN_ID1","_DYN_INCLUDE_CORRELATION_2","_DYN_GET_ABSOLUTE_URL","_DYN_REQUEST_HEADERS","_DYN_TRACK_DEPENDENCY_DAT3","_DYN_ENABLE_REQUEST_HEADE4","_DYN_ENABLE_AJAX_ERROR_ST5","_DYN_ENABLE_AJAX_PERF_TRA6","_DYN_MAX_AJAX_CALLS_PER_V7","_DYN_EXCLUDE_REQUEST_FROM8","_DYN_ADD_REQUEST_CONTEXT","_DYN_DISABLE_AJAX_TRACKIN9","_DYN_AJAX_PERF_LOOKUP_DEL10","_DYN_DISABLE_FETCH_TRACKI11","_DYN_ENABLE_RESPONSE_HEAD12","_DYN_STATUS_TEXT","_DYN_HEADER_MAP","_DYN_OPEN_DONE","_DYN_SEND_DONE","_DYN_REQUEST_SENT_TIME","_DYN_ABORT_DONE","_DYN_GET_TRACE_ID","_DYN_GET_TRACE_FLAGS","_DYN_ERROR_STATUS_TEXT","_DYN_STATE_CHANGE_ATTACHE13","_DYN_RESPONSE_TEXT","_DYN_RESPONSE_FINISHED_TI14","_DYN__CREATE_TRACK_ITEM","_DYN_RESPONSE","_DYN_GET_ALL_RESPONSE_HEA15","_DYN_GET_PART_APROPS","_DYN_PERF_MARK","_DYN_PERF_TIMING","_DYN_AJAX_DIAGNOSTICS_MES16","_DYN_CORRELATION_CONTEXT","_DYN_AJAX_TOTAL_DURATION","_DYN_EVENT_TRACE_CTX","_calcPerfDuration","resourceEntry","_setPerfDuration","_setPerfValue","XHRMonitoringState","setRequestHeaderDone","ajaxRecord","completed","requestHeadersSize","responseReceivingDuration","callbackDuration","requestSize","responseStartedTime","callbackFinishedTime","endTime","xhrMonitoringState","clientFailure","getAbsoluteUrl","getPathName","ajaxType","enableRequestHeaderTracking","getResponse","ajaxTotalDuration","requestSentTime","responseFinishedTime","ajaxData","dependency","server_1","propsSet","strTransferSize","strEncodedBodySize","strDecodedBodySize","strServerTiming","responseType","strConnectEnd","strConnect","strRequestStart","strRequest","strResponseEnd","strResponse","strRedirect","strDomainLookup","serverTiming","perfAttempts","headerMap","responseHeaders","traceExt","partA","strDiagLog","AJAX_DATA_CONTAINER","STR_FETCH","ERROR_HEADER","ERROR_PREFIX","ERROR_POSTFIX","ERROR_NOT_SENT","CORRELATION_HEADER_ERROR","CUSTOM_REQUEST_CONTEXT_ERROR","FAILED_TO_CALCULATE_DURATION_ERROR","_markCount","_supportsAjaxMonitoring","ajaxMonitorInstance","ajaxDataId","strPrototype","abort","xhrData","xh","theOpen","_throwInternalCritical","_getAjaxData","_isHeaderSet","_getFailedAjaxDiagnosticsMessage","_throwInternalWarning","_createErrorCallbackFunc","internalMessage","ajaxDiagnosticsMessage","_ajaxDataId","_indexOf","_addHandler","container","theHandler","_processDependencyContainer","BLOB_CORE","DfltAjaxCorrelationHeaderExDomains","_internalExcludeEndpoints","distributedTracingMode","maxAjaxPerfLookupAttempts","ignoreHeaders","addIntEndpoints","AjaxMonitor","addDependencyInitializer","dependencyInitializer","_fetchInitialized","_xhrInitialized","_currentWindowHost","_enableRequestHeaderTracking","_enableAjaxErrorStatusText","_trackAjaxAttempts","_context","_isUsingW3CHeaders","_isUsingAIHeaders","_markPrefix","_enableAjaxPerfTracking","_maxAjaxCallsPerView","_enableResponseHeaderTracking","_disabledUrls","_disableAjaxTracking","_disableFetchTracking","_excludeRequestFromAutoTrackingPatterns","_addRequestContext","_dependencyHandlerId","_dependencyListeners","_dependencyInitializers","_ignoreHeaders","_maxAjaxPerfLookupAttempts","_ajaxPerfLookupDelay","_distributedTracingMode","_polyfillInitialized","_canIncludeHeaders","_hookProto","_isDisabledRequest","isDisabled","theUrl","theRegex","idx2","_isMonitoredXhrInstance","excludeAjaxDataValidation","ajaxValidation","_getDistributedTraceCtx","_attachToOnReadyStateChange","_findPerfResourceEntry","sysProperties","_getAjaxCorrelationContext","responseHeaderMap_2","ajaxResponse","shift","_reportDependencyInternal","_reportXhrError","ajaxDataCntr","exceptionText","failedProps","errorProps","responseHeadersString","getResponseHeader","_createMarkId","performance_1","mark","markId","entries","getEntriesByName","initiatorType","trackCallback","reportError","perfMark","performance","maxAttempts","retryDelay","attempt","locateResourceTiming","perfTiming","getEntries","entryType","clearMarks","_getFailedFetchDiagnosticsMessage","_reportFetchMetrics","_reportFetchError","_getFetchCorrelationContext","fetchDiagnosticsMessage","initializers","aborted","isPolyfill","req","spanID","xhrRequestData","hkErr","_global","polyfill","forEach","fetchData","newInit","fetchData_1","responseHeaderMap_1","propExt","trackDependencyData","traceParent","currentWindowHost","addDependencyListener","dependencyListener","Application","Device","Internal","unloadHookContainer","sdkExtension","sdkVersion","Location","_DYN_SESSION_MANAGER","_DYN_IS_USER_COOKIE_SET","_DYN_IS_NEW_USER","_DYN_GET_TRACE_CTX","_DYN_TELEMETRY_TRACE","_DYN_APPLY_SESSION_CONTEX0","_DYN_APPLY_APPLICATION_CO1","_DYN_APPLY_DEVICE_CONTEXT","_DYN_APPLY_OPERATION_CONT2","_DYN_APPLY_USER_CONTEXT","_DYN_APPLY_OPERATING_SYST3","_DYN_APPLY_LOCATION_CONTE4","_DYN_APPLY_INTERNAL_CONTE5","_DYN_ACCOUNT_ID","_DYN_GET_SESSION_ID","_DYN_NAME_PREFIX","_DYN_USER_COOKIE_POSTFIX","_DYN_ID_LENGTH","_DYN_GET_NEW_ID","_DYN_AUTOMATIC_SESSION","_DYN_AUTHENTICATED_ID","_DYN_ACQUISITION_DATE","_DYN_RENEWAL_DATE","_DYN_JOIN","_DYN_COOKIE_SEPARATOR","_DYN_AUTH_USER_COOKIE_NAM7","Session","_SessionManager","_storageNamePrefix","_cookieUpdatedTimestamp","_sessionExpirationMs","_sessionRenewalMs","sessionCookiePostfix","_initializeAutomaticSessionWithData","session","sessionData","sessionReset","tokens","acqMs","renewalMs","_setCookie","nowMs","acq","renewalPeriodMs","acqTimeLeftMs","cookie","isExpired","storageValue","timeSinceAcqMs","timeSinceRenewalMs","getNewId","automaticSession","backup","renewal","TelemetryTrace","parentId","_validateUserInput","User","cookieSeparator","userCookieName","authUserCookieName","isNewUser","isUserCookieSet","userCookiePostfix","authCookie","params","_generateNewId","_setUserCookie","_generateNewCookie","authCookieString","decodeURI","acqStr","accountAcquisitionDate","setAuthenticatedUserContext","authenticatedUserId","accountId","storeInCookie","encodeURI","clearAuthenticatedUserContext","strExt","strTags","_removeEmpty","_nullResult","TelemetryContext","previousTraceCtx","application","internal","autoSession","build","agentVersion","snippetVer","sdkSrc","applyWebContext","cleanUp","nullValue","isBrowserLinkTrackingEnabled","undefString","PropertiesPlugin","_distributedTraceCtx","_previousTraceCtx","_disableUserInitMessage","disableUserInitMessage","_unloadHooks","breezeChannel","userCtx","theContext","_internalSdkSrc","PropertiesPlugin$1","STR_SNIPPET","STR_FLUSH","STR_POLL_INTERNAL_LOGS","STR_GET_PLUGIN","STR_EVT_NAMESPACE","_DYN_QUEUE","_DYN_CONNECTION_STRING","_DYN_INSTRUMENTATIONKEY0","_DYN_USER_OVERRIDE_ENDPOI1","_DYN_ENDPOINT_URL","_DYN_ONUNLOAD_FLUSH","_DYN_ADD_HOUSEKEEPING_BEF2","_DYN_SEND_MESSAGE","_DYN_UPDATE_SNIPPET_DEFIN3","_ignoreUpdateSnippetProperties","IKEY_USAGE","CDN_USAGE","SDK_LOADER_VER","default_throttle_config","defaultConfigValues","_c","extensionConfig","_d","AppInsightsSku","snippet","dependencies","_sender","_snippetVersion","_houseKeepingNamespace","_core","_analyticsPlugin","_cfgSyncPlugin","_throttleMgr","_iKeySentMessage","_cdnSentMessage","_sdkVerSentMessage","sv","_removePageEventHandlers","DependenciesPlugin","cs","ingest","configCs","_parseCs","curCs","parsedCs","ikeyPromise","flushDone","loadAppInsights","legacyMode","scrpt","document","currentScript","src_1","url_1","_findSdkSourceFile","emptyQueue","defaultEnable","proxyAssign","chkSet","_loop_1","length_1","appInsightsInstance","performHousekeeping_1","added_1","propertiesPlugin","loadedPlugin","_sessionManager","analyticsPlugin","excludePageUnloadEvents","disablePageUnloadEvents","product","getSender","_TRACK","ApplicationInsightsContainer","getAppInsights","theSku","_logWarn","_console","warn","getAttribute","navPerf","uuid"],"mappings":"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","x_google_ignoreList":[0,7,8]}